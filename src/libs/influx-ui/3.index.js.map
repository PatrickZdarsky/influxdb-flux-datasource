{"version":3,"sources":["webpack:///./src/dataLoaders/components/TelegrafEditor.scss?eb23","webpack:///./src/dataLoaders/components/TelegrafEditorPluginList.tsx","webpack:///./src/dataLoaders/components/TelegrafEditorSidebar.tsx","webpack:///./src/dataLoaders/components/TelegrafEditorPluginLookup.tsx","webpack:///./src/dataLoaders/components/TelegrafEditorMonaco.tsx","webpack:///./src/dataLoaders/components/TelegrafEditor.tsx"],"names":[],"mappings":"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","file":"3.index.js","sourcesContent":["// extracted by mini-css-extract-plugin","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {DapperScrollbars} from '@influxdata/clockface'\nimport {\n  TelegrafEditorPluginState,\n  TelegrafEditorActivePluginState,\n  TelegrafEditorActivePlugin,\n  TelegrafEditorPlugin,\n} from 'src/dataLoaders/reducers/telegrafEditor'\n\ntype ListPlugin = TelegrafEditorPlugin | TelegrafEditorActivePlugin\n\ninterface InterimListFormat {\n  category: string\n  items: Array<ListPlugin>\n}\n\nfunction groupPlugins(plugins: Array<ListPlugin>, pluginFilter: string) {\n  const map = plugins.reduce(\n    (prev: {[k: string]: Array<ListPlugin>}, curr: ListPlugin) => {\n      if (curr.name === '__default__') {\n        return prev\n      }\n\n      if (!prev.hasOwnProperty(curr.type)) {\n        prev[curr.type] = []\n      }\n\n      prev[curr.type].push(curr)\n\n      return prev\n    },\n    {}\n  )\n\n  return ['bundle', 'input', 'output', 'processor', 'aggregator']\n    .map(\n      (k: string): InterimListFormat => {\n        return {\n          category: k,\n          items: (map[k] || []).filter((a: ListPlugin) =>\n            (a.name || '').includes(pluginFilter)\n          ),\n        }\n      }\n    )\n    .filter((k: InterimListFormat) => k.items.length)\n    .reduce((prev, curr) => {\n      prev.push({\n        type: 'display',\n        name: curr.category,\n      })\n\n      const items = curr.items.slice(0).sort((a: ListPlugin, b: ListPlugin) => {\n        return (a.name || '').localeCompare(b.name || '')\n      })\n\n      prev.push(...items)\n\n      return prev\n    }, [])\n}\n\ninterface PluginProps {\n  plugins: TelegrafEditorPluginState | TelegrafEditorActivePluginState\n  filter: string\n  onClick: (which: ListPlugin) => void\n}\n\nclass PluginList extends PureComponent<PluginProps> {\n  render() {\n    const {plugins, filter, onClick} = this.props\n    const list = groupPlugins(plugins, filter).map((k: ListPlugin) => {\n      if (k.type === 'display') {\n        return (\n          <div\n            className=\"telegraf-plugins--item telegraf-plugins--divider\"\n            key={`_plugin_${k.type}.${k.name}`}\n          >\n            {k.name}s\n          </div>\n        )\n      }\n\n      let description\n\n      // NOTE: written this way to bypass typescript: alex\n      if (k['description']) {\n        description = (\n          <dd className=\"telegraf-plugins--item-description\">\n            {k['description']}\n          </dd>\n        )\n      }\n\n      return (\n        <div\n          className=\"telegraf-plugins--item telegraf-plugins--plugin\"\n          key={`_plugin_${k.type}.${k.name}`}\n          onClick={() => onClick(k)}\n        >\n          <dt className=\"telegraf-plugins--item-name\">{k.name}</dt>\n          {description}\n        </div>\n      )\n    })\n\n    return (\n      <DapperScrollbars autoHide={false} className=\"telegraf-plugins\">\n        <dl className=\"telegraf-plugins--list\">{list}</dl>\n      </DapperScrollbars>\n    )\n  }\n}\n\nexport default PluginList\n","// Libraries\nimport React, {PureComponent, SyntheticEvent, ChangeEvent} from 'react'\nimport {connect} from 'react-redux'\nimport classnames from 'classnames'\n\n// Components\nimport PluginList from 'src/dataLoaders/components/TelegrafEditorPluginList'\nimport {\n  TelegrafEditorPluginState,\n  TelegrafEditorPlugin,\n  TelegrafEditorActivePlugin,\n} from 'src/dataLoaders/reducers/telegrafEditor'\nimport GetResources from 'src/resources/components/GetResources'\nimport {\n  Input,\n  IconFont,\n  ComponentSize,\n  SquareButton,\n} from '@influxdata/clockface'\n\n// Actions\nimport {setFilter, setList} from 'src/dataLoaders/actions/telegrafEditor'\n\n// Types\nimport {AppState, ResourceType} from 'src/types'\n\ninterface PluginStateProps {\n  plugins: TelegrafEditorPluginState\n  filter: string\n}\n\nconst mstp_2 = (state: AppState): PluginStateProps => {\n  const plugins = state.telegrafEditorPlugins || []\n  const filter = state.telegrafEditor.filter\n\n  return {\n    plugins,\n    filter,\n  }\n}\n\nconst AllPluginList = connect<PluginStateProps, {}>(\n  mstp_2,\n  null\n)(PluginList)\n\ninterface StateProps {\n  filter: string\n  show: boolean\n}\n\ninterface DispatchProps {\n  onSetFilter: typeof setFilter\n  onSetList: typeof setList\n}\n\ninterface OwnProps {\n  onJump: (which: TelegrafEditorActivePlugin) => void\n  onAdd: (which: TelegrafEditorPlugin) => void\n}\n\ntype TelegrafEditorSidebarProps = StateProps & DispatchProps & OwnProps\n\nclass TelegrafEditorSideBar extends PureComponent<TelegrafEditorSidebarProps> {\n  private renderPlugins() {\n    const {show, onAdd} = this.props\n    if (!show) {\n      return false\n    }\n\n    return (\n      <GetResources resources={[ResourceType.Plugins]}>\n        <AllPluginList onClick={onAdd} />\n      </GetResources>\n    )\n  }\n\n  render() {\n    const {filter, show, onSetList, onSetFilter} = this.props\n    const columnClassName = classnames('telegraf-editor--left-column', {\n      'telegraf-editor--column__collapsed': !show,\n    })\n    const icon = show ? IconFont.EyeOpen : IconFont.EyeClosed\n    const header = 'Browse & Add Plugins'\n\n    return (\n      <div className={columnClassName}>\n        <div className=\"telegraf-editor--column-heading\">\n          <span className=\"telegraf-editor--title\">{header}</span>\n          <SquareButton\n            icon={icon}\n            size={ComponentSize.ExtraSmall}\n            onClick={() => onSetList(!show)}\n          />\n        </div>\n        {show && (\n          <Input\n            className=\"telegraf-editor--filter\"\n            size={ComponentSize.Small}\n            icon={IconFont.Search}\n            value={filter}\n            onBlur={(evt: SyntheticEvent<any>) => {\n              onSetFilter((evt.target as any).value)\n            }}\n            style={{}}\n            onChange={(evt: ChangeEvent<any>) => {\n              onSetFilter(evt.target.value)\n            }}\n            placeholder=\"Filter Plugins...\"\n          />\n        )}\n        {this.renderPlugins()}\n        {!show && (\n          <div className=\"telegraf-editor--title__collapsed\">{header}</div>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mstp_3 = (state: AppState): StateProps => {\n  const filter = state.telegrafEditor.filter\n  const show = state.telegrafEditor.showList\n\n  return {\n    filter,\n    show,\n  }\n}\n\nconst mdtp_3: DispatchProps = {\n  onSetList: setList,\n  onSetFilter: setFilter,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp_3,\n  mdtp_3\n)(TelegrafEditorSideBar)\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\nimport classnames from 'classnames'\n\n// Components\nimport PluginList from 'src/dataLoaders/components/TelegrafEditorPluginList'\nimport {AppState} from 'src/types'\nimport {SquareButton, IconFont, ComponentSize} from '@influxdata/clockface'\nimport {setLookup} from 'src/dataLoaders/actions/telegrafEditor'\n\n// Types\nimport {\n  TelegrafEditorActivePluginState,\n  TelegrafEditorActivePlugin,\n} from 'src/dataLoaders/reducers/telegrafEditor'\n\ninterface PluginStateProps {\n  plugins: TelegrafEditorActivePluginState\n  show: boolean\n}\n\ninterface OwnProps {\n  onJump: (which: TelegrafEditorActivePlugin) => void\n}\n\ninterface PluginDispatchProps {\n  onChangeLookup: typeof setLookup\n}\n\ntype Props = OwnProps & PluginStateProps & PluginDispatchProps\n\nconst TelegrafEditorSideBar: FC<Props> = ({\n  plugins,\n  onJump,\n  show,\n  onChangeLookup,\n}) => {\n  const columnClassName = classnames('telegraf-editor--right-column', {\n    'telegraf-editor--column__collapsed': !show,\n  })\n  const icon = show ? IconFont.EyeOpen : IconFont.EyeClosed\n  const header = 'Plugins'\n\n  return (\n    <div className={columnClassName}>\n      <div className=\"telegraf-editor--column-heading\">\n        <span className=\"telegraf-editor--title\">{header}</span>\n        <SquareButton\n          icon={icon}\n          size={ComponentSize.ExtraSmall}\n          onClick={() => onChangeLookup(!show)}\n        />\n      </div>\n      {show && <PluginList plugins={plugins} filter=\"\" onClick={onJump} />}\n      {!show && (\n        <span className=\"telegraf-editor--title__collapsed\">{header} </span>\n      )}\n    </div>\n  )\n}\n\nconst mstp = (state: AppState): PluginStateProps => {\n  const plugins = state.telegrafEditorActivePlugins || []\n  const show = state.telegrafEditor.showLookup\n\n  return {plugins, show}\n}\n\nconst mdtp: PluginDispatchProps = {\n  onChangeLookup: setLookup,\n}\n\nexport default connect<PluginStateProps, PluginDispatchProps>(\n  mstp,\n  mdtp\n)(TelegrafEditorSideBar)\n","import React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {AppState} from 'src/types'\nimport Editor from 'src/shared/components/TomlMonacoEditor'\nimport * as monacoEditor from 'monaco-editor/esm/vs/editor/editor.api'\nimport {setText, setActivePlugins} from 'src/dataLoaders/actions/telegrafEditor'\nimport {TelegrafEditorPluginType} from 'src/dataLoaders/reducers/telegrafEditor'\n\nconst PLUGIN_REGEX = /\\[\\[\\s*(inputs|outputs|processors|aggregators)\\.(.+)\\s*\\]\\]/\n\ninterface DispatchProps {\n  onSetText: typeof setText\n  onSetActivePlugins: typeof setActivePlugins\n}\n\ninterface StateProps {\n  script: string\n}\n\ntype Props = StateProps & DispatchProps\n\ninterface InterumMatchFormat {\n  name: string\n  type: TelegrafEditorPluginType\n  line: number\n}\n\nclass TelegrafEditorMonaco extends PureComponent<Props> {\n  _editor: monacoEditor.editor.IStandaloneCodeEditor = null\n\n  render() {\n    const {script} = this.props\n\n    return (\n      <div className=\"telegraf-editor--middle-column\">\n        <div className=\"telegraf-editor--column-heading\">\n          <span className=\"telegraf-editor--title\">Configuration File</span>\n        </div>\n        <Editor\n          className=\"telegraf-editor--monaco\"\n          script={script}\n          onChangeScript={this.handleChange}\n          willMount={this.connect}\n        />\n      </div>\n    )\n  }\n\n  private extractPluginList() {\n    if (!this._editor) {\n      return\n    }\n\n    const matches: Array<\n      monacoEditor.editor.FindMatch\n    > = this._editor\n      .getModel()\n      .findMatches(PLUGIN_REGEX as any, false, true, false, null, true)\n\n    const plugins = matches.map(\n      (m: monacoEditor.editor.FindMatch): InterumMatchFormat => {\n        return {\n          type: m.matches[1].slice(0, -1) as TelegrafEditorPluginType,\n          name: m.matches[2],\n          line: m.range.startLineNumber,\n        }\n      }\n    )\n\n    this.props.onSetActivePlugins(plugins)\n  }\n\n  private connect = (editor: monacoEditor.editor.IStandaloneCodeEditor) => {\n    this._editor = editor\n    this.extractPluginList()\n  }\n\n  private handleChange = (evt: string) => {\n    this.extractPluginList()\n    this.props.onSetText(evt)\n  }\n\n  public jump(line: number) {\n    this._editor.revealLineInCenter(line)\n  }\n\n  public nextLine(): number {\n    const position = this._editor.getPosition()\n    const matches = this._editor\n      .getModel()\n      .findNextMatch(PLUGIN_REGEX as any, position, true, false, null, true)\n    let lineNumber\n\n    if (\n      position.lineNumber === 1 ||\n      !matches ||\n      position.lineNumber > matches.range.startLineNumber\n    ) {\n      //add it to the bottom\n      lineNumber = this._editor.getModel().getLineCount()\n    } else {\n      lineNumber = matches.range.startLineNumber - 1\n    }\n\n    return lineNumber\n  }\n\n  public insert(text: string, line: number) {\n    this._editor.setPosition({column: 1, lineNumber: line})\n    this._editor.executeEdits('', [\n      {\n        range: {\n          startLineNumber: line,\n          startColumn: 1,\n          endLineNumber: line,\n          endColumn: 1,\n        } as monacoEditor.Range,\n        text: text,\n        forceMoveMarkers: true,\n      },\n    ])\n  }\n}\n\nexport {TelegrafEditorMonaco}\n\nconst mstp = (state: AppState): StateProps => {\n  const map = state.telegrafEditorPlugins.reduce((prev, curr) => {\n    prev[curr.name] = curr\n    return prev\n  }, {})\n\n  const script =\n    state.telegrafEditor.text ||\n    map['__default__'].include\n      .map((i: string) => {\n        if (!map.hasOwnProperty(i)) {\n          return ''\n        }\n        return map[i].config\n      })\n      .join('\\n')\n\n  return {\n    script,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onSetActivePlugins: setActivePlugins,\n  onSetText: setText,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp,\n  null,\n  {\n    withRef: true,\n  }\n)(TelegrafEditorMonaco)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Alert, ComponentColor} from '@influxdata/clockface'\nimport TelegrafEditorSidebar from 'src/dataLoaders/components/TelegrafEditorSidebar'\nimport TelegrafEditorPluginLookup from 'src/dataLoaders/components/TelegrafEditorPluginLookup'\nimport TelegrafEditorMonaco from 'src/dataLoaders/components/TelegrafEditorMonaco'\n\n// Styles\nimport './TelegrafEditor.scss'\n\n// Utils\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {AppState} from 'src/types'\nimport {\n  TelegrafEditorActivePlugin,\n  TelegrafEditorBasicPlugin,\n  TelegrafEditorPlugin,\n} from 'src/dataLoaders/reducers/telegrafEditor'\n\ntype AllPlugin = TelegrafEditorPlugin | TelegrafEditorActivePlugin\n\ninterface StateProps {\n  pluginHashMap: {[k: string]: AllPlugin}\n}\n\ntype Props = StateProps\n\n@ErrorHandling\nclass TelegrafEditor extends PureComponent<Props> {\n  _editor: any = null\n\n  render() {\n    return (\n      <div className=\"telegraf-editor\">\n        <div className=\"telegraf-editor--heading\">\n          <Alert color={ComponentColor.Default}>\n            This tool will help create a configuration file for Telegraf, but\n            you will have to download and run Telegraf externally to get data\n            into your bucket.\n          </Alert>\n        </div>\n        <div className=\"telegraf-editor--body\">\n          <TelegrafEditorSidebar\n            onJump={this.handleJump}\n            onAdd={this.handleAdd}\n          />\n          <TelegrafEditorMonaco ref={this.connect} />\n          <TelegrafEditorPluginLookup onJump={this.handleJump} />\n        </div>\n      </div>\n    )\n  }\n\n  private connect = (elem: any) => {\n    this._editor = elem\n  }\n\n  private handleJump = (which: TelegrafEditorActivePlugin) => {\n    this._editor.getWrappedInstance().jump(which.line)\n  }\n\n  private handleAdd = (which: TelegrafEditorPlugin) => {\n    const editor = this._editor.getWrappedInstance()\n    const line = editor.nextLine()\n\n    if (which.type === 'bundle') {\n      which.include\n        .filter(\n          item =>\n            this.props.pluginHashMap[item] &&\n            this.props.pluginHashMap[item].type !== 'bundle'\n        )\n        .map(\n          item =>\n            (\n              (this.props.pluginHashMap[item] as TelegrafEditorBasicPlugin) ||\n              ({} as TelegrafEditorBasicPlugin)\n            ).config\n        )\n        .filter(i => !!i)\n        .reverse()\n        .forEach(item => {\n          editor.insert(item, line)\n        })\n    } else {\n      editor.insert(which.config || '', line)\n    }\n\n    editor.jump(line)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const pluginHashMap = state.telegrafEditorPlugins\n    .filter(\n      (a: TelegrafEditorPlugin) => a.type !== 'bundle' || !!a.include.length\n    )\n    .reduce((prev, curr) => {\n      prev[curr.name] = curr\n      return prev\n    }, {})\n\n  return {\n    pluginHashMap,\n  }\n}\n\nexport default connect<StateProps, {}>(\n  mstp,\n  null\n)(TelegrafEditor)\n"],"sourceRoot":""}