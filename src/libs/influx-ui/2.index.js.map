{"version":3,"sources":["webpack:///./src/shared/middleware/resizeLayout.ts","webpack:///./src/types/actions/app.ts","webpack:///./src/shared/actions/app.ts","webpack:///./src/shared/middleware/queryStringConfig.ts","webpack:///./src/shared/reducers/app.ts","webpack:///./src/shared/apis/links.ts","webpack:///./src/shared/actions/links.ts","webpack:///./src/shared/reducers/links.ts","webpack:///./src/shared/actions/currentDashboard.ts","webpack:///./src/shared/reducers/currentDashboard.ts","webpack:///./src/shared/reducers/notifications.ts","webpack:///./src/shared/reducers/index.ts","webpack:///./src/normalizers/localStorage/dashboardTime.ts","webpack:///./src/normalizers/localStorage/appPersisted.ts","webpack:///./src/normalizers/localStorage/resources.ts","webpack:///./src/normalizers/localStorage/localStorage.ts","webpack:///./src/normalizers/localStorage/index.ts","webpack:///./src/localStorage.ts","webpack:///./src/store/persistStateEnhancer.ts","webpack:///./src/shared/actions/me.ts","webpack:///./src/shared/reducers/me.ts","webpack:///./src/tasks/reducers/helpers.ts","webpack:///./src/resources/reducers/helpers.ts","webpack:///./src/tasks/reducers/index.ts","webpack:///./src/dashboards/reducers/ranges.ts","webpack:///./src/dashboards/reducers/dashboards.ts","webpack:///./src/cells/reducers/index.ts","webpack:///./src/views/reducers/index.ts","webpack:///./src/timeMachine/reducers/index.ts","webpack:///./src/organizations/actions/creators.ts","webpack:///./src/organizations/reducers/index.ts","webpack:///./src/overlays/actions/overlays.ts","webpack:///./src/overlays/reducers/overlays.ts","webpack:///./src/onboarding/reducers/index.ts","webpack:///./src/dashboards/reducers/notes.ts","webpack:///./src/utils/wrappers.ts","webpack:///./src/dataLoaders/reducers/dataLoaders.ts","webpack:///./src/dataLoaders/reducers/steps.ts","webpack:///./src/dataLoaders/reducers/index.tsx","webpack:///./src/variables/reducers/editor.ts","webpack:///./src/variables/reducers/index.ts","webpack:///./src/labels/reducers/index.ts","webpack:///./src/buckets/reducers/index.ts","webpack:///./src/telegrafs/reducers/index.ts","webpack:///./src/authorizations/reducers/index.ts","webpack:///./src/templates/reducers/index.ts","webpack:///./src/scrapers/reducers/index.ts","webpack:///./src/userSettings/reducers/index.ts","webpack:///./src/members/reducers/index.ts","webpack:///./src/shared/reducers/autoRefresh.ts","webpack:///./src/cloud/reducers/limits.ts","webpack:///./src/checks/reducers/index.ts","webpack:///./src/notifications/rules/reducers/index.ts","webpack:///./src/notifications/endpoints/reducers/index.ts","webpack:///./src/dataLoaders/reducers/telegrafEditor.ts","webpack:///./src/shared/reducers/predicates.ts","webpack:///./src/alerting/reducers/alertBuilder.ts","webpack:///./src/store/configureStore.ts","webpack:///./src/shared/components/sorting_hat/SortingHat.tsx","webpack:///./src/shared/components/cloud/CloudExclude.tsx","webpack:///./src/pageLayout/components/AccountNavSubItem.tsx","webpack:///./src/shared/components/cloud/CloudOnly.tsx","webpack:///./src/pageLayout/utils/index.ts","webpack:///./src/pageLayout/containers/Nav.tsx","webpack:///./src/pageLayout/index.ts","webpack:///./src/portals/TooltipPortal.tsx","webpack:///./src/portals/NotesPortal.tsx","webpack:///./src/shared/components/notifications/Notification.tsx","webpack:///./src/shared/components/notifications/Notifications.tsx","webpack:///./src/dashboards/utils/notes.ts","webpack:///./src/dashboards/components/NoteEditorText.tsx","webpack:///./src/dashboards/components/NoteEditorPreview.tsx","webpack:///./src/dashboards/actions/notes.ts","webpack:///./src/dashboards/components/NoteEditor.tsx","webpack:///./src/dashboards/components/NoteEditorOverlay.tsx","webpack:///./src/authorizations/utils/permissions.ts","webpack:///./src/authorizations/components/AllAccessTokenOverlay.tsx","webpack:///./src/shared/components/selectorList/SelectorListHeader.tsx","webpack:///./src/shared/components/selectorList/SelectorListMenu.tsx","webpack:///./src/shared/components/selectorList/SelectorListBody.tsx","webpack:///./src/shared/components/selectorList/SelectorListEmpty.tsx","webpack:///./src/shared/components/selectorList/SelectorList.tsx","webpack:///./src/timeMachine/components/builderCard/BuilderCardHeader.tsx","webpack:///./src/timeMachine/components/builderCard/BuilderCardDropdownHeader.tsx","webpack:///./src/timeMachine/components/builderCard/BuilderCardMenu.tsx","webpack:///./src/timeMachine/components/builderCard/BuilderCardBody.tsx","webpack:///./src/timeMachine/components/builderCard/BuilderCardEmpty.tsx","webpack:///./src/timeMachine/components/builderCard/BuilderCard.tsx","webpack:///./src/timeMachine/components/SelectorList.tsx","webpack:///./src/shared/components/Filter.tsx","webpack:///./src/shared/components/FilterList.tsx","webpack:///./src/authorizations/components/BucketsTabBody.tsx","webpack:///./src/authorizations/components/BucketsTabSelector.tsx","webpack:///./src/authorizations/components/BucketsSelector.tsx","webpack:///./src/authorizations/components/BucketsTokenOverlay.tsx","webpack:///./src/telegrafs/components/TelegrafConfig.tsx","webpack:///./src/shared/utils/download.ts","webpack:///./src/telegrafs/components/TelegrafConfigOverlay.tsx","webpack:///./src/shared/components/TemplatedCodeSnippet.tsx","webpack:///./src/telegrafs/components/TelegrafOutputOverlay.tsx","webpack:///./src/overlays/components/OverlayController.tsx","webpack:///./src/pageLayout/components/CloudNav.tsx","webpack:///./src/App.tsx","webpack:///./src/organizations/actions/thunks.ts","webpack:///./src/shared/containers/GetOrganizations.tsx","webpack:///./src/onboarding/utils/index.ts","webpack:///./src/Setup.tsx","webpack:///./src/Signin.tsx","webpack:///./src/shared/components/splash_page/SplashLogo.tsx","webpack:///./src/shared/components/splash_page/SplashPanel.tsx","webpack:///./src/shared/components/splash_page/SplashHeader.tsx","webpack:///./src/shared/components/splash_page/SplashPage.tsx","webpack:///./src/onboarding/components/SigninForm.tsx","webpack:///./src/shared/components/VersionInfo.tsx","webpack:///./src/onboarding/containers/SigninPage.tsx","webpack:///./src/Logout.tsx","webpack:///./src/tasks/components/TaskScheduleFormField.tsx","webpack:///./src/tasks/components/TasksOptionsBucketDropdown.tsx","webpack:///./src/tasks/components/TaskForm.tsx","webpack:///./src/shared/components/PageTitleWithOrg.tsx","webpack:///./src/tasks/components/TaskHeader.tsx","webpack:///./src/external/monaco.fluxTheme.ts","webpack:///./src/external/constants.ts","webpack:///./src/external/monaco.lspMessages.ts","webpack:///./src/external/monaco.fluxCompletions.ts","webpack:///./src/external/monaco.fluxSyntax.ts","webpack:///./src/external/monaco.keyBindings.ts","webpack:///./src/shared/components/FluxMonacoEditor.tsx","webpack:///./src/utils/taskOptionsToFluxScript.ts","webpack:///./src/shared/utils/pageTitles.ts","webpack:///./src/tasks/containers/TaskPage.tsx","webpack:///./src/shared/components/AddResourceDropdown.tsx","webpack:///./src/tasks/components/TasksHeader.tsx","webpack:///./src/shared/components/inlineLabels/InlineLabelsListItem.tsx","webpack:///./src/shared/components/inlineLabels/InlineLabelsCreateLabelButton.tsx","webpack:///./src/shared/components/inlineLabels/InlineLabelsList.tsx","webpack:///./src/shared/components/inlineLabels/InlineLabelPopover.tsx","webpack:///./src/labels/components/LabelOverlayForm.tsx","webpack:///./src/labels/components/CreateLabelOverlay.tsx","webpack:///./src/shared/components/inlineLabels/InlineLabelsEditor.tsx","webpack:///./src/shared/components/inlineLabels/InlineLabels.tsx","webpack:///./src/shared/components/lastRunTaskStatus/LastRunTaskStatus.tsx","webpack:///./src/tasks/components/TaskCard.tsx","webpack:///./src/tasks/components/EmptyTasksList.tsx","webpack:///./src/shared/utils/sort.ts","webpack:///./src/tasks/components/TasksList.tsx","webpack:///./src/shared/components/search_widget/SearchWidget.tsx","webpack:///./src/cloud/components/GetAssetLimits.tsx","webpack:///./src/cloud/components/CheckoutButton.tsx","webpack:///./src/cloud/components/AssetLimitAlert.tsx","webpack:///./src/tasks/containers/TasksPage.tsx","webpack:///./src/tasks/components/RunLogRow.tsx","webpack:///./src/tasks/components/RunLogsList.tsx","webpack:///./src/tasks/components/TaskRunsRow.tsx","webpack:///./src/tasks/components/TaskRunsList.tsx","webpack:///./src/tasks/components/TaskRunsPage.tsx","webpack:///./src/tasks/containers/TaskEditPage.tsx","webpack:///./src/resources/selectors/getResourceStatus.ts","webpack:///./src/resources/components/GetResource.tsx","webpack:///./src/shared/data/autoRefreshes.ts","webpack:///./src/shared/components/dropdown_auto_refresh/AutoRefreshDropdown.tsx","webpack:///./src/shared/components/dateRangePicker/DatePicker.tsx","webpack:///./src/shared/components/dateRangePicker/DateRangePicker.tsx","webpack:///./src/shared/components/TimeRangeDropdown.tsx","webpack:///./src/shared/components/graph_tips/GraphTips.tsx","webpack:///./src/pageLayout/components/RenamablePageTitle.tsx","webpack:///./src/shared/constants/timeZones.ts","webpack:///./src/shared/components/TimeZoneDropdown.tsx","webpack:///./src/userSettings/actions/index.ts","webpack:///./src/shared/actions/autoRefresh.ts","webpack:///./src/dashboards/components/DashboardHeader.tsx","webpack:///./src/shared/components/cells/CellHeaderNote.tsx","webpack:///./src/shared/components/cells/CellHeader.tsx","webpack:///./src/shared/components/cells/CellContextItem.tsx","webpack:///./src/shared/components/cells/CellContextDangerItem.tsx","webpack:///./src/shared/components/cells/CellContext.tsx","webpack:///./src/shared/components/views/Markdown.tsx","webpack:///./src/shared/components/TimeSeries.tsx","webpack:///./src/shared/components/EmptyGraphMessage.tsx","webpack:///./src/shared/components/EmptyGraphErrorTooltip.tsx","webpack:///./src/shared/components/EmptyGraphError.tsx","webpack:///./src/shared/copy/cell.ts","webpack:///./src/shared/components/EmptyQueryView.tsx","webpack:///./src/shared/utils/preventNegativeZero.ts","webpack:///./src/shared/utils/formatStatValue.ts","webpack:///./src/shared/constants/gaugeSpecs.ts","webpack:///./src/shared/components/Gauge.tsx","webpack:///./src/shared/components/GaugeChart.tsx","webpack:///./src/shared/constants/colorOperations.ts","webpack:///./src/shared/components/SingleStat.tsx","webpack:///./src/shared/components/tables/TableGraphTransform.tsx","webpack:///./src/shared/components/tables/TableCell.tsx","webpack:///./src/shared/components/MultiGrid/CellMeasurerCacheDecorator.ts","webpack:///./src/shared/components/MultiGrid/MultiGrid.tsx","webpack:///./src/shared/components/MultiGrid/index.ts","webpack:///./src/dashboards/utils/hoverTime.tsx","webpack:///./src/shared/components/tables/TableGraphTable.tsx","webpack:///./src/shared/components/tables/TableGraph.tsx","webpack:///./src/shared/components/tables/TableSidebarItem.tsx","webpack:///./src/shared/components/tables/TableSidebar.tsx","webpack:///./src/shared/components/tables/TableGraphs.tsx","webpack:///./src/shared/components/GraphLoadingDots.tsx","webpack:///./src/shared/utils/useVisDomainSettings.ts","webpack:///./src/shared/components/HistogramPlot.tsx","webpack:///./src/shared/components/HeatmapPlot.tsx","webpack:///./src/shared/components/FluxTablesTransform.tsx","webpack:///./src/shared/components/XYPlot.tsx","webpack:///./src/shared/components/ScatterPlot.tsx","webpack:///./src/shared/utils/latestValues.ts","webpack:///./src/shared/components/LatestValueTransform.tsx","webpack:///./src/shared/utils/useDragBehavior.ts","webpack:///./src/shared/components/ThresholdMarker.tsx","webpack:///./src/shared/components/ThresholdMarkerArea.tsx","webpack:///./src/shared/components/RangeThresholdMarkers.tsx","webpack:///./src/shared/components/LessThresholdMarker.tsx","webpack:///./src/shared/components/GreaterThresholdMarker.tsx","webpack:///./src/shared/components/ThresholdMarkers.tsx","webpack:///./src/shared/components/BoxTooltip.tsx","webpack:///./src/shared/components/EventMarkerTooltip.tsx","webpack:///./src/shared/components/EventMarker.tsx","webpack:///./src/shared/components/EventMarkers.tsx","webpack:///./src/shared/components/CheckPlot.tsx","webpack:///./src/shared/components/ViewSwitcher.tsx","webpack:///./src/utils/AutoRefresher.ts","webpack:///./src/shared/components/RefreshingView.tsx","webpack:///./src/shared/components/cells/Cell.tsx","webpack:///./src/shared/components/cells/GradientBorder.tsx","webpack:///./src/cells/selectors/index.ts","webpack:///./src/shared/components/cells/Cells.tsx","webpack:///./src/dashboards/components/dashboard_empty/DashboardEmpty.tsx","webpack:///./src/dashboards/components/Dashboard.tsx","webpack:///./src/shared/components/ManualRefresh.tsx","webpack:///./src/shared/components/ErrorBoundary.tsx","webpack:///./src/dashboards/components/variablesControlBar/VariableDropdown.tsx","webpack:///./src/dashboards/components/variablesControlBar/DraggableDropdown.tsx","webpack:///./src/shared/decorators/withDragDropContext.tsx","webpack:///./src/dashboards/components/variablesControlBar/VariablesControlBar.tsx","webpack:///./src/cloud/components/LimitChecker.tsx","webpack:///./src/cloud/components/RateLimitAlert.tsx","webpack:///./src/dashboards/components/DashboardPage.tsx","webpack:///./src/dashboards/components/GetTimeRange.tsx","webpack:///./src/shared/components/DashboardRoute.tsx","webpack:///./src/dashboards/components/DashboardContainer.tsx","webpack:///./src/shared/utils/relativeTimestampFormatter.ts","webpack:///./src/dashboards/components/dashboard_index/DashboardCard.tsx","webpack:///./src/dashboards/components/dashboard_index/DashboardCards.tsx","webpack:///./src/dashboards/components/dashboard_index/Table.tsx","webpack:///./src/dashboards/components/dashboard_index/DashboardsIndexContents.tsx","webpack:///./src/dashboards/components/dashboard_index/DashboardsIndex.tsx","webpack:///./src/shared/components/ExportOverlay.tsx","webpack:///./src/dashboards/components/DashboardExportOverlay.tsx","webpack:///./src/shared/components/DragAndDrop.tsx","webpack:///./src/shared/components/ImportOverlay.tsx","webpack:///./src/dashboards/components/DashboardImportOverlay.tsx","webpack:///./src/templates/components/createFromTemplateOverlay/TemplateBrowserDetails.tsx","webpack:///./src/templates/components/createFromTemplateOverlay/TemplateBrowserListItem.tsx","webpack:///./src/templates/components/createFromTemplateOverlay/TemplateBrowserList.tsx","webpack:///./src/templates/components/createFromTemplateOverlay/TemplateBrowser.tsx","webpack:///./src/templates/components/createFromTemplateOverlay/TemplateBrowserEmpty.tsx","webpack:///./src/resources/selectors/getAll.ts","webpack:///./src/templates/components/createFromTemplateOverlay/CreateFromTemplateOverlay.tsx","webpack:///./src/variables/utils/mapBuilder.ts","webpack:///./src/shared/utils/pluralize.ts","webpack:///./src/variables/components/MapVariableBuilder.tsx","webpack:///./src/variables/components/CSVVariableBuilder.tsx","webpack:///./src/variables/components/VariableArgumentsEditor.tsx","webpack:///./src/variables/utils/validation.ts","webpack:///./src/variables/components/VariableForm.tsx","webpack:///./src/variables/components/VariableFormContext.tsx","webpack:///./src/variables/components/CreateVariableOverlay.tsx","webpack:///./src/shared/components/threesizer/DivisionHeader.tsx","webpack:///./src/shared/components/threesizer/Division.tsx","webpack:///./src/shared/components/threesizer/Threesizer.tsx","webpack:///./src/timeMachine/components/fluxFunctionsToolbar/TransformToolbarFunctions.tsx","webpack:///./src/timeMachine/components/fluxFunctionsToolbar/TooltipDescription.tsx","webpack:///./src/timeMachine/components/fluxFunctionsToolbar/TooltipArguments.tsx","webpack:///./src/timeMachine/components/fluxFunctionsToolbar/TooltipExample.tsx","webpack:///./src/timeMachine/components/fluxFunctionsToolbar/TooltipLink.tsx","webpack:///./src/timeMachine/components/fluxFunctionsToolbar/FunctionTooltipContents.tsx","webpack:///./src/timeMachine/components/fluxFunctionsToolbar/ToolbarFunction.tsx","webpack:///./src/timeMachine/components/fluxFunctionsToolbar/FunctionCategory.tsx","webpack:///./src/timeMachine/components/SearchBar.tsx","webpack:///./src/shared/constants/fluxFunctions.ts","webpack:///./src/timeMachine/components/fluxFunctionsToolbar/FluxFunctionsToolbar.tsx","webpack:///./src/shared/utils/toComponentStatus.ts","webpack:///./src/timeMachine/components/variableToolbar/VariableTooltipContents.tsx","webpack:///./src/timeMachine/components/variableToolbar/VariableLabel.tsx","webpack:///./src/timeMachine/components/variableToolbar/VariableItem.tsx","webpack:///./src/timeMachine/components/variableToolbar/VariableToolbar.tsx","webpack:///./src/timeMachine/components/ToolbarTab.tsx","webpack:///./src/timeMachine/utils/insertFunction.ts","webpack:///./src/timeMachine/components/TimeMachineFluxEditor.tsx","webpack:///./src/shared/components/CSVExportButton.tsx","webpack:///./src/timeMachine/components/QueriesSwitcher.tsx","webpack:///./src/timeMachine/components/RefreshDropdown.tsx","webpack:///./src/shared/components/SearchableDropdown.tsx","webpack:///./src/shared/components/WaitingText.tsx","webpack:///./src/shared/utils/debouncer.ts","webpack:///./src/timeMachine/components/TagSelector.tsx","webpack:///./src/shared/components/DurationInput.tsx","webpack:///./src/timeMachine/components/FunctionSelector.tsx","webpack:///./src/timeMachine/components/AddCardButton.tsx","webpack:///./src/timeMachine/components/queryBuilder/BucketsSelector.tsx","webpack:///./src/timeMachine/components/QueryBuilder.tsx","webpack:///./src/timeMachine/components/SubmitQueryButton.tsx","webpack:///./src/timeMachine/components/RawDataToggle.tsx","webpack:///./src/timeMachine/components/QueryTabName.tsx","webpack:///./src/timeMachine/components/QueriesTimer.tsx","webpack:///./src/timeMachine/components/QueryTab.tsx","webpack:///./src/timeMachine/components/QueryTabs.tsx","webpack:///./src/timeMachine/components/EditorShortcutsTooltip.tsx","webpack:///./src/timeMachine/components/Queries.tsx","webpack:///./src/shared/components/dashed_button/DashedButton.tsx","webpack:///./src/checks/components/CheckTagRow.tsx","webpack:///./src/checks/components/CheckMetaCard.tsx","webpack:///./src/checks/components/CheckMessageCard.tsx","webpack:///./src/alerting/components/builder/ThresholdStatement.tsx","webpack:///./src/shared/utils/convertUserInput.ts","webpack:///./src/alerting/components/builder/ThresholdValueInput.tsx","webpack:///./src/alerting/components/builder/ThresholdRangeInput.tsx","webpack:///./src/alerting/components/builder/ThresholdCondition.tsx","webpack:///./src/alerting/components/builder/ThresholdConditions.tsx","webpack:///./src/checks/components/CheckLevelsDropdown.tsx","webpack:///./src/alerting/components/builder/DeadmanConditions.tsx","webpack:///./src/checks/components/CheckConditionsCard.tsx","webpack:///./src/alerting/components/builder/MatchingRuleCard.tsx","webpack:///./src/checks/components/CheckMatchingRulesCard.tsx","webpack:///./src/alerting/components/builder/AlertBuilder.tsx","webpack:///./src/timeMachine/components/CustomizeCheckQueryButton.tsx","webpack:///./src/alerting/components/builder/HelpButton.tsx","webpack:///./src/timeMachine/components/TimeMachineAlerting.tsx","webpack:///./src/timeMachine/components/RawFluxDataGrid.tsx","webpack:///./src/timeMachine/utils/rawFluxDataTable.ts","webpack:///./src/timeMachine/components/RawFluxDataTable.tsx","webpack:///./src/timeMachine/components/Vis.tsx","webpack:///./src/timeMachine/components/view_options/Geom.tsx","webpack:///./src/timeMachine/components/view_options/YAxisTitle.tsx","webpack:///./src/timeMachine/components/view_options/AxisAffixes.tsx","webpack:///./src/shared/components/ColorSchemeDropdownItem.tsx","webpack:///./src/shared/components/ColorSchemeDropdown.tsx","webpack:///./src/timeMachine/components/view_options/ColorSelector.tsx","webpack:///./src/shared/components/AutoDomainInput.tsx","webpack:///./src/dashboards/constants/cellEditor.ts","webpack:///./src/timeMachine/components/view_options/YAxisBase.tsx","webpack:///./src/shared/components/ColumnSelector.tsx","webpack:///./src/shared/components/Checkbox.tsx","webpack:///./src/timeMachine/components/view_options/TimeFormat.tsx","webpack:///./src/timeMachine/components/view_options/LineOptions.tsx","webpack:///./src/timeMachine/components/view_options/Affixes.tsx","webpack:///./src/timeMachine/components/view_options/DecimalPlaces.tsx","webpack:///./src/shared/components/ColorDropdown.tsx","webpack:///./src/shared/components/ThresholdSetting.tsx","webpack:///./src/shared/utils/useOneWayReducer.ts","webpack:///./src/shared/utils/thresholds.ts","webpack:///./src/shared/components/ThresholdsSettings.tsx","webpack:///./src/timeMachine/components/view_options/GaugeOptions.tsx","webpack:///./src/timeMachine/components/view_options/ThresholdColoring.tsx","webpack:///./src/timeMachine/components/view_options/SingleStatOptions.tsx","webpack:///./src/shared/components/draggable_column/DraggableColumn.tsx","webpack:///./src/shared/components/columns_options/ColumnsOptions.tsx","webpack:///./src/timeMachine/components/view_options/FixFirstColumn.tsx","webpack:///./src/timeMachine/components/view_options/SortBy.tsx","webpack:///./src/shared/utils/move.ts","webpack:///./src/timeMachine/components/view_options/TableOptions.tsx","webpack:///./src/timeMachine/components/view_options/BinCountInput.tsx","webpack:///./src/timeMachine/components/view_options/HistogramOptions.tsx","webpack:///./src/shared/components/HexColorSchemeDropdown.tsx","webpack:///./src/timeMachine/components/view_options/HeatmapOptions.tsx","webpack:///./src/timeMachine/components/view_options/ScatterOptions.tsx","webpack:///./src/timeMachine/components/view_options/CheckOptions.tsx","webpack:///./src/timeMachine/components/view_options/OptionsSwitcher.tsx","webpack:///./src/timeMachine/components/view_options/ViewOptions.tsx","webpack:///./src/timeMachine/components/SubmitCheckQueryButton.tsx","webpack:///./src/timeMachine/components/TimeMachineCheckQuery.tsx","webpack:///./src/timeMachine/components/TimeMachine.tsx","webpack:///./src/dataExplorer/components/DataExplorer.tsx","webpack:///./src/dataExplorer/components/SaveAsButton.tsx","webpack:///./src/timeMachine/components/VisOptionsButton.tsx","webpack:///./src/timeMachine/constants/index.ts","webpack:///./src/timeMachine/constants/visGraphics.tsx","webpack:///./src/timeMachine/components/view_options/ViewTypeDropdown.tsx","webpack:///./src/dataExplorer/components/DeleteDataButton.tsx","webpack:///./src/dataExplorer/components/DataExplorerPage.tsx","webpack:///./src/dataExplorer/components/DashboardsDropdown.tsx","webpack:///./src/dataExplorer/components/SaveAsCellForm.tsx","webpack:///./src/dataExplorer/components/SaveAsTaskForm.tsx","webpack:///./src/dataExplorer/components/SaveAsVariable.tsx","webpack:///./src/dataExplorer/components/SaveAsOverlay.tsx","webpack:///./src/me/components/Support.tsx","webpack:///./src/me/components/LogoutButton.tsx","webpack:///./src/me/constants/index.ts","webpack:///./src/me/components/DashboardsList.tsx","webpack:///./src/me/components/Resources.tsx","webpack:///./src/me/components/UserPageHeader.tsx","webpack:///./src/me/components/Docs.tsx","webpack:///./src/me/graphics/CollectorGraphic.tsx","webpack:///./src/me/graphics/DashboardingGraphic.tsx","webpack:///./src/me/graphics/ExploreGraphic.tsx","webpack:///./src/me/components/GettingStarted.tsx","webpack:///./src/me/containers/MePage.tsx","webpack:///./src/me/index.ts","webpack:///./src/shared/components/NotFound.tsx","webpack:///./src/shared/containers/GetLinks.tsx","webpack:///./src/shared/containers/GetMe.tsx","webpack:///./src/shared/containers/UnauthenticatedApp.tsx","webpack:///./src/tasks/components/TaskExportOverlay.tsx","webpack:///./src/tasks/components/TaskImportOverlay.tsx","webpack:///./src/dashboards/components/VEOHeader.tsx","webpack:///./src/dashboards/components/EditVEO.tsx","webpack:///./src/dashboards/components/NewVEO.tsx","webpack:///./src/onboarding/components/InitStep.tsx","webpack:///./src/onboarding/components/AdminStep.tsx","webpack:///./src/shared/components/resource_fetcher/ResourceFetcher.tsx","webpack:///./src/shared/components/resource_fetcher/index.ts","webpack:///./src/onboarding/components/CompletionAdvancedButton.tsx","webpack:///./src/onboarding/components/CompletionQuickStartButton.tsx","webpack:///./src/organizations/apis/index.ts","webpack:///./src/onboarding/components/CompletionStep.tsx","webpack:///./src/onboarding/components/OnboardingStepSwitcher.tsx","webpack:///./src/onboarding/actions/index.ts","webpack:///./src/onboarding/containers/OnboardingWizard.tsx","webpack:///./src/onboarding/containers/OnboardingWizardPage.tsx","webpack:///./src/settings/components/LoadDataNavigation.tsx","webpack:///./src/settings/components/LoadDataTabbedPage.tsx","webpack:///./src/settings/components/LoadDataHeader.tsx","webpack:///./src/settings/components/SettingsTabbedPageHeader.tsx","webpack:///./src/buckets/components/BucketContextMenu.tsx","webpack:///./src/buckets/components/BucketAddDataButton.tsx","webpack:///./src/buckets/components/BucketCard.tsx","webpack:///./src/utils/formatting.ts","webpack:///./src/shared/utils/prettyBucket.ts","webpack:///./src/buckets/components/BucketList.tsx","webpack:///./src/shared/components/DurationSelector.tsx","webpack:///./src/buckets/components/Retention.tsx","webpack:///./src/buckets/components/BucketOverlayForm.tsx","webpack:///./src/buckets/components/CreateBucketOverlay.tsx","webpack:///./src/buckets/components/BucketExplainer.tsx","webpack:///./src/buckets/components/BucketsTab.tsx","webpack:///./src/buckets/containers/BucketsIndex.tsx","webpack:///./src/settings/components/SettingsNavigation.tsx","webpack:///./src/settings/components/SettingsTabbedPage.tsx","webpack:///./src/settings/components/SettingsHeader.tsx","webpack:///./src/templates/components/EmptyTemplatesList.tsx","webpack:///./src/templates/constants/index.ts","webpack:///./src/templates/components/TemplateCard.tsx","webpack:///./src/templates/components/TemplatesList.tsx","webpack:///./src/templates/components/StaticTemplateCard.tsx","webpack:///./src/templates/components/StaticTemplatesList.tsx","webpack:///./src/templates/components/TemplatesPage.tsx","webpack:///./src/templates/containers/TemplatesIndex.tsx","webpack:///./src/telegrafs/components/CollectorCard.tsx","webpack:///./src/telegrafs/components/CollectorList.tsx","webpack:///./src/telegrafs/components/TelegrafExplainer.tsx","webpack:///./src/buckets/components/NoBucketsWarning.tsx","webpack:///./src/telegrafs/components/Collectors.tsx","webpack:///./src/telegrafs/containers/TelegrafsPage.tsx","webpack:///./src/clientLibraries/graphics/CSharpLogo.tsx","webpack:///./src/clientLibraries/graphics/GoLogo.tsx","webpack:///./src/clientLibraries/graphics/JavaLogo.tsx","webpack:///./src/clientLibraries/graphics/JSLogo.tsx","webpack:///./src/clientLibraries/graphics/PythonLogo.tsx","webpack:///./src/clientLibraries/graphics/RubyLogo.tsx","webpack:///./src/clientLibraries/constants/index.ts","webpack:///./src/clientLibraries/components/ClientLibraries.tsx","webpack:///./src/clientLibraries/containers/ClientLibrariesPage.tsx","webpack:///./src/clientLibraries/components/ClientLibraryOverlay.tsx","webpack:///./src/clientLibraries/components/ClientCSharpOverlay.tsx","webpack:///./src/clientLibraries/components/ClientGoOverlay.tsx","webpack:///./src/clientLibraries/components/ClientJavaOverlay.tsx","webpack:///./src/clientLibraries/components/ClientJSOverlay.tsx","webpack:///./src/clientLibraries/components/ClientPythonOverlay.tsx","webpack:///./src/clientLibraries/components/ClientRubyOverlay.tsx","webpack:///./src/templates/components/TemplateImportOverlay.tsx","webpack:///./src/templates/components/TemplateExportOverlay.tsx","webpack:///./src/shared/components/tabbed_page/TabbedPageHeader.tsx","webpack:///./src/variables/components/VariableContextMenu.tsx","webpack:///./src/variables/components/VariableCard.tsx","webpack:///./src/variables/components/VariableList.tsx","webpack:///./src/variables/components/VariablesTab.tsx","webpack:///./src/variables/containers/VariablesIndex.tsx","webpack:///./src/scrapers/components/ScraperRow.tsx","webpack:///./src/scrapers/components/ScraperList.tsx","webpack:///./src/scrapers/components/Scrapers.tsx","webpack:///./src/scrapers/containers/ScrapersIndex.tsx","webpack:///./src/variables/components/VariableImportOverlay.tsx","webpack:///./src/variables/components/VariableExportOverlay.tsx","webpack:///./src/shared/containers/SetOrg.tsx","webpack:///./src/shared/containers/RouteToOrg.tsx","webpack:///./src/organizations/components/CreateOrgOverlay.tsx","webpack:///./src/scrapers/components/CreateScraperForm.tsx","webpack:///./src/scrapers/components/CreateScraperOverlay.tsx","webpack:///./src/shared/components/EditableName.tsx","webpack:///./src/authorizations/components/TokenRow.tsx","webpack:///./src/shared/components/permissionsWidget/PermissionsWidgetItem.tsx","webpack:///./src/shared/components/permissionsWidget/PermissionsWidgetSection.tsx","webpack:///./src/shared/components/permissionsWidget/PermissionsWidget.tsx","webpack:///./src/authorizations/components/ViewTokenOverlay.tsx","webpack:///./src/authorizations/components/TokenList.tsx","webpack:///./src/authorizations/components/GenerateTokenDropdown.tsx","webpack:///./src/authorizations/components/TokensTab.tsx","webpack:///./src/authorizations/containers/TokensIndex.tsx","webpack:///./src/members/components/MemberContextMenu.tsx","webpack:///./src/members/components/MemberCard.tsx","webpack:///./src/members/components/MemberList.tsx","webpack:///./src/members/components/Members.tsx","webpack:///./src/members/containers/MembersIndex.tsx","webpack:///./src/labels/components/UpdateLabelOverlay.tsx","webpack:///./src/labels/components/LabelContextMenu.tsx","webpack:///./src/labels/components/LabelCard.tsx","webpack:///./src/labels/components/LabelList.tsx","webpack:///./src/labels/components/LabelsTab.tsx","webpack:///./src/labels/containers/LabelsIndex.tsx","webpack:///./src/shared/components/ViewOverlay.tsx","webpack:///./src/templates/components/TemplateViewOverlay.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/configure/PrecisionDropdown.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/configure/Tab.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/configure/TabSelector.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/configure/TabBody.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/configure/LineProtocolTabs.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/LineProtocolHelperText.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/configure/LineProtocol.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/verify/StatusIndicator.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/verify/LineProtocolVerifyStep.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/verify/LineProtocolStepSwitcher.tsx","webpack:///./src/dataLoaders/components/lineProtocolWizard/LineProtocolWizard.tsx","webpack:///./src/dataLoaders/components/TelegrafEditorFooter.tsx","webpack:///./src/buckets/selectors/index.ts","webpack:///./src/dataLoaders/components/collectorsWizard/CollectorsWizard.tsx","webpack:///./src/telegrafs/components/TelegrafInstructionsOverlay.tsx","webpack:///./src/organizations/components/OrgProfileTab.tsx","webpack:///./src/organizations/containers/OrgProfilePage.tsx","webpack:///./src/shared/components/dangerConfirmation/DangerConfirmationForm.tsx","webpack:///./src/shared/components/dangerConfirmation/DangerConfirmationOverlay.tsx","webpack:///./src/organizations/components/RenameOrgForm.tsx","webpack:///./src/organizations/components/RenameOrgOverlay.tsx","webpack:///./src/buckets/components/UpdateBucketOverlay.tsx","webpack:///./src/buckets/components/RenameBucketForm.tsx","webpack:///./src/buckets/components/RenameBucketOverlay.tsx","webpack:///./src/variables/components/RenameVariableForm.tsx","webpack:///./src/variables/components/RenameVariableOverlay.tsx","webpack:///./src/variables/components/UpdateVariableOverlay.tsx","webpack:///./src/tasks/components/TemplateBrowserEmpty.tsx","webpack:///./src/tasks/components/TaskImportFromTemplateOverlay.tsx","webpack:///./src/templates/components/StaticTemplateViewOverlay.tsx","webpack:///./src/shared/utils/useMountedEffect.ts","webpack:///./src/eventViewer/utils/search.ts","webpack:///./src/eventViewer/components/EventViewer.reducer.ts","webpack:///./src/eventViewer/components/EventViewer.tsx","webpack:///./src/alerting/components/SearchBar.tsx","webpack:///./src/alerting/components/LevelTableField.tsx","webpack:///./src/alerting/components/TimeTableField.tsx","webpack:///./src/eventViewer/components/Header.tsx","webpack:///./src/eventViewer/components/TableRow.tsx","webpack:///./src/eventViewer/components/LoadingRow.tsx","webpack:///./src/eventViewer/components/FooterRow.tsx","webpack:///./src/eventViewer/components/ErrorRow.tsx","webpack:///./src/eventViewer/components/EventTable.tsx","webpack:///./src/eventViewer/components/BackToTopButton.tsx","webpack:///./src/alerting/components/AlertHistoryControls.tsx","webpack:///./src/shared/utils/queryParams.ts","webpack:///./src/alerting/components/AlertHistoryQueryParams.tsx","webpack:///./src/alerting/utils/history.ts","webpack:///./src/checks/selectors/index.ts","webpack:///./src/notifications/endpoints/selectors/index.ts","webpack:///./src/notifications/rules/selectors/index.ts","webpack:///./src/alerting/components/AlertHistoryIndex.tsx","webpack:///./src/shared/utils/formatOrgRoute.ts","webpack:///./src/checks/components/CheckTableField.tsx","webpack:///./src/alerting/components/NotificationRuleTableField.tsx","webpack:///./src/notifications/endpoints/components/NotificationEndpointTableField.tsx","webpack:///./src/alerting/components/SentTableField.tsx","webpack:///./src/alerting/constants/history.ts","webpack:///./src/checks/components/CheckHistoryControls.tsx","webpack:///./src/checks/components/CheckHistoryVisualization.tsx","webpack:///./src/checks/components/CheckHistory.tsx","webpack:///./src/checks/components/CheckCardContext.tsx","webpack:///./src/checks/components/CheckCard.tsx","webpack:///./src/checks/components/CheckCards.tsx","webpack:///./src/alerting/components/AlertsColumn.tsx","webpack:///./src/checks/components/CreateCheckDropdown.tsx","webpack:///./src/checks/components/ChecksColumn.tsx","webpack:///./src/notifications/rules/components/RuleCardContext.tsx","webpack:///./src/notifications/rules/components/RuleCard.tsx","webpack:///./src/notifications/rules/components/RuleCards.tsx","webpack:///./src/notifications/rules/components/RulesColumn.tsx","webpack:///./src/notifications/endpoints/components/EndpointCardMenu.tsx","webpack:///./src/notifications/endpoints/components/EndpointCard.tsx","webpack:///./src/notifications/endpoints/components/EndpointCards.tsx","webpack:///./src/notifications/endpoints/components/EndpointsColumn.tsx","webpack:///./src/alerting/components/AlertingIndex.tsx","webpack:///./src/shared/components/DeleteDataForm/BucketsDropdown.tsx","webpack:///./src/shared/components/DeleteDataForm/DeleteButton.tsx","webpack:///./src/shared/actions/predicates.ts","webpack:///./src/shared/components/DeleteDataForm/FilterRow.tsx","webpack:///./src/shared/components/DeleteDataForm/FilterEditor.tsx","webpack:///./src/shared/components/DeleteDataForm/PreviewDataTable.tsx","webpack:///./src/shared/components/DeleteDataForm/TimeRangeDropdown.tsx","webpack:///./src/shared/selectors/canDelete.ts","webpack:///./src/shared/components/DeleteDataForm/DeleteDataForm.tsx","webpack:///./src/shared/components/DeleteDataOverlay.tsx","webpack:///./src/dataExplorer/components/DeleteDataOverlay.tsx","webpack:///./src/checks/components/CheckAlertingButton.tsx","webpack:///./src/checks/components/CheckEOSaveButton.tsx","webpack:///./src/checks/components/CheckEOHeader.tsx","webpack:///./src/checks/components/NewThresholdCheckEO.tsx","webpack:///./src/checks/components/NewDeadmanCheckEO.tsx","webpack:///./src/checks/components/EditCheckEO.tsx","webpack:///./src/notifications/rules/components/RuleSchedule.tsx","webpack:///./src/notifications/rules/components/RuleLevelsDropdown.tsx","webpack:///./src/notifications/rules/components/RuleOverlay.reducer.tsx","webpack:///./src/notifications/rules/components/RuleOverlayProvider.tsx","webpack:///./src/notifications/rules/components/StatusChangeDropdown.tsx","webpack:///./src/notifications/rules/components/StatusLevels.tsx","webpack:///./src/notifications/rules/components/StatusRule.tsx","webpack:///./src/notifications/rules/components/TagRuleOperatorDropdown.tsx","webpack:///./src/notifications/rules/components/TagRule.tsx","webpack:///./src/notifications/rules/components/RuleConditions.tsx","webpack:///./src/notifications/rules/components/RuleEndpointDropdown.tsx","webpack:///./src/notifications/rules/components/SlackMessage.tsx","webpack:///./src/notifications/rules/components/SMTPMessage.tsx","webpack:///./src/notifications/rules/components/PagerDutyMessage.tsx","webpack:///./src/notifications/rules/components/RuleMessageContents.tsx","webpack:///./src/notifications/rules/components/RuleMessage.tsx","webpack:///./src/notifications/rules/components/RuleOverlayFooter.tsx","webpack:///./src/notifications/rules/components/RuleOverlayContents.tsx","webpack:///./src/notifications/rules/components/NewRuleOverlay.tsx","webpack:///./src/notifications/rules/components/EditRuleOverlay.tsx","webpack:///./src/notifications/endpoints/components/EndpointOverlay.reducer.ts","webpack:///./src/notifications/endpoints/components/EndpointOverlayProvider.tsx","webpack:///./src/notifications/endpoints/components/EndpointOptionsSlack.tsx","webpack:///./src/notifications/endpoints/components/EndpointOptionsPagerDuty.tsx","webpack:///./src/notifications/endpoints/components/MethodTypeDropdown.tsx","webpack:///./src/notifications/endpoints/components/AuthMethodTypeDropdown.tsx","webpack:///./src/notifications/endpoints/components/EndpointOptionsHTTP.tsx","webpack:///./src/notifications/endpoints/components/EndpointOptions.tsx","webpack:///./src/notifications/endpoints/components/EndpointTypeDropdown.tsx","webpack:///./src/notifications/endpoints/components/EndpointOverlayFooter.tsx","webpack:///./src/notifications/endpoints/components/EndpointOverlayContents.tsx","webpack:///./src/notifications/endpoints/components/NewEndpointOverlay.tsx","webpack:///./src/notifications/endpoints/components/EditEndpointOverlay.tsx","webpack:///./src/organizations/containers/NoOrgsPage.tsx","webpack:///./src/overlays/components/RouteOverlay.tsx","webpack:///./src/index.tsx","webpack:///./src/cloud/utils/limits.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/shared/decorators/errors.tsx","webpack:///./src/shared/utils/featureFlag.ts","webpack:///./src/templates/actions/thunks.ts","webpack:///./src/shared/utils/insertPreambleInScript.ts","webpack:///./src/tasks/actions/thunks.ts","webpack:///./src/types/dataLoaders.ts","webpack:///./src/variables/actions/thunks.ts","webpack:///./src/alerting/actions/alertBuilder.ts","webpack:///./src/pageLayout/images/influxdata-logo.png","webpack:///./src/shared/components/lastRunTaskStatus/LastRunTaskStatus.scss?d789","webpack:///./src/shared/constants/timeRanges.ts","webpack:///./src/labels/actions/creators.ts","webpack:///./src/schemas/dashboards.ts","webpack:///./src/timeMachine/actions/queries.ts","webpack:///./src/client/generatedRoutes.ts","webpack:///./src/client/index.ts","webpack:///./src/dataLoaders/actions/dataLoaders.ts","webpack:///./src/variables/constants/index.ts","webpack:///./src/views/helpers/index.ts","webpack:///./src/shared/apis/query.ts","webpack:///./src/style/chronograf.scss?e732","webpack:///./src/variables/actions/creators.ts","webpack:///./src/templates/constants/defaultTemplates.ts","webpack:///./src/schemas/buckets.ts","webpack:///./src/schemas/members.ts","webpack:///./src/schemas/orgs.ts","webpack:///./src/schemas/scrapers.ts","webpack:///./src/schemas/index.ts","webpack:///./src/labels/utils/index.ts","webpack:///./src/organizations/selectors/index.ts","webpack:///./src/notifications/rules/utils/index.ts","webpack:///./src/onboarding/components/OnboardingButtons.tsx","webpack:///./src/variables/utils/getTimeRangeVars.ts","webpack:///./src/tasks/actions/creators.ts","webpack:///./src/shared/constants/graphColorPalettes.ts","webpack:///./src/shared/constants/thresholds.ts","webpack:///./src/schemas/variables.ts","webpack:///./src/timeMachine/actions/queryBuilder.ts","webpack:///./src/dashboards/selectors/index.ts","webpack:///./src/buckets/constants/index.ts","webpack:///./src/dataLoaders/graphics/LogoApache.tsx","webpack:///./src/dataLoaders/graphics/LogoConsul.tsx","webpack:///./src/dataLoaders/graphics/LogoCpu.tsx","webpack:///./src/dataLoaders/graphics/LogoDocker.tsx","webpack:///./src/dataLoaders/graphics/LogoElastic.tsx","webpack:///./src/dataLoaders/graphics/LogoEtcd.tsx","webpack:///./src/dataLoaders/graphics/LogoIis.tsx","webpack:///./src/dataLoaders/graphics/LogoKubernetes.tsx","webpack:///./src/dataLoaders/graphics/LogoMesos.tsx","webpack:///./src/dataLoaders/graphics/LogoMongodb.tsx","webpack:///./src/dataLoaders/graphics/LogoMysql.tsx","webpack:///./src/dataLoaders/graphics/LogoNginx.tsx","webpack:///./src/dataLoaders/graphics/LogoRedis.tsx","webpack:///./src/dataLoaders/graphics/LogoPrometheus.tsx","webpack:///./src/dataLoaders/graphics/IconStreaming.tsx","webpack:///./src/dataLoaders/graphics/IconCSV.tsx","webpack:///./src/dataLoaders/graphics/IconLineProtocol.tsx","webpack:///./src/dataLoaders/graphics/index.ts","webpack:///./src/dataLoaders/constants/pluginConfigs.ts","webpack:///./src/utils/basepath.ts","webpack:///./src/resources/selectors/index.ts","webpack:///./src/dashboards/actions/ranges.ts","webpack:///./src/views/actions/creators.ts","webpack:///./src/shared/constants/tableGraph.ts","webpack:///./src/timeMachine/constants/queryBuilder.ts","webpack:///./src/clockface/constants/wizard.ts","webpack:///./src/templates/actions/creators.ts","webpack:///./src/labels/constants/index.ts","webpack:///./src/schemas/tasks.ts","webpack:///./src/schemas/telegrafs.ts","webpack:///./src/shared/parsing/flux/response.ts","webpack:///./src/variables/utils/buildVarsOption.ts","webpack:///./src/buckets/actions/thunks.ts","webpack:///./src/dataLoaders/actions/telegrafEditor.ts","webpack:///./src/telegrafs/actions/thunks.ts","webpack:///./src/shared/components/ClickOutside.tsx","webpack:///./src/dataLoaders/actions/steps.ts","webpack:///./src/checks/utils/checkValidate.ts","webpack:///./src/checks/utils/index.ts","webpack:///./src/checks/actions/thunks.ts","webpack:///./src/dashboards/utils/cellGetters.ts","webpack:///./src/cells/actions/thunks.ts","webpack:///./src/templates/utils/index.ts","webpack:///./src/templates/api/index.ts","webpack:///./src/shared/utils/getMinDurationFromAST.ts","webpack:///./src/variables/utils/getWindowVars.ts","webpack:///./src/dashboards/actions/creators.ts","webpack:///./src/timeMachine/utils/queryBuilder.ts","webpack:///./src/shared/utils/errors.ts","webpack:///./src/schemas/authorizations.ts","webpack:///./src/schemas/checks.ts","webpack:///./src/schemas/endpoints.ts","webpack:///./src/schemas/rules.ts","webpack:///./src/schemas/templates.ts","webpack:///./src/timeMachine/selectors/index.ts","webpack:///./src/shared/utils/resourceToTemplate.ts","webpack:///./src/dashboards/utils/tableGraph.ts","webpack:///./src/utils/naming.ts","webpack:///./src/authorizations/actions/thunks.ts","webpack:///./src/notifications/rules/actions/thunks.ts","webpack:///./src/shared/constants/index.ts","webpack:///./src/shared/actions/notifications.ts","webpack:///./src/shared/components/CodeSnippet.tsx","webpack:///./src/onboarding/constants/index.ts","webpack:///./src/shared/copy/notifications.ts","webpack:///./src/notifications/endpoints/utils/index.ts","webpack:///./src/notifications/endpoints/actions/thunks.ts","webpack:///./src/labels/selectors/index.ts","webpack:///./src/labels/actions/thunks.ts","webpack:///./src/types/colors.ts","webpack:///./src/types/dashboards.ts","webpack:///./src/types/notifications.ts","webpack:///./src/types/overlay.ts","webpack:///./src/types/promises.ts","webpack:///./src/types/timeZones.ts","webpack:///./src/utils/ajax.ts","webpack:///./src/cells/actions/creators.ts","webpack:///./src/dataLoaders/utils/pluginConfigs.ts","webpack:///./src/shared/utils/validateURI.ts","webpack:///./src/telegrafs/actions/creators.ts","webpack:///./src/authorizations/actions/creators.ts","webpack:///./src/dashboards/apis/index.ts","webpack:///./src/views/actions/thunks.ts","webpack:///./src/timeMachine/apis/queryBuilder.ts","webpack:///./src/alerting/utils/vis.ts","webpack:///./src/shared/utils/useOneWayState.ts","webpack:///./src/alerting/utils/customCheck.ts","webpack:///./src/timeMachine/actions/index.ts","webpack:///./src/shared/utils/checkQueryResult.ts","webpack:///./src/scrapers/actions/thunks.ts","webpack:///./src/shared/components/CopyButton.tsx","webpack:///./src/dataLoaders/components/BucketsDropdown.tsx","webpack:///./src/variables/utils/resolveSelectedValue.ts","webpack:///./src/variables/utils/ValueFetcher.ts","webpack:///./src/utils/Deferred.ts","webpack:///./src/variables/utils/hydrateVars.ts","webpack:///./src/types/index.ts","webpack:///./src/resources/selectors/getResourcesStatus.ts","webpack:///./src/resources/components/GetResources.tsx","webpack:///./src/shared/components/editable_description/EditableDescription.tsx","webpack:///./src/clockface/components/inputs/multipleInput/Row.tsx","webpack:///./src/clockface/components/inputs/multipleInput/MultipleRows.tsx","webpack:///./src/clockface/components/inputs/multipleInput/MultipleInput.tsx","webpack:///./src/clockface/components/wizard/WizardFullScreen.tsx","webpack:///./src/clockface/components/wizard/WizardOverlay.tsx","webpack:///./src/clockface/components/wizard/WizardProgressHeader.tsx","webpack:///./src/clockface/components/wizard/ProgressBar.tsx","webpack:///./src/clockface/components/context_menu/ContextMenuItem.tsx","webpack:///./src/clockface/components/context_menu/ContextMenu.tsx","webpack:///./src/clockface/types/index.ts","webpack:///./src/clockface/components/context_menu/Context.tsx","webpack:///./src/clockface/components/Select.tsx","webpack:///./src/clockface/index.ts","webpack:///./src/types/alerting.ts","webpack:///./src/utils/nodes.ts","webpack:///./src/types/auth.ts","webpack:///./src/types/autoRefresh.ts","webpack:///./src/types/buckets.ts","webpack:///./src/types/dataExplorer.ts","webpack:///./src/types/flux.ts","webpack:///./src/types/logEvent.ts","webpack:///./src/types/orgs.ts","webpack:///./src/types/queries.ts","webpack:///./src/types/resources.ts","webpack:///./src/types/sources.ts","webpack:///./src/types/tasks.ts","webpack:///./src/types/templates.ts","webpack:///./src/types/variables.ts","webpack:///./src/dashboards/utils/time.ts","webpack:///./src/shared/components/fancy_scrollbar/FancyScrollbar.tsx","webpack:///./src/dashboards/constants/index.ts","webpack:///./src/shared/utils/vis.ts","webpack:///./src/cloud/apis/limits.ts","webpack:///./src/cloud/actions/limits.ts","webpack:///./src/buckets/actions/creators.ts","webpack:///./src/scrapers/actions/creators.ts","webpack:///./src/members/actions/creators.ts","webpack:///./src/cloud/constants/index.ts","webpack:///./src/checks/actions/creators.ts","webpack:///./src/notifications/rules/actions/creators.ts","webpack:///./src/notifications/endpoints/actions/creators.ts","webpack:///./src/shared/components/DefaultErrorMessage.tsx","webpack:///./src/variables/utils/formatVarsOption.ts","webpack:///./src/variables/utils/formatExpression.ts","webpack:///./src/variables/utils/getVarAssignment.ts","webpack:///./src/variables/utils/exportVariables.ts","webpack:///./src/timeMachine/apis/QueryBuilderFetcher.ts","webpack:///./src/utils/fast.ts","webpack:///./src/shared/utils/ast.ts","webpack:///./src/alerting/utils/statusEvents.ts","webpack:///./src/shared/utils/filterUnusedVars.ts","webpack:///./src/views/selectors/index.ts","webpack:///./src/authorizations/apis/index.ts","webpack:///./src/members/actions/thunks.ts","webpack:///./src/alerting/constants/index.ts","webpack:///./src/schemas/labels.ts","webpack:///./src/dashboards/actions/thunks.ts","webpack:///./src/external/monaco.onigasm.ts","webpack:///./src/shared/components/FluxMonacoEditor.scss?dd0d","webpack:///./src/dataLoaders/selectors/index.ts","webpack:///./src/dataLoaders/components/verifyStep/TelegrafInstructions.tsx","webpack:///./src/external/monaco.tomlTheme.ts","webpack:///./src/external/monaco.tomlSyntax.ts","webpack:///./src/shared/components/TomlMonacoEditor.tsx","webpack:///./src/shared/utils/duration.ts","webpack:///./src/utils/api.ts","webpack:///./src/variables/selectors/index.tsx"],"names":[],"mappings":"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","file":"2.index.js","sourcesContent":["import {Dispatch, Action, Middleware} from 'redux'\n\n// Trigger resize event to re-layout the React Layout plugin\nexport const resizeLayout: Middleware = () => (next: Dispatch<Action>) => (\n  action: Action\n) => {\n  next(action)\n\n  if (\n    action.type === 'ENABLE_PRESENTATION_MODE' ||\n    action.type === 'DISABLE_PRESENTATION_MODE'\n  ) {\n    // Uses longer event object creation method due to IE compatibility.\n    const evt = document.createEvent('HTMLEvents')\n    evt.initEvent('resize', false, true)\n    window.dispatchEvent(evt)\n  }\n}\n","import {Dispatch} from 'redux'\n\nimport {TimeZone} from 'src/types'\n\nexport enum ActionTypes {\n  EnablePresentationMode = 'ENABLE_PRESENTATION_MODE',\n  DisablePresentationMode = 'DISABLE_PRESENTATION_MODE',\n  SetAutoRefresh = 'SET_AUTOREFRESH',\n  SetTimeZone = 'SET_APP_TIME_ZONE',\n  TemplateControlBarVisibilityToggled = 'TemplateControlBarVisibilityToggledAction',\n  Noop = 'NOOP',\n}\n\nexport type Action =\n  | EnablePresentationModeAction\n  | DisablePresentationModeAction\n  | SetAutoRefreshAction\n  | SetTimeZoneAction\n  | TemplateControlBarVisibilityToggledAction\n\nexport type EnablePresentationModeActionCreator = () => EnablePresentationModeAction\n\nexport interface SetTimeZoneAction {\n  type: ActionTypes.SetTimeZone\n  payload: {timeZone: TimeZone}\n}\n\nexport interface EnablePresentationModeAction {\n  type: ActionTypes.EnablePresentationMode\n}\n\nexport interface DisablePresentationModeAction {\n  type: ActionTypes.DisablePresentationMode\n}\n\nexport type DelayEnablePresentationModeDispatcher = () => DelayEnablePresentationModeThunk\n\nexport type DelayEnablePresentationModeThunk = (\n  dispatch: Dispatch<EnablePresentationModeAction>\n) => NodeJS.Timer\n\nexport type SetAutoRefreshActionCreator = (\n  milliseconds: number\n) => SetAutoRefreshAction\n\nexport interface SetAutoRefreshAction {\n  type: ActionTypes.SetAutoRefresh\n  payload: {\n    milliseconds: number\n  }\n}\n\nexport type TemplateControlBarVisibilityToggledActionCreator = () => TemplateControlBarVisibilityToggledAction\n\nexport interface TemplateControlBarVisibilityToggledAction {\n  type: ActionTypes.TemplateControlBarVisibilityToggled\n}\n","import {PRESENTATION_MODE_ANIMATION_DELAY} from '../constants'\n\nimport {notify} from 'src/shared/actions/notifications'\nimport {presentationMode} from 'src/shared/copy/notifications'\n\nimport {Dispatch} from 'redux'\nimport {TimeZone} from 'src/types'\n\nimport {\n  ActionTypes,\n  EnablePresentationModeAction,\n  DisablePresentationModeAction,\n  DelayEnablePresentationModeDispatcher,\n  SetAutoRefreshActionCreator,\n  SetAutoRefreshAction,\n  SetTimeZoneAction,\n  TemplateControlBarVisibilityToggledAction,\n} from 'src/types/actions/app'\n\n// ephemeral state action creators\n\nexport const enablePresentationMode = (): EnablePresentationModeAction => ({\n  type: ActionTypes.EnablePresentationMode,\n})\n\nexport const disablePresentationMode = (): DisablePresentationModeAction => ({\n  type: ActionTypes.DisablePresentationMode,\n})\n\nexport const delayEnablePresentationMode: DelayEnablePresentationModeDispatcher = () => (\n  dispatch: Dispatch<EnablePresentationModeAction>\n): NodeJS.Timer =>\n  setTimeout(() => {\n    dispatch(enablePresentationMode())\n    notify(presentationMode())\n  }, PRESENTATION_MODE_ANIMATION_DELAY)\n\n// persistent state action creators\n\nexport const setAutoRefresh: SetAutoRefreshActionCreator = (\n  milliseconds: number\n): SetAutoRefreshAction => ({\n  type: ActionTypes.SetAutoRefresh,\n  payload: {\n    milliseconds,\n  },\n})\n\nexport const setTimeZone = (timeZone: TimeZone): SetTimeZoneAction => ({\n  type: ActionTypes.SetTimeZone,\n  payload: {timeZone},\n})\n\nexport const templateControlBarVisibilityToggled = (): TemplateControlBarVisibilityToggledAction => ({\n  type: ActionTypes.TemplateControlBarVisibilityToggled,\n})\n","import {Middleware, Dispatch, Action} from 'redux'\n// Middleware generally used for actions needing parsed queryStrings\nimport qs from 'qs'\n\nimport {enablePresentationMode} from 'src/shared/actions/app'\n\nexport const queryStringConfig: Middleware = () => (\n  dispatch: Dispatch<Action>\n) => (action: Action) => {\n  dispatch(action)\n\n  const urlQueryParams = qs.parse(window.location.search, {\n    ignoreQueryPrefix: true,\n  })\n\n  if (urlQueryParams.present === 'true') {\n    dispatch(enablePresentationMode())\n  }\n}\n","import {combineReducers} from 'redux'\n\nimport {AUTOREFRESH_DEFAULT_INTERVAL} from 'src/shared/constants'\nimport {ActionTypes, Action} from 'src/types/actions/app'\nimport {TimeZone} from 'src/types'\n\nexport interface AppState {\n  ephemeral: {\n    inPresentationMode: boolean\n  }\n  persisted: {\n    autoRefresh: number\n    showTemplateControlBar: boolean\n    timeZone: TimeZone\n  }\n}\n\nconst initialState: AppState = {\n  ephemeral: {\n    inPresentationMode: false,\n  },\n  persisted: {\n    autoRefresh: AUTOREFRESH_DEFAULT_INTERVAL,\n    showTemplateControlBar: false,\n    timeZone: 'Local',\n  },\n}\n\nconst {\n  ephemeral: initialAppEphemeralState,\n  persisted: initialAppPersistedState,\n} = initialState\n\nconst appEphemeralReducer = (\n  state = initialAppEphemeralState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.EnablePresentationMode: {\n      return {\n        ...state,\n        inPresentationMode: true,\n      }\n    }\n\n    case ActionTypes.DisablePresentationMode: {\n      return {\n        ...state,\n        inPresentationMode: false,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst appPersistedReducer = (\n  state = initialAppPersistedState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SetAutoRefresh: {\n      return {\n        ...state,\n        autoRefresh: action.payload.milliseconds,\n      }\n    }\n\n    case ActionTypes.TemplateControlBarVisibilityToggled: {\n      const {showTemplateControlBar} = state\n\n      return {...state, showTemplateControlBar: !showTemplateControlBar}\n    }\n\n    case ActionTypes.SetTimeZone: {\n      const {timeZone} = action.payload\n\n      return {...state, timeZone}\n    }\n\n    default:\n      return state\n  }\n}\n\nconst appReducer = combineReducers<AppState>({\n  ephemeral: appEphemeralReducer,\n  persisted: appPersistedReducer,\n})\n\nexport default appReducer\n","import {getAJAX} from 'src/utils/ajax'\nimport {Links} from 'src/types/links'\n\nconst linksURI = '/api/v2'\n\nexport const getLinks = async (): Promise<Links> => {\n  try {\n    const {data} = await getAJAX(linksURI)\n\n    return data\n  } catch (error) {\n    console.error(error)\n    throw error\n  }\n}\n","import {Dispatch} from 'redux'\n\nimport {getLinks as getLinksAJAX} from 'src/shared/apis/links'\n\n// Types\nimport {Links} from 'src/types/links'\n\nexport enum ActionTypes {\n  LinksGetRequested = 'LINKS_GET_REQUESTED',\n  LinksGetCompleted = 'LINKS_GET_COMPLETED',\n  LinksGetFailed = 'LINKS_GET_FAILED',\n}\n\nexport type Action = LinksGetCompletedAction\n\nexport interface LinksGetRequestedAction {\n  type: ActionTypes.LinksGetRequested\n}\nconst linksGetRequested = (): LinksGetRequestedAction => ({\n  type: ActionTypes.LinksGetRequested,\n})\n\nexport interface LinksGetCompletedAction {\n  type: ActionTypes.LinksGetCompleted\n  payload: {links: Links}\n}\nexport const linksGetCompleted = (links: Links): LinksGetCompletedAction => ({\n  type: ActionTypes.LinksGetCompleted,\n  payload: {links},\n})\n\nexport interface LinksGetFailedAction {\n  type: ActionTypes.LinksGetFailed\n}\nconst linksGetFailed = (): LinksGetFailedAction => ({\n  type: ActionTypes.LinksGetFailed,\n})\n\nexport const getLinks = () => async (\n  dispatch: Dispatch<\n    LinksGetRequestedAction | LinksGetCompletedAction | LinksGetFailedAction\n  >\n): Promise<void> => {\n  dispatch(linksGetRequested())\n  try {\n    const links = await getLinksAJAX()\n    dispatch(linksGetCompleted(links))\n  } catch (error) {\n    dispatch(linksGetFailed())\n  }\n}\n","import {Action, ActionTypes} from 'src/shared/actions/links'\nimport {Links} from 'src/types/links'\n\nconst initialState: Links = {\n  authorizations: '',\n  buckets: '',\n  dashboards: '',\n  external: {\n    statusFeed: '',\n  },\n  query: {\n    self: '',\n    ast: '',\n    suggestions: '',\n  },\n  orgs: '',\n  setup: '',\n  signin: '',\n  signout: '',\n  sources: '',\n  system: {debug: '', health: '', metrics: ''},\n  tasks: '',\n  users: '',\n  write: '',\n  variables: '',\n  views: '',\n  defaultDashboard: '',\n  me: '',\n}\n\nconst linksReducer = (state = initialState, action: Action): Links => {\n  switch (action.type) {\n    case ActionTypes.LinksGetCompleted: {\n      const {links} = action.payload\n      return {...links, defaultDashboard: '/v2/dashboards/029d13fda9c5b000'}\n    }\n  }\n\n  return state\n}\n\nexport default linksReducer\n","export type Action = ReturnType<typeof setDashboard>\n\nexport const SET_CURRENT_DASHBOARD = 'SET_CURRENT_DASHBOARD'\n\nexport const setDashboard = (id?: string) =>\n  ({\n    type: SET_CURRENT_DASHBOARD,\n    id,\n  } as const)\n","import {\n  Action,\n  SET_CURRENT_DASHBOARD,\n} from 'src/shared/actions/currentDashboard'\n\nexport interface CurrentDashboardState {\n  id: string\n}\n\nexport const initialState: CurrentDashboardState = {\n  id: '',\n}\n\nconst reducer = (\n  state: CurrentDashboardState = initialState,\n  action: Action\n): CurrentDashboardState => {\n  switch (action.type) {\n    case SET_CURRENT_DASHBOARD:\n      state.id = action.id\n      return {...state}\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import {produce} from 'immer'\nimport uuid from 'uuid'\nimport {Action} from 'src/shared/actions/notifications'\nimport {Notification} from 'src/types'\n\nexport const initialState: Notification[] = []\n\nexport const notificationsReducer = (\n  state = initialState,\n  action: Action\n): Notification[] =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case 'PUBLISH_NOTIFICATION': {\n        const {notification} = action.payload\n        const publishedNotification = {\n          ...notification,\n          id: uuid.v4(),\n        }\n        const matchIndex = state.findIndex(\n          n => n.type && notification.type && n.type === notification.type\n        )\n        const isUnique = matchIndex === -1\n        if (isUnique) {\n          draftState.unshift(publishedNotification)\n        }\n        return\n      }\n\n      case 'DISMISS_NOTIFICATION': {\n        const {id} = action.payload\n        return draftState.filter(n => n.id !== id)\n      }\n\n      case 'DISMISS_ALL_NOTIFICATIONS': {\n        return []\n      }\n    }\n  })\n","import app from 'src/shared/reducers/app'\nimport links from 'src/shared/reducers/links'\nimport currentDashboard from 'src/shared/reducers/currentDashboard'\nimport {notificationsReducer} from 'src/shared/reducers/notifications'\n\nexport default {\n  app,\n  links,\n  currentDashboard,\n  notifications: notificationsReducer,\n}\n","// Libraries\nimport {isString, isNull, isObject} from 'lodash'\n\n// Utils\nimport {validateAndTypeRange} from 'src/dashboards/utils/time'\n\n// Types\nimport {RangeState} from 'src/dashboards/reducers/ranges'\n\nconst isCorrectType = (bound: any) => isString(bound) || isNull(bound)\n\nexport const getLocalStateRangesAsArray = (ranges: any[]): RangeState => {\n  const normalizedRanges = ranges.filter(r => {\n    if (!isObject(r)) {\n      return false\n    }\n\n    // check for presence of keys\n    if (\n      !r.hasOwnProperty('dashboardID') ||\n      !r.hasOwnProperty('lower') ||\n      !r.hasOwnProperty('upper')\n    ) {\n      return false\n    }\n\n    const {dashboardID, lower, upper} = r\n\n    if (!dashboardID || typeof dashboardID !== 'string') {\n      return false\n    }\n\n    if (!lower && !upper) {\n      return false\n    }\n\n    if (!isCorrectType(lower) || !isCorrectType(upper)) {\n      return false\n    }\n\n    return true\n  })\n\n  const rangesObject: RangeState = {}\n\n  normalizedRanges.forEach(\n    (range: {dashboardID: string; lower: string; upper: string}) => {\n      const {dashboardID, lower, upper} = range\n\n      const timeRange = validateAndTypeRange({lower, upper})\n      if (timeRange) {\n        rangesObject[dashboardID] = timeRange\n      }\n    }\n  )\n  return rangesObject\n}\n\nconst normalizeRangesState = (ranges: RangeState): RangeState => {\n  const normalized = {}\n\n  for (const key in ranges) {\n    if (\n      isObject(ranges[key]) &&\n      ranges[key].hasOwnProperty('upper') &&\n      ranges[key].hasOwnProperty('lower') &&\n      isCorrectType(ranges[key].lower) &&\n      isCorrectType(ranges[key].upper)\n    ) {\n      const typedRange = validateAndTypeRange(ranges[key])\n      if (typedRange) {\n        normalized[key] = typedRange\n      }\n    }\n  }\n\n  return normalized\n}\n\nexport const getLocalStateRanges = (ranges: RangeState | any[]) => {\n  if (Array.isArray(ranges)) {\n    return getLocalStateRangesAsArray(ranges)\n  } else if (isObject(ranges)) {\n    return normalizeRangesState(ranges)\n  } else {\n    return {}\n  }\n}\n\nexport const setLocalStateRanges = (ranges: RangeState) => {\n  return normalizeRangesState(ranges)\n}\n","// Types\nimport {LocalStorage} from 'src/types'\n\n// Constants\nimport {timeZones} from 'src/types/timeZones'\n\ntype AppPersisted = LocalStorage['app']['persisted']\n\nexport const normalizeApp = (app: LocalStorage['app']) => {\n  return {...app, persisted: normalizeAppPersisted(app.persisted)}\n}\n\nexport const normalizeAppPersisted = (\n  persisted: AppPersisted\n): AppPersisted => {\n  return {...persisted, timeZone: normalizeTimeZone(persisted.timeZone)}\n}\n\nconst normalizeTimeZone = timeZone => {\n  const validTimeZone = timeZones.find(tz => tz === timeZone)\n  if (!validTimeZone) {\n    return 'Local'\n  }\n\n  return timeZone\n}\n","// Types\nimport {RemoteDataState, LocalStorage} from 'src/types'\n\nexport const normalizeResources = (state: LocalStorage) => {\n  return {\n    variables: state.resources.variables,\n    orgs: normalizeOrgs(state.resources.orgs),\n  }\n}\n\nconst normalizeOrgs = (orgs: LocalStorage['resources']['orgs']) => {\n  return {\n    ...orgs,\n    org: orgs.org,\n    status: RemoteDataState.NotStarted,\n  }\n}\n","// Libraries\nimport {get} from 'lodash'\n\n// Types\nimport {LocalStorage} from 'src/types'\n\n// Constants\nimport {VERSION} from 'src/shared/constants'\n\n// Utils\nimport {\n  getLocalStateRanges,\n  setLocalStateRanges,\n  normalizeApp,\n} from 'src/normalizers/localStorage'\nimport {normalizeResources} from './resources'\n\nexport const normalizeGetLocalStorage = (state: LocalStorage): LocalStorage => {\n  let newState = state\n\n  if (state.ranges) {\n    newState = {...newState, ranges: getLocalStateRanges(state.ranges)}\n  }\n\n  const appPersisted = get(newState, 'app.persisted', false)\n  if (appPersisted) {\n    newState = {\n      ...newState,\n      app: normalizeApp(newState.app),\n    }\n  }\n\n  return newState\n}\n\nexport const normalizeSetLocalStorage = (state: LocalStorage): LocalStorage => {\n  const {app, ranges, autoRefresh, userSettings} = state\n  return {\n    VERSION,\n    autoRefresh,\n    userSettings,\n    app: normalizeApp(app),\n    ranges: setLocalStateRanges(ranges),\n    resources: normalizeResources(state),\n  }\n}\n","export * from './dashboardTime'\nexport * from './appPersisted'\nexport * from './localStorage'\nexport * from './resources'\n","import {\n  normalizeGetLocalStorage,\n  normalizeSetLocalStorage,\n} from 'src/normalizers/localStorage'\nimport {VERSION} from 'src/shared/constants'\nimport {\n  newVersion,\n  loadLocalSettingsFailed,\n} from 'src/shared/copy/notifications'\n\nimport {LocalStorage} from 'src/types/localStorage'\n\nexport const loadLocalStorage = (): LocalStorage => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    const state = JSON.parse(serializedState) || {}\n\n    if (state.VERSION && state.VERSION !== VERSION) {\n      const version = VERSION ? ` (${VERSION})` : ''\n\n      console.log(newVersion(version).message) // eslint-disable-line no-console\n    }\n\n    delete state.VERSION\n\n    return normalizeGetLocalStorage(state)\n  } catch (error) {\n    console.error(loadLocalSettingsFailed(error).message)\n  }\n}\n\nexport const saveToLocalStorage = (state: LocalStorage): void => {\n  try {\n    window.localStorage.setItem(\n      'state',\n      JSON.stringify(normalizeSetLocalStorage(state))\n    )\n  } catch (err) {\n    console.error('Unable to save state to local storage: ', JSON.parse(err))\n  }\n}\n","import _ from 'lodash'\nimport {saveToLocalStorage} from '../localStorage'\n\n// Types\nimport {Store} from 'redux'\nimport {LocalStorage} from 'src/types/localStorage'\n\n/**\n * Redux store enhancer (https://github.com/reactjs/redux/blob/master/docs/Glossary.md)\n * responsible for sending updates on data explorer state to a server to persist.\n * It subscribes a listener function to the store -- meaning every time the store emits an update\n * (after some state has changed), we'll have a chance to react.\n *\n * Debouncing the saveToLocalStorage to ensure we are stringify and setItem at most once per second.\n */\n\nexport default function persistState() {\n  return next => (reducer, initialState: LocalStorage, enhancer) => {\n    const store: Store<LocalStorage> = next(reducer, initialState, enhancer)\n    const throttleMs = 1000\n\n    store.subscribe(\n      _.throttle(() => {\n        saveToLocalStorage(store.getState())\n      }, throttleMs)\n    )\n\n    return store\n  }\n}\n","import {MeState} from 'src/shared/reducers/me'\nimport {client} from 'src/utils/api'\nimport HoneyBadger from 'honeybadger-js'\n\nexport enum ActionTypes {\n  SetMe = 'SET_ME',\n}\n\nexport interface SetMe {\n  type: ActionTypes.SetMe\n  payload: {\n    me: MeState\n  }\n}\n\nexport type Actions = SetMe\n\nexport const setMe = me => ({\n  type: ActionTypes.SetMe,\n  payload: {\n    me,\n  },\n})\n\nexport const getMe = () => async dispatch => {\n  try {\n    const user = await client.users.me()\n\n    HoneyBadger.setContext({\n      user_id: user.id,\n    })\n\n    dispatch(setMe(user))\n  } catch (error) {\n    console.error(error)\n  }\n}\n","import {Actions, ActionTypes} from 'src/shared/actions/me'\n\nexport interface MeLinks {\n  self: string\n  log: string\n}\n\nexport interface MeState {\n  id: string\n  name: string\n  links: MeLinks\n}\n\nconst defaultState = {\n  id: '',\n  name: '',\n  links: {\n    self: '',\n    log: '',\n  },\n}\n\nexport default (state = defaultState, action: Actions): MeState => {\n  switch (action.type) {\n    case ActionTypes.SetMe:\n      return action.payload.me\n    default:\n      return state\n  }\n}\n","import {\n  RemoteDataState,\n  ResourceState,\n  TaskOptions,\n  TaskSchedule,\n} from 'src/types'\n\nexport const initialState = (): ResourceState['tasks'] => ({\n  allIDs: [],\n  byID: {},\n  status: RemoteDataState.NotStarted,\n  newScript: '',\n  currentTask: null,\n  currentScript: '',\n  searchTerm: '',\n  showInactive: true,\n  taskOptions: defaultOptions,\n  runStatus: RemoteDataState.NotStarted,\n  runs: [],\n  logs: [],\n})\n\nexport const defaultOptions: TaskOptions = {\n  name: '',\n  interval: '',\n  offset: '',\n  cron: '',\n  taskScheduleType: TaskSchedule.unselected,\n  orgID: '',\n  toBucketName: '',\n  toOrgName: '',\n}\n","// Libraries\nimport {get} from 'lodash'\n\n// Types\nimport {ResourceType, NormalizedState, RemoteDataState} from 'src/types'\n\nexport const setResourceAtID = <R extends {status: RemoteDataState}>(\n  draftState: NormalizedState<R>,\n  action,\n  resource: ResourceType\n) => {\n  const {schema, status, id} = action\n\n  const prevResource = get(draftState, ['byID', id], {})\n  const currentResource = get(schema, ['entities', resource, id], {})\n\n  if (!draftState.allIDs.includes(id)) {\n    draftState.allIDs.push(id)\n  }\n\n  draftState.byID[id] = {...prevResource, ...currentResource, status}\n}\n\nexport const setResource = <R>(\n  draftState: NormalizedState<R>,\n  action,\n  resource: ResourceType\n) => {\n  const {status, schema} = action\n\n  draftState.status = status\n\n  if (get(schema, ['entities', resource])) {\n    draftState.byID = schema.entities[resource]\n    draftState.allIDs = schema.result\n  }\n\n  return\n}\n\nexport const addResource = <R>(\n  draftState: NormalizedState<R>,\n  action,\n  resource: ResourceType\n) => {\n  const {result, entities} = action.schema\n\n  draftState.byID[result] = entities[resource][result]\n  draftState.allIDs.push(result)\n}\n\nexport const editResource = <R>(\n  draftState: NormalizedState<R>,\n  action,\n  resource: ResourceType\n) => {\n  const {entities, result} = action.schema\n\n  draftState.byID[result] = entities[resource][result]\n}\n\ninterface RemoveAction {\n  type: string\n  id: string\n}\n\nexport const removeResource = <R>(\n  draftState: NormalizedState<R>,\n  action: RemoveAction\n) => {\n  const {id} = action\n  delete draftState.byID[id]\n  draftState.allIDs = draftState.allIDs.filter(uuid => uuid !== id)\n\n  return\n}\n\nexport const setRelation = <R>(\n  draftState: NormalizedState<R>,\n  childType: ResourceType,\n  childID: string,\n  parentID: string\n) => {\n  const resource = draftState.byID[parentID]\n\n  if (!resource) {\n    return\n  }\n\n  const child = draftState.byID[parentID][childType]\n\n  if (!child) {\n    return\n  }\n\n  draftState.byID[parentID][childType].push(childID)\n}\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {\n  Action,\n  ADD_TASK,\n  SET_TASKS,\n  CLEAR_TASK,\n  CLEAR_CURRENT_TASK,\n  SET_RUNS,\n  SET_TASK_OPTION,\n  SET_ALL_TASK_OPTIONS,\n  SET_NEW_SCRIPT,\n  SET_CURRENT_SCRIPT,\n  SET_CURRENT_TASK,\n  SET_SEARCH_TERM,\n  SET_SHOW_INACTIVE,\n  SET_LOGS,\n  EDIT_TASK,\n  REMOVE_TASK,\n} from 'src/tasks/actions/creators'\nimport {ResourceType, ResourceState, TaskSchedule, Task} from 'src/types'\n\n// Utils\nimport {initialState, defaultOptions} from 'src/tasks/reducers/helpers'\nimport {\n  setResource,\n  editResource,\n  removeResource,\n  addResource,\n} from 'src/resources/reducers/helpers'\n\ntype TasksState = ResourceState['tasks']\n\nexport default (\n  state: TasksState = initialState(),\n  action: Action\n): TasksState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_TASKS: {\n        setResource<Task>(draftState, action, ResourceType.Tasks)\n\n        return\n      }\n\n      case EDIT_TASK: {\n        editResource<Task>(draftState, action, ResourceType.Tasks)\n\n        return\n      }\n\n      case REMOVE_TASK: {\n        removeResource<Task>(draftState, action)\n\n        return\n      }\n\n      case ADD_TASK: {\n        addResource<Task>(draftState, action, ResourceType.Tasks)\n\n        return\n      }\n\n      case CLEAR_TASK: {\n        draftState.taskOptions = defaultOptions\n        draftState.currentScript = ''\n        draftState.newScript = ''\n\n        return\n      }\n\n      case CLEAR_CURRENT_TASK: {\n        draftState.currentScript = ''\n        draftState.currentTask = null\n\n        return\n      }\n\n      case SET_ALL_TASK_OPTIONS: {\n        const {schema} = action\n        const {entities, result} = schema\n        const {name, every, cron, orgID, offset} = entities.tasks[result]\n        let taskScheduleType = TaskSchedule.interval\n\n        if (cron) {\n          taskScheduleType = TaskSchedule.cron\n        }\n\n        draftState.taskOptions = {\n          ...state.taskOptions,\n          name,\n          cron,\n          interval: every,\n          orgID,\n          taskScheduleType,\n          offset,\n        }\n\n        return\n      }\n\n      case SET_TASK_OPTION: {\n        const {key, value} = action\n\n        draftState.taskOptions[`${key}`] = value\n\n        return\n      }\n\n      case SET_NEW_SCRIPT: {\n        draftState.newScript = action.script\n\n        return\n      }\n\n      case SET_CURRENT_SCRIPT: {\n        draftState.currentScript = action.script\n\n        return\n      }\n\n      case SET_CURRENT_TASK: {\n        const {schema} = action\n        const {entities, result} = schema\n\n        const task = entities.tasks[result]\n\n        const currentScript = task.flux || ''\n\n        draftState.currentScript = currentScript\n        draftState.currentTask = task\n\n        return\n      }\n\n      case SET_SEARCH_TERM: {\n        const {searchTerm} = action\n\n        draftState.searchTerm = searchTerm\n\n        return\n      }\n\n      case SET_SHOW_INACTIVE: {\n        draftState.showInactive = !state.showInactive\n\n        return\n      }\n\n      case SET_RUNS: {\n        const {runs, runStatus} = action\n\n        draftState.runs = runs\n        draftState.runStatus = runStatus\n\n        return\n      }\n\n      case SET_LOGS: {\n        draftState.logs = action.logs\n\n        return\n      }\n    }\n  })\n","import {TimeRange} from 'src/types'\nimport {Action, ActionTypes} from 'src/dashboards/actions/ranges'\n\nexport type RangeState = {\n  [contextID: string]: TimeRange\n}\n\nconst initialState: RangeState = {}\n\nexport default (\n  state: RangeState = initialState,\n  action: Action\n): RangeState => {\n  switch (action.type) {\n    case ActionTypes.DeleteTimeRange: {\n      const {dashboardID} = action.payload\n      const {[dashboardID]: _, ...filteredRanges} = state\n\n      return filteredRanges\n    }\n\n    case ActionTypes.RetainRangesDashboardTimeV1: {\n      const {dashboardIDs} = action.payload\n      const ranges = {}\n      for (const key in state) {\n        if (dashboardIDs.includes(key)) {\n          ranges[key] = state[key]\n        }\n      }\n      return ranges\n    }\n\n    case ActionTypes.SetDashboardTimeRange: {\n      const {dashboardID, timeRange} = action.payload\n      return {...state, [dashboardID]: timeRange}\n    }\n  }\n\n  return state\n}\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {\n  RemoteDataState,\n  ResourceState,\n  Dashboard,\n  ResourceType,\n} from 'src/types'\n\n// Actions\nimport {\n  Action,\n  SET_DASHBOARD,\n  REMOVE_DASHBOARD,\n  SET_DASHBOARDS,\n  REMOVE_DASHBOARD_LABEL,\n  EDIT_DASHBOARD,\n} from 'src/dashboards/actions/creators'\nimport {\n  SET_CELLS,\n  REMOVE_CELL,\n  SET_CELL,\n  Action as CellAction,\n} from 'src/cells/actions/creators'\nimport {SET_LABEL_ON_RESOURCE} from 'src/labels/actions/creators'\n\n// Utils\nimport {\n  setResource,\n  setResourceAtID,\n  removeResource,\n  editResource,\n  setRelation,\n} from 'src/resources/reducers/helpers'\n\ntype DashboardsState = ResourceState['dashboards']\n\nconst initialState = () => ({\n  byID: {},\n  allIDs: [],\n  status: RemoteDataState.NotStarted,\n})\n\nexport const dashboardsReducer = (\n  state: DashboardsState = initialState(),\n  action: Action | CellAction\n): DashboardsState => {\n  return produce(state, draftState => {\n    switch (action.type) {\n      case SET_DASHBOARDS: {\n        setResource<Dashboard>(draftState, action, ResourceType.Dashboards)\n\n        return\n      }\n\n      case REMOVE_DASHBOARD: {\n        removeResource<Dashboard>(draftState, action)\n\n        return\n      }\n\n      case SET_DASHBOARD: {\n        setResourceAtID<Dashboard>(draftState, action, ResourceType.Dashboards)\n\n        return\n      }\n\n      case EDIT_DASHBOARD: {\n        editResource<Dashboard>(draftState, action, ResourceType.Dashboards)\n\n        return\n      }\n\n      case REMOVE_CELL: {\n        const {dashboardID, id} = action\n\n        const {cells} = draftState.byID[dashboardID]\n\n        draftState.byID[dashboardID].cells = cells.filter(cID => cID !== id)\n\n        return\n      }\n\n      case SET_CELL: {\n        const {schema} = action\n\n        const cellID = schema.result\n        const cell = schema.entities.cells[cellID]\n        const {cells} = draftState.byID[cell.dashboardID]\n\n        if (cells.includes(cellID)) {\n          return\n        }\n\n        draftState.byID[cell.dashboardID].cells.push(cellID)\n\n        return\n      }\n\n      case SET_CELLS: {\n        const {dashboardID, schema} = action\n\n        const cellIDs = schema && schema.result\n\n        if (!cellIDs) {\n          return\n        }\n\n        draftState.byID[dashboardID].cells = cellIDs\n\n        return\n      }\n\n      case SET_LABEL_ON_RESOURCE: {\n        const {resourceID, schema} = action\n        const labelID = schema.result\n\n        setRelation<Dashboard>(\n          draftState,\n          ResourceType.Labels,\n          labelID,\n          resourceID\n        )\n\n        return\n      }\n\n      case REMOVE_DASHBOARD_LABEL: {\n        const {dashboardID, labelID} = action\n\n        const {labels} = draftState.byID[dashboardID]\n\n        draftState.byID[dashboardID].labels = labels.filter(\n          label => label !== labelID\n        )\n\n        return\n      }\n    }\n  })\n}\n","// Libraries\nimport {produce} from 'immer'\nimport {get} from 'lodash'\n\n// Actions\nimport {\n  SET_CELLS,\n  REMOVE_CELL,\n  SET_CELL,\n  Action,\n} from 'src/cells/actions/creators'\nimport {\n  SET_DASHBOARD,\n  Action as DashboardAction,\n} from 'src/dashboards/actions/creators'\n\n// Types\nimport {Cell, ResourceState, RemoteDataState} from 'src/types'\n\ntype CellsState = ResourceState['cells']\n\nconst initialState = () => ({\n  byID: {},\n  status: RemoteDataState.NotStarted,\n})\n\nexport const cellsReducer = (\n  state: CellsState = initialState(),\n  action: Action | DashboardAction\n) =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_DASHBOARD: {\n        const {schema, status} = action\n\n        draftState.status = status\n\n        if (get(schema, ['entities', 'cells'])) {\n          draftState.byID = schema.entities.cells\n        }\n\n        return\n      }\n\n      case SET_CELLS: {\n        const {status, schema} = action\n\n        draftState.status = status\n\n        if (get(schema, ['entities', 'cells'])) {\n          draftState.byID = schema.entities['cells']\n        }\n\n        return\n      }\n\n      case SET_CELL: {\n        const {id, schema, status} = action\n\n        const cell: Cell = get(schema, ['entities', 'cells', id])\n        const cellExists = !!draftState.byID[id]\n\n        if (cell || !cellExists) {\n          draftState.byID[id] = {...cell, status}\n        } else {\n          draftState.byID[id].status = status\n        }\n\n        return\n      }\n\n      case REMOVE_CELL: {\n        delete draftState.byID[action.id]\n\n        return\n      }\n    }\n  })\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {\n  SET_VIEW,\n  SET_VIEWS,\n  RESET_VIEWS,\n  Action,\n} from 'src/views/actions/creators'\nimport {SET_DASHBOARD} from 'src/dashboards/actions/creators'\nimport {View, RemoteDataState, ResourceState, ResourceType} from 'src/types'\n\n// Helpers\nimport {setResource, setResourceAtID} from 'src/resources/reducers/helpers'\n\nexport type ViewsState = ResourceState['views']\n\nconst initialState = (): ViewsState => ({\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n})\n\nconst viewsReducer = (\n  state: ViewsState = initialState(),\n  action: Action\n): ViewsState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_DASHBOARD: {\n        setResource<View>(draftState, action, ResourceType.Views)\n      }\n\n      case SET_VIEWS: {\n        setResource<View>(draftState, action, ResourceType.Views)\n\n        return\n      }\n      case SET_VIEW: {\n        setResourceAtID<View>(draftState, action, ResourceType.Views)\n\n        return\n      }\n      case RESET_VIEWS: {\n        return initialState()\n      }\n    }\n  })\n\nexport default viewsReducer\n","// Libraries\nimport {cloneDeep, isNumber, get, map} from 'lodash'\nimport {produce} from 'immer'\n\n// Utils\nimport {createView, defaultViewQuery} from 'src/views/helpers'\nimport {isConfigValid, buildQuery} from 'src/timeMachine/utils/queryBuilder'\n\n// Constants\nimport {AUTOREFRESH_DEFAULT} from 'src/shared/constants'\nimport {\n  THRESHOLD_TYPE_TEXT,\n  THRESHOLD_TYPE_BG,\n} from 'src/shared/constants/thresholds'\nimport {pastHourTimeRange} from 'src/shared/constants/timeRanges'\nimport {DEFAULT_TIME_RANGE} from 'src/shared/constants/timeRanges'\n\n// Types\nimport {\n  AutoRefresh,\n  StatusRow,\n  TableViewProperties,\n  TimeRange,\n  View,\n  ViewType,\n  QueryView,\n  QueryViewProperties,\n  ExtractWorkingView,\n  DashboardDraftQuery,\n  BuilderConfig,\n  BuilderConfigAggregateWindow,\n  RemoteDataState,\n  TimeMachineID,\n  Color,\n} from 'src/types'\nimport {Action} from 'src/timeMachine/actions'\nimport {TimeMachineTab} from 'src/types/timeMachine'\nimport {BuilderAggregateFunctionType} from 'src/client/generatedRoutes'\n\ninterface QueryBuilderState {\n  buckets: string[]\n  bucketsStatus: RemoteDataState\n  functions: Array<[{name: string}]>\n  aggregateWindow: BuilderConfigAggregateWindow\n  tags: Array<{\n    aggregateFunctionType: BuilderAggregateFunctionType\n    valuesSearchTerm: string\n    keysSearchTerm: string\n    keys: string[]\n    keysStatus: RemoteDataState\n    values: string[]\n    valuesStatus: RemoteDataState\n  }>\n}\n\ninterface QueryResultsState {\n  files: string[] | null\n  status: RemoteDataState\n  isInitialFetch: boolean\n  fetchDuration: number\n  errorMessage: string\n  statuses: StatusRow[][]\n}\n\nexport interface TimeMachineState {\n  view: QueryView\n  timeRange: TimeRange\n  autoRefresh: AutoRefresh\n  draftQueries: DashboardDraftQuery[]\n  isViewingRawData: boolean\n  isViewingVisOptions: boolean\n  activeTab: TimeMachineTab\n  activeQueryIndex: number | null\n  queryBuilder: QueryBuilderState\n  queryResults: QueryResultsState\n}\n\nexport interface TimeMachinesState {\n  activeTimeMachineID: TimeMachineID\n  timeMachines: {\n    ['de']: TimeMachineState\n    ['veo']: TimeMachineState\n    ['alerting']: TimeMachineState\n  }\n}\n\nexport const initialStateHelper = (): TimeMachineState => ({\n  timeRange: pastHourTimeRange,\n  autoRefresh: AUTOREFRESH_DEFAULT,\n  view: createView(),\n  draftQueries: [{...defaultViewQuery(), hidden: false}],\n  isViewingRawData: false,\n  isViewingVisOptions: false,\n  activeTab: 'queries',\n  activeQueryIndex: 0,\n  queryResults: initialQueryResultsState(),\n  queryBuilder: {\n    buckets: [],\n    bucketsStatus: RemoteDataState.NotStarted,\n    aggregateWindow: {period: 'auto'},\n    functions: [],\n    tags: [\n      {\n        aggregateFunctionType: 'filter',\n        keys: [],\n        keysSearchTerm: '',\n        keysStatus: RemoteDataState.NotStarted,\n        values: [],\n        valuesSearchTerm: '',\n        valuesStatus: RemoteDataState.NotStarted,\n      },\n    ],\n  },\n})\n\nexport const initialState = (): TimeMachinesState => ({\n  activeTimeMachineID: 'de',\n  timeMachines: {\n    veo: initialStateHelper(),\n    de: initialStateHelper(),\n    alerting: initialStateHelper(),\n  },\n})\n\nconst getTableProperties = (view, files) => {\n  if (!files || !files[0]) {\n    return {...view.properties, fieldOptions: []}\n  }\n  const csv = files[0]\n  let pointer = 0,\n    ni\n\n  // cut off the first 3 lines\n  for (ni = 0; ni < 3; ni++) {\n    pointer = csv.indexOf('\\r\\n', pointer) + 2\n  }\n\n  const existing = (view.properties.fieldOptions || []).reduce((prev, curr) => {\n    prev[curr.internalName] = curr\n    return prev\n  }, {})\n\n  csv\n    .slice(pointer, csv.indexOf('\\r\\n', pointer))\n    .split(',')\n    .filter(o => !existing.hasOwnProperty(o))\n    .filter(o => !['result', '', 'table', 'time'].includes(o))\n    .forEach(o => {\n      existing[o] = {\n        internalName: o,\n        displayName: o,\n        visible: true,\n      }\n    })\n\n  const fieldOptions = Object.keys(existing).map(e => existing[e])\n  const properties = {...view.properties, fieldOptions}\n\n  return properties\n}\n\nexport const timeMachinesReducer = (\n  state: TimeMachinesState = initialState(),\n  action: Action\n): TimeMachinesState => {\n  if (action.type === 'SET_ACTIVE_TIME_MACHINE') {\n    const {activeTimeMachineID, initialState} = action.payload\n    const activeTimeMachine = state.timeMachines[activeTimeMachineID]\n    const view = initialState.view || activeTimeMachine.view\n    const draftQueries = map(cloneDeep(view.properties.queries), q => ({\n      ...q,\n      hidden: false,\n    }))\n    const queryBuilder = initialQueryBuilderState(draftQueries[0].builderConfig)\n    const queryResults = initialQueryResultsState()\n    const timeRange =\n      activeTimeMachineID === 'alerting'\n        ? DEFAULT_TIME_RANGE\n        : activeTimeMachine.timeRange\n\n    return {\n      ...state,\n      activeTimeMachineID,\n      timeMachines: {\n        ...state.timeMachines,\n        [activeTimeMachineID]: {\n          ...activeTimeMachine,\n          activeTab: 'queries',\n          timeRange,\n          ...initialState,\n          isViewingRawData: false,\n          activeQueryIndex: 0,\n          draftQueries,\n          queryBuilder,\n          queryResults,\n        },\n      },\n    }\n  }\n\n  // All other actions act upon whichever single `TimeMachineState` is\n  // specified by the `activeTimeMachineID` property\n\n  const {activeTimeMachineID, timeMachines} = state\n  const activeTimeMachine = timeMachines[activeTimeMachineID]\n\n  if (!activeTimeMachine) {\n    return state\n  }\n\n  const newActiveTimeMachine = timeMachineReducer(activeTimeMachine, action)\n\n  const s = {\n    ...state,\n    timeMachines: {\n      ...timeMachines,\n      [activeTimeMachineID]: newActiveTimeMachine,\n    },\n  }\n\n  return s\n}\n\nexport const timeMachineReducer = (\n  state: TimeMachineState,\n  action: Action\n): TimeMachineState => {\n  switch (action.type) {\n    case 'SET_VIEW_NAME': {\n      const {name} = action.payload\n      const view = {...state.view, name}\n\n      return {...state, view}\n    }\n\n    case 'SET_TIME_RANGE': {\n      return produce(state, draftState => {\n        draftState.timeRange = action.payload.timeRange\n\n        buildAllQueries(draftState)\n      })\n    }\n\n    case 'SET_AUTO_REFRESH': {\n      return produce(state, draftState => {\n        draftState.autoRefresh = action.payload.autoRefresh\n\n        buildAllQueries(draftState)\n      })\n    }\n\n    case 'SET_VIEW_TYPE': {\n      const {type} = action.payload\n      const view = convertView(state.view, state.queryResults.files, type)\n\n      return {...state, view}\n    }\n\n    case 'SET_ACTIVE_QUERY_TEXT': {\n      const {text} = action.payload\n      const draftQueries = [...state.draftQueries]\n\n      draftQueries[state.activeQueryIndex] = {\n        ...draftQueries[state.activeQueryIndex],\n        text,\n      }\n\n      return {...state, draftQueries}\n    }\n\n    case 'SET_QUERY_RESULTS': {\n      return produce(state, draftState => {\n        const {\n          status,\n          files,\n          fetchDuration,\n          errorMessage,\n          statuses,\n        } = action.payload\n\n        draftState.queryResults.status = status\n        draftState.queryResults.errorMessage = errorMessage\n\n        if (files) {\n          if (\n            state.view &&\n            state.view.properties &&\n            state.view.properties.type === 'table'\n          ) {\n            const properties = getTableProperties(state.view, files)\n            draftState.view = {...state.view, properties}\n          }\n          draftState.queryResults.files = files\n          draftState.queryResults.isInitialFetch = false\n        }\n        if (statuses) {\n          draftState.queryResults.statuses = statuses\n        }\n\n        if (isNumber(fetchDuration)) {\n          draftState.queryResults.fetchDuration = fetchDuration\n        }\n      })\n    }\n\n    case 'SET_IS_VIEWING_RAW_DATA': {\n      const {isViewingRawData} = action.payload\n\n      return {...state, isViewingRawData}\n    }\n\n    case 'SET_ACTIVE_TAB': {\n      const {activeTab} = action.payload\n\n      return {...state, activeTab}\n    }\n\n    case 'TOGGLE_VIS_OPTIONS': {\n      return {...state, isViewingVisOptions: !state.isViewingVisOptions}\n    }\n\n    case 'SET_AXES': {\n      const {axes} = action.payload\n\n      return setViewProperties(state, {axes})\n    }\n\n    case 'SET_GEOM': {\n      const {geom} = action.payload\n\n      return setViewProperties(state, {geom})\n    }\n\n    case 'SET_Y_AXIS_BOUNDS': {\n      const {bounds} = action.payload\n\n      return setYAxis(state, {bounds})\n    }\n\n    case 'SET_AXIS_PREFIX': {\n      const {prefix, axis} = action.payload\n      const viewType = state.view.properties.type\n\n      if (viewType === 'heatmap' || viewType == 'scatter') {\n        if (axis === 'x') {\n          return setViewProperties(state, {xPrefix: prefix})\n        }\n        return setViewProperties(state, {yPrefix: prefix})\n      }\n      return setYAxis(state, {prefix})\n    }\n\n    case 'SET_AXIS_SUFFIX': {\n      const {suffix, axis} = action.payload\n      const viewType = state.view.properties.type\n\n      if (viewType === 'heatmap' || viewType === 'scatter') {\n        if (axis === 'x') {\n          return setViewProperties(state, {xSuffix: suffix})\n        }\n        return setViewProperties(state, {ySuffix: suffix})\n      }\n      return setYAxis(state, {suffix})\n    }\n\n    case 'SET_Y_AXIS_BASE': {\n      const {base} = action.payload\n\n      return setYAxis(state, {base})\n    }\n\n    case 'SET_Y_AXIS_SCALE': {\n      const {scale} = action.payload\n\n      return setYAxis(state, {scale})\n    }\n\n    case 'SET_X_COLUMN': {\n      const {xColumn} = action.payload\n\n      return setViewProperties(state, {xColumn})\n    }\n\n    case 'SET_Y_COLUMN': {\n      const {yColumn} = action.payload\n\n      return setViewProperties(state, {yColumn})\n    }\n\n    case 'SET_X_AXIS_LABEL': {\n      const {xAxisLabel} = action.payload\n\n      switch (state.view.properties.type) {\n        case 'histogram':\n        case 'heatmap':\n        case 'scatter':\n          return setViewProperties(state, {xAxisLabel})\n        default:\n          return setYAxis(state, {label: xAxisLabel})\n      }\n    }\n\n    case 'SET_Y_AXIS_LABEL': {\n      const {yAxisLabel} = action.payload\n\n      switch (state.view.properties.type) {\n        case 'histogram':\n        case 'heatmap':\n        case 'scatter':\n          return setViewProperties(state, {yAxisLabel})\n        default:\n          return setYAxis(state, {label: yAxisLabel})\n      }\n    }\n\n    case 'SET_FILL_COLUMNS': {\n      const {fillColumns} = action.payload\n\n      return setViewProperties(state, {fillColumns})\n    }\n\n    case 'SET_SYMBOL_COLUMNS': {\n      const {symbolColumns} = action.payload\n\n      return setViewProperties(state, {symbolColumns})\n    }\n\n    case 'SET_HISTOGRAM_POSITION': {\n      const {position} = action.payload\n\n      return setViewProperties(state, {position})\n    }\n\n    case 'SET_LINE_POSITION': {\n      const {position} = action.payload\n\n      return setViewProperties(state, {position})\n    }\n\n    case 'SET_BIN_COUNT': {\n      const {binCount} = action.payload\n\n      return setViewProperties(state, {binCount})\n    }\n\n    case 'SET_BIN_SIZE': {\n      const {binSize} = action.payload\n\n      return setViewProperties(state, {binSize})\n    }\n\n    case 'SET_COLOR_HEXES': {\n      const {colors} = action.payload\n\n      return setViewProperties(state, {colors})\n    }\n\n    case 'SET_VIEW_X_DOMAIN': {\n      const {xDomain} = action.payload\n\n      return setViewProperties(state, {xDomain})\n    }\n\n    case 'SET_VIEW_Y_DOMAIN': {\n      const {yDomain} = action.payload\n\n      return setViewProperties(state, {yDomain})\n    }\n\n    case 'SET_PREFIX': {\n      const {prefix} = action.payload\n\n      switch (state.view.properties.type) {\n        case 'gauge':\n        case 'single-stat':\n        case 'line-plus-single-stat':\n          return setViewProperties(state, {prefix})\n        case 'check':\n        case 'xy':\n          return setYAxis(state, {prefix})\n        default:\n          return state\n      }\n    }\n\n    case 'SET_TICK_PREFIX': {\n      const {tickPrefix} = action.payload\n\n      switch (state.view.properties.type) {\n        case 'gauge':\n        case 'single-stat':\n        case 'line-plus-single-stat':\n          return setViewProperties(state, {tickPrefix})\n        case 'check':\n        case 'xy':\n          return setYAxis(state, {tickPrefix})\n        default:\n          return state\n      }\n    }\n\n    case 'SET_SUFFIX': {\n      const {suffix} = action.payload\n\n      switch (state.view.properties.type) {\n        case 'gauge':\n        case 'single-stat':\n        case 'line-plus-single-stat':\n          return setViewProperties(state, {suffix})\n        case 'check':\n        case 'xy':\n          return setYAxis(state, {suffix})\n        default:\n          return state\n      }\n    }\n\n    case 'SET_TICK_SUFFIX': {\n      const {tickSuffix} = action.payload\n\n      switch (state.view.properties.type) {\n        case 'gauge':\n        case 'single-stat':\n        case 'line-plus-single-stat':\n          return setViewProperties(state, {tickSuffix})\n        case 'check':\n        case 'xy':\n          return setYAxis(state, {tickSuffix})\n        default:\n          return state\n      }\n    }\n\n    case 'SET_COLORS': {\n      const {colors} = action.payload\n\n      switch (state.view.properties.type) {\n        case 'gauge':\n        case 'table':\n        case 'single-stat':\n        case 'scatter':\n        case 'check':\n        case 'xy':\n        case 'histogram':\n          return setViewProperties(state, {colors})\n        case 'line-plus-single-stat':\n          return setViewProperties(state, {\n            colors: updateCorrectColors(state, colors),\n          })\n        default:\n          return state\n      }\n    }\n\n    case 'SET_DECIMAL_PLACES': {\n      const {decimalPlaces} = action.payload\n\n      return setViewProperties(state, {decimalPlaces})\n    }\n\n    case 'SET_SHADE_BELOW': {\n      const {shadeBelow} = action.payload\n\n      return setViewProperties(state, {shadeBelow})\n    }\n\n    case 'SET_BACKGROUND_THRESHOLD_COLORING': {\n      const viewColors = state.view.properties.colors as Color[]\n\n      const colors = viewColors.map(color => {\n        if (color.type !== 'scale') {\n          return {\n            ...color,\n            type: THRESHOLD_TYPE_BG,\n          }\n        }\n\n        return color\n      })\n\n      return setViewProperties(state, {colors})\n    }\n\n    case 'SET_TEXT_THRESHOLD_COLORING': {\n      const viewColors = state.view.properties.colors as Color[]\n\n      const colors = viewColors.map(color => {\n        if (color.type !== 'scale') {\n          return {\n            ...color,\n            type: THRESHOLD_TYPE_TEXT,\n          }\n        }\n        return color\n      })\n\n      return setViewProperties(state, {colors})\n    }\n\n    case 'SET_STATIC_LEGEND': {\n      const {staticLegend} = action.payload\n\n      return setViewProperties(state, {staticLegend})\n    }\n\n    case 'EDIT_ACTIVE_QUERY_WITH_BUILDER': {\n      return produce(state, draftState => {\n        const query = draftState.draftQueries[draftState.activeQueryIndex]\n\n        query.editMode = 'builder'\n        query.hidden = false\n\n        buildAllQueries(draftState)\n      })\n    }\n\n    case 'EDIT_ACTIVE_QUERY_AS_FLUX': {\n      const {activeQueryIndex} = state\n      const draftQueries = [...state.draftQueries]\n\n      draftQueries[activeQueryIndex] = {\n        ...draftQueries[activeQueryIndex],\n        editMode: 'advanced',\n      }\n\n      return {\n        ...state,\n        draftQueries,\n      }\n    }\n\n    case 'SET_ACTIVE_QUERY_INDEX': {\n      return produce(state, draftState => {\n        const {activeQueryIndex} = action.payload\n\n        if (activeQueryIndex < draftState.draftQueries.length) {\n          draftState.activeQueryIndex = activeQueryIndex\n          resetBuilderState(draftState)\n        }\n      })\n    }\n\n    case 'ADD_QUERY': {\n      return produce(state, draftState => {\n        draftState.draftQueries = [\n          ...state.draftQueries,\n          {...defaultViewQuery(), hidden: false},\n        ]\n        draftState.activeQueryIndex = draftState.draftQueries.length - 1\n\n        resetBuilderState(draftState)\n      })\n    }\n\n    case 'REMOVE_QUERY': {\n      return produce(state, draftState => {\n        const {queryIndex} = action.payload\n\n        draftState.draftQueries.splice(queryIndex, 1)\n\n        const queryLength = draftState.draftQueries.length\n\n        let activeQueryIndex: number\n\n        if (queryIndex < queryLength) {\n          activeQueryIndex = queryIndex\n        } else if (queryLength === queryIndex && queryLength > 0) {\n          activeQueryIndex = queryLength - 1\n        } else {\n          activeQueryIndex = 0\n        }\n\n        draftState.activeQueryIndex = activeQueryIndex\n\n        resetBuilderState(draftState)\n      })\n    }\n\n    case 'TOGGLE_QUERY': {\n      return produce(state, draftState => {\n        const draftQuery = draftState.draftQueries[action.payload.queryIndex]\n\n        draftQuery.hidden = !draftQuery.hidden\n      })\n    }\n\n    case 'SET_BUILDER_AGGREGATE_FUNCTION_TYPE': {\n      return produce(state, draftState => {\n        const {index, builderAggregateFunctionType} = action.payload\n        const draftQuery = draftState.draftQueries[draftState.activeQueryIndex]\n\n        buildActiveQuery(draftState)\n        if (\n          draftQuery &&\n          draftQuery.builderConfig &&\n          draftQuery.builderConfig.tags[index]\n        ) {\n          // When switching between filtering and grouping\n          // we want to clear out any previously selected values\n          draftQuery.builderConfig.tags[index].values = []\n\n          draftQuery.builderConfig.tags[\n            index\n          ].aggregateFunctionType = builderAggregateFunctionType\n        }\n      })\n    }\n\n    case 'SET_BUILDER_BUCKET_SELECTION': {\n      return produce(state, draftState => {\n        const builderConfig =\n          draftState.draftQueries[draftState.activeQueryIndex].builderConfig\n\n        builderConfig.buckets = [action.payload.bucket]\n\n        if (action.payload.resetSelections) {\n          const defaultAggregateFunctionType = initialStateHelper().queryBuilder\n            .tags[0].aggregateFunctionType\n\n          builderConfig.tags = [\n            {\n              key: '',\n              values: [],\n              aggregateFunctionType: defaultAggregateFunctionType,\n            },\n          ]\n          buildActiveQuery(draftState)\n        }\n      })\n    }\n\n    case 'SET_BUILDER_BUCKETS': {\n      return produce(state, draftState => {\n        draftState.queryBuilder.buckets = action.payload.buckets\n        draftState.queryBuilder.bucketsStatus = RemoteDataState.Done\n      })\n    }\n\n    case 'SET_BUILDER_BUCKETS_STATUS': {\n      return produce(state, draftState => {\n        draftState.queryBuilder.bucketsStatus = action.payload.bucketsStatus\n      })\n    }\n\n    case 'SET_BUILDER_TAGS_STATUS': {\n      return produce(state, draftState => {\n        const {status} = action.payload\n        const tags = draftState.queryBuilder.tags\n\n        for (const tag of tags) {\n          tag.keysStatus = status\n          tag.valuesStatus = status\n        }\n      })\n    }\n\n    case 'SET_BUILDER_TAG_KEYS': {\n      return produce(state, draftState => {\n        const {index, keys} = action.payload\n\n        draftState.queryBuilder.tags[index].keys = keys\n        draftState.queryBuilder.tags[index].keysStatus = RemoteDataState.Done\n      })\n    }\n\n    case 'SET_BUILDER_TAG_KEYS_STATUS': {\n      return produce(state, draftState => {\n        const {index, status} = action.payload\n        const tags = draftState.queryBuilder.tags\n\n        tags[index].keysStatus = status\n\n        if (status === RemoteDataState.Loading) {\n          for (let i = index + 1; i < tags.length; i++) {\n            tags[i].keysStatus = RemoteDataState.NotStarted\n          }\n        }\n      })\n    }\n\n    case 'SET_BUILDER_TAG_VALUES': {\n      return produce(state, draftState => {\n        const {index, values} = action.payload\n\n        draftState.queryBuilder.tags[index].values = values\n        draftState.queryBuilder.tags[index].valuesStatus = RemoteDataState.Done\n      })\n    }\n\n    case 'SET_BUILDER_TAG_VALUES_STATUS': {\n      return produce(state, draftState => {\n        const {index, status} = action.payload\n\n        draftState.queryBuilder.tags[index].valuesStatus = status\n      })\n    }\n\n    case 'SET_BUILDER_TAG_KEY_SELECTION': {\n      return produce(state, draftState => {\n        const {index, key} = action.payload\n        const draftQuery = draftState.draftQueries[draftState.activeQueryIndex]\n        const tag = draftQuery.builderConfig.tags[index]\n\n        tag.key = key\n        tag.values = []\n      })\n    }\n\n    case 'SET_BUILDER_TAG_VALUES_SELECTION': {\n      return produce(state, draftState => {\n        const {index, values} = action.payload\n        const draftQuery = draftState.draftQueries[draftState.activeQueryIndex]\n\n        draftQuery.builderConfig.tags[index].values = values\n\n        buildActiveQuery(draftState)\n      })\n    }\n\n    case 'SET_BUILDER_VALUES_SEARCH_TERM': {\n      return produce(state, draftState => {\n        const {index, searchTerm} = action.payload\n\n        draftState.queryBuilder.tags[index].valuesSearchTerm = searchTerm\n      })\n    }\n\n    case 'SET_BUILDER_KEYS_SEARCH_TERM': {\n      return produce(state, draftState => {\n        const {index, searchTerm} = action.payload\n\n        draftState.queryBuilder.tags[index].keysSearchTerm = searchTerm\n      })\n    }\n\n    case 'ADD_TAG_SELECTOR': {\n      return produce(state, draftState => {\n        const draftQuery = draftState.draftQueries[draftState.activeQueryIndex]\n        const [initialTags] = initialStateHelper().queryBuilder.tags\n\n        draftQuery.builderConfig.tags.push({\n          key: '',\n          values: [],\n          aggregateFunctionType: initialTags.aggregateFunctionType,\n        })\n        draftState.queryBuilder.tags.push(initialTags)\n      })\n    }\n\n    case 'REMOVE_TAG_SELECTOR': {\n      return produce(state, draftState => {\n        const {index} = action.payload\n        const draftQuery = draftState.draftQueries[draftState.activeQueryIndex]\n\n        let selectedValues = []\n        if (draftQuery) {\n          selectedValues = draftQuery.builderConfig.tags[index].values\n\n          draftQuery.builderConfig.tags.splice(index, 1)\n          draftState.queryBuilder.tags.splice(index, 1)\n        }\n\n        if (selectedValues.length) {\n          buildActiveQuery(draftState)\n        }\n      })\n    }\n\n    case 'SELECT_BUILDER_FUNCTION': {\n      return produce(state, draftState => {\n        const {functions} = action.payload\n\n        draftState.draftQueries[\n          draftState.activeQueryIndex\n        ].builderConfig.functions = functions\n\n        buildActiveQuery(draftState)\n      })\n    }\n\n    case 'SET_AGGREGATE_WINDOW': {\n      return produce(state, draftState => {\n        const {activeQueryIndex, draftQueries} = draftState\n        const {period} = action.payload\n\n        draftQueries[activeQueryIndex].builderConfig.aggregateWindow = {period}\n        buildActiveQuery(draftState)\n      })\n    }\n\n    case 'UPDATE_ACTIVE_QUERY_NAME': {\n      const {activeQueryIndex} = state\n      const {queryName} = action.payload\n      const draftQueries = [...state.draftQueries]\n\n      draftQueries[activeQueryIndex] = {\n        ...draftQueries[activeQueryIndex],\n        name: queryName,\n      }\n\n      return {...state, draftQueries}\n    }\n\n    case 'SET_FIELD_OPTIONS': {\n      const workingView = state.view as ExtractWorkingView<\n        typeof action.payload\n      >\n      const {fieldOptions} = action.payload\n      const properties = {\n        ...workingView.properties,\n        fieldOptions,\n      }\n      const view = {...state.view, properties}\n      return {...state, view}\n    }\n\n    case 'UPDATE_FIELD_OPTION': {\n      const workingView = state.view as ExtractWorkingView<TableViewProperties>\n      const {option} = action.payload\n      const field = option.internalName\n\n      const properties = {...workingView.properties}\n      properties.fieldOptions = properties.fieldOptions.slice(0)\n\n      const names = workingView.properties.fieldOptions.map(o => o.internalName)\n      const idx = names.indexOf(field)\n\n      if (idx < 0) {\n        return state\n      }\n\n      properties.fieldOptions[idx] = option\n\n      const view = {...state.view, properties}\n      return {...state, view}\n    }\n\n    case 'SET_TABLE_OPTIONS': {\n      const workingView = state.view as ExtractWorkingView<\n        typeof action.payload\n      >\n      const {tableOptions} = action.payload\n      const properties = {...workingView.properties, tableOptions}\n      const view = {...state.view, properties}\n\n      return {...state, view}\n    }\n\n    case 'SET_TIME_FORMAT': {\n      const workingView = state.view as ExtractWorkingView<\n        typeof action.payload\n      >\n\n      const {timeFormat} = action.payload\n      const properties = {...workingView.properties, timeFormat}\n      const view = {...state.view, properties}\n\n      return {...state, view}\n    }\n\n    case 'SAVE_DRAFT_QUERIES': {\n      return produce(state, draftState => {\n        draftState.view.properties.queries = draftState.draftQueries.filter(\n          q => !q.hidden\n        )\n      })\n    }\n  }\n\n  return state\n}\n\nconst setViewProperties = (\n  state: TimeMachineState,\n  update: {[key: string]: any}\n): TimeMachineState => {\n  const view: any = state.view\n  const properties = view.properties\n\n  return {\n    ...state,\n    view: {...view, properties: {...properties, ...update}},\n  }\n}\n\nconst setYAxis = (state: TimeMachineState, update: {[key: string]: any}) => {\n  const view: any = state.view\n  const properties = view.properties\n  const axes = get(properties, 'axes', {})\n  const yAxis = get(axes, 'y', {})\n\n  return {\n    ...state,\n    view: {\n      ...view,\n      properties: {\n        ...properties,\n        axes: {...axes, y: {...yAxis, ...update}},\n      },\n    },\n  }\n}\n\nconst updateCorrectColors = (\n  state: TimeMachineState,\n  update: Color[]\n): Color[] => {\n  const view: any = state.view\n  const colors = view.properties.colors\n\n  if (get(update, '0.type', '') === 'scale') {\n    return [...colors.filter(c => c.type !== 'scale'), ...update]\n  }\n  return [...colors.filter(c => c.type === 'scale'), ...update]\n}\n\nconst convertView = (\n  view: QueryView,\n  files,\n  outType: ViewType\n): View<QueryViewProperties> => {\n  const newView: any = createView(outType)\n  newView.properties.queries = cloneDeep(view.properties.queries)\n  if (outType === 'table' && files) {\n    newView.properties = getTableProperties(newView, files)\n  }\n  newView.name = view.name\n  newView.cellID = view.cellID\n  newView.dashboardID = view.dashboardID\n  newView.id = (view as any).id\n  newView.links = (view as any).links\n\n  return newView\n}\n\nconst initialQueryBuilderState = (\n  builderConfig: BuilderConfig\n): QueryBuilderState => {\n  return {\n    buckets: builderConfig.buckets,\n    bucketsStatus: RemoteDataState.NotStarted,\n    functions: [],\n    aggregateWindow: {period: 'auto'},\n    tags: builderConfig.tags.map(() => {\n      const [defaultTag] = initialStateHelper().queryBuilder.tags\n      return defaultTag\n    }),\n  }\n}\n\nconst initialQueryResultsState = (): QueryResultsState => ({\n  files: null,\n  status: RemoteDataState.NotStarted,\n  isInitialFetch: true,\n  fetchDuration: null,\n  errorMessage: null,\n  statuses: null,\n})\n\nexport const buildActiveQuery = (draftState: TimeMachineState) => {\n  const draftQuery = draftState.draftQueries[draftState.activeQueryIndex]\n\n  if (isConfigValid(draftQuery.builderConfig)) {\n    draftQuery.text = buildQuery(draftQuery.builderConfig)\n  } else if (!draftQuery.text) {\n    draftQuery.text = ''\n  }\n}\n\nconst buildAllQueries = (draftState: TimeMachineState) => {\n  draftState.draftQueries\n    .filter(query => query.editMode === 'builder')\n    .forEach(query => {\n      if (isConfigValid(query.builderConfig)) {\n        query.text = buildQuery(query.builderConfig)\n      } else {\n        query.text = ''\n      }\n    })\n}\n\nconst resetBuilderState = (draftState: TimeMachineState) => {\n  const newBuilderConfig =\n    draftState.draftQueries[draftState.activeQueryIndex].builderConfig\n\n  draftState.queryBuilder = initialQueryBuilderState(newBuilderConfig)\n}\n","// Libraries\nimport HoneyBadger from 'honeybadger-js'\nimport {NormalizedSchema} from 'normalizr'\n\n// Types\nimport {Organization, RemoteDataState, OrgEntities} from 'src/types'\n\n// Action Types\nexport const SET_ORGS = 'SET_ORGS'\nexport const SET_ORG = 'SET_ORG'\nexport const ADD_ORG = 'ADD_ORG'\nexport const REMOVE_ORG = 'REMOVE_ORG'\nexport const EDIT_ORG = 'EDIT_ORG'\n\n// Action Definitions\nexport type Action =\n  | ReturnType<typeof setOrgs>\n  | ReturnType<typeof addOrg>\n  | ReturnType<typeof removeOrg>\n  | ReturnType<typeof editOrg>\n  | ReturnType<typeof setOrg>\n\nexport const setOrgs = (\n  status: RemoteDataState,\n  schema?: NormalizedSchema<OrgEntities, string[]>\n) => {\n  return {\n    type: SET_ORGS,\n    schema,\n    status,\n  } as const\n}\n\nexport const setOrg = (org: Organization) => {\n  HoneyBadger.setContext({\n    orgID: org.id,\n  })\n  return {\n    type: SET_ORG,\n    org,\n  } as const\n}\n\nexport const addOrg = (schema: NormalizedSchema<OrgEntities, string>) =>\n  ({\n    type: ADD_ORG,\n    schema,\n  } as const)\n\nexport const removeOrg = (id: string) =>\n  ({\n    type: REMOVE_ORG,\n    id,\n  } as const)\n\nexport const editOrg = (schema: NormalizedSchema<OrgEntities, string>) =>\n  ({\n    type: EDIT_ORG,\n    schema,\n  } as const)\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {\n  SET_ORGS,\n  SET_ORG,\n  ADD_ORG,\n  REMOVE_ORG,\n  Action,\n  EDIT_ORG,\n} from 'src/organizations/actions/creators'\nimport {\n  ResourceState,\n  Organization,\n  ResourceType,\n  RemoteDataState,\n} from 'src/types'\n\n// Utils\nimport {\n  setResource,\n  addResource,\n  removeResource,\n  editResource,\n} from 'src/resources/reducers/helpers'\n\nconst {Orgs} = ResourceType\ntype OrgsState = ResourceState['orgs']\n\nconst initialState = (): OrgsState => ({\n  byID: {},\n  allIDs: [],\n  status: RemoteDataState.NotStarted,\n  org: null,\n})\n\nexport const orgsReducer = (\n  state: OrgsState = initialState(),\n  action: Action\n) =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_ORGS: {\n        setResource<Organization>(draftState, action, Orgs)\n\n        return\n      }\n      case ADD_ORG: {\n        addResource<Organization>(draftState, action, Orgs)\n\n        return\n      }\n\n      case REMOVE_ORG: {\n        removeResource<Organization>(draftState, action)\n\n        return\n      }\n\n      case EDIT_ORG: {\n        editResource<Organization>(draftState, action, Orgs)\n\n        // NOTE: this is a normalization issue because the current org\n        // is being updated, but the selected org object isn't being\n        // updated. Since we have only one org at a time in this app\n        // i've taken some liberties here\n        if (action.schema.result === draftState.org.id) {\n          draftState.org = action.schema.entities.orgs[action.schema.result]\n        }\n\n        return\n      }\n\n      case SET_ORG: {\n        draftState.org = action.org\n\n        return\n      }\n    }\n  })\n","import {OverlayParams, OverlayID} from 'src/overlays/reducers/overlays'\n\nexport enum ActionTypes {\n  ShowOverlay = 'SHOW_OVERLAY',\n  DismissOverlay = 'DISMISS_OVERLAY',\n}\n\nexport type Actions = ShowOverlay | DismissOverlay\n\nexport interface ShowOverlay {\n  type: ActionTypes.ShowOverlay\n  payload: {\n    overlayID: OverlayID\n    overlayParams: OverlayParams\n    onClose: () => void\n  }\n}\n\nexport const showOverlay = (\n  overlayID: OverlayID,\n  overlayParams: OverlayParams,\n  onClose: () => void\n): ShowOverlay => {\n  return {\n    type: ActionTypes.ShowOverlay,\n    payload: {overlayID, overlayParams, onClose},\n  }\n}\n\nexport interface DismissOverlay {\n  type: ActionTypes.DismissOverlay\n}\n\nexport const dismissOverlay = (): DismissOverlay => {\n  return {\n    type: ActionTypes.DismissOverlay,\n  }\n}\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {ActionTypes, Actions} from 'src/overlays/actions/overlays'\n\nexport type OverlayID =\n  | 'add-note'\n  | 'edit-note'\n  | 'add-master-token'\n  | 'add-token'\n  | 'telegraf-config'\n  | 'telegraf-output'\n\nexport interface OverlayParams {\n  [key: string]: string\n}\n\nexport interface OverlayState {\n  id: OverlayID | null\n  params: OverlayParams\n  onClose: () => void\n}\n\nconst nullParams = {}\n\nconst defaultState: OverlayState = {\n  id: null,\n  params: nullParams,\n  onClose: () => {},\n}\n\nexport const overlaysReducer = (\n  state = defaultState,\n  action: Actions\n): OverlayState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case ActionTypes.ShowOverlay: {\n        const {overlayID, overlayParams, onClose} = action.payload\n        draftState.id = overlayID\n        draftState.params = overlayParams\n        draftState.onClose = onClose\n        return\n      }\n      case ActionTypes.DismissOverlay: {\n        draftState.id = null\n        draftState.params = nullParams\n        draftState.onClose = () => {}\n        return\n      }\n    }\n  })\n\nexport default overlaysReducer\n","// Constants\nimport {StepStatus} from 'src/clockface/constants/wizard'\n\n// Types\nimport {Action} from 'src/onboarding/actions'\nimport {ISetupParams} from '@influxdata/influx'\n\nexport interface OnboardingState {\n  stepStatuses: StepStatus[]\n  setupParams: ISetupParams\n  orgID: string\n  bucketID: string\n}\n\nconst INITIAL_STATE: OnboardingState = {\n  stepStatuses: new Array(3).fill(StepStatus.Incomplete),\n  setupParams: null,\n  orgID: '',\n  bucketID: '',\n}\n\nexport default (state = INITIAL_STATE, action: Action): OnboardingState => {\n  switch (action.type) {\n    case 'SET_SETUP_PARAMS':\n      return {...state, setupParams: action.payload.setupParams}\n    case 'SET_STEP_STATUS':\n      const stepStatuses = [...state.stepStatuses]\n      stepStatuses[action.payload.index] = action.payload.status\n      return {...state, stepStatuses}\n    case 'SET_ORG_ID':\n      return {...state, orgID: action.payload.orgID}\n    case 'SET_ONBOARDING_BUCKET_ID':\n      return {...state, bucketID: action.payload.bucketID}\n    default:\n      return state\n  }\n}\n","import {Action} from 'src/dashboards/actions/notes'\nimport {NoteEditorMode} from 'src/types/dashboards'\n\nexport interface NoteEditorState {\n  mode: NoteEditorMode\n  note: string\n  showNoteWhenEmpty: boolean\n  isPreviewing: boolean\n}\n\nconst initialState = (): NoteEditorState => ({\n  mode: NoteEditorMode.Adding,\n  note: '',\n  showNoteWhenEmpty: false,\n  isPreviewing: false,\n})\n\nconst noteEditorReducer = (\n  state: NoteEditorState = initialState(),\n  action: Action\n) => {\n  switch (action.type) {\n    case 'RESET_NOTE_STATE': {\n      return initialState()\n    }\n    case 'SET_NOTE_STATE': {\n      const initialState = action.payload\n\n      return {\n        ...state,\n        ...initialState,\n        isPreviewing: false,\n      }\n    }\n\n    case 'CLOSE_NOTE_EDITOR': {\n      return {...state, overlayVisible: false}\n    }\n\n    case 'SET_IS_PREVIEWING': {\n      const {isPreviewing} = action.payload\n\n      return {...state, isPreviewing}\n    }\n\n    case 'TOGGLE_SHOW_NOTE_WHEN_EMPTY': {\n      const {showNoteWhenEmpty} = state\n\n      return {...state, showNoteWhenEmpty: !showNoteWhenEmpty}\n    }\n\n    case 'SET_NOTE': {\n      const {note} = action.payload\n\n      return {...state, note}\n    }\n  }\n\n  return state\n}\n\nexport default noteEditorReducer\n","import _ from 'lodash'\n\nexport function getDeep<T = any>(\n  obj: any,\n  path: string | number,\n  fallback: T\n): T {\n  return _.get<T>(obj, path, fallback)\n}\n","// Libraries\nimport _ from 'lodash'\n\n// Utils\nimport {\n  createNewPlugin,\n  updateConfigFields,\n  isPluginInBundle,\n  isPluginUniqueToBundle,\n  getConfigFields,\n} from 'src/dataLoaders/utils/pluginConfigs'\nimport {getDeep} from 'src/utils/wrappers'\nimport {validateURI} from 'src/shared/utils/validateURI'\n\n// Types\nimport {Action} from 'src/dataLoaders/actions/dataLoaders'\nimport {\n  DataLoaderType,\n  LineProtocolTab,\n  DataLoadersState,\n  ConfigurationState,\n  ConfigFieldType,\n  Plugin,\n} from 'src/types/dataLoaders'\nimport {RemoteDataState} from 'src/types'\nimport {WritePrecision} from '@influxdata/influx'\nimport {QUICKSTART_SCRAPER_TARGET_URL} from 'src/dataLoaders/constants/pluginConfigs'\n\nexport const INITIAL_STATE: DataLoadersState = {\n  telegrafPlugins: [],\n  type: DataLoaderType.Empty,\n  lineProtocolBody: '',\n  activeLPTab: LineProtocolTab.UploadFile,\n  lpStatus: RemoteDataState.NotStarted,\n  lpError: '',\n  precision: WritePrecision.Ns,\n  telegrafConfigID: null,\n  pluginBundles: [],\n  scraperTarget: {\n    bucket: '',\n    url: QUICKSTART_SCRAPER_TARGET_URL,\n    name: 'Name this Scraper Target',\n  },\n  telegrafConfigName: 'Name this Configuration',\n  telegrafConfigDescription: '',\n  token: '',\n}\n\nexport default (state = INITIAL_STATE, action: Action): DataLoadersState => {\n  switch (action.type) {\n    case 'CLEAR_DATA_LOADERS':\n      return {...INITIAL_STATE}\n    case 'SET_DATA_LOADERS_TYPE':\n      return {\n        ...state,\n        type: action.payload.type,\n      }\n    case 'SET_TELEGRAF_CONFIG_ID':\n      return {\n        ...state,\n        telegrafConfigID: action.payload.id,\n      }\n    case 'ADD_PLUGIN_BUNDLE':\n      return {\n        ...state,\n        pluginBundles: [...state.pluginBundles, action.payload.bundle],\n      }\n    case 'REMOVE_PLUGIN_BUNDLE':\n      return {\n        ...state,\n        pluginBundles: state.pluginBundles.filter(\n          b => b !== action.payload.bundle\n        ),\n      }\n    case 'REMOVE_BUNDLE_PLUGINS':\n      return {\n        ...state,\n        telegrafPlugins: state.telegrafPlugins.filter(tp => {\n          if (isPluginInBundle(tp.name, action.payload.bundle)) {\n            return !isPluginUniqueToBundle(\n              tp.name,\n              action.payload.bundle,\n              state.pluginBundles\n            )\n          }\n\n          return true\n        }),\n      }\n    case 'ADD_TELEGRAF_PLUGINS':\n      return {\n        ...state,\n        telegrafPlugins: _.sortBy(\n          _.uniqBy(\n            [...state.telegrafPlugins, ...action.payload.telegrafPlugins],\n            'name'\n          ),\n          ['name']\n        ),\n      }\n    case 'UPDATE_TELEGRAF_PLUGIN':\n      return {\n        ...state,\n        telegrafPlugins: state.telegrafPlugins.map(tp => {\n          if (tp.name === action.payload.plugin.name) {\n            return {\n              ...tp,\n              plugin: action.payload.plugin,\n            }\n          }\n\n          return tp\n        }),\n      }\n    case 'UPDATE_TELEGRAF_PLUGIN_CONFIG':\n      return {\n        ...state,\n        telegrafPlugins: state.telegrafPlugins.map(tp => {\n          if (tp.name === action.payload.name) {\n            const plugin = _.get(tp, 'plugin', createNewPlugin(tp.name))\n\n            return {\n              ...tp,\n              plugin: updateConfigFields(\n                plugin,\n                action.payload.field,\n                action.payload.value\n              ),\n            }\n          }\n          return tp\n        }),\n      }\n    case 'ADD_TELEGRAF_PLUGIN_CONFIG_VALUE':\n      return {\n        ...state,\n        telegrafPlugins: state.telegrafPlugins.map(tp => {\n          if (tp.name === action.payload.pluginName) {\n            const plugin = _.get(tp, 'plugin', createNewPlugin(tp.name))\n\n            const config = _.get(\n              plugin,\n              ['config', action.payload.fieldName],\n              []\n            )\n\n            const updatedConfigFieldValue: string[] = [\n              ...config,\n              action.payload.value,\n            ]\n\n            return {\n              ...tp,\n              plugin: updateConfigFields(\n                plugin,\n                action.payload.fieldName,\n                updatedConfigFieldValue\n              ),\n            }\n          }\n          return tp\n        }),\n      }\n    case 'REMOVE_TELEGRAF_PLUGIN_CONFIG_VALUE':\n      return {\n        ...state,\n        telegrafPlugins: state.telegrafPlugins.map(tp => {\n          if (tp.name === action.payload.pluginName) {\n            const plugin = _.get(tp, 'plugin', createNewPlugin(tp.name))\n\n            const configFieldValues = _.get(\n              plugin,\n              `config.${action.payload.fieldName}`,\n              []\n            )\n            const filteredConfigFieldValue = configFieldValues.filter(\n              v => v !== action.payload.value\n            )\n\n            return {\n              ...tp,\n              plugin: updateConfigFields(\n                plugin,\n                action.payload.fieldName,\n                filteredConfigFieldValue\n              ),\n            }\n          }\n          return tp\n        }),\n      }\n    case 'SET_TELEGRAF_PLUGIN_CONFIG_VALUE':\n      return {\n        ...state,\n        telegrafPlugins: state.telegrafPlugins.map(tp => {\n          if (tp.name === action.payload.pluginName) {\n            const plugin = _.get(tp, 'plugin', createNewPlugin(tp.name))\n            const configValues = _.get(\n              plugin,\n              `config.${action.payload.field}`,\n              []\n            )\n            configValues[action.payload.valueIndex] = action.payload.value\n            return {\n              ...tp,\n              plugin: updateConfigFields(plugin, action.payload.field, [\n                ...configValues,\n              ]),\n            }\n          }\n          return tp\n        }),\n      }\n    case 'SET_ACTIVE_TELEGRAF_PLUGIN':\n      return {\n        ...state,\n        telegrafPlugins: state.telegrafPlugins.map(tp => {\n          if (tp.name === action.payload.telegrafPlugin) {\n            return {...tp, active: true}\n          }\n          return {...tp, active: false}\n        }),\n      }\n    case 'SET_PLUGIN_CONFIGURATION_STATE':\n      return {\n        ...state,\n        telegrafPlugins: state.telegrafPlugins.map(tp => {\n          const name = _.get(tp, 'name')\n          if (name === action.payload.telegrafPlugin) {\n            const configFields = getConfigFields(name)\n            if (!configFields) {\n              return {...tp, configured: ConfigurationState.Configured}\n            }\n\n            const plugin = getDeep<Plugin>(tp, 'plugin', createNewPlugin(name))\n            const config = _.get(plugin, 'config', {})\n\n            let isValidConfig = true\n\n            Object.entries(configFields).forEach(\n              ([fieldName, {type: fieldType, isRequired}]) => {\n                if (isRequired) {\n                  const fieldValue = config[fieldName]\n\n                  switch (fieldType) {\n                    case ConfigFieldType.Uri:\n                      isValidConfig = validateURI(fieldValue as string)\n                      break\n                    case ConfigFieldType.String:\n                      isValidConfig = (fieldValue as string) !== ''\n                      break\n                    case ConfigFieldType.StringArray:\n                      isValidConfig = !!(fieldValue as string[]).length\n                      break\n                    case ConfigFieldType.UriArray:\n                      isValidConfig =\n                        !!(fieldValue as string[]).length &&\n                        !fieldValue.find(uri => !validateURI(uri))\n                      break\n                  }\n                }\n              }\n            )\n\n            if (!isValidConfig || _.isEmpty(config)) {\n              return {\n                ...tp,\n                configured: ConfigurationState.InvalidConfiguration,\n              }\n            } else {\n              return {...tp, configured: ConfigurationState.Configured}\n            }\n          }\n\n          return {...tp}\n        }),\n      }\n    case 'SET_TELEGRAF_CONFIG_NAME':\n      return {\n        ...state,\n        telegrafConfigName: action.payload.name,\n      }\n    case 'SET_TELEGRAF_CONFIG_DESCRIPTION':\n      return {\n        ...state,\n        telegrafConfigDescription: action.payload.description,\n      }\n    case 'SET_SCRAPER_TARGET_NAME':\n      const {name} = action.payload\n      return {\n        ...state,\n        scraperTarget: {...state.scraperTarget, name},\n      }\n    case 'SET_SCRAPER_TARGET_BUCKET':\n      const {bucket} = action.payload\n      return {\n        ...state,\n        scraperTarget: {...state.scraperTarget, bucket},\n      }\n    case 'SET_SCRAPER_TARGET_URL':\n      const {url} = action.payload\n      return {\n        ...state,\n        scraperTarget: {\n          ...state.scraperTarget,\n          url,\n        },\n      }\n    case 'SET_SCRAPER_TARGET_ID':\n      const {id} = action.payload\n      return {\n        ...state,\n        scraperTarget: {\n          ...state.scraperTarget,\n          id,\n        },\n      }\n    case 'SET_LINE_PROTOCOL_BODY':\n      return {\n        ...state,\n        lineProtocolBody: action.payload.lineProtocolBody,\n      }\n    case 'SET_ACTIVE_LP_TAB':\n      return {\n        ...state,\n        activeLPTab: action.payload.activeLPTab,\n      }\n    case 'SET_LP_STATUS':\n      const {lpStatus, lpError} = action.payload\n      if (lpStatus === RemoteDataState.Error) {\n        return {\n          ...state,\n          lpStatus,\n          lpError,\n        }\n      }\n      return {\n        ...state,\n        lpStatus,\n        lpError: '',\n      }\n    case 'SET_PRECISION':\n      return {\n        ...state,\n        precision: action.payload.precision,\n      }\n    case 'SET_TOKEN':\n      return {\n        ...state,\n        token: action.payload.token,\n      }\n    default:\n      return state\n  }\n}\n","// Types\nimport {Action} from 'src/dataLoaders/actions/steps'\nimport {Substep} from 'src/types/dataLoaders'\n\nexport interface DataLoadersStepsState {\n  currentStep: number\n  substep?: Substep\n  orgID: string\n  bucketID: string\n  org: string\n  bucket: string\n}\n\nconst INITIAL_STATE: DataLoadersStepsState = {\n  org: '',\n  bucket: '',\n  orgID: '',\n  bucketID: '',\n  currentStep: 0,\n}\n\nexport default (\n  state = INITIAL_STATE,\n  action: Action\n): DataLoadersStepsState => {\n  switch (action.type) {\n    case 'CLEAR_STEPS':\n      return {...INITIAL_STATE}\n    case 'INCREMENT_CURRENT_STEP_INDEX':\n      return {...state, currentStep: state.currentStep + 1}\n    case 'DECREMENT_CURRENT_STEP_INDEX':\n      return {...state, currentStep: state.currentStep - 1}\n    case 'SET_CURRENT_STEP_INDEX':\n      return {...state, currentStep: action.payload.index}\n    case 'SET_SUBSTEP_INDEX':\n      return {\n        ...state,\n        currentStep: action.payload.stepIndex,\n        substep: action.payload.substep,\n      }\n    case 'SET_BUCKET_INFO':\n      return {...state, ...action.payload}\n    case 'SET_BUCKET_ID':\n      return {...state, bucketID: action.payload.bucketID}\n    default:\n      return state\n  }\n}\n","// Libraries\nimport {combineReducers} from 'redux'\n\n// Reducers\nimport dataLoadersReducer from 'src/dataLoaders/reducers/dataLoaders'\nimport {DataLoadersState} from 'src/types/dataLoaders'\nimport stepsReducer, {\n  DataLoadersStepsState,\n} from 'src/dataLoaders/reducers/steps'\n\nexport interface DataLoadingState {\n  steps: DataLoadersStepsState\n  dataLoaders: DataLoadersState\n}\n\nexport default combineReducers<DataLoadingState>({\n  steps: stepsReducer,\n  dataLoaders: dataLoadersReducer,\n})\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {VariableEditorState} from 'src/types'\nimport {\n  EditorAction,\n  CLEAR_VARIABLE_EDITOR,\n  CHANGE_VARIABLE_EDITOR_TYPE,\n  UPDATE_VARIABLE_EDITOR_NAME,\n  UPDATE_VARIABLE_EDITOR_QUERY,\n  UPDATE_VARIABLE_EDITOR_MAP,\n  UPDATE_VARIABLE_EDITOR_CONSTANT,\n} from 'src/variables/actions/creators'\n\nexport const initialEditorState = (): VariableEditorState => ({\n  name: '',\n  selected: 'query',\n  argsQuery: null,\n  argsMap: null,\n  argsConstant: null,\n})\n\nexport const variableEditorReducer = (\n  state: VariableEditorState = initialEditorState(),\n  action: EditorAction\n): VariableEditorState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case CLEAR_VARIABLE_EDITOR: {\n        return initialEditorState()\n      }\n      case CHANGE_VARIABLE_EDITOR_TYPE: {\n        draftState.selected = action.editorType\n        return\n      }\n      case UPDATE_VARIABLE_EDITOR_NAME: {\n        draftState.name = action.name\n        return\n      }\n      case UPDATE_VARIABLE_EDITOR_QUERY: {\n        draftState.argsQuery = action.payload\n        return\n      }\n      case UPDATE_VARIABLE_EDITOR_MAP: {\n        draftState.argsMap = action.payload\n        return\n      }\n      case UPDATE_VARIABLE_EDITOR_CONSTANT: {\n        draftState.argsConstant = action.payload\n        return\n      }\n      default:\n        return\n    }\n  })\n","// Libraries\nimport {produce} from 'immer'\nimport {get} from 'lodash'\n\n// Types\nimport {\n  Variable,\n  RemoteDataState,\n  VariablesState,\n  ResourceType,\n} from 'src/types'\nimport {\n  Action,\n  SET_VARIABLES,\n  SET_VARIABLE,\n  REMOVE_VARIABLE,\n  MOVE_VARIABLE,\n  SET_VARIABLE_VALUES,\n  SELECT_VARIABLE_VALUE,\n} from 'src/variables/actions/creators'\n\n// Utils\nimport {setResource, removeResource} from 'src/resources/reducers/helpers'\n\nexport const initialState = (): VariablesState => ({\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n  values: {},\n})\n\nexport const variablesReducer = (\n  state: VariablesState = initialState(),\n  action: Action\n): VariablesState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_VARIABLES: {\n        setResource<Variable>(draftState, action, ResourceType.Variables)\n\n        return\n      }\n\n      case SET_VARIABLE: {\n        const {id, status, schema} = action\n\n        const variable = get(schema, ['entities', 'variables', id])\n        const variableExists = !!draftState.byID[id]\n\n        if (variable || !variableExists) {\n          draftState.byID[id] = {...variable, status}\n          draftState.allIDs.push(id)\n        } else {\n          draftState.byID[id].status = status\n        }\n\n        return\n      }\n\n      case REMOVE_VARIABLE: {\n        removeResource<Variable>(draftState, action)\n\n        return\n      }\n\n      case SET_VARIABLE_VALUES: {\n        const {contextID, status, values} = action\n        const prevOrder = get(draftState, `values.${contextID}.order`, [])\n\n        if (values) {\n          const order = Object.keys(values).sort(\n            (a, b) => prevOrder.indexOf(a) - prevOrder.indexOf(b)\n          )\n\n          draftState.values[contextID] = {\n            status,\n            values,\n            order,\n          }\n        } else if (draftState.values[contextID]) {\n          draftState.values[contextID].status = status\n        } else {\n          draftState.values[contextID] = {status, values: null, order: []}\n        }\n\n        return\n      }\n\n      case SELECT_VARIABLE_VALUE: {\n        const {contextID, variableID, selectedValue} = action\n\n        const valuesExist = !!get(\n          draftState,\n          `values.${contextID}.values.${variableID}`\n        )\n\n        if (!valuesExist) {\n          return\n        }\n\n        draftState.values[contextID].values[\n          variableID\n        ].selectedValue = selectedValue\n\n        return\n      }\n\n      case MOVE_VARIABLE: {\n        const {originalIndex, newIndex, contextID} = action\n\n        const variableIDToMove = get(\n          draftState,\n          `values.${contextID}.order[${originalIndex}]`\n        )\n\n        const variableIDToSwap = get(\n          draftState,\n          `values.${contextID}.order[${newIndex}]`\n        )\n\n        draftState.values[contextID].order[originalIndex] = variableIDToSwap\n        draftState.values[contextID].order[newIndex] = variableIDToMove\n\n        return\n      }\n    }\n  })\n\nexport {variableEditorReducer} from 'src/variables/reducers/editor'\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {RemoteDataState, ResourceState, Label, ResourceType} from 'src/types'\nimport {\n  Action,\n  SET_LABELS,\n  SET_LABEL,\n  REMOVE_LABEL,\n} from 'src/labels/actions/creators'\n\n// Utils\nimport {\n  setResource,\n  setResourceAtID,\n  removeResource,\n} from 'src/resources/reducers/helpers'\n\ntype LabelsState = ResourceState['labels']\n\nexport const initialState = (): LabelsState => ({\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n})\n\nexport const labelsReducer = (\n  state: LabelsState = initialState(),\n  action: Action\n): LabelsState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_LABELS: {\n        setResource<Label>(draftState, action, ResourceType.Labels)\n\n        return\n      }\n\n      case SET_LABEL: {\n        setResourceAtID<Label>(draftState, action, ResourceType.Labels)\n\n        return\n      }\n\n      case REMOVE_LABEL: {\n        removeResource<Label>(draftState, action)\n\n        return\n      }\n    }\n  })\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {Bucket, RemoteDataState, ResourceState, ResourceType} from 'src/types'\nimport {\n  ADD_BUCKET,\n  SET_BUCKETS,\n  Action,\n  EDIT_BUCKET,\n  REMOVE_BUCKET,\n} from 'src/buckets/actions/creators'\n\n// Utils\nimport {\n  setResource,\n  addResource,\n  removeResource,\n  editResource,\n} from 'src/resources/reducers/helpers'\n\nconst {Buckets} = ResourceType\ntype BucketsState = ResourceState['buckets']\n\nconst initialState = (): BucketsState => ({\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n})\n\nexport const bucketsReducer = (\n  state: BucketsState = initialState(),\n  action: Action\n): BucketsState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_BUCKETS: {\n        setResource<Bucket>(draftState, action, Buckets)\n\n        return\n      }\n\n      case ADD_BUCKET: {\n        addResource<Bucket>(draftState, action, Buckets)\n\n        return\n      }\n\n      case EDIT_BUCKET: {\n        editResource<Bucket>(draftState, action, Buckets)\n\n        return\n      }\n\n      case REMOVE_BUCKET: {\n        removeResource<Bucket>(draftState, action)\n\n        return\n      }\n    }\n  })\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {RemoteDataState, Telegraf, ResourceState, ResourceType} from 'src/types'\nimport {\n  Action,\n  SET_TELEGRAFS,\n  ADD_TELEGRAF,\n  EDIT_TELEGRAF,\n  REMOVE_TELEGRAF,\n  SET_CURRENT_CONFIG,\n} from 'src/telegrafs/actions/creators'\n\n// Utils\nimport {\n  editResource,\n  removeResource,\n  setResource,\n  addResource,\n} from 'src/resources/reducers/helpers'\n\nconst {Telegrafs} = ResourceType\n\nconst initialState = (): TelegrafsState => ({\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n  currentConfig: {status: RemoteDataState.NotStarted, item: ''},\n})\n\ntype TelegrafsState = ResourceState['telegrafs']\n\nexport const telegrafsReducer = (\n  state: TelegrafsState = initialState(),\n  action: Action\n): TelegrafsState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_TELEGRAFS: {\n        setResource<Telegraf>(draftState, action, Telegrafs)\n\n        return\n      }\n\n      case ADD_TELEGRAF: {\n        addResource<Telegraf>(draftState, action, Telegrafs)\n\n        return\n      }\n\n      case EDIT_TELEGRAF: {\n        editResource<Telegraf>(draftState, action, Telegrafs)\n\n        return\n      }\n\n      case REMOVE_TELEGRAF: {\n        removeResource<Telegraf>(draftState, action)\n\n        return\n      }\n\n      case SET_CURRENT_CONFIG: {\n        const {status, item} = action\n        draftState.currentConfig.status = status\n\n        if (item) {\n          draftState.currentConfig.item = item\n        } else {\n          draftState.currentConfig.item = ''\n        }\n\n        return\n      }\n    }\n  })\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {\n  RemoteDataState,\n  ResourceState,\n  ResourceType,\n  Authorization,\n} from 'src/types'\nimport {\n  Action,\n  SET_AUTH,\n  ADD_AUTH,\n  EDIT_AUTH,\n  REMOVE_AUTH,\n} from 'src/authorizations/actions/creators'\n\n// Utils\nimport {\n  setResource,\n  addResource,\n  removeResource,\n  editResource,\n} from 'src/resources/reducers/helpers'\n\ntype AuthsState = ResourceState['tokens']\nconst {Authorizations} = ResourceType\n\nconst initialState = (): AuthsState => ({\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n})\n\nexport const authsReducer = (\n  state: AuthsState = initialState(),\n  action: Action\n): AuthsState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_AUTH: {\n        setResource<Authorization>(draftState, action, Authorizations)\n\n        return\n      }\n\n      case ADD_AUTH: {\n        addResource<Authorization>(draftState, action, Authorizations)\n\n        return\n      }\n\n      case REMOVE_AUTH: {\n        removeResource<Authorization>(draftState, action)\n\n        return\n      }\n\n      case EDIT_AUTH: {\n        editResource<Authorization>(draftState, action, Authorizations)\n\n        return\n      }\n    }\n  })\n","import {produce} from 'immer'\nimport {\n  Action,\n  ADD_TEMPLATE_SUMMARY,\n  POPULATE_TEMPLATE_SUMMARIES,\n  REMOVE_TEMPLATE_SUMMARY,\n  SET_EXPORT_TEMPLATE,\n  SET_TEMPLATE_SUMMARY,\n  SET_TEMPLATES_STATUS,\n} from 'src/templates/actions/creators'\nimport {\n  ResourceType,\n  RemoteDataState,\n  TemplateSummary,\n  TemplatesState,\n} from 'src/types'\nimport {\n  addResource,\n  removeResource,\n  setResource,\n  setResourceAtID,\n} from 'src/resources/reducers/helpers'\n\nexport const defaultState = (): TemplatesState => ({\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n  exportTemplate: {\n    status: RemoteDataState.NotStarted,\n    item: null,\n  },\n})\n\nexport const templatesReducer = (\n  state: TemplatesState = defaultState(),\n  action: Action\n): TemplatesState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case POPULATE_TEMPLATE_SUMMARIES: {\n        setResource<TemplateSummary>(draftState, action, ResourceType.Templates)\n\n        return\n      }\n\n      case SET_TEMPLATES_STATUS: {\n        const {status} = action\n        draftState.status = status\n        return\n      }\n\n      case SET_TEMPLATE_SUMMARY: {\n        setResourceAtID<TemplateSummary>(\n          draftState,\n          action,\n          ResourceType.Templates\n        )\n\n        return\n      }\n\n      case SET_EXPORT_TEMPLATE: {\n        const {status, item} = action\n        draftState.exportTemplate.status = status\n\n        if (item) {\n          draftState.exportTemplate.item = item\n        } else {\n          draftState.exportTemplate.item = null\n        }\n        return\n      }\n\n      case REMOVE_TEMPLATE_SUMMARY: {\n        removeResource<TemplateSummary>(draftState, action)\n\n        return\n      }\n\n      case ADD_TEMPLATE_SUMMARY: {\n        addResource<TemplateSummary>(draftState, action, ResourceType.Templates)\n\n        return\n      }\n    }\n  })\n\nexport default templatesReducer\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {RemoteDataState, ResourceState, Scraper, ResourceType} from 'src/types'\nimport {\n  Action,\n  SET_SCRAPERS,\n  ADD_SCRAPER,\n  EDIT_SCRAPER,\n  REMOVE_SCRAPER,\n} from 'src/scrapers/actions/creators'\n\n// Utils\nimport {\n  setResource,\n  editResource,\n  addResource,\n  removeResource,\n} from 'src/resources/reducers/helpers'\n\ntype ScrapersState = ResourceState['scrapers']\nconst {Scrapers} = ResourceType\n\nconst initialState = (): ScrapersState => ({\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n})\n\nexport const scrapersReducer = (\n  state: ScrapersState = initialState(),\n  action: Action\n): ScrapersState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_SCRAPERS: {\n        setResource<Scraper>(draftState, action, Scrapers)\n\n        return\n      }\n\n      case ADD_SCRAPER: {\n        addResource<Scraper>(draftState, action, Scrapers)\n\n        return\n      }\n\n      case EDIT_SCRAPER: {\n        editResource<Scraper>(draftState, action, Scrapers)\n\n        return\n      }\n\n      case REMOVE_SCRAPER: {\n        removeResource<Scraper>(draftState, action)\n\n        return\n      }\n    }\n  })\n","import {ActionTypes} from 'src/userSettings/actions'\n\nexport interface UserSettingsState {\n  showVariablesControls: boolean\n}\n\nexport const initialState = (): UserSettingsState => ({\n  showVariablesControls: true,\n})\n\nexport const userSettingsReducer = (\n  state = initialState(),\n  action: ActionTypes\n): UserSettingsState => {\n  switch (action.type) {\n    case 'TOGGLE_SHOW_VARIABLES_CONTROLS':\n      return {...state, showVariablesControls: !state.showVariablesControls}\n    default:\n      return state\n  }\n}\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {Member, RemoteDataState, ResourceState, ResourceType} from 'src/types'\nimport {\n  Action,\n  SET_MEMBERS,\n  ADD_MEMBER,\n  REMOVE_MEMBER,\n} from 'src/members/actions/creators'\n\n// Utils\nimport {\n  setResource,\n  addResource,\n  removeResource,\n} from 'src/resources/reducers/helpers'\n\nconst {Members} = ResourceType\nexport type MembersState = ResourceState['members']\n\nconst initialState = (): MembersState => ({\n  byID: {},\n  allIDs: [],\n  status: RemoteDataState.NotStarted,\n})\n\nexport const membersReducer = (\n  state: MembersState = initialState(),\n  action: Action\n): MembersState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_MEMBERS: {\n        setResource<Member>(draftState, action, Members)\n\n        return\n      }\n\n      case ADD_MEMBER: {\n        addResource<Member>(draftState, action, Members)\n\n        return\n      }\n\n      case REMOVE_MEMBER: {\n        removeResource<Member>(draftState, action)\n\n        return\n      }\n    }\n  })\n","// Libraries\nimport {produce} from 'immer'\n\n// Constants\nimport {AUTOREFRESH_DEFAULT} from 'src/shared/constants'\n\n// Types\nimport {Action} from 'src/shared/actions/autoRefresh'\nimport {AutoRefresh} from 'src/types'\n\nexport interface AutoRefreshState {\n  [dashboardID: string]: AutoRefresh\n}\n\nexport const initialState = (): AutoRefreshState => {\n  return {}\n}\n\nexport const autoRefreshReducer = (state = initialState(), action: Action) =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case 'SET_AUTO_REFRESH_INTERVAL': {\n        const {dashboardID, milliseconds} = action.payload\n\n        if (!draftState[dashboardID]) {\n          draftState[dashboardID] = AUTOREFRESH_DEFAULT\n        }\n\n        draftState[dashboardID].interval = milliseconds\n\n        return\n      }\n\n      case 'SET_AUTO_REFRESH_STATUS': {\n        const {dashboardID, status} = action.payload\n\n        if (!draftState[dashboardID]) {\n          draftState[dashboardID] = AUTOREFRESH_DEFAULT\n        }\n\n        draftState[dashboardID].status = status\n\n        return\n      }\n    }\n  })\n","import {produce} from 'immer'\n\n//Types\nimport {Actions, ActionTypes} from 'src/cloud/actions/limits'\nimport {RemoteDataState} from 'src/types'\nimport {LimitStatus} from 'src/cloud/actions/limits'\n\ninterface Limit {\n  maxAllowed: number\n  limitStatus: LimitStatus\n}\n\ninterface LimitWithBlocked extends Limit {\n  blocked: string[]\n}\n\nexport interface LimitsState {\n  dashboards: Limit\n  tasks: Limit\n  buckets: Limit & {maxRetentionSeconds: number | null}\n  checks: Limit\n  rules: LimitWithBlocked\n  endpoints: LimitWithBlocked\n  rate: {\n    readKBs: Limit\n    writeKBs: Limit\n    cardinality: Limit\n  }\n  status: RemoteDataState\n}\n\nconst defaultLimit: Limit = {\n  maxAllowed: Infinity,\n  limitStatus: LimitStatus.OK,\n}\n\nconst defaultLimitWithBlocked: LimitWithBlocked = {...defaultLimit, blocked: []}\n\nexport const defaultState: LimitsState = {\n  dashboards: defaultLimit,\n  tasks: defaultLimit,\n  buckets: {...defaultLimit, maxRetentionSeconds: null},\n  checks: defaultLimit,\n  rules: defaultLimitWithBlocked,\n  endpoints: defaultLimitWithBlocked,\n  rate: {\n    readKBs: defaultLimit,\n    writeKBs: defaultLimit,\n    cardinality: defaultLimit,\n  },\n  status: RemoteDataState.NotStarted,\n}\n\nexport const limitsReducer = (\n  state = defaultState,\n  action: Actions\n): LimitsState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case ActionTypes.SetLimitsStatus: {\n        const {status} = action.payload\n        draftState.status = status\n        return\n      }\n\n      case ActionTypes.SetLimits: {\n        const {limits} = action.payload\n\n        const {maxBuckets, maxRetentionDuration} = limits.bucket\n        const {maxDashboards} = limits.dashboard\n        const {maxTasks} = limits.task\n        const {maxChecks} = limits.check\n        const {\n          maxNotifications,\n          blockedNotificationRules,\n        } = limits.notificationRule\n        const {blockedNotificationEndpoints} = limits.notificationEndpoint\n\n        const {readKBs, writeKBs, cardinality} = limits.rate\n\n        draftState.buckets.maxAllowed = maxBuckets\n        draftState.buckets.maxRetentionSeconds = maxRetentionDuration / 1e9\n        draftState.dashboards.maxAllowed = maxDashboards\n        draftState.tasks.maxAllowed = maxTasks\n        draftState.checks.maxAllowed = maxChecks\n        draftState.rules.maxAllowed = maxNotifications\n        draftState.rules.blocked = blockedNotificationRules\n          .split(',')\n          .map(r => r.trim())\n        draftState.endpoints.blocked = blockedNotificationEndpoints\n          .split(',')\n          .map(r => r.trim())\n        draftState.rate.readKBs.maxAllowed = readKBs\n        draftState.rate.writeKBs.maxAllowed = writeKBs\n        draftState.rate.cardinality.maxAllowed = cardinality\n\n        return\n      }\n      case ActionTypes.SetDashboardLimitStatus: {\n        draftState.dashboards.limitStatus = action.payload.limitStatus\n        return\n      }\n      case ActionTypes.SetBucketLimitStatus: {\n        draftState.buckets.limitStatus = action.payload.limitStatus\n        return\n      }\n      case ActionTypes.SetTaskLimitStatus: {\n        draftState.tasks.limitStatus = action.payload.limitStatus\n        return\n      }\n      case ActionTypes.SetChecksLimitStatus: {\n        draftState.checks.limitStatus = action.payload.limitStatus\n        return\n      }\n      case ActionTypes.SetRulesLimitStatus: {\n        draftState.rules.limitStatus = action.payload.limitStatus\n        return\n      }\n      case ActionTypes.SetEndpointsLimitStatus: {\n        draftState.endpoints.limitStatus = action.payload.limitStatus\n        return\n      }\n      case ActionTypes.SetReadRateLimitStatus: {\n        draftState.rate.readKBs.limitStatus = action.payload.limitStatus\n        return\n      }\n      case ActionTypes.SetWriteRateLimitStatus: {\n        draftState.rate.writeKBs.limitStatus = action.payload.limitStatus\n        return\n      }\n      case ActionTypes.SetCardinalityLimitStatus: {\n        draftState.rate.cardinality.limitStatus = action.payload.limitStatus\n        return\n      }\n    }\n  })\n\nexport default limitsReducer\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {Check, RemoteDataState, ResourceState, ResourceType} from 'src/types'\nimport {\n  Action,\n  SET_CHECKS,\n  SET_CHECK,\n  REMOVE_CHECK,\n  REMOVE_LABEL_FROM_CHECK,\n} from 'src/checks/actions/creators'\n\nimport {SET_LABEL_ON_RESOURCE} from 'src/labels/actions/creators'\n\nimport {\n  setResource,\n  setResourceAtID,\n  removeResource,\n  setRelation,\n} from 'src/resources/reducers/helpers'\n\nexport type ChecksState = ResourceState['checks']\n\nexport const defaultChecksState: ChecksState = {\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n}\n\nexport interface ResourceIDs {\n  checkIDs: {[x: string]: boolean}\n  endpointIDs: {[x: string]: boolean}\n  ruleIDs: {[x: string]: boolean}\n}\n\nexport default (\n  state: ChecksState = defaultChecksState,\n  action: Action\n): ChecksState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_CHECKS: {\n        setResource<Check>(draftState, action, ResourceType.Checks)\n\n        return\n      }\n\n      case SET_CHECK: {\n        setResourceAtID<Check>(draftState, action, ResourceType.Checks)\n\n        return\n      }\n\n      case REMOVE_CHECK: {\n        removeResource<Check>(draftState, action)\n\n        return\n      }\n\n      case SET_LABEL_ON_RESOURCE: {\n        const {resourceID, schema} = action\n        const labelID = schema.result\n\n        setRelation<Check>(draftState, ResourceType.Labels, labelID, resourceID)\n\n        return\n      }\n\n      case REMOVE_LABEL_FROM_CHECK: {\n        const {checkID, labelID} = action\n        const labels = draftState.byID[checkID].labels\n        draftState.byID[checkID].labels = labels.filter(id => id !== labelID)\n\n        return\n      }\n    }\n  })\n","// Libraries\nimport {produce} from 'immer'\n\n// Types\nimport {\n  RemoteDataState,\n  RulesState,\n  NotificationRule,\n  ResourceType,\n} from 'src/types'\nimport {\n  Action,\n  SET_RULES,\n  SET_RULE,\n  REMOVE_RULE,\n  SET_CURRENT_RULE,\n  REMOVE_LABEL_FROM_RULE,\n} from 'src/notifications/rules/actions/creators'\nimport {\n  setResource,\n  removeResource,\n  setResourceAtID,\n  setRelation,\n} from 'src/resources/reducers/helpers'\nimport {SET_LABEL_ON_RESOURCE} from 'src/labels/actions/creators'\n\nexport const defaultNotificationRulesState: RulesState = {\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n  current: {status: RemoteDataState.NotStarted, rule: null},\n}\n\nexport default (\n  state: RulesState = defaultNotificationRulesState,\n  action: Action\n): RulesState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_RULES: {\n        setResource<NotificationRule>(\n          draftState,\n          action,\n          ResourceType.NotificationRules\n        )\n\n        return\n      }\n\n      case SET_RULE: {\n        setResourceAtID<NotificationRule>(\n          draftState,\n          action,\n          ResourceType.NotificationRules\n        )\n\n        return\n      }\n\n      case REMOVE_RULE: {\n        removeResource<NotificationRule>(draftState, action)\n\n        return\n      }\n\n      case SET_CURRENT_RULE: {\n        const {schema, status} = action\n        const ruleID = schema.result\n\n        draftState.current.status = status\n        const rule = schema.entities.rules[ruleID]\n\n        if (rule) {\n          draftState.current.rule = rule\n        }\n\n        return\n      }\n\n      case SET_LABEL_ON_RESOURCE: {\n        const {resourceID, schema} = action\n        const labelID = schema.result\n\n        setRelation<NotificationRule>(\n          draftState,\n          ResourceType.Labels,\n          labelID,\n          resourceID\n        )\n\n        return\n      }\n\n      case REMOVE_LABEL_FROM_RULE: {\n        const {ruleID, labelID} = action\n        const labels = draftState.byID[ruleID].labels\n\n        draftState.byID[ruleID].labels = labels.filter(\n          label => label.id !== labelID\n        )\n\n        return\n      }\n    }\n  })\n","// Libraries\nimport produce from 'immer'\n\n// Types\nimport {\n  ResourceState,\n  NotificationEndpoint,\n  RemoteDataState,\n  ResourceType,\n} from 'src/types'\nimport {\n  Action,\n  SET_ENDPOINTS,\n  SET_ENDPOINT,\n  REMOVE_ENDPOINT,\n  REMOVE_LABEL_FROM_ENDPOINT,\n} from 'src/notifications/endpoints/actions/creators'\n\nimport {SET_LABEL_ON_RESOURCE} from 'src/labels/actions/creators'\n\n// Helpers\nimport {\n  setResource,\n  removeResource,\n  setResourceAtID,\n  setRelation,\n} from 'src/resources/reducers/helpers'\n\ntype EndpointsState = ResourceState['endpoints']\n\nconst initialState = {\n  status: RemoteDataState.NotStarted,\n  byID: {},\n  allIDs: [],\n}\n\nexport default (\n  state: EndpointsState = initialState,\n  action: Action\n): EndpointsState =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case SET_ENDPOINTS: {\n        setResource<NotificationEndpoint>(\n          draftState,\n          action,\n          ResourceType.NotificationEndpoints\n        )\n\n        return\n      }\n\n      case SET_ENDPOINT: {\n        setResourceAtID<NotificationEndpoint>(\n          draftState,\n          action,\n          ResourceType.NotificationEndpoints\n        )\n\n        return\n      }\n\n      case REMOVE_ENDPOINT: {\n        removeResource<NotificationEndpoint>(draftState, action)\n\n        return\n      }\n\n      case SET_LABEL_ON_RESOURCE: {\n        const {resourceID, schema} = action\n        const labelID = schema.result\n\n        setRelation<NotificationEndpoint>(\n          draftState,\n          ResourceType.Labels,\n          labelID,\n          resourceID\n        )\n\n        return\n      }\n\n      case REMOVE_LABEL_FROM_ENDPOINT: {\n        const {endpointID, labelID} = action\n\n        const labels = draftState.byID[endpointID].labels\n\n        draftState.byID[endpointID].labels = labels.filter(id => id !== labelID)\n\n        return\n      }\n    }\n  })\n","import {Bucket, RemoteDataState} from 'src/types'\nimport {TelegrafPlugin} from 'src/client'\nimport {\n  PluginResourceAction,\n  ActivePluginAction,\n  EditorAction,\n} from 'src/dataLoaders/actions/telegrafEditor'\n\nexport type TelegrafEditorPluginType =\n  | 'system'\n  | 'input'\n  | 'output'\n  | 'processor'\n  | 'aggregator'\n  | 'display'\ntype TelegrafEditorPluginName = string\n\nexport type TelegrafEditorBasicPlugin = TelegrafPlugin & {\n  type: TelegrafEditorPluginType\n}\nexport interface TelegrafEditorBundlePlugin {\n  name: TelegrafEditorPluginName\n  description: string\n  type: 'bundle'\n  include: Array<TelegrafEditorPluginName>\n}\n\nexport type TelegrafEditorPlugin =\n  | TelegrafEditorBasicPlugin\n  | TelegrafEditorBundlePlugin\nexport type TelegrafEditorPluginState = Array<TelegrafEditorPlugin>\n\nexport interface TelegrafEditorActivePlugin {\n  name: string\n  type: TelegrafEditorPluginType\n  line: number\n}\n\nexport type TelegrafEditorActivePluginState = Array<TelegrafEditorActivePlugin>\n\nexport interface TelegrafEditorState {\n  showLookup: boolean\n  showList: boolean\n  bucket: Bucket | null\n  text: string\n  filter: string\n}\n\nconst INITIAL_PLUGINS: TelegrafEditorPluginState = [\n  {\n    name: 'system',\n    type: 'bundle',\n    description: 'collect all the basic local metrics',\n    include: ['cpu', 'disk', 'diskio', 'memory', 'network'],\n  },\n  {\n    name: 'agent',\n    type: 'system',\n    description: 'configures Telegraf and the defaults used across all plugins',\n    config: `[agent]\n## Default data collection interval for all inputs\ninterval = \"10s\"\n## Rounds collection interval to 'interval'\n## ie, if interval=\"10s\" then always collect on :00, :10, :20, etc.\nround_interval = true\n## Telegraf will send metrics to outputs in batches of at most\n## metric_batch_size metrics.\n## This controls the size of writes that Telegraf sends to output plugins.\nmetric_batch_size = 1000\n## For failed writes, telegraf will cache metric_buffer_limit metrics for each\n## output, and will flush this buffer on a successful write. Oldest metrics\n## are dropped first when this buffer fills.\n## This buffer only fills when writes fail to output plugin(s).\nmetric_buffer_limit = 10000\n## Collection jitter is used to jitter the collection by a random amount.\n## Each plugin will sleep for a random time within jitter before collecting.\n## This can be used to avoid many plugins querying things like sysfs at the\n## same time, which can have a measurable effect on the system.\ncollection_jitter = \"0s\"\n## Default flushing interval for all outputs. Maximum flush_interval will be\n## flush_interval + flush_jitter\nflush_interval = \"10s\"\n## Jitter the flush interval by a random amount. This is primarily to avoid\n## large write spikes for users running a large number of telegraf instances.\n## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s\nflush_jitter = \"0s\"\n## By default or when set to \"0s\", precision will be set to the same\n## timestamp order as the collection interval, with the maximum being 1s.\n##   ie, when interval = \"10s\", precision will be \"1s\"\n##       when interval = \"250ms\", precision will be \"1ms\"\n## Precision will NOT be used for service inputs. It is up to each individual\n## service input to set the timestamp at the appropriate precision.\n## Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\".\nprecision = \"\"\n## Logging configuration:\n## Run telegraf with debug log messages.\ndebug = false\n## Run telegraf in quiet mode (error log messages only).\nquiet = false\n## Specify the log file name. The empty string means to log to stderr.\nlogfile = \"\"\n## Override default hostname, if empty use os.Hostname()\nhostname = \"\"\n## If set to true, do no set the \"host\" tag in the telegraf agent.\n  omit_hostname = false\n`,\n  },\n  {\n    name: '__default__',\n    type: 'bundle',\n    description: 'default data for a blank telegraf',\n    include: ['agent', 'influxdb_v2'],\n  },\n]\n\nconst INITIAL_EDITOR: TelegrafEditorState = {\n  showLookup: true,\n  showList: true,\n  bucket: null,\n  text: '',\n  filter: '',\n}\n\nexport function pluginsReducer(\n  state = INITIAL_PLUGINS,\n  action: PluginResourceAction\n): TelegrafEditorPluginState {\n  switch (action.type) {\n    case 'SET_TELEGRAF_EDITOR_PLUGINS':\n      const plugs = INITIAL_PLUGINS.slice(0)\n      plugs.push(...action.payload.slice(0))\n      return plugs\n    default:\n      return state\n  }\n}\n\nexport interface PluginResourceState {\n  status: RemoteDataState\n}\n\nexport function pluginsResourceReducer(\n  state = {status: RemoteDataState.NotStarted},\n  action: PluginResourceAction\n): PluginResourceState {\n  switch (action.type) {\n    case 'SET_TELEGRAF_EDITOR_PLUGINS_LOADING_STATE':\n      return {...state, status: action.payload}\n    default:\n      return state\n  }\n}\n\nexport function activePluginsReducer(\n  state: TelegrafEditorActivePluginState = [],\n  action: ActivePluginAction\n): TelegrafEditorActivePluginState {\n  switch (action.type) {\n    case 'SET_TELEGRAF_EDITOR_ACTIVE_PLUGINS':\n      return action.payload.slice(0)\n    default:\n      return state\n  }\n}\n\nexport function editorReducer(\n  state = INITIAL_EDITOR,\n  action: EditorAction\n): TelegrafEditorState {\n  switch (action.type) {\n    case 'SET_TELEGRAF_EDITOR_LOOKUP':\n      return {...state, showLookup: action.payload}\n    case 'SET_TELEGRAF_EDITOR_LIST':\n      return {...state, showList: action.payload}\n    case 'SET_TELEGRAF_EDITOR_TEXT':\n      return {...state, text: action.payload}\n    case 'SET_TELEGRAF_EDITOR_ACTIVE_BUCKET':\n      return {...state, bucket: action.payload}\n    case 'SET_TELEGRAF_EDITOR_FILTER':\n      return {...state, filter: action.payload}\n    case 'RESET_TELEGRAF_EDITOR':\n      return {...INITIAL_EDITOR}\n    default:\n      return state\n  }\n}\n","// Actions\nimport {Action} from 'src/shared/actions/predicates'\n\n// Types\nimport {PredicatesState, RemoteDataState} from 'src/types'\n\nexport const initialState: PredicatesState = {\n  bucketName: '',\n  deletionStatus: RemoteDataState.NotStarted,\n  files: [],\n  filters: [],\n  isSerious: false,\n  keys: [],\n  previewStatus: RemoteDataState.NotStarted,\n  timeRange: null,\n  values: [],\n}\n\nexport const predicatesReducer = (\n  state: PredicatesState = initialState,\n  action: Action\n): PredicatesState => {\n  switch (action.type) {\n    case 'RESET_FILTERS':\n      return {...state, filters: []}\n\n    case 'SET_IS_SERIOUS':\n      return {...state, isSerious: action.payload.isSerious}\n\n    case 'SET_BUCKET_NAME':\n      return {...state, bucketName: action.payload.bucketName}\n\n    case 'SET_DELETE_TIME_RANGE':\n      return {...state, timeRange: action.payload.timeRange}\n\n    case 'SET_FILTER':\n      if (action.payload.index >= state.filters.length) {\n        return {...state, filters: [...state.filters, action.payload.filter]}\n      }\n\n      return {\n        ...state,\n        filters: state.filters.map((filter, i) =>\n          i === action.payload.index ? action.payload.filter : filter\n        ),\n      }\n\n    case 'DELETE_FILTER':\n      return {\n        ...state,\n        filters: state.filters.filter((_, i) => i !== action.payload.index),\n      }\n\n    case 'SET_DELETION_STATUS':\n      return {...state, deletionStatus: action.payload.deletionStatus}\n\n    case 'SET_FILES':\n      return {\n        ...state,\n        files: action.payload.files,\n        previewStatus: RemoteDataState.Done,\n      }\n\n    case 'SET_KEYS_BY_BUCKET':\n      return {...state, keys: action.payload.keys}\n\n    case 'SET_PREVIEW_STATUS':\n      return {...state, previewStatus: action.payload.previewStatus}\n\n    case 'SET_VALUES_BY_KEY':\n      return {...state, values: action.payload.values}\n\n    case 'SET_PREDICATE_DEFAULT':\n      return {...initialState}\n\n    default:\n      return state\n  }\n}\n","import {\n  ThresholdCheck,\n  DeadmanCheck,\n  CheckType,\n  CheckBase,\n  RemoteDataState,\n} from 'src/types'\nimport {Action} from 'src/alerting/actions/alertBuilder'\nimport {\n  DEFAULT_CHECK_NAME,\n  DEFAULT_CHECK_EVERY,\n  DEFAULT_CHECK_OFFSET,\n  DEFAULT_DEADMAN_LEVEL,\n  DEFAULT_CHECK_REPORT_ZERO,\n  DEFAULT_STATUS_MESSAGE,\n  DEFAULT_CHECK_TAGS,\n} from 'src/alerting/constants'\n\ntype FromBase = Required<\n  Pick<CheckBase, 'name' | 'id' | 'activeStatus' | 'status'>\n>\n\ntype FromThreshold = Required<\n  Pick<\n    ThresholdCheck,\n    'thresholds' | 'every' | 'offset' | 'tags' | 'statusMessageTemplate'\n  >\n>\n\ntype FromDeadman = Required<\n  Pick<DeadmanCheck, 'timeSince' | 'reportZero' | 'staleTime' | 'level'>\n>\n\nexport interface AlertBuilderState\n  extends FromBase,\n    FromThreshold,\n    FromDeadman {\n  type: CheckType\n}\n\nexport const initialState = (): AlertBuilderState => ({\n  id: null,\n  activeStatus: 'active',\n  status: RemoteDataState.NotStarted,\n  type: 'threshold',\n  name: DEFAULT_CHECK_NAME,\n  every: DEFAULT_CHECK_EVERY,\n  offset: DEFAULT_CHECK_OFFSET,\n  tags: DEFAULT_CHECK_TAGS,\n  statusMessageTemplate: DEFAULT_STATUS_MESSAGE,\n  timeSince: '90s',\n  reportZero: DEFAULT_CHECK_REPORT_ZERO,\n  staleTime: '10m',\n  level: DEFAULT_DEADMAN_LEVEL,\n  thresholds: [],\n})\n\nexport default (\n  state: AlertBuilderState = initialState(),\n  action: Action\n): AlertBuilderState => {\n  switch (action.type) {\n    case 'RESET_ALERT_BUILDER': {\n      return initialState()\n    }\n\n    case 'INIT_ALERT_BUILDER': {\n      return {\n        ...initialState(),\n        type: action.payload.type,\n        status: RemoteDataState.Done,\n      }\n    }\n\n    case 'CONVERT_CHECK_TO_CUSTOM': {\n      return {...state, type: 'custom'}\n    }\n\n    case 'SET_ALERT_BUILDER_CHECK': {\n      const {id, type, name, query} = action.payload.check\n\n      const newState = {\n        ...initialState(),\n        status: RemoteDataState.Done,\n        id,\n        name,\n        query,\n        type,\n      }\n\n      if (action.payload.check.type === 'custom') {\n        return newState\n      }\n\n      if (action.payload.check.type === 'threshold') {\n        const {\n          every,\n          offset,\n          statusMessageTemplate,\n          tags,\n          thresholds,\n        } = action.payload.check\n\n        return {\n          ...newState,\n          every,\n          offset,\n          statusMessageTemplate,\n          tags,\n          thresholds,\n        }\n      }\n      if (action.payload.check.type === 'deadman') {\n        const {\n          every,\n          level,\n          offset,\n          reportZero,\n          staleTime,\n          statusMessageTemplate,\n          tags,\n          timeSince,\n        } = action.payload.check\n\n        return {\n          ...newState,\n          every,\n          level,\n          offset,\n          reportZero,\n          staleTime,\n          statusMessageTemplate,\n          tags,\n          timeSince,\n        }\n      }\n      throw new Error(\n        'Incorrect check type provided to SET_ALERT_BUILDER_CHECK'\n      )\n    }\n\n    case 'SET_ALERT_BUILDER_STATUS': {\n      return {...state, status: action.payload.status}\n    }\n\n    case 'SET_ALERT_BUILDER_EVERY': {\n      return {...state, every: action.payload.every}\n    }\n\n    case 'SET_ALERT_BUILDER_OFFSET': {\n      return {...state, offset: action.payload.offset}\n    }\n\n    case 'SET_ALERT_BUILDER_STALETIME': {\n      return {...state, staleTime: action.payload.staleTime}\n    }\n\n    case 'SET_ALERT_BUILDER_TIMESINCE': {\n      return {...state, timeSince: action.payload.timeSince}\n    }\n\n    case 'SET_ALERT_BUILDER_LEVEL': {\n      return {...state, level: action.payload.level}\n    }\n\n    case 'SET_ALERT_BUILDER_MESSAGE_TEMPLATE': {\n      return {\n        ...state,\n        statusMessageTemplate: action.payload.statusMessageTemplate,\n      }\n    }\n\n    case 'EDIT_ALERT_BUILDER_TAGSET': {\n      const newTags = [...state.tags]\n      newTags[action.payload.index] = action.payload.tagSet\n      return {\n        ...state,\n        tags: newTags,\n      }\n    }\n\n    case 'REMOVE_ALERT_BUILDER_TAGSET': {\n      return {\n        ...state,\n        tags: state.tags.filter((_, i) => i !== action.payload.index),\n      }\n    }\n\n    case 'UPDATE_ALERT_BUILDER_THRESHOLD': {\n      const thresholds = state.thresholds\n      const filteredThresholds = thresholds.filter(\n        t => t.level !== action.payload.threshold.level\n      )\n      return {\n        ...state,\n        thresholds: [...filteredThresholds, action.payload.threshold],\n      }\n    }\n\n    case 'UPDATE_ALERT_BUILDER_THRESHOLDS': {\n      return {\n        ...state,\n        thresholds: action.payload.thresholds,\n      }\n    }\n\n    case 'REMOVE_ALERT_BUILDER_THRESHOLD': {\n      const thresholds = state.thresholds\n      return {\n        ...state,\n        thresholds: thresholds.filter(t => t.level !== action.payload.level),\n      }\n    }\n\n    case 'UPDATE_ALERT_BUILDER_NAME': {\n      return {\n        ...state,\n        name: action.payload.name,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import {createStore, applyMiddleware, compose} from 'redux'\nimport {History} from 'history'\nimport {combineReducers, Store} from 'redux'\nimport {routerReducer, routerMiddleware} from 'react-router-redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport {resizeLayout} from 'src/shared/middleware/resizeLayout'\nimport {queryStringConfig} from 'src/shared/middleware/queryStringConfig'\nimport sharedReducers from 'src/shared/reducers'\nimport persistStateEnhancer from './persistStateEnhancer'\n\n// v2 reducers\nimport meReducer from 'src/shared/reducers/me'\nimport currentDashboardReducer from 'src/shared/reducers/currentDashboard'\nimport tasksReducer from 'src/tasks/reducers'\nimport rangesReducer from 'src/dashboards/reducers/ranges'\nimport {dashboardsReducer} from 'src/dashboards/reducers/dashboards'\nimport {cellsReducer} from 'src/cells/reducers'\nimport viewsReducer from 'src/views/reducers'\nimport {timeMachinesReducer} from 'src/timeMachine/reducers'\nimport {orgsReducer} from 'src/organizations/reducers'\nimport overlaysReducer from 'src/overlays/reducers/overlays'\nimport onboardingReducer from 'src/onboarding/reducers'\nimport noteEditorReducer from 'src/dashboards/reducers/notes'\nimport dataLoadingReducer from 'src/dataLoaders/reducers'\nimport {variablesReducer, variableEditorReducer} from 'src/variables/reducers'\nimport {labelsReducer} from 'src/labels/reducers'\nimport {bucketsReducer} from 'src/buckets/reducers'\nimport {telegrafsReducer} from 'src/telegrafs/reducers'\nimport {authsReducer} from 'src/authorizations/reducers'\nimport templatesReducer from 'src/templates/reducers'\nimport {scrapersReducer} from 'src/scrapers/reducers'\nimport {userSettingsReducer} from 'src/userSettings/reducers'\nimport {membersReducer} from 'src/members/reducers'\nimport {autoRefreshReducer} from 'src/shared/reducers/autoRefresh'\nimport {limitsReducer, LimitsState} from 'src/cloud/reducers/limits'\nimport checksReducer from 'src/checks/reducers'\nimport rulesReducer from 'src/notifications/rules/reducers'\nimport endpointsReducer from 'src/notifications/endpoints/reducers'\nimport {\n  pluginsReducer,\n  activePluginsReducer,\n  editorReducer,\n  pluginsResourceReducer,\n} from 'src/dataLoaders/reducers/telegrafEditor'\nimport {predicatesReducer} from 'src/shared/reducers/predicates'\nimport alertBuilderReducer from 'src/alerting/reducers/alertBuilder'\n\n// Types\nimport {AppState, LocalStorage} from 'src/types'\n\ntype ReducerState = Pick<AppState, Exclude<keyof AppState, 'timeRange'>>\n\nexport const rootReducer = combineReducers<ReducerState>({\n  ...sharedReducers,\n  autoRefresh: autoRefreshReducer,\n  alertBuilder: alertBuilderReducer,\n  cloud: combineReducers<{limits: LimitsState}>({limits: limitsReducer}),\n  currentDashboard: currentDashboardReducer,\n  dataLoading: dataLoadingReducer,\n  me: meReducer,\n  noteEditor: noteEditorReducer,\n  onboarding: onboardingReducer,\n  overlays: overlaysReducer,\n  plugins: pluginsResourceReducer,\n  predicates: predicatesReducer,\n  ranges: rangesReducer,\n  resources: combineReducers({\n    buckets: bucketsReducer,\n    cells: cellsReducer,\n    checks: checksReducer,\n    dashboards: dashboardsReducer,\n    endpoints: endpointsReducer,\n    labels: labelsReducer,\n    members: membersReducer,\n    orgs: orgsReducer,\n    rules: rulesReducer,\n    scrapers: scrapersReducer,\n    tasks: tasksReducer,\n    telegrafs: telegrafsReducer,\n    templates: templatesReducer,\n    tokens: authsReducer,\n    variables: variablesReducer,\n    views: viewsReducer,\n  }),\n  routing: routerReducer,\n  telegrafEditor: editorReducer,\n  telegrafEditorActivePlugins: activePluginsReducer,\n  telegrafEditorPlugins: pluginsReducer,\n  timeMachines: timeMachinesReducer,\n  userSettings: userSettingsReducer,\n  variableEditor: variableEditorReducer,\n  VERSION: () => '',\n})\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default function configureStore(\n  initialState: LocalStorage,\n  history: History\n): Store<AppState & LocalStorage> {\n  const routingMiddleware = routerMiddleware(history)\n  const createPersistentStore = composeEnhancers(\n    persistStateEnhancer(),\n    applyMiddleware(\n      thunkMiddleware,\n      routingMiddleware,\n      resizeLayout,\n      queryStringConfig\n    )\n  )(createStore)\n\n  // https://github.com/elgerlambert/redux-localstorage/issues/42\n  // createPersistentStore should ONLY take reducer and initialState\n  // any store enhancers must be added to the compose() function.\n  return createPersistentStore(rootReducer, initialState)\n}\n","// Libraries\nimport {PureComponent} from 'react'\nimport {orderBy} from 'lodash'\n\n// Types\nimport {Sort} from 'src/clockface/types'\n\ninterface Props<T> {\n  list: T[]\n  sortKey?: string\n  direction?: Sort\n  children: (sortedList: T[]) => JSX.Element\n}\n\nexport default class SortingHat<T> extends PureComponent<Props<T>> {\n  public render() {\n    return this.props.children(this.sorted)\n  }\n\n  private get sorted(): T[] {\n    const {list, sortKey, direction} = this.props\n\n    return orderBy(list, [sortKey], [direction])\n  }\n}\n","import {PureComponent} from 'react'\nimport {CLOUD} from 'src/shared/constants'\n\nexport default class extends PureComponent {\n  render() {\n    const {children} = this.props\n\n    if (!CLOUD) {\n      return children\n    }\n\n    return null\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {Link} from 'react-router'\n\n// Components\nimport {NavMenu} from '@influxdata/clockface'\nimport SortingHat from 'src/shared/components/sorting_hat/SortingHat'\nimport CloudExclude from 'src/shared/components/cloud/CloudExclude'\n\n// Types\nimport {Organization} from 'src/types'\n\ninterface Props {\n  orgs: Organization[]\n  isShowingOrganizations: boolean\n  showOrganizationsView: () => void\n  closeOrganizationsView: () => void\n}\n\nclass AccountNavSubItem extends PureComponent<Props> {\n  render() {\n    const {orgs, isShowingOrganizations, showOrganizationsView} = this.props\n\n    if (isShowingOrganizations) {\n      return (\n        <SortingHat list={orgs} sortKey=\"name\">\n          {this.orgs}\n        </SortingHat>\n      )\n    }\n\n    return (\n      <CloudExclude key=\"feature-flag\">\n        {orgs.length > 1 && (\n          <NavMenu.SubItem\n            titleLink={className => (\n              <div onClick={showOrganizationsView} className={className}>\n                Switch Organizations\n              </div>\n            )}\n            active={false}\n            key=\"switch-orgs\"\n          />\n        )}\n        <NavMenu.SubItem\n          titleLink={className => (\n            <Link to=\"/orgs/new\" className={className}>\n              Create Organization\n            </Link>\n          )}\n          active={false}\n        />\n        <NavMenu.SubItem\n          titleLink={className => (\n            <Link to=\"/logout\" className={className}>\n              Logout\n            </Link>\n          )}\n          active={false}\n          key=\"logout\"\n        />\n      </CloudExclude>\n    )\n  }\n\n  private orgs = (orgs: Organization[]): JSX.Element => {\n    const {closeOrganizationsView} = this.props\n\n    return (\n      <>\n        {orgs.reduce(\n          (acc, org) => {\n            acc.push(\n              <NavMenu.SubItem\n                titleLink={className => (\n                  <a\n                    className={className}\n                    href={`/orgs/${org.id}`}\n                    style={{display: 'block'}}\n                  >\n                    {org.name}\n                  </a>\n                )}\n                key={org.id}\n                active={false}\n              />\n            )\n            return acc\n          },\n\n          [\n            <NavMenu.SubItem\n              titleLink={className => (\n                <div className={className} onClick={closeOrganizationsView}>\n                  {'< Back'}\n                </div>\n              )}\n              active={false}\n              key=\"back-button\"\n              className=\"back-button\"\n            />,\n          ]\n        )}\n      </>\n    )\n  }\n}\n\nexport default AccountNavSubItem\n","import {PureComponent} from 'react'\nimport {CLOUD} from 'src/shared/constants'\n\nexport default class extends PureComponent {\n  render() {\n    const {children} = this.props\n\n    if (CLOUD) {\n      return children\n    }\n\n    return null\n  }\n}\n","// Constants\nimport {HOMEPAGE_PATHNAME} from 'src/shared/constants'\n\nexport const getNavItemActivation = (\n  keywords: string[],\n  location: string\n): boolean => {\n  const ignoreOrgAndOrgID = 3\n  const parentPath = location.split('/').slice(ignoreOrgAndOrgID)\n  if (!parentPath.length) {\n    parentPath.push(HOMEPAGE_PATHNAME)\n  }\n  return keywords.some(path => parentPath.includes(path))\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps, Link} from 'react-router'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport {NavMenu, Icon} from '@influxdata/clockface'\nimport AccountNavSubItem from 'src/pageLayout/components/AccountNavSubItem'\nimport CloudExclude from 'src/shared/components/cloud/CloudExclude'\nimport CloudOnly from 'src/shared/components/cloud/CloudOnly'\nimport {FeatureFlag} from 'src/shared/utils/featureFlag'\n\n// Constants\nimport {\n  HOMEPAGE_PATHNAME,\n  CLOUD_URL,\n  CLOUD_USERS_PATH,\n} from 'src/shared/constants'\n\n// Utils\nimport {getNavItemActivation} from 'src/pageLayout/utils'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\nimport {IconFont} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  isHidden: boolean\n  me: AppState['me']\n  orgs: Organization[]\n  orgName: string\n}\n\ninterface State {\n  isShowingOrganizations: boolean\n}\n\ntype Props = StateProps & WithRouterProps\n\n@ErrorHandling\nclass SideNav extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isShowingOrganizations: false,\n    }\n  }\n\n  public render() {\n    const {\n      isHidden,\n      me,\n      params: {orgID},\n      orgs,\n      orgName,\n    } = this.props\n\n    if (isHidden) {\n      return null\n    }\n\n    // Home page\n    const orgPrefix = `/orgs/${orgID}`\n    // Top level nav links\n    const dataExplorerLink = `${orgPrefix}/data-explorer`\n    const dashboardsLink = `${orgPrefix}/dashboards`\n    const tasksLink = `${orgPrefix}/tasks`\n    const alertingLink = `${orgPrefix}/alerting`\n    const alertHistoryLink = `${orgPrefix}/alert-history`\n    // Load data\n    const loadDataLink = `${orgPrefix}/load-data/buckets`\n    const bucketsLink = `${orgPrefix}/load-data/buckets`\n    const telegrafsLink = `${orgPrefix}/load-data/telegrafs`\n    const scrapersLink = `${orgPrefix}/load-data/scrapers`\n    const tokensLink = `${orgPrefix}/load-data/tokens`\n    const clientLibrariesLink = `${orgPrefix}/load-data/client-libraries`\n    // Settings\n    const settingsLink = `${orgPrefix}/settings`\n    const membersLink = `${orgPrefix}/settings/members`\n    const variablesLink = `${orgPrefix}/settings/variables`\n    const templatesLink = `${orgPrefix}/settings/templates`\n    const labelsLink = `${orgPrefix}/settings/labels`\n    const profileLink = `${orgPrefix}/settings/profile`\n    // Feedback\n    const feedbackLink =\n      'https://docs.google.com/forms/d/e/1FAIpQLSdGJpnIZGotN1VFJPkgZEhrt4t4f6QY1lMgMSRUnMeN3FjCKA/viewform?usp=sf_link'\n\n    // Cloud\n    const cloudUsersLink = `${CLOUD_URL}/${CLOUD_USERS_PATH}`\n\n    return (\n      <NavMenu>\n        <div onMouseLeave={this.closeOrganizationsView} className=\"find-me\">\n          <NavMenu.Item\n            titleLink={className => (\n              <Link className={className} to={orgPrefix}>\n                <CloudOnly>Getting Started</CloudOnly>\n                <CloudExclude>{`${me.name} (${orgName})`}</CloudExclude>\n              </Link>\n            )}\n            iconLink={className => (\n              <Link to={orgPrefix} className={className}>\n                <Icon glyph={IconFont.CuboNav} />\n              </Link>\n            )}\n            active={getNavItemActivation(\n              [HOMEPAGE_PATHNAME, 'account'],\n              location.pathname\n            )}\n          >\n            <AccountNavSubItem\n              orgs={orgs}\n              isShowingOrganizations={this.state.isShowingOrganizations}\n              showOrganizationsView={this.showOrganizationsView}\n              closeOrganizationsView={this.closeOrganizationsView}\n            />\n          </NavMenu.Item>\n        </div>\n        <NavMenu.Item\n          titleLink={className => (\n            <Link className={className} to={dataExplorerLink}>\n              Data Explorer\n            </Link>\n          )}\n          iconLink={className => (\n            <Link to={dataExplorerLink} className={className}>\n              <Icon glyph={IconFont.GraphLine} />\n            </Link>\n          )}\n          active={getNavItemActivation(['data-explorer'], location.pathname)}\n        />\n        <NavMenu.Item\n          titleLink={className => (\n            <Link\n              className={className}\n              to={dashboardsLink}\n              data-testid=\"nav-menu_dashboard\"\n            >\n              Dashboards\n            </Link>\n          )}\n          iconLink={className => (\n            <Link to={dashboardsLink} className={className}>\n              <Icon glyph={IconFont.Dashboards} />\n            </Link>\n          )}\n          active={getNavItemActivation(['dashboards'], location.pathname)}\n        />\n        <NavMenu.Item\n          titleLink={className => (\n            <Link className={className} to={tasksLink}>\n              Tasks\n            </Link>\n          )}\n          iconLink={className => (\n            <Link to={tasksLink} className={className}>\n              <Icon glyph={IconFont.Calendar} />\n            </Link>\n          )}\n          active={getNavItemActivation(['tasks'], location.pathname)}\n        />\n        <NavMenu.Item\n          titleLink={className => (\n            <Link className={className} to={alertingLink}>\n              Monitoring & Alerting\n            </Link>\n          )}\n          iconLink={className => (\n            <Link to={alertingLink} className={className}>\n              <Icon glyph={IconFont.Bell} />\n            </Link>\n          )}\n          active={getNavItemActivation(['alerting'], location.pathname)}\n        >\n          <NavMenu.SubItem\n            titleLink={className => (\n              <Link to={alertHistoryLink} className={className}>\n                History\n              </Link>\n            )}\n            active={getNavItemActivation(['alert-history'], location.pathname)}\n            key=\"alert-history\"\n          />\n        </NavMenu.Item>\n        <NavMenu.Item\n          titleLink={className => (\n            <Link className={className} to={loadDataLink}>\n              Load Data\n            </Link>\n          )}\n          iconLink={className => (\n            <Link to={loadDataLink} className={className}>\n              <Icon glyph={IconFont.DisksNav} />\n            </Link>\n          )}\n          active={getNavItemActivation(['load-data'], location.pathname)}\n        >\n          <NavMenu.SubItem\n            titleLink={className => (\n              <Link to={bucketsLink} className={className}>\n                Buckets\n              </Link>\n            )}\n            active={getNavItemActivation(['buckets'], location.pathname)}\n            key=\"buckets\"\n          />\n          <NavMenu.SubItem\n            titleLink={className => (\n              <Link to={telegrafsLink} className={className}>\n                Telegraf\n              </Link>\n            )}\n            active={getNavItemActivation(['telegrafs'], location.pathname)}\n            key=\"telegrafs\"\n          />\n          <CloudExclude>\n            <NavMenu.SubItem\n              titleLink={className => (\n                <Link to={scrapersLink} className={className}>\n                  Scrapers\n                </Link>\n              )}\n              active={getNavItemActivation(['scrapers'], location.pathname)}\n              key=\"scrapers\"\n            />\n          </CloudExclude>\n          <NavMenu.SubItem\n            titleLink={className => (\n              <Link to={tokensLink} className={className}>\n                Tokens\n              </Link>\n            )}\n            active={getNavItemActivation(['tokens'], location.pathname)}\n            key=\"tokens\"\n          />\n          <NavMenu.SubItem\n            titleLink={className => (\n              <Link to={clientLibrariesLink} className={className}>\n                Client Libraries\n              </Link>\n            )}\n            active={getNavItemActivation(\n              ['client-libraries'],\n              location.pathname\n            )}\n            key=\"client-libraries\"\n          />\n        </NavMenu.Item>\n        <FeatureFlag name=\"multiUser\">\n          <CloudOnly>\n            <NavMenu.Item\n              titleLink={className => (\n                <a className={className} href={cloudUsersLink}>\n                  Team Members\n                </a>\n              )}\n              iconLink={className => (\n                <a href={cloudUsersLink} className={className}>\n                  <Icon glyph={IconFont.UsersTrio} />\n                </a>\n              )}\n              active={getNavItemActivation(['users'], location.pathname)}\n            />\n          </CloudOnly>\n        </FeatureFlag>\n        <NavMenu.Item\n          titleLink={className => (\n            <Link className={className} to={settingsLink}>\n              Settings\n            </Link>\n          )}\n          iconLink={className => (\n            <Link to={settingsLink} className={className}>\n              <Icon glyph={IconFont.WrenchNav} />\n            </Link>\n          )}\n          active={getNavItemActivation(['settings'], location.pathname)}\n        >\n          <CloudExclude>\n            <NavMenu.SubItem\n              titleLink={className => (\n                <Link to={membersLink} className={className}>\n                  Members\n                </Link>\n              )}\n              active={getNavItemActivation(['members'], location.pathname)}\n              key=\"members\"\n            />\n          </CloudExclude>\n          <NavMenu.SubItem\n            titleLink={className => (\n              <Link to={variablesLink} className={className}>\n                Variables\n              </Link>\n            )}\n            active={getNavItemActivation(['variables'], location.pathname)}\n            key=\"variables\"\n          />\n          <NavMenu.SubItem\n            titleLink={className => (\n              <Link to={templatesLink} className={className}>\n                Templates\n              </Link>\n            )}\n            active={getNavItemActivation(['templates'], location.pathname)}\n            key=\"templates\"\n          />\n          <NavMenu.SubItem\n            titleLink={className => (\n              <Link to={labelsLink} className={className}>\n                Labels\n              </Link>\n            )}\n            active={getNavItemActivation(['labels'], location.pathname)}\n            key=\"labels\"\n          />\n          <NavMenu.SubItem\n            titleLink={className => (\n              <Link to={profileLink} className={className}>\n                Profile\n              </Link>\n            )}\n            active={getNavItemActivation(['profile'], location.pathname)}\n            key=\"profile\"\n          />\n        </NavMenu.Item>\n        <NavMenu.Item\n          titleLink={className => (\n            <a className={className} href={feedbackLink} target=\"_blank\">\n              Feedback\n            </a>\n          )}\n          iconLink={className => (\n            <a href={feedbackLink} className={className} target=\"_blank\">\n              <Icon glyph={IconFont.NavChat} />\n            </a>\n          )}\n          active={getNavItemActivation(['feedback'], location.pathname)}\n        />\n      </NavMenu>\n    )\n  }\n\n  private showOrganizationsView = (): void => {\n    this.setState({isShowingOrganizations: true})\n  }\n\n  private closeOrganizationsView = (): void => {\n    this.setState({isShowingOrganizations: false})\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const isHidden = state.app.ephemeral.inPresentationMode\n  const orgs = getAll<Organization>(state, ResourceType.Orgs)\n  const org = getOrg(state)\n  const {me} = state\n\n  return {isHidden, me, orgs, orgName: get(org, 'name', '')}\n}\n\nexport default connect<StateProps>(mstp)(withRouter(SideNav))\n","import Nav from 'src/pageLayout/containers/Nav'\n\nexport default Nav\n","import React from 'react'\n\nexport const TOOLTIP_PORTAL_ID = 'tooltip-portal'\n\nconst TooltipPortal = () => {\n  return <div id={TOOLTIP_PORTAL_ID} />\n}\n\nexport default TooltipPortal\n","import React from 'react'\n\nexport const NOTES_PORTAL_ID = 'notes-portal'\n\nexport default function NotesPortal() {\n  return <div id={NOTES_PORTAL_ID} />\n}\n","import React, {Component, CSSProperties} from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport {Notification as NotificationType} from 'src/types/notifications'\n\nimport classnames from 'classnames'\n\nimport {dismissNotification as dismissNotificationAction} from 'src/shared/actions/notifications'\n\nimport {NOTIFICATION_TRANSITION} from 'src/shared/constants/index'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  notification: NotificationType\n  dismissNotification: (id: string) => void\n}\n\ninterface State {\n  opacity: number\n  height: number\n  dismissed: boolean\n}\n\n@ErrorHandling\nclass Notification extends Component<Props, State> {\n  private notificationRef: HTMLElement\n  private dismissalTimer: number\n  private deletionTimer: number\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      opacity: 1,\n      height: 0,\n      dismissed: false,\n    }\n  }\n\n  public componentDidMount() {\n    const {\n      notification: {duration},\n    } = this.props\n\n    this.updateHeight()\n\n    if (duration >= 0) {\n      // Automatically dismiss notification after duration prop\n      this.dismissalTimer = window.setTimeout(this.handleDismiss, duration)\n    }\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this.dismissalTimer)\n    clearTimeout(this.deletionTimer)\n  }\n\n  public render() {\n    const {\n      notification: {message, icon},\n    } = this.props\n\n    return (\n      <div className={this.containerClassname} style={this.notificationStyle}>\n        <div\n          className={this.notificationClassname}\n          ref={this.handleNotificationRef}\n          data-testid={this.dataTestID}\n        >\n          <span className={`icon ${icon}`} />\n          <div className=\"notification-message\">{message}</div>\n          <button className=\"notification-close\" onClick={this.handleDismiss} />\n        </div>\n      </div>\n    )\n  }\n\n  private get dataTestID(): string {\n    const {style} = this.props.notification\n    return `notification-${style}`\n  }\n\n  private get notificationClassname(): string {\n    const {\n      notification: {style},\n    } = this.props\n\n    return `notification notification-${style}`\n  }\n\n  private get containerClassname(): string {\n    const {height, dismissed} = this.state\n\n    return classnames('notification-container', {\n      show: !!height,\n      'notification-dismissed': dismissed,\n    })\n  }\n\n  private get notificationStyle(): CSSProperties {\n    return {height: '100%'}\n  }\n\n  private updateHeight = (): void => {\n    if (this.notificationRef) {\n      const {height} = this.notificationRef.getBoundingClientRect()\n      this.setState({height})\n    }\n  }\n\n  private handleDismiss = (): void => {\n    const {\n      notification: {id},\n      dismissNotification,\n    } = this.props\n\n    this.setState({dismissed: true})\n    this.deletionTimer = window.setTimeout(\n      () => dismissNotification(id),\n      NOTIFICATION_TRANSITION\n    )\n  }\n\n  private handleNotificationRef = (ref: HTMLElement): void => {\n    this.notificationRef = ref\n    this.updateHeight()\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dismissNotification: bindActionCreators(dismissNotificationAction, dispatch),\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Notification)\n","import React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {Notification as NotificationType} from 'src/types/notifications'\nimport Notification from 'src/shared/components/notifications/Notification'\n\ninterface Props {\n  notifications: NotificationType[]\n  inPresentationMode: boolean\n}\n\nclass Notifications extends PureComponent<Props> {\n  public static defaultProps = {\n    inPresentationMode: false,\n    notifications: [],\n  }\n\n  public render() {\n    const {notifications} = this.props\n\n    return (\n      <div className={this.className}>\n        {notifications.map(n => (\n          <Notification key={n.id} notification={n} />\n        ))}\n      </div>\n    )\n  }\n\n  private get className(): string {\n    const {inPresentationMode} = this.props\n\n    if (inPresentationMode) {\n      return 'notification-center__presentation-mode'\n    }\n\n    return 'notification-center'\n  }\n}\n\nconst mapStateToProps = ({\n  notifications,\n  app: {\n    ephemeral: {inPresentationMode},\n  },\n}): Props => ({\n  notifications,\n  inPresentationMode,\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Notifications)\n","export const humanizeNote = (text: string): string => {\n  return text.replace(/&gt;/g, '>').replace(/&#39;/g, \"'\")\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {Controlled as ReactCodeMirror, IInstance} from 'react-codemirror2'\nimport {ScrollInfo} from 'codemirror'\n\n// Utils\nimport {humanizeNote} from 'src/dashboards/utils/notes'\n\nconst OPTIONS = {\n  mode: 'markdown',\n  theme: 'markdown',\n  tabIndex: 1,\n  readonly: false,\n  lineNumbers: false,\n  autoRefresh: true,\n  completeSingle: false,\n  lineWrapping: true,\n  placeholder: 'You can use Markdown syntax to format your note',\n}\n\nconst noOp = () => {}\n\ninterface Props {\n  note: string\n  onChangeNote: (value: string) => void\n  onScroll: (scrollTop: number) => void\n  scrollTop: number\n}\n\nclass NoteEditorText extends PureComponent<Props, {}> {\n  private editor: IInstance\n\n  public componentDidUpdate() {\n    const currentScrollTop = this.editor.getScrollInfo().top\n    if (this.props.scrollTop !== currentScrollTop) {\n      this.editor.scrollTo(0, this.props.scrollTop)\n    }\n  }\n\n  public render() {\n    const {note} = this.props\n\n    return (\n      <ReactCodeMirror\n        autoCursor={true}\n        value={humanizeNote(note)}\n        options={OPTIONS}\n        onBeforeChange={this.handleChange}\n        onTouchStart={noOp}\n        editorDidMount={this.handleMount}\n        onScroll={this.handleScroll}\n      />\n    )\n  }\n\n  private handleMount = (instance: IInstance) => {\n    instance.focus()\n    this.editor = instance\n  }\n\n  private handleChange = (_, __, note: string) => {\n    const {onChangeNote} = this.props\n\n    onChangeNote(note)\n  }\n\n  private handleScroll = (__: IInstance, scrollInfo: ScrollInfo) => {\n    const {onScroll} = this.props\n\n    onScroll(scrollInfo.top)\n  }\n}\n\nexport default NoteEditorText\n","import React, {SFC, MouseEvent} from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\n\ninterface Props {\n  note: string\n  scrollTop: number\n  onScroll: (e: MouseEvent) => void\n}\n\nconst NoteEditorPreview: SFC<Props> = props => {\n  return (\n    <div className=\"note-editor--preview\">\n      <FancyScrollbar\n        className=\"note-editor--preview-scroll\"\n        scrollTop={props.scrollTop}\n        setScrollTop={props.onScroll}\n      >\n        <div className=\"note-editor--markdown-container\">\n          <ReactMarkdown\n            source={props.note}\n            escapeHtml={true}\n            className=\"markdown-format\"\n          />\n        </div>\n      </FancyScrollbar>\n    </div>\n  )\n}\n\nexport default NoteEditorPreview\n","// Libraries\nimport {get} from 'lodash'\n\n// Actions\nimport {createCellWithView} from 'src/cells/actions/thunks'\nimport {updateView} from 'src/views/actions/thunks'\n\n// Utils\nimport {createView} from 'src/views/helpers'\nimport {getByID} from 'src/resources/selectors'\n\n// Types\nimport {\n  GetState,\n  MarkdownViewProperties,\n  NoteEditorMode,\n  ResourceType,\n  Dashboard,\n  View,\n} from 'src/types'\nimport {NoteEditorState} from 'src/dashboards/reducers/notes'\nimport {Dispatch} from 'react'\n\nexport type Action =\n  | CloseNoteEditorAction\n  | SetIsPreviewingAction\n  | ToggleShowNoteWhenEmptyAction\n  | SetNoteAction\n  | SetNoteStateAction\n  | ResetNoteStateAction\n\ninterface CloseNoteEditorAction {\n  type: 'CLOSE_NOTE_EDITOR'\n}\n\nexport const closeNoteEditor = (): CloseNoteEditorAction => ({\n  type: 'CLOSE_NOTE_EDITOR',\n})\n\ninterface SetIsPreviewingAction {\n  type: 'SET_IS_PREVIEWING'\n  payload: {isPreviewing: boolean}\n}\n\nexport const setIsPreviewing = (\n  isPreviewing: boolean\n): SetIsPreviewingAction => ({\n  type: 'SET_IS_PREVIEWING',\n  payload: {isPreviewing},\n})\n\ninterface ToggleShowNoteWhenEmptyAction {\n  type: 'TOGGLE_SHOW_NOTE_WHEN_EMPTY'\n}\n\nexport const toggleShowNoteWhenEmpty = (): ToggleShowNoteWhenEmptyAction => ({\n  type: 'TOGGLE_SHOW_NOTE_WHEN_EMPTY',\n})\n\ninterface SetNoteAction {\n  type: 'SET_NOTE'\n  payload: {note: string}\n}\n\nexport const setNote = (note: string): SetNoteAction => ({\n  type: 'SET_NOTE',\n  payload: {note},\n})\n\nexport const createNoteCell = (dashboardID: string) => (\n  dispatch: Dispatch<Action | ReturnType<typeof createCellWithView>>,\n  getState: GetState\n) => {\n  const dashboard = getByID<Dashboard>(\n    getState(),\n    ResourceType.Dashboards,\n    dashboardID\n  )\n\n  if (!dashboard) {\n    throw new Error(`could not find dashboard with id \"${dashboardID}\"`)\n  }\n\n  const {note} = getState().noteEditor\n  const view = createView<MarkdownViewProperties>('markdown')\n\n  view.properties.note = note\n\n  return dispatch(createCellWithView(dashboard.id, view))\n}\n\nexport interface ResetNoteStateAction {\n  type: 'RESET_NOTE_STATE'\n}\n\nexport const resetNoteState = (): ResetNoteStateAction => ({\n  type: 'RESET_NOTE_STATE',\n})\n\nexport interface SetNoteStateAction {\n  type: 'SET_NOTE_STATE'\n  payload: Partial<NoteEditorState>\n}\n\nexport const setNoteState = (\n  noteState: Partial<NoteEditorState>\n): SetNoteStateAction => ({\n  type: 'SET_NOTE_STATE',\n  payload: noteState,\n})\n\nexport const loadNote = (id: string) => (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  const state = getState()\n  const currentViewState = getByID<View>(state, ResourceType.Views, id)\n\n  if (!currentViewState) {\n    return\n  }\n\n  const view = currentViewState\n\n  const note: string = get(view, 'properties.note', '')\n  const showNoteWhenEmpty: boolean = get(\n    view,\n    'properties.showNoteWhenEmpty',\n    false\n  )\n\n  const initialState = {\n    viewID: view.id,\n    note,\n    showNoteWhenEmpty,\n    mode: NoteEditorMode.Editing,\n  }\n\n  dispatch(setNoteState(initialState))\n}\n\nexport const updateViewNote = (id: string) => (\n  dispatch: Dispatch<Action | ReturnType<typeof updateView>>,\n  getState: GetState\n) => {\n  const state = getState()\n  const {note, showNoteWhenEmpty} = state.noteEditor\n  const view = getByID<View>(state, ResourceType.Views, id)\n\n  if (view.properties.type === 'check') {\n    throw new Error(\n      `view type \"${view.properties.type}\" does not support notes`\n    )\n  }\n\n  const updatedView = {\n    ...view,\n    properties: {...view.properties, note, showNoteWhenEmpty},\n  }\n\n  return dispatch(updateView(view.dashboardID, updatedView))\n}\n","// Libraries\nimport React, {PureComponent, MouseEvent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  SlideToggle,\n  InputLabel,\n  ComponentSize,\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n} from '@influxdata/clockface'\nimport NoteEditorText from 'src/dashboards/components/NoteEditorText'\nimport NoteEditorPreview from 'src/dashboards/components/NoteEditorPreview'\n\n// Actions\nimport {\n  setIsPreviewing,\n  toggleShowNoteWhenEmpty,\n  setNote,\n} from 'src/dashboards/actions/notes'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  note: string\n  showNoteWhenEmpty: boolean\n}\n\ninterface DispatchProps {\n  onSetIsPreviewing: typeof setIsPreviewing\n  onToggleShowNoteWhenEmpty: typeof toggleShowNoteWhenEmpty\n  onSetNote: typeof setNote\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\ninterface State {\n  scrollTop: number\n}\n\nclass NoteEditor extends PureComponent<Props, State> {\n  public state = {scrollTop: 0}\n\n  public render() {\n    const {note, onSetNote} = this.props\n    const {scrollTop} = this.state\n\n    return (\n      <div className=\"note-editor\">\n        <div className=\"note-editor--controls\">\n          <div className=\"note-editor--helper\">\n            Need help using Markdown? Check out{' '}\n            <a href=\"https://www.markdownguide.org/cheat-sheet\" target=\"_blank\">\n              this handy guide\n            </a>\n          </div>\n          {this.visibilityToggle}\n        </div>\n        <div className=\"note-editor--body\">\n          <NoteEditorText\n            note={note}\n            onChangeNote={onSetNote}\n            onScroll={this.handleEditorScroll}\n            scrollTop={scrollTop}\n          />\n          <NoteEditorPreview\n            note={note}\n            scrollTop={scrollTop}\n            onScroll={this.handlePreviewScroll}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  private get visibilityToggle(): JSX.Element {\n    const {showNoteWhenEmpty, onToggleShowNoteWhenEmpty} = this.props\n\n    return (\n      <FlexBox\n        direction={FlexDirection.Row}\n        justifyContent={JustifyContent.FlexEnd}\n      >\n        <InputLabel>Show note when query returns no data</InputLabel>\n        <SlideToggle\n          active={showNoteWhenEmpty}\n          size={ComponentSize.ExtraSmall}\n          onChange={onToggleShowNoteWhenEmpty}\n        />\n      </FlexBox>\n    )\n  }\n\n  private handleEditorScroll = (scrollTop: number) => {\n    this.setState({scrollTop})\n  }\n\n  private handlePreviewScroll = (e: MouseEvent<HTMLElement>) => {\n    const target = e.target as HTMLElement\n    const {scrollTop} = target\n\n    this.setState({scrollTop})\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const {note, isPreviewing, showNoteWhenEmpty} = state.noteEditor\n\n  return {note, isPreviewing, showNoteWhenEmpty}\n}\n\nconst mdtp = {\n  onSetIsPreviewing: setIsPreviewing,\n  onToggleShowNoteWhenEmpty: toggleShowNoteWhenEmpty,\n  onSetNote: setNote,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(NoteEditor)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport NoteEditor from 'src/dashboards/components/NoteEditor'\nimport {\n  Button,\n  ComponentColor,\n  ComponentStatus,\n  SpinnerContainer,\n  TechnoSpinner,\n  Overlay,\n} from '@influxdata/clockface'\n\n// Actions\nimport {\n  createNoteCell,\n  updateViewNote,\n  loadNote,\n  resetNoteState,\n} from 'src/dashboards/actions/notes'\nimport {notify} from 'src/shared/actions/notifications'\n\n// Utils\nimport {savingNoteFailed} from 'src/shared/copy/notifications'\n\n// Types\nimport {RemoteDataState} from 'src/types'\nimport {AppState, NoteEditorMode} from 'src/types'\n\ninterface OwnProps {\n  onClose: () => void\n}\n\ninterface StateProps {\n  mode: NoteEditorMode\n  viewsStatus: RemoteDataState\n  cellID?: string\n  dashboardID: string\n}\n\ninterface DispatchProps {\n  onCreateNoteCell: typeof createNoteCell\n  onUpdateViewNote: typeof updateViewNote\n  resetNote: typeof resetNoteState\n  onNotify: typeof notify\n  loadNote: typeof loadNote\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\ninterface State {\n  savingStatus: RemoteDataState\n}\n\nclass NoteEditorOverlay extends PureComponent<Props, State> {\n  public state: State = {\n    savingStatus: RemoteDataState.NotStarted,\n  }\n\n  componentDidMount() {\n    const {cellID} = this.props\n\n    if (cellID) {\n      this.props.loadNote(cellID)\n    } else {\n      this.props.resetNote()\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {cellID, viewsStatus} = this.props\n\n    if (\n      prevProps.viewsStatus !== RemoteDataState.Done &&\n      viewsStatus === RemoteDataState.Done\n    ) {\n      if (cellID) {\n        this.props.loadNote(cellID)\n      } else {\n        this.props.resetNote()\n      }\n    }\n  }\n\n  public render() {\n    const {dashboardID} = this.props\n\n    if (!dashboardID) {\n      return (\n        <Overlay.Container maxWidth={360}>\n          <Overlay.Header title=\"Oh no!\" onDismiss={this.handleDismiss} />\n          <Overlay.Body>\n            <h5>\n              This page does not allow creation or editing of notes, better head{' '}\n              to a dashboard to do that.\n            </h5>\n          </Overlay.Body>\n        </Overlay.Container>\n      )\n    }\n\n    return (\n      <Overlay.Container maxWidth={900}>\n        <Overlay.Header\n          title={this.overlayTitle}\n          onDismiss={this.handleDismiss}\n        />\n        <Overlay.Body>\n          <SpinnerContainer\n            loading={this.props.viewsStatus}\n            spinnerComponent={<TechnoSpinner />}\n          >\n            <NoteEditor />\n          </SpinnerContainer>\n        </Overlay.Body>\n        <Overlay.Footer>\n          <Button text=\"Cancel\" onClick={this.handleDismiss} />\n          <Button\n            text=\"Save\"\n            color={ComponentColor.Success}\n            status={this.saveButtonStatus}\n            onClick={this.handleSave}\n          />\n        </Overlay.Footer>\n      </Overlay.Container>\n    )\n  }\n\n  private handleDismiss = (): void => {\n    const {onClose} = this.props\n\n    onClose()\n  }\n\n  private get overlayTitle(): string {\n    const {mode} = this.props\n\n    let overlayTitle: string\n\n    if (mode === NoteEditorMode.Editing) {\n      overlayTitle = 'Edit Note'\n    } else {\n      overlayTitle = 'Add Note'\n    }\n\n    return overlayTitle\n  }\n\n  private get saveButtonStatus(): ComponentStatus {\n    const {savingStatus} = this.state\n\n    if (savingStatus === RemoteDataState.Loading) {\n      return ComponentStatus.Loading\n    }\n\n    return ComponentStatus.Default\n  }\n\n  private handleSave = () => {\n    const {\n      cellID,\n      dashboardID,\n      onCreateNoteCell,\n      onUpdateViewNote,\n      onNotify,\n    } = this.props\n\n    this.setState({savingStatus: RemoteDataState.Loading})\n\n    try {\n      if (cellID) {\n        onUpdateViewNote(cellID)\n      } else {\n        onCreateNoteCell(dashboardID)\n      }\n      this.handleDismiss()\n    } catch (error) {\n      onNotify(savingNoteFailed(error.message))\n      console.error(error)\n      this.setState({savingStatus: RemoteDataState.Error})\n    }\n  }\n}\n\nconst mstp = ({noteEditor, resources, overlays}: AppState): StateProps => {\n  const {params} = overlays\n  const {mode} = noteEditor\n  const {status} = resources.views\n\n  const cellID = get(params, 'cellID', undefined)\n  const dashboardID = get(params, 'dashboardID', undefined)\n\n  return {mode, viewsStatus: status, cellID, dashboardID}\n}\n\nconst mdtp = {\n  onNotify: notify,\n  onCreateNoteCell: createNoteCell,\n  onUpdateViewNote: updateViewNote,\n  resetNote: resetNoteState,\n  loadNote,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(NoteEditorOverlay)\n","import {Bucket, Permission} from 'src/types'\n\ntype PermissionTypes = Permission['resource']['type']\n\nfunction assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nconst allPermissionTypes: PermissionTypes[] = [\n  'authorizations',\n  'buckets',\n  'checks',\n  'dashboards',\n  'documents',\n  'labels',\n  'notificationRules',\n  'notificationEndpoints',\n  'orgs',\n  'secrets',\n  'scrapers',\n  'sources',\n  'tasks',\n  'telegrafs',\n  'users',\n  'variables',\n  'views',\n]\n\n// The switch statement below will cause a TS error\n// if all allowable PermissionTypes generated in the client\n// generatedRoutes are not included in the switch statement BUT\n// they will need to be added to both the switch statement AND the allPermissionTypes array.\nconst ensureT = (orgID: string) => (t: PermissionTypes): Permission[] => {\n  switch (t) {\n    case 'authorizations':\n    case 'buckets':\n    case 'checks':\n    case 'dashboards':\n    case 'documents':\n    case 'labels':\n    case 'notificationRules':\n    case 'notificationEndpoints':\n    case 'secrets':\n    case 'scrapers':\n    case 'sources':\n    case 'tasks':\n    case 'telegrafs':\n    case 'users':\n    case 'variables':\n    case 'views':\n      return [\n        {\n          action: 'read' as 'read',\n          resource: {type: t, orgID},\n        },\n        {\n          action: 'write' as 'write',\n          resource: {type: t, orgID},\n        },\n      ]\n    case 'orgs':\n      // 'orgs' used to only have read permissions so that's all we'll give again.\n      // In production, orgs with an orgID returns a permissions error.\n      return [\n        {\n          action: 'read' as 'read',\n          resource: {type: t, id: orgID},\n        },\n      ]\n    default:\n      return assertNever(t)\n  }\n}\n\nexport const allAccessPermissions = (orgID: string): Permission[] => {\n  const withOrgID = ensureT(orgID)\n  return allPermissionTypes.flatMap(withOrgID)\n}\n\nexport const specificBucketsPermissions = (\n  buckets: Bucket[],\n  permission: Permission['action']\n): Permission[] => {\n  return buckets.map(b => {\n    return {\n      action: permission,\n      resource: {\n        type: 'buckets' as 'buckets',\n        orgID: b.orgID,\n        id: b.id,\n      },\n    }\n  })\n}\n\nexport const allBucketsPermissions = (\n  orgID: string,\n  permission: Permission['action']\n): Permission[] => {\n  return [\n    {\n      action: permission,\n      resource: {type: 'buckets', orgID},\n    },\n  ]\n}\n\nexport const selectBucket = (\n  bucketName: string,\n  selectedBuckets: string[]\n): string[] => {\n  const isSelected = selectedBuckets.find(n => n === bucketName)\n\n  if (isSelected) {\n    return selectedBuckets.filter(n => n !== bucketName)\n  }\n\n  return [...selectedBuckets, bucketName]\n}\n\nexport enum BucketTab {\n  AllBuckets = 'All Buckets',\n  Scoped = 'Scoped',\n}\n","import React, {PureComponent, ChangeEvent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  Alert,\n  IconFont,\n  ComponentColor,\n  FlexBox,\n  AlignItems,\n  FlexDirection,\n  ComponentSize,\n  Button,\n  ButtonType,\n  Input,\n  Overlay,\n  Form,\n} from '@influxdata/clockface'\n\n// Actions\nimport {createAuthorization} from 'src/authorizations/actions/thunks'\n\n// Utils\nimport {allAccessPermissions} from 'src/authorizations/utils/permissions'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {AppState, Authorization} from 'src/types'\n\ninterface OwnProps {\n  onClose: () => void\n}\n\ninterface StateProps {\n  orgID: string\n}\n\ninterface DispatchProps {\n  onCreateAuthorization: typeof createAuthorization\n}\n\ninterface State {\n  description: string\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\n@ErrorHandling\nclass AllAccessTokenOverlay extends PureComponent<Props, State> {\n  public state = {description: ''}\n\n  render() {\n    const {description} = this.state\n\n    return (\n      <Overlay.Container maxWidth={500}>\n        <Overlay.Header\n          title=\"Generate All Access Token\"\n          onDismiss={this.handleDismiss}\n        />\n        <Overlay.Body>\n          <Form onSubmit={this.handleSave}>\n            <FlexBox\n              alignItems={AlignItems.Center}\n              direction={FlexDirection.Column}\n              margin={ComponentSize.Large}\n            >\n              <Alert\n                icon={IconFont.AlertTriangle}\n                color={ComponentColor.Warning}\n              >\n                This token will be able to create, update, delete, read, and\n                write to anything in this organization\n              </Alert>\n              <Form.Element label=\"Description\">\n                <Input\n                  placeholder=\"Describe this new token\"\n                  value={description}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Element>\n\n              <Form.Footer>\n                <Button\n                  text=\"Cancel\"\n                  icon={IconFont.Remove}\n                  onClick={this.handleDismiss}\n                />\n\n                <Button\n                  text=\"Save\"\n                  icon={IconFont.Checkmark}\n                  color={ComponentColor.Success}\n                  type={ButtonType.Submit}\n                />\n              </Form.Footer>\n            </FlexBox>\n          </Form>\n        </Overlay.Body>\n      </Overlay.Container>\n    )\n  }\n\n  private handleSave = () => {\n    const {orgID, onCreateAuthorization} = this.props\n\n    const token: Authorization = {\n      orgID,\n      description: this.state.description,\n      permissions: allAccessPermissions(orgID),\n    }\n\n    onCreateAuthorization(token)\n\n    this.handleDismiss()\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {value} = e.target\n\n    this.setState({description: value})\n  }\n\n  private handleDismiss = () => {\n    this.props.onClose()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    orgID: getOrg(state).id,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onCreateAuthorization: createAuthorization,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(AllAccessTokenOverlay)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\ninterface Props {\n  title: string\n  testID: string\n  onDelete?: () => void\n  onDragStart?: () => void\n}\n\nexport default class SelectorListHeader extends PureComponent<Props> {\n  public static defaultProps = {\n    testID: 'selector-list--header',\n  }\n\n  public render() {\n    const {testID, children} = this.props\n\n    return (\n      <div className=\"selector-list--header\" data-testid={testID}>\n        {this.title}\n        {children}\n        {this.deleteButton}\n      </div>\n    )\n  }\n\n  private get title(): JSX.Element {\n    const {onDragStart, title} = this.props\n\n    if (onDragStart) {\n      return (\n        <div className=\"selector-list--draggable\" onDragStart={onDragStart}>\n          <div className=\"selector-list--hamburger\" />\n          <h2 className=\"selector-list--title\">{title}</h2>\n        </div>\n      )\n    }\n\n    return <h2 className=\"selector-list--title\">{title}</h2>\n  }\n\n  private get deleteButton(): JSX.Element | undefined {\n    const {onDelete} = this.props\n\n    if (onDelete) {\n      return <div className=\"selector-list--delete\" onClick={onDelete} />\n    }\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\ninterface Props {\n  testID: string\n}\n\nexport default class SelectorListMenu extends PureComponent<Props> {\n  public static defaultProps = {\n    testID: 'selector-list--menu',\n  }\n\n  public render() {\n    const {testID, children} = this.props\n    return (\n      <div className=\"selector-list--menu\" data-testid={testID}>\n        {children}\n      </div>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent, ReactNode} from 'react'\n\n// Components\nimport {DapperScrollbars} from '@influxdata/clockface'\n\ninterface Props {\n  scrollable: boolean\n  addPadding: boolean\n  testID: string\n}\n\nexport default class SelectorListBody extends PureComponent<Props> {\n  public static defaultProps = {\n    scrollable: true,\n    addPadding: true,\n    testID: 'selector-list--body',\n  }\n\n  public render() {\n    const {scrollable, testID} = this.props\n\n    if (scrollable) {\n      return (\n        <DapperScrollbars\n          className=\"selector-list--body\"\n          style={{maxWidth: '100%', maxHeight: '100%'}}\n          testID={testID}\n        >\n          {this.children}\n        </DapperScrollbars>\n      )\n    }\n\n    return (\n      <div className=\"selector-list--body\" data-testid={testID}>\n        {this.children}\n      </div>\n    )\n  }\n\n  private get children(): JSX.Element | ReactNode {\n    const {addPadding, children} = this.props\n\n    if (addPadding) {\n      return <div className=\"selector-list--contents\">{children}</div>\n    }\n\n    return children\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\ninterface Props {\n  testID: string\n}\n\nexport default class SelectorListEmpty extends PureComponent<Props> {\n  public static defaultProps = {\n    testID: 'selector-list--empty',\n  }\n\n  public render() {\n    const {testID, children} = this.props\n\n    return (\n      <div\n        className=\"selector-list--body selector-list--empty\"\n        data-testid={testID}\n      >\n        {children}\n      </div>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport classnames from 'classnames'\n\n// Components\nimport SelectorListHeader from 'src/shared/components/selectorList/SelectorListHeader'\nimport SelectorListMenu from 'src/shared/components/selectorList/SelectorListMenu'\nimport SelectorListBody from 'src/shared/components/selectorList/SelectorListBody'\nimport SelectorListEmpty from 'src/shared/components/selectorList/SelectorListEmpty'\n\ninterface Props {\n  testID: string\n  className?: string\n}\n\nexport default class SelectorList extends PureComponent<Props> {\n  public static Header = SelectorListHeader\n  public static Menu = SelectorListMenu\n  public static Body = SelectorListBody\n  public static Empty = SelectorListEmpty\n\n  public static defaultProps = {\n    testID: 'selector-list',\n  }\n\n  public render() {\n    const {children, testID, className} = this.props\n\n    const classname = classnames('selector-list', {[`${className}`]: className})\n\n    return (\n      <div className={classname} data-testid={testID}>\n        {children}\n      </div>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\ninterface Props {\n  title: string\n  testID: string\n  onDelete?: () => void\n  onDragStart?: () => void\n}\n\nexport default class BuilderCardHeader extends PureComponent<Props> {\n  public static defaultProps = {\n    testID: 'builder-card--header',\n  }\n\n  public render() {\n    const {testID, children} = this.props\n\n    return (\n      <div className=\"builder-card--header\" data-testid={testID}>\n        {this.title}\n        {children}\n        {this.deleteButton}\n      </div>\n    )\n  }\n\n  private get title(): JSX.Element {\n    const {onDragStart, title} = this.props\n\n    if (onDragStart) {\n      return (\n        <div className=\"builder-card--draggable\" onDragStart={onDragStart}>\n          <div className=\"builder-card--hamburger\" />\n          <h2 className=\"builder-card--title\">{title}</h2>\n        </div>\n      )\n    }\n\n    return <h2 className=\"builder-card--title\">{title}</h2>\n  }\n\n  private get deleteButton(): JSX.Element | undefined {\n    const {onDelete} = this.props\n\n    if (onDelete) {\n      return <div className=\"builder-card--delete\" onClick={onDelete} />\n    }\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\nimport {SelectDropdown} from '@influxdata/clockface'\nimport {BuilderAggregateFunctionType} from 'src/types'\n\ninterface Props {\n  options: string[]\n  selectedOption: string\n  testID: string\n  onSelect?: (option: BuilderAggregateFunctionType) => void\n  onDelete?: () => void\n}\n\nconst emptyFunction = () => {}\n\nexport default class BuilderCardDropdownHeader extends PureComponent<Props> {\n  public static defaultProps = {\n    testID: 'builder-card--header',\n  }\n\n  public render() {\n    const {children, options, onSelect, selectedOption, testID} = this.props\n\n    return (\n      <div className=\"builder-card--header\" data-testid={testID}>\n        <SelectDropdown\n          options={options}\n          selectedOption={selectedOption}\n          testID=\"select-option-dropdown\"\n          onSelect={onSelect ? onSelect : emptyFunction}\n        />\n\n        {children}\n        {this.deleteButton}\n      </div>\n    )\n  }\n\n  private get deleteButton(): JSX.Element | undefined {\n    const {onDelete} = this.props\n\n    if (onDelete) {\n      return <div className=\"builder-card--delete\" onClick={onDelete} />\n    }\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\ninterface Props {\n  testID: string\n}\n\nexport default class BuilderCardMenu extends PureComponent<Props> {\n  public static defaultProps = {\n    testID: 'builder-card--menu',\n  }\n\n  public render() {\n    const {testID, children} = this.props\n    return (\n      <div className=\"builder-card--menu\" data-testid={testID}>\n        {children}\n      </div>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent, ReactNode} from 'react'\n\n// Components\nimport {DapperScrollbars} from '@influxdata/clockface'\n\ninterface Props {\n  scrollable: boolean\n  addPadding: boolean\n  testID: string\n  autoHideScrollbars: boolean\n}\n\nexport default class BuilderCardBody extends PureComponent<Props> {\n  public static defaultProps = {\n    scrollable: true,\n    addPadding: true,\n    testID: 'builder-card--body',\n    autoHideScrollbars: false,\n  }\n\n  public render() {\n    const {scrollable, testID, autoHideScrollbars} = this.props\n\n    if (scrollable) {\n      return (\n        <DapperScrollbars\n          className=\"builder-card--body\"\n          style={{maxWidth: '100%', maxHeight: '100%'}}\n          testID={testID}\n          autoHide={autoHideScrollbars}\n        >\n          {this.children}\n        </DapperScrollbars>\n      )\n    }\n\n    return (\n      <div className=\"builder-card--body\" data-testid={testID}>\n        {this.children}\n      </div>\n    )\n  }\n\n  private get children(): JSX.Element | ReactNode {\n    const {addPadding, children} = this.props\n\n    if (addPadding) {\n      return <div className=\"builder-card--contents\">{children}</div>\n    }\n\n    return children\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\ninterface Props {\n  testID: string\n}\n\nexport default class BuilderCardEmpty extends PureComponent<Props> {\n  public static defaultProps = {\n    testID: 'builder-card--empty',\n  }\n\n  public render() {\n    const {testID, children} = this.props\n\n    return (\n      <div\n        className=\"builder-card--body builder-card--empty\"\n        data-testid={testID}\n      >\n        {children}\n      </div>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport classnames from 'classnames'\n\n// Components\nimport BuilderCardHeader from 'src/timeMachine/components/builderCard/BuilderCardHeader'\nimport BuilderCardDropdownHeader from 'src/timeMachine/components/builderCard/BuilderCardDropdownHeader'\nimport BuilderCardMenu from 'src/timeMachine/components/builderCard/BuilderCardMenu'\nimport BuilderCardBody from 'src/timeMachine/components/builderCard/BuilderCardBody'\nimport BuilderCardEmpty from 'src/timeMachine/components/builderCard/BuilderCardEmpty'\n\ninterface Props {\n  testID: string\n  className?: string\n  widthPixels: number\n}\n\nexport default class BuilderCard extends PureComponent<Props> {\n  public static Header = BuilderCardHeader\n  public static DropdownHeader = BuilderCardDropdownHeader\n  public static Menu = BuilderCardMenu\n  public static Body = BuilderCardBody\n  public static Empty = BuilderCardEmpty\n\n  public static defaultProps = {\n    testID: 'builder-card',\n    widthPixels: 228,\n  }\n\n  public render() {\n    const {children, testID, className, widthPixels} = this.props\n\n    const classname = classnames('builder-card', {[`${className}`]: className})\n\n    const style = {flex: `0 0 ${widthPixels}px`}\n\n    return (\n      <div className={classname} data-testid={testID} style={style}>\n        {children}\n      </div>\n    )\n  }\n}\n","// Libraries\nimport React, {SFC} from 'react'\nimport classnames from 'classnames'\n\n// Components\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\n\ninterface Props {\n  items: string[]\n  selectedItems: string[]\n  onSelectItem: (item: string) => void\n  multiSelect: boolean\n}\n\nconst SelectorList: SFC<Props> = props => {\n  const {items, selectedItems, onSelectItem, multiSelect} = props\n\n  return (\n    <BuilderCard.Body addPadding={false} autoHideScrollbars={true}>\n      {items.map(item => {\n        const className = classnames('selector-list--item', {\n          selected: selectedItems.includes(item),\n          'selector-list--checkbox': multiSelect,\n        })\n\n        const title = selectedItems.includes(item)\n          ? 'Click to remove this filter'\n          : `Click to filter by ${item}`\n\n        return (\n          <div\n            className={className}\n            data-testid={`selector-list ${item}`}\n            key={item}\n            onClick={() => onSelectItem(item)}\n            title={title}\n          >\n            {item}\n          </div>\n        )\n      })}\n    </BuilderCard.Body>\n  )\n}\n\nexport default SelectorList\n","// Libraries\nimport {PureComponent} from 'react'\n\nimport {\n  get,\n  sortBy,\n  isString,\n  isArray,\n  isEmpty,\n  isObject,\n  flatMap,\n  sortedIndex,\n} from 'lodash'\n\n// Types\nimport {Label} from 'src/types'\n\n// searchKeys: the keys whose values you want to filter on\n// if the values are nested use dot notation i.e. tasks.org.name\n\nexport interface OwnProps<T> {\n  list: T[]\n  searchTerm: string\n  searchKeys: string[]\n  sortByKey?: string\n  children: (list: T[]) => any\n}\n\nexport interface StateProps {\n  labels: {[uuid: string]: Label}\n}\n\nexport type Props<T> = OwnProps<T> & StateProps\n\nconst INEXACT_PATH = /\\w+\\[\\]/g\nconst EMPTY_ARRAY_BRACKETS = /\\[\\]?\\./\n/**\n * Filters a list using a searchTerm and searchKeys where\n *  searchKeys is an array of strings represents either an\n *  exact or inexact path to a property value(s):\n *  \"user.name\" (exact) or \"authors[].name\" (inexact)\n *\n */\n\nexport default class FilterList<T> extends PureComponent<Props<T>> {\n  public render() {\n    return this.props.children(this.sorted)\n  }\n\n  private get sorted(): T[] {\n    return sortBy<T>(this.filtered, [\n      (item: T) => {\n        const value = get(item, this.props.sortByKey)\n\n        if (!!value && isString(value)) {\n          return value.toLocaleLowerCase()\n        }\n\n        return value\n      },\n    ])\n  }\n\n  private get filtered(): T[] {\n    const {list, labels, searchKeys} = this.props\n    const {formattedSearchTerm} = this\n\n    if (isEmpty(formattedSearchTerm)) {\n      return list\n    }\n\n    const filtered = list.filter(listItem => {\n      const item = {\n        ...listItem,\n        labels: get(listItem, 'labels', []).map(labelID => labels[labelID]),\n      }\n\n      const isInList = searchKeys.some(key => {\n        const value = this.getKey(item, key)\n\n        const isStringArray = this.isStringArray(value)\n\n        if (!isStringArray && isObject(value)) {\n          throw new Error(\n            `The value at key \"${key}\" is an object.  Take a look at \"searchKeys\" and\n             make sure you're indexing onto a primitive value`\n          )\n        }\n\n        if (isStringArray) {\n          const searchIndex = this.createIndex(value)\n          return this.checkIndex(searchIndex, formattedSearchTerm)\n        }\n\n        return String(value)\n          .toLocaleLowerCase()\n          .includes(formattedSearchTerm)\n      })\n\n      return isInList\n    })\n\n    return filtered\n  }\n\n  private isStringArray(value: any): boolean {\n    if (!isArray(value)) {\n      return false\n    }\n\n    if (isEmpty(value) || isString(value[0])) {\n      return true\n    }\n\n    return false\n  }\n\n  private get formattedSearchTerm(): string {\n    return this.props.searchTerm.trimLeft().toLocaleLowerCase()\n  }\n\n  private getKey(item: T, key: string) {\n    const isInexact = key.match(INEXACT_PATH)\n\n    if (!isInexact) {\n      return get(item, key, '')\n    } else {\n      return this.getInExactKey(item, key)\n    }\n  }\n\n  private getInExactKey(item: T, key: string) {\n    const paths = key.split(EMPTY_ARRAY_BRACKETS)\n    // flattens nested arrays into one large array\n    const values = paths.reduce(\n      (results, path) => flatMap(results, r => get(r, path, [])),\n      [item]\n    )\n\n    return values\n  }\n\n  private createIndex = (terms: string[]) => {\n    return flatMap(terms, this.extractSuffixes).sort()\n  }\n\n  private checkIndex = (sortedSuffixes: string[], searchTerm) => {\n    const index = sortedIndex(sortedSuffixes, searchTerm)\n    const nearestSuffix = sortedSuffixes[index]\n\n    if (!!nearestSuffix && nearestSuffix.includes(searchTerm)) {\n      return true\n    }\n\n    return false\n  }\n\n  private extractSuffixes = (term: string) => {\n    const suffixes = new Array(term.length)\n    const lowerTerm = term.toLocaleLowerCase()\n\n    for (let i = 0; i < suffixes.length; i++) {\n      suffixes[i] = lowerTerm.slice(i)\n    }\n\n    return suffixes\n  }\n}\n","// Libraries\nimport {connect} from 'react-redux'\n\n// Components\nimport FilterList, {StateProps, OwnProps} from 'src/shared/components/Filter'\n\nimport {AppState} from 'src/types'\n\nconst mstp = (state: AppState) => {\n  return {labels: state.resources.labels.byID}\n}\n\n// Typing a generic connected component proved to be tricky:\n// https://github.com/piotrwitek/react-redux-typescript-guide/issues/55\nexport default function FilterListContainer<T>() {\n  return connect<StateProps>(mstp)(FilterList as new (\n    props: OwnProps<T>\n  ) => FilterList<T>)\n}\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Libraries\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\nimport SelectorList from 'src/timeMachine/components/SelectorList'\n\n// Types\nimport {Bucket} from 'src/types'\nimport {Input} from '@influxdata/clockface'\nimport SortingHat from 'src/shared/components/sorting_hat/SortingHat'\nimport FilterList from 'src/shared/components/FilterList'\n\ninterface Props {\n  buckets: Bucket[]\n  onSelect: (id: string) => void\n  selectedBuckets: string[]\n}\n\ninterface State {\n  searchTerm: string\n}\n\nconst FilterBuckets = FilterList<Bucket>()\n\nclass BucketsTabBody extends PureComponent<Props> {\n  public state: State = {searchTerm: ''}\n\n  public render() {\n    const {selectedBuckets, onSelect, buckets} = this.props\n    const {searchTerm} = this.state\n\n    return (\n      <>\n        <BuilderCard.Menu>\n          <Input\n            value={searchTerm}\n            onChange={this.handleSetSearchTerm}\n            placeholder=\"Search buckets...\"\n          />\n        </BuilderCard.Menu>\n        <FilterBuckets\n          list={buckets}\n          searchTerm={searchTerm}\n          searchKeys={['name']}\n        >\n          {filteredBuckets => (\n            <SortingHat list={filteredBuckets} sortKey=\"name\">\n              {sortedBuckets => (\n                <SelectorList\n                  items={sortedBuckets.map(b => b.name)}\n                  selectedItems={selectedBuckets}\n                  onSelectItem={onSelect}\n                  multiSelect={false}\n                />\n              )}\n            </SortingHat>\n          )}\n        </FilterBuckets>\n      </>\n    )\n  }\n\n  private handleSetSearchTerm = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({searchTerm: e.target.value})\n  }\n}\n\nexport default BucketsTabBody\n","import React, {PureComponent} from 'react'\n\nimport {SelectGroup, ButtonShape} from '@influxdata/clockface'\n\nimport {BucketTab} from 'src/authorizations/utils/permissions'\n\ninterface Props {\n  tabs: BucketTab[]\n  activeTab: BucketTab\n  onClick: (tab: string) => void\n}\n\nexport default class BucketsTabSelector extends PureComponent<Props> {\n  public render() {\n    const {tabs, activeTab} = this.props\n    return (\n      <SelectGroup shape={ButtonShape.StretchToFit}>\n        {tabs.map(tab => (\n          <SelectGroup.Option\n            name=\"bucket-selector\"\n            key={tab}\n            id={tab}\n            titleText={tab}\n            value={tab}\n            active={activeTab === tab}\n            onClick={this.handleTabClick}\n          >\n            {tab}\n          </SelectGroup.Option>\n        ))}\n      </SelectGroup>\n    )\n  }\n\n  private handleTabClick = (tab: BucketTab) => {\n    const {activeTab, onClick} = this.props\n    if (tab !== activeTab) {\n      onClick(tab)\n    }\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport SelectorList from 'src/shared/components/selectorList/SelectorList'\nimport BucketsTabBody from 'src/authorizations/components/BucketsTabBody'\nimport {BucketTab} from 'src/authorizations/utils/permissions'\nimport BucketsTabSelector from 'src/authorizations/components/BucketsTabSelector'\n\n// Types\nimport {Bucket} from 'src/types'\nimport {\n  FlexBox,\n  AlignItems,\n  FlexDirection,\n  Button,\n  EmptyState,\n  ComponentSize,\n} from '@influxdata/clockface'\n\ninterface Props {\n  buckets: Bucket[]\n  onSelect: (id: string) => void\n  onSelectAll: () => void\n  onDeselectAll: () => void\n  selectedBuckets: string[]\n  title: string\n  activeTab: BucketTab\n  onTabClick: (tab: BucketTab) => void\n}\n\nclass BucketsSelector extends PureComponent<Props> {\n  render() {\n    const {title, activeTab, onTabClick} = this.props\n\n    return (\n      <FlexBox\n        alignItems={AlignItems.Stretch}\n        direction={FlexDirection.Column}\n        margin={ComponentSize.Medium}\n      >\n        <div className=\"title\">{title}</div>\n        <BucketsTabSelector\n          tabs={this.bucketTabs}\n          activeTab={activeTab}\n          onClick={onTabClick}\n        />\n        {this.builderCard}\n      </FlexBox>\n    )\n  }\n\n  private get titlePreposition(): string {\n    const {title} = this.props\n    switch (title.toLowerCase()) {\n      case 'read':\n        return 'from'\n      case 'write':\n        return 'to'\n      default:\n        return 'on'\n    }\n  }\n\n  private get bucketTabs(): BucketTab[] {\n    return [BucketTab.AllBuckets, BucketTab.Scoped]\n  }\n\n  private get builderCard(): JSX.Element {\n    const {\n      selectedBuckets,\n      onSelect,\n      onSelectAll,\n      onDeselectAll,\n      buckets,\n      activeTab,\n      title,\n    } = this.props\n\n    switch (activeTab) {\n      case BucketTab.AllBuckets:\n        return (\n          <>\n            <EmptyState size={ComponentSize.Small}>\n              <EmptyState.Text>\n                This token will be able to {title.toLowerCase()}{' '}\n                {this.titlePreposition} all existing buckets as well as{' '}\n                {this.titlePreposition} any bucket created in the future\n              </EmptyState.Text>\n            </EmptyState>\n          </>\n        )\n      case BucketTab.Scoped:\n        return (\n          <SelectorList className=\"bucket-selectors\">\n            <SelectorList.Header title=\"Buckets\">\n              <div className=\"bucket-selectors--buttons\">\n                <FlexBox\n                  alignItems={AlignItems.Center}\n                  direction={FlexDirection.Row}\n                  margin={ComponentSize.Small}\n                >\n                  <Button\n                    text=\"Select All\"\n                    size={ComponentSize.ExtraSmall}\n                    className=\"bucket-selectors--button\"\n                    onClick={onSelectAll}\n                  />\n                  <Button\n                    text=\"Deselect All\"\n                    size={ComponentSize.ExtraSmall}\n                    className=\"bucket-selectors--button\"\n                    onClick={onDeselectAll}\n                  />\n                </FlexBox>\n              </div>\n            </SelectorList.Header>\n            <BucketsTabBody\n              buckets={buckets}\n              onSelect={onSelect}\n              selectedBuckets={selectedBuckets}\n            />\n          </SelectorList>\n        )\n    }\n  }\n}\n\nexport default BucketsSelector\n","import React, {PureComponent, ChangeEvent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  IconFont,\n  ComponentColor,\n  FlexBox,\n  AlignItems,\n  FlexDirection,\n  ComponentSize,\n  Button,\n  ButtonType,\n  Grid,\n  Columns,\n  Input,\n  Overlay,\n  Form,\n} from '@influxdata/clockface'\nimport BucketsSelector from 'src/authorizations/components/BucketsSelector'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Utils\nimport {\n  specificBucketsPermissions,\n  selectBucket,\n  allBucketsPermissions,\n  BucketTab,\n} from 'src/authorizations/utils/permissions'\nimport {isSystemBucket} from 'src/buckets/constants/index'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\n\n// Actions\nimport {createAuthorization} from 'src/authorizations/actions/thunks'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {\n  AppState,\n  Bucket,\n  Permission,\n  Authorization,\n  ResourceType,\n} from 'src/types'\n\ninterface OwnProps {\n  onClose: () => void\n}\n\ninterface StateProps {\n  buckets: Bucket[]\n  orgID: string\n}\n\ninterface DispatchProps {\n  onCreateAuthorization: typeof createAuthorization\n}\n\ninterface State {\n  description: string\n  readBuckets: string[]\n  writeBuckets: string[]\n  activeTabRead: BucketTab\n  activeTabWrite: BucketTab\n}\n\ntype Props = OwnProps & DispatchProps & StateProps\n\n@ErrorHandling\nclass BucketsTokenOverlay extends PureComponent<Props, State> {\n  public state = {\n    description: '',\n    readBuckets: [],\n    writeBuckets: [],\n    activeTabRead: BucketTab.Scoped,\n    activeTabWrite: BucketTab.Scoped,\n  }\n\n  render() {\n    const {\n      description,\n      readBuckets,\n      writeBuckets,\n      activeTabRead,\n      activeTabWrite,\n    } = this.state\n\n    return (\n      <Overlay.Container maxWidth={700}>\n        <Overlay.Header\n          title=\"Generate Read/Write Token\"\n          onDismiss={this.handleDismiss}\n        />\n        <Overlay.Body>\n          <Form onSubmit={this.handleSave}>\n            <FlexBox\n              alignItems={AlignItems.Center}\n              direction={FlexDirection.Column}\n              margin={ComponentSize.Large}\n            >\n              <Form.Element label=\"Description\">\n                <Input\n                  placeholder=\"Describe this new token\"\n                  value={description}\n                  onChange={this.handleInputChange}\n                  testID=\"input-field--descr\"\n                />\n              </Form.Element>\n              <Form.Element label=\"\">\n                <GetResources resources={[ResourceType.Buckets]}>\n                  <Grid.Row>\n                    <Grid.Column widthXS={Columns.Twelve} widthSM={Columns.Six}>\n                      <BucketsSelector\n                        onSelect={this.handleSelectReadBucket}\n                        buckets={this.nonSystemBuckets}\n                        selectedBuckets={readBuckets}\n                        title=\"Read\"\n                        onSelectAll={this.handleReadSelectAllBuckets}\n                        onDeselectAll={this.handleReadDeselectAllBuckets}\n                        activeTab={activeTabRead}\n                        onTabClick={this.handleReadTabClick}\n                      />\n                    </Grid.Column>\n                    <Grid.Column widthXS={Columns.Twelve} widthSM={Columns.Six}>\n                      <BucketsSelector\n                        onSelect={this.handleSelectWriteBucket}\n                        buckets={this.nonSystemBuckets}\n                        selectedBuckets={writeBuckets}\n                        title=\"Write\"\n                        onSelectAll={this.handleWriteSelectAllBuckets}\n                        onDeselectAll={this.handleWriteDeselectAllBuckets}\n                        activeTab={activeTabWrite}\n                        onTabClick={this.handleWriteTabClick}\n                      />\n                    </Grid.Column>\n                  </Grid.Row>\n                </GetResources>\n              </Form.Element>\n              <Form.Footer>\n                <Button\n                  text=\"Cancel\"\n                  icon={IconFont.Remove}\n                  onClick={this.handleDismiss}\n                  testID=\"button--cancel\"\n                />\n\n                <Button\n                  text=\"Save\"\n                  icon={IconFont.Checkmark}\n                  color={ComponentColor.Success}\n                  type={ButtonType.Submit}\n                  testID=\"button--save\"\n                />\n              </Form.Footer>\n            </FlexBox>\n          </Form>\n        </Overlay.Body>\n      </Overlay.Container>\n    )\n  }\n\n  private handleReadTabClick = (tab: BucketTab) => {\n    this.setState({activeTabRead: tab})\n  }\n\n  private handleWriteTabClick = (tab: BucketTab) => {\n    this.setState({activeTabWrite: tab})\n  }\n\n  private handleSelectReadBucket = (bucketName: string): void => {\n    const readBuckets = selectBucket(bucketName, this.state.readBuckets)\n\n    this.setState({readBuckets})\n  }\n\n  private handleSelectWriteBucket = (bucketName: string): void => {\n    const writeBuckets = selectBucket(bucketName, this.state.writeBuckets)\n\n    this.setState({writeBuckets})\n  }\n\n  private handleReadSelectAllBuckets = () => {\n    const readBuckets = this.props.buckets.map(b => b.name)\n    this.setState({readBuckets})\n  }\n\n  private handleReadDeselectAllBuckets = () => {\n    this.setState({readBuckets: []})\n  }\n  j\n  private handleWriteSelectAllBuckets = () => {\n    const writeBuckets = this.props.buckets.map(b => b.name)\n    this.setState({writeBuckets})\n  }\n\n  private handleWriteDeselectAllBuckets = () => {\n    this.setState({writeBuckets: []})\n  }\n\n  private handleSave = () => {\n    const {orgID, onCreateAuthorization} = this.props\n    const {activeTabRead, activeTabWrite} = this.state\n\n    let permissions = []\n\n    if (activeTabRead === BucketTab.Scoped) {\n      permissions = [...this.readBucketPermissions]\n    } else {\n      permissions = [...this.allReadBucketPermissions]\n    }\n\n    if (activeTabWrite === BucketTab.Scoped) {\n      permissions = [...permissions, ...this.writeBucketPermissions]\n    } else {\n      permissions = [...permissions, ...this.allWriteBucketPermissions]\n    }\n\n    const token: Authorization = {\n      orgID,\n      description: this.state.description,\n      permissions,\n    }\n\n    onCreateAuthorization(token)\n\n    this.handleDismiss()\n  }\n\n  private get writeBucketPermissions(): Permission[] {\n    const {buckets} = this.props\n\n    const writeBuckets = this.state.writeBuckets.map(bucketName => {\n      return buckets.find(b => b.name === bucketName)\n    })\n\n    return specificBucketsPermissions(writeBuckets, 'write')\n  }\n\n  private get readBucketPermissions(): Permission[] {\n    const {buckets} = this.props\n\n    const readBuckets = this.state.readBuckets.map(bucketName => {\n      return buckets.find(b => b.name === bucketName)\n    })\n\n    return specificBucketsPermissions(readBuckets, 'read')\n  }\n\n  private get allReadBucketPermissions(): Permission[] {\n    const {orgID} = this.props\n\n    return allBucketsPermissions(orgID, 'read')\n  }\n\n  private get allWriteBucketPermissions(): Permission[] {\n    const {orgID} = this.props\n\n    return allBucketsPermissions(orgID, 'write')\n  }\n\n  private get nonSystemBuckets(): Bucket[] {\n    const {buckets} = this.props\n\n    return buckets.filter(bucket => !isSystemBucket(bucket.name))\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {value} = e.target\n\n    this.setState({description: value})\n  }\n\n  private handleDismiss = () => {\n    this.props.onClose()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    orgID: getOrg(state).id,\n    buckets: getAll<Bucket>(state, ResourceType.Buckets),\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onCreateAuthorization: createAuthorization,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(BucketsTokenOverlay)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport Editor from 'src/shared/components/TomlMonacoEditor'\nimport {RemoteDataState} from '@influxdata/clockface'\n\n// Actions\nimport {getTelegrafConfigToml} from 'src/telegrafs/actions/thunks'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface DispatchProps {\n  getTelegrafConfigToml: typeof getTelegrafConfigToml\n}\n\ninterface StateProps {\n  telegrafConfig: string\n  status: RemoteDataState\n}\n\ntype Props = StateProps & DispatchProps\n\n@ErrorHandling\nexport class TelegrafConfig extends PureComponent<Props & WithRouterProps> {\n  public componentDidMount() {\n    const {\n      params: {id},\n      getTelegrafConfigToml,\n    } = this.props\n    getTelegrafConfigToml(id)\n  }\n\n  public render() {\n    return <>{this.overlayBody}</>\n  }\n\n  private get overlayBody(): JSX.Element {\n    const {telegrafConfig} = this.props\n    return <Editor script={telegrafConfig} readOnly />\n  }\n}\n\nconst mstp = ({resources}: AppState): StateProps => ({\n  telegrafConfig: resources.telegrafs.currentConfig.item,\n  status: resources.telegrafs.currentConfig.status,\n})\n\nconst mdtp: DispatchProps = {\n  getTelegrafConfigToml: getTelegrafConfigToml,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(withRouter<Props>(TelegrafConfig))\n","export const formatDownloadName = (filename: string, extension: string) => {\n  return `${filename\n    .trim()\n    .toLowerCase()\n    .replace(/\\s/g, '_')}${extension}`\n}\n\nexport const downloadTextFile = (\n  text: string,\n  filename: string,\n  extension: string,\n  mimeType: string = 'text/plain'\n) => {\n  const formattedName = formatDownloadName(filename, extension)\n\n  const blob = new Blob([text], {type: mimeType})\n  const a = document.createElement('a')\n\n  a.href = window.URL.createObjectURL(blob)\n  a.target = '_blank'\n  a.download = formattedName\n\n  document.body.appendChild(a)\n  a.click()\n  a.parentNode.removeChild(a)\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport TelegrafConfig from 'src/telegrafs/components/TelegrafConfig'\nimport {\n  ComponentColor,\n  Button,\n  RemoteDataState,\n  SpinnerContainer,\n  TechnoSpinner,\n  Overlay,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\n// Utils\nimport {downloadTextFile} from 'src/shared/utils/download'\nimport {getByID} from 'src/resources/selectors'\n\n// Types\nimport {AppState, Telegraf, ResourceType} from 'src/types'\n\ninterface OwnProps {\n  onClose: () => void\n}\n\ninterface StateProps {\n  telegraf: Telegraf\n  status: RemoteDataState\n  telegrafConfig: string\n  configStatus: RemoteDataState\n}\n\ntype Props = OwnProps & StateProps\n\n@ErrorHandling\nclass TelegrafConfigOverlay extends PureComponent<Props> {\n  public render() {\n    return <>{this.overlay}</>\n  }\n\n  private get overlay(): JSX.Element {\n    const {telegraf, status} = this.props\n\n    return (\n      <Overlay.Container maxWidth={1200}>\n        <Overlay.Header\n          title={`Telegraf Configuration - ${_.get(telegraf, 'name', '')}`}\n          onDismiss={this.handleDismiss}\n        />\n        <Overlay.Body>\n          <SpinnerContainer\n            loading={status}\n            spinnerComponent={<TechnoSpinner />}\n          >\n            <div className=\"config-overlay\">\n              <TelegrafConfig />\n            </div>\n          </SpinnerContainer>\n        </Overlay.Body>\n        <Overlay.Footer>\n          <Button\n            color={ComponentColor.Secondary}\n            text=\"Download Config\"\n            onClick={this.handleDownloadConfig}\n            status={this.buttonStatus}\n          />\n        </Overlay.Footer>\n      </Overlay.Container>\n    )\n  }\n  private get buttonStatus(): ComponentStatus {\n    const {configStatus} = this.props\n    if (configStatus === RemoteDataState.Done) {\n      return ComponentStatus.Default\n    }\n    return ComponentStatus.Disabled\n  }\n\n  private handleDismiss = () => {\n    this.props.onClose()\n  }\n\n  private handleDownloadConfig = () => {\n    const {\n      telegrafConfig,\n      telegraf: {name},\n    } = this.props\n    downloadTextFile(telegrafConfig, name || 'telegraf', '.conf')\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {overlays, resources} = state\n  const {status, currentConfig} = resources.telegrafs\n  const {id} = overlays.params\n\n  return {\n    telegraf: getByID<Telegraf>(state, ResourceType.Telegrafs, id),\n    status,\n    telegrafConfig: currentConfig.item,\n    configStatus: currentConfig.status,\n  }\n}\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(TelegrafConfigOverlay)\n","import React, {PureComponent} from 'react'\n\n// Decorator\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Components\nimport CodeSnippet from 'src/shared/components/CodeSnippet'\n\ninterface StringMap {\n  [key: string]: string\n}\n\nexport interface Props {\n  template: string\n  label: string\n  testID?: string\n  values?: StringMap\n  defaults?: StringMap\n}\n\n// NOTE: this is just a simplified form of the resig classic:\n// https://johnresig.com/blog/javascript-micro-templating/\nfunction transform(template, vars) {\n  const output = new Function(\n    'vars',\n    'var output=' +\n      JSON.stringify(template).replace(\n        /<%=(.+?)%>/g,\n        '\"+(vars[\"$1\".trim()])+\"'\n      ) +\n      ';return output;'\n  )\n  return output(vars)\n}\n\n@ErrorHandling\nclass TemplatedCodeSnippet extends PureComponent<Props> {\n  public transform() {\n    const text = this.props.template\n    const vars = Object.assign({}, this.props.defaults, this.props.values)\n\n    return transform(text, vars)\n  }\n\n  render() {\n    const {label, testID} = this.props\n    const props = {\n      label,\n      testID,\n      copyText: this.transform(),\n    }\n\n    return <CodeSnippet {...props} />\n  }\n}\n\nexport {transform}\nexport default TemplatedCodeSnippet\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport TemplatedCodeSnippet, {\n  transform,\n} from 'src/shared/components/TemplatedCodeSnippet'\nimport BucketDropdown from 'src/dataLoaders/components/BucketsDropdown'\nimport {ComponentColor, Button, Overlay} from '@influxdata/clockface'\n\n// Utils\nimport {downloadTextFile} from 'src/shared/utils/download'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\n\n// Types\nimport {AppState, Bucket, ResourceType} from 'src/types'\n\ninterface OwnProps {\n  onClose: () => void\n}\n\ninterface StateProps {\n  org: string\n  orgID: string\n  server: string\n  buckets: Bucket[]\n}\n\ntype Props = OwnProps & StateProps\n\nconst TELEGRAF_OUTPUT = ` [[outputs.influxdb_v2]]\n  ## The URLs of the InfluxDB cluster nodes.\n  ##\n  ## Multiple URLs can be specified for a single cluster, only ONE of the\n  ## urls will be written to each interval.\n  ## urls exp: http://127.0.0.1:9999\n  urls = [\"<%= server %>\"]\n\n  ## Token for authentication.\n  token = \"<%= token %>\"\n\n  ## Organization is the name of the organization you wish to write to; must exist.\n  organization = \"<%= org %>\"\n\n  ## Destination bucket to write into.\n  bucket = \"<%= bucket %>\"\n`\n\nconst OUTPUT_DEFAULTS = {\n  server: 'http://127.0.0.1:9999',\n  token: '$INFLUX_TOKEN',\n  org: 'orgID',\n  bucket: 'bucketID',\n}\n\n@ErrorHandling\nclass TelegrafOutputOverlay extends PureComponent<Props> {\n  state = {\n    selectedBucket: null,\n  }\n\n  public render() {\n    return <>{this.overlay}</>\n  }\n\n  private get buckets() {\n    const {buckets} = this.props\n    return (buckets || [])\n      .filter(item => item.type !== 'system')\n      .sort((a, b) => {\n        const _a = a.name.toLowerCase()\n        const _b = b.name.toLowerCase()\n        return _a > _b ? 1 : _a < _b ? -1 : 0\n      })\n  }\n\n  private get currentBucket() {\n    const _buckets = this.buckets\n    const {selectedBucket} = this.state\n\n    if (_buckets.length) {\n      return selectedBucket ? selectedBucket : _buckets[0]\n    }\n\n    return null\n  }\n\n  private get overlay(): JSX.Element {\n    const {server, org, orgID} = this.props\n    const _buckets = this.buckets\n    const bucket = this.currentBucket\n    let bucket_dd = null\n\n    if (_buckets.length) {\n      bucket_dd = (\n        <BucketDropdown\n          selectedBucketID={this.currentBucket.id}\n          buckets={_buckets}\n          onSelectBucket={this.handleSelectBucket}\n        />\n      )\n    }\n\n    return (\n      <Overlay.Container maxWidth={1200}>\n        <Overlay.Header\n          title=\"Telegraf Output Configuration\"\n          onDismiss={this.handleDismiss}\n        />\n        <Overlay.Body>\n          <p style={{marginTop: '-18px'}}>\n            The $INFLUX_TOKEN can be generated on the\n            <Link to={`/orgs/${orgID}/load-data/tokens`}>&nbsp;Tokens tab</Link>\n            .\n          </p>\n          {bucket_dd}\n          <div className=\"output-overlay\">\n            <TemplatedCodeSnippet\n              template={TELEGRAF_OUTPUT}\n              label=\"telegraf.conf\"\n              testID=\"telegraf-output-overlay--code-snippet\"\n              values={{\n                server,\n                org,\n                bucket: bucket ? bucket.name : OUTPUT_DEFAULTS.bucket,\n              }}\n              defaults={OUTPUT_DEFAULTS}\n            />\n          </div>\n        </Overlay.Body>\n        <Overlay.Footer>\n          <Button\n            color={ComponentColor.Secondary}\n            text=\"Download Config\"\n            onClick={this.handleDownloadConfig}\n          />\n        </Overlay.Footer>\n      </Overlay.Container>\n    )\n  }\n\n  private handleDismiss = () => {\n    this.props.onClose()\n  }\n\n  private handleSelectBucket = bucket => {\n    this.setState({\n      selectedBucket: bucket,\n    })\n  }\n\n  private handleDownloadConfig = () => {\n    const {server, org} = this.props\n    const bucket = this.currentBucket\n    const config = transform(\n      TELEGRAF_OUTPUT,\n      Object.assign({}, OUTPUT_DEFAULTS, {\n        server,\n        org,\n        bucket: bucket ? bucket.name : OUTPUT_DEFAULTS.bucket,\n      })\n    )\n    downloadTextFile(config, 'outputs.influxdb_v2', '.conf')\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {name, id} = getOrg(state)\n  const server = window.location.origin\n  const buckets = getAll<Bucket>(state, ResourceType.Buckets)\n\n  return {\n    org: name,\n    orgID: id,\n    server,\n    buckets,\n  }\n}\n\nexport {TelegrafOutputOverlay}\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(TelegrafOutputOverlay)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Types\nimport {AppState} from 'src/types'\nimport {OverlayID} from 'src/overlays/reducers/overlays'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport NoteEditorOverlay from 'src/dashboards/components/NoteEditorOverlay'\nimport AllAccessTokenOverlay from 'src/authorizations/components/AllAccessTokenOverlay'\nimport BucketsTokenOverlay from 'src/authorizations/components/BucketsTokenOverlay'\nimport TelegrafConfigOverlay from 'src/telegrafs/components/TelegrafConfigOverlay'\nimport TelegrafOutputOverlay from 'src/telegrafs/components/TelegrafOutputOverlay'\nimport {dismissOverlay} from 'src/overlays/actions/overlays'\n\ninterface StateProps {\n  overlayID: OverlayID\n  onClose: () => void\n}\n\ninterface DispatchProps {\n  clearOverlayControllerState: typeof dismissOverlay\n}\n\ntype OverlayControllerProps = StateProps & DispatchProps\n\nconst OverlayController: FunctionComponent<OverlayControllerProps> = props => {\n  let activeOverlay = <></>\n  let visibility = true\n\n  const {overlayID, onClose, clearOverlayControllerState} = props\n\n  const closer = () => {\n    clearOverlayControllerState()\n    if (onClose) {\n      onClose()\n    }\n  }\n\n  switch (overlayID) {\n    case 'add-note':\n    case 'edit-note':\n      activeOverlay = <NoteEditorOverlay onClose={closer} />\n      break\n    case 'add-master-token':\n      activeOverlay = <AllAccessTokenOverlay onClose={closer} />\n      break\n    case 'add-token':\n      activeOverlay = <BucketsTokenOverlay onClose={closer} />\n      break\n    case 'telegraf-config':\n      activeOverlay = <TelegrafConfigOverlay onClose={closer} />\n      break\n    case 'telegraf-output':\n      activeOverlay = <TelegrafOutputOverlay onClose={closer} />\n      break\n    default:\n      visibility = false\n  }\n\n  return <Overlay visible={visibility}>{activeOverlay}</Overlay>\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const id = state.overlays.id\n  const onClose = state.overlays.onClose\n\n  return {\n    overlayID: id,\n    onClose,\n  }\n}\n\nconst mdtp = {\n  clearOverlayControllerState: dismissOverlay,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(OverlayController)\n","// Libraries\nimport React, {FC} from 'react'\nimport {Link} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport {FeatureFlag} from 'src/shared/utils/featureFlag'\nimport {\n  AppHeader,\n  PopNav,\n  Button,\n  ComponentColor,\n  FlexBox,\n  FlexDirection,\n  ComponentSize,\n} from '@influxdata/clockface'\n\n// Constants\nimport {\n  CLOUD_URL,\n  CLOUD_USAGE_PATH,\n  CLOUD_BILLING_PATH,\n  CLOUD_CHECKOUT_PATH,\n  CLOUD_LOGOUT_PATH,\n} from 'src/shared/constants'\n\n// Types\nimport {AppState, Organization} from 'src/types'\nimport {MeState} from 'src/shared/reducers/me'\n\n// Images\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  org: Organization\n  me: MeState\n}\n\nconst Logo = require('../images/influxdata-logo.png')\n\nconst CloudNav: FC<StateProps> = ({org, me}) => {\n  const usageURL = `${CLOUD_URL}${CLOUD_USAGE_PATH}`\n  const billingURL = `${CLOUD_URL}${CLOUD_BILLING_PATH}`\n  const checkoutURL = `${CLOUD_URL}${CLOUD_CHECKOUT_PATH}`\n  const logoutURL = `${CLOUD_URL}${CLOUD_LOGOUT_PATH}`\n  const handleUpgradeClick = () => {\n    window.location.assign(checkoutURL)\n  }\n\n  if (!org) {\n    return (\n      <AppHeader className=\"cloud-nav\">\n        <AppHeader.Logo>\n          <img className=\"cloud-nav--logo\" alt=\"InfluxData Logo\" src={Logo} />\n        </AppHeader.Logo>\n      </AppHeader>\n    )\n  }\n\n  return (\n    <AppHeader className=\"cloud-nav\">\n      <AppHeader.Logo>\n        <Link to={`/orgs/${org.id}`} className=\"cloud-nav--logo-link\">\n          <img className=\"cloud-nav--logo\" alt=\"InfluxData Logo\" src={Logo} />\n        </Link>\n      </AppHeader.Logo>\n      <FlexBox direction={FlexDirection.Row} margin={ComponentSize.Medium}>\n        <Button\n          color={ComponentColor.Success}\n          text=\"Upgrade\"\n          onClick={handleUpgradeClick}\n          className=\"upgrade-payg--button\"\n        />\n        <PopNav>\n          <p className=\"cloud-nav--account\">\n            Logged in as <strong>{me.name}</strong>\n          </p>\n          <PopNav.Item\n            active={false}\n            titleLink={className => (\n              <a className={className} href={usageURL}>\n                Usage\n              </a>\n            )}\n          />\n          <FeatureFlag name=\"cloudBilling\">\n            <PopNav.Item\n              active={false}\n              titleLink={className => (\n                <a className={className} href={billingURL}>\n                  Billing\n                </a>\n              )}\n            />\n          </FeatureFlag>\n          <PopNav.Item\n            active={false}\n            titleLink={className => (\n              <a className={className} href={logoutURL}>\n                Logout\n              </a>\n            )}\n          />\n        </PopNav>\n      </FlexBox>\n    </AppHeader>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const org = getOrg(state)\n  const me = state.me\n  return {org, me}\n}\n\nexport default connect<StateProps>(mstp)(CloudNav)\n","// Libraries\nimport React, {SFC, ReactChildren} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {AppWrapper} from '@influxdata/clockface'\nimport Nav from 'src/pageLayout'\nimport TooltipPortal from 'src/portals/TooltipPortal'\nimport NotesPortal from 'src/portals/NotesPortal'\nimport Notifications from 'src/shared/components/notifications/Notifications'\nimport OverlayController from 'src/overlays/components/OverlayController'\nimport CloudNav from 'src/pageLayout/components/CloudNav'\nimport CloudOnly from 'src/shared/components/cloud/CloudOnly'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  inPresentationMode: boolean\n}\ninterface OwnProps {\n  children: ReactChildren\n}\n\ntype Props = OwnProps & StateProps\n\nconst App: SFC<Props> = ({children, inPresentationMode}) => (\n  <>\n    <CloudOnly>\n      <CloudNav />\n    </CloudOnly>\n    <AppWrapper presentationMode={inPresentationMode}>\n      <Notifications />\n      <TooltipPortal />\n      <NotesPortal />\n      <OverlayController />\n      <Nav />\n      {children}\n    </AppWrapper>\n  </>\n)\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    app: {\n      ephemeral: {inPresentationMode},\n    },\n  } = state\n\n  return {inPresentationMode}\n}\n\nexport default connect<StateProps, {}>(\n  mstp,\n  null\n)(App)\n","// Libraries\nimport {Dispatch} from 'redux'\nimport {push, RouterAction} from 'react-router-redux'\nimport {normalize} from 'normalizr'\n\n// APIs\nimport {getErrorMessage} from 'src/utils/api'\nimport * as api from 'src/client'\n\n// Actions\nimport {notify} from 'src/shared/actions/notifications'\nimport {\n  Action,\n  setOrgs,\n  addOrg,\n  removeOrg,\n  editOrg,\n} from 'src/organizations/actions/creators'\n\n// Constants\nimport {\n  orgCreateSuccess,\n  orgCreateFailed,\n  bucketCreateSuccess,\n  bucketCreateFailed,\n  orgEditSuccess,\n  orgEditFailed,\n  orgRenameSuccess,\n  orgRenameFailed,\n} from 'src/shared/copy/notifications'\n\n// Schemas\nimport {orgSchema, arrayOfOrgs} from 'src/schemas'\n\n// Types\nimport {\n  Organization,\n  RemoteDataState,\n  NotificationAction,\n  Bucket,\n  AppThunk,\n  OrgEntities,\n} from 'src/types'\n\nexport const getOrganizations = () => async (\n  dispatch: Dispatch<Action>\n): Promise<Organization[]> => {\n  try {\n    dispatch(setOrgs(RemoteDataState.Loading))\n\n    const resp = await api.getOrgs({})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const {orgs} = resp.data\n\n    const organizations = normalize<Organization, OrgEntities, string[]>(\n      orgs,\n      arrayOfOrgs\n    )\n\n    dispatch(setOrgs(RemoteDataState.Done, organizations))\n\n    return orgs\n  } catch (error) {\n    console.error(error)\n    dispatch(setOrgs(RemoteDataState.Error, null))\n  }\n}\n\nexport const createOrgWithBucket = (\n  org: Organization,\n  bucket: Bucket\n): AppThunk<Promise<void>> => async (\n  dispatch: Dispatch<Action | RouterAction | NotificationAction>\n) => {\n  let createdOrg: Organization\n\n  try {\n    const orgResp = await api.postOrg({data: org})\n    if (orgResp.status !== 201) {\n      throw new Error(orgResp.data.message)\n    }\n\n    createdOrg = orgResp.data\n\n    dispatch(notify(orgCreateSuccess()))\n\n    const normOrg = normalize<Organization, OrgEntities, string>(\n      createdOrg,\n      orgSchema\n    )\n\n    dispatch(addOrg(normOrg))\n    dispatch(push(`/orgs/${createdOrg.id}`))\n\n    const bucketResp = await api.postBucket({\n      data: {...bucket, orgID: createdOrg.id},\n    })\n\n    if (bucketResp.status !== 201) {\n      throw new Error(bucketResp.data.message)\n    }\n\n    dispatch(notify(bucketCreateSuccess()))\n  } catch (error) {\n    console.error(error)\n\n    if (!createdOrg) {\n      dispatch(notify(orgCreateFailed()))\n    }\n    const message = getErrorMessage(error)\n    dispatch(notify(bucketCreateFailed(message)))\n  }\n}\n\nexport const createOrg = (org: Organization) => async (\n  dispatch: Dispatch<Action | RouterAction | NotificationAction>\n): Promise<void> => {\n  try {\n    const resp = await api.postOrg({data: org})\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const createdOrg = resp.data\n    const normOrg = normalize<Organization, OrgEntities, string>(\n      createdOrg,\n      orgSchema\n    )\n\n    dispatch(addOrg(normOrg))\n    dispatch(push(`/orgs/${createdOrg.id}`))\n\n    dispatch(notify(orgCreateSuccess()))\n  } catch (e) {\n    console.error(e)\n    dispatch(notify(orgCreateFailed()))\n  }\n}\n\nexport const deleteOrg = (org: Organization) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    const resp = await api.deleteOrg({orgID: org.id})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeOrg(org.id))\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport const updateOrg = (org: Organization) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    const resp = await api.patchOrg({orgID: org.id, data: org})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const updatedOrg = resp.data\n    const normOrg = normalize<Organization, OrgEntities, string>(\n      updatedOrg,\n      orgSchema\n    )\n\n    dispatch(editOrg(normOrg))\n\n    dispatch(notify(orgEditSuccess()))\n  } catch (error) {\n    dispatch(notify(orgEditFailed()))\n    console.error(error)\n  }\n}\n\nexport const renameOrg = (\n  originalName: string,\n  org: Organization\n): AppThunk<Promise<void>> => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    const resp = await api.patchOrg({orgID: org.id, data: org})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const updatedOrg = resp.data\n\n    const normOrg = normalize<Organization, OrgEntities, string>(\n      updatedOrg,\n      orgSchema\n    )\n\n    dispatch(editOrg(normOrg))\n    dispatch(notify(orgRenameSuccess(updatedOrg.name)))\n  } catch (error) {\n    dispatch(notify(orgRenameFailed(originalName)))\n    console.error(error)\n  }\n}\n","// Libraries\nimport React, {useEffect, FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\n\n// Types\nimport {RemoteDataState, AppState} from 'src/types'\n\n// Actions\nimport {getOrganizations as getOrganizationsAction} from 'src/organizations/actions/thunks'\n\ninterface PassedInProps {\n  children: React.ReactElement<any>\n}\n\ninterface DispatchProps {\n  getOrganizations: typeof getOrganizationsAction\n}\n\ninterface StateProps {\n  status: RemoteDataState\n}\n\ntype Props = StateProps & DispatchProps & PassedInProps\n\nconst GetOrganizations: FunctionComponent<Props> = ({\n  status,\n  getOrganizations,\n  children,\n}) => {\n  useEffect(() => {\n    if (status === RemoteDataState.NotStarted) {\n      getOrganizations()\n    }\n  }, [])\n\n  return (\n    <SpinnerContainer loading={status} spinnerComponent={<TechnoSpinner />}>\n      {children && React.cloneElement(children)}\n    </SpinnerContainer>\n  )\n}\n\nconst mdtp = {\n  getOrganizations: getOrganizationsAction,\n}\n\nconst mstp = ({resources}: AppState): StateProps => ({\n  status: resources.orgs.status,\n})\n\nexport default connect<StateProps, DispatchProps, PassedInProps>(\n  mstp,\n  mdtp\n)(GetOrganizations)\n","export const isOnboardingURL = () => {\n  return !!window.location.pathname.match(/\\/onboarding/)\n}\n","// Libraries\nimport React, {ReactElement, PureComponent} from 'react'\nimport {InjectedRouter} from 'react-router'\n\n// APIs\nimport {client} from 'src/utils/api'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\n\n// Utils\nimport {isOnboardingURL} from 'src/onboarding/utils'\n\n// Types\nimport {RemoteDataState} from 'src/types'\n\ninterface State {\n  loading: RemoteDataState\n  isSetupComplete: boolean\n}\n\ninterface Props {\n  router: InjectedRouter\n  children: ReactElement<any>\n}\n\n@ErrorHandling\nexport class Setup extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      loading: RemoteDataState.NotStarted,\n      isSetupComplete: false,\n    }\n  }\n\n  public async componentDidMount() {\n    const {router} = this.props\n\n    if (isOnboardingURL()) {\n      this.setState({\n        loading: RemoteDataState.Done,\n      })\n      return\n    }\n\n    const {allowed} = await client.setup.status()\n    this.setState({\n      loading: RemoteDataState.Done,\n    })\n\n    if (!allowed) {\n      return\n    }\n\n    router.push('/onboarding/0')\n  }\n\n  public render() {\n    const {loading} = this.state\n\n    return (\n      <SpinnerContainer loading={loading} spinnerComponent={<TechnoSpinner />}>\n        {this.props.children && React.cloneElement(this.props.children)}\n      </SpinnerContainer>\n    )\n  }\n}\n\nexport default Setup\n","// Libraries\nimport React, {ReactElement, PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\nimport {client} from 'src/utils/api'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\n\n// Actions\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\n\n// Constants\nimport {sessionTimedOut} from 'src/shared/copy/notifications'\nimport {CLOUD, CLOUD_SIGNIN_PATHNAME} from 'src/shared/constants'\n\n// Types\nimport {RemoteDataState} from 'src/types'\n\ninterface State {\n  loading: RemoteDataState\n}\n\ninterface OwnProps {\n  children: ReactElement<any>\n}\n\ninterface DispatchProps {\n  notify: typeof notifyAction\n}\n\ntype Props = OwnProps & WithRouterProps & DispatchProps\n\nconst FETCH_WAIT = 60000\n\n@ErrorHandling\nexport class Signin extends PureComponent<Props, State> {\n  public state: State = {loading: RemoteDataState.NotStarted}\n\n  private hasMounted = false\n  private intervalID: NodeJS.Timer\n\n  public async componentDidMount() {\n    this.hasMounted = true\n    this.setState({loading: RemoteDataState.Loading})\n\n    await this.checkForLogin()\n\n    if (this.hasMounted) {\n      this.setState({loading: RemoteDataState.Done})\n      this.intervalID = setInterval(() => {\n        this.checkForLogin()\n      }, FETCH_WAIT)\n    }\n  }\n\n  public componentWillUnmount() {\n    clearInterval(this.intervalID)\n    this.hasMounted = false\n  }\n\n  public render() {\n    const {loading} = this.state\n\n    return (\n      <SpinnerContainer loading={loading} spinnerComponent={<TechnoSpinner />}>\n        {this.props.children && React.cloneElement(this.props.children)}\n      </SpinnerContainer>\n    )\n  }\n\n  private checkForLogin = async () => {\n    try {\n      await client.users.me()\n    } catch (error) {\n      const {\n        location: {pathname},\n      } = this.props\n\n      clearInterval(this.intervalID)\n\n      // TODO: add returnTo to CLOUD signin\n      if (CLOUD) {\n        window.location.pathname = CLOUD_SIGNIN_PATHNAME\n\n        throw error\n      }\n\n      if (pathname.startsWith('/signin')) {\n        return\n      }\n\n      let returnTo = ''\n\n      if (pathname !== '/') {\n        returnTo = `?returnTo=${pathname}`\n        this.props.notify(sessionTimedOut())\n      }\n\n      this.props.router.replace(`/signin${returnTo}`)\n    }\n  }\n}\n\nconst mdtp: DispatchProps = {\n  notify: notifyAction,\n}\n\nexport default connect(\n  null,\n  mdtp\n)(withRouter(Signin))\n","import React, {SFC} from 'react'\n\nconst SplashLogo: SFC = () => <div className=\"splash-page--logo\" />\n\nexport default SplashLogo\n","import React, {SFC} from 'react'\n\ninterface Props {\n  children: JSX.Element[] | JSX.Element\n}\n\nconst SplashPanel: SFC<Props> = ({children}) => (\n  <div className=\"splash-page--panel\">{children}</div>\n)\n\nexport default SplashPanel\n","import React, {SFC} from 'react'\n\ninterface Props {\n  title: string\n}\n\nconst SplashHeader: SFC<Props> = ({title}) => (\n  <h3 className=\"splash-page--heading\">{title}</h3>\n)\n\nexport default SplashHeader\n","import React, {Component} from 'react'\n\nimport SplashLogo from 'src/shared/components/splash_page/SplashLogo'\nimport SplashPanel from 'src/shared/components/splash_page/SplashPanel'\nimport SplashHeader from 'src/shared/components/splash_page/SplashHeader'\n\ninterface Props {\n  children: JSX.Element | JSX.Element[]\n}\n\nclass SplashPage extends Component<Props> {\n  public static Logo = SplashLogo\n  public static Panel = SplashPanel\n  public static Header = SplashHeader\n\n  public render() {\n    const {children} = this.props\n\n    return (\n      <div className=\"splash-page\">\n        <div className=\"splash-page--child\">{children}</div>\n        <p className=\"splash-page--credits\">\n          Powered by <span className=\"icon cubo-uniform\" />{' '}\n          <a href=\"https://www.influxdata.com/\" target=\"_blank\">\n            InfluxData\n          </a>\n        </p>\n        <div className=\"splash-page--image\" />\n      </div>\n    )\n  }\n}\n\nexport default SplashPage\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport _, {get} from 'lodash'\n\n// Components\nimport {Form, Input, Button, Grid} from '@influxdata/clockface'\n\n// APIs\nimport {postSignin} from 'src/client'\n\n// Actions\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\n\n// Types\nimport {Links} from 'src/types/links'\nimport {AppState} from 'src/types'\nimport {\n  Columns,\n  InputType,\n  ButtonType,\n  ComponentSize,\n  ComponentColor,\n} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\nexport interface OwnProps {\n  links: Links\n  notify: typeof notifyAction\n}\n\ninterface State {\n  username: string\n  password: string\n}\n\ntype Props = OwnProps & WithRouterProps\n\n@ErrorHandling\nclass SigninForm extends PureComponent<Props, State> {\n  public state: State = {\n    username: '',\n    password: '',\n  }\n\n  public render() {\n    const {username, password} = this.state\n    return (\n      <Form onSubmit={this.handleSignIn}>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Element label=\"Username\">\n                <Input\n                  name=\"username\"\n                  value={username}\n                  onChange={this.handleUsername}\n                  size={ComponentSize.Medium}\n                  autoFocus={true}\n                  testID=\"username\"\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Element label=\"Password\">\n                <Input\n                  name=\"password\"\n                  value={password}\n                  onChange={this.handlePassword}\n                  size={ComponentSize.Medium}\n                  type={InputType.Password}\n                  testID=\"password\"\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Footer>\n                <Button\n                  color={ComponentColor.Primary}\n                  text=\"Sign In\"\n                  size={ComponentSize.Medium}\n                  type={ButtonType.Submit}\n                />\n              </Form.Footer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form>\n    )\n  }\n\n  private handleUsername = (e: ChangeEvent<HTMLInputElement>): void => {\n    const username = e.target.value\n    this.setState({username})\n  }\n  private handlePassword = (e: ChangeEvent<HTMLInputElement>): void => {\n    const password = e.target.value\n    this.setState({password})\n  }\n\n  private handleSignIn = async (): Promise<void> => {\n    const {notify} = this.props\n    const {username, password} = this.state\n\n    try {\n      const resp = await postSignin({auth: {username, password}})\n\n      if (resp.status !== 204) {\n        throw new Error(resp.data.message)\n      }\n\n      this.handleRedirect()\n    } catch (error) {\n      const message = get(error, 'response.data.msg', '')\n      const status = get(error, 'response.status', '')\n\n      if (status === 401) {\n        notify({\n          ...copy.SigninError,\n          message: 'Login failed: username or password is invalid',\n        })\n        return\n      }\n\n      if (!message) {\n        notify(copy.SigninError)\n        return\n      }\n\n      notify({...copy.SigninError, message})\n    }\n  }\n\n  private handleRedirect() {\n    const {router} = this.props\n    const {query} = this.props.location\n\n    if (query && query.returnTo) {\n      router.replace(query.returnTo)\n    } else {\n      router.push('/')\n    }\n  }\n}\n\nconst mstp = ({links}: AppState) => ({\n  links,\n})\n\nconst mdtp = {\n  notify: notifyAction,\n}\n\nexport default connect(\n  mstp,\n  mdtp\n)(withRouter(SigninForm))\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Constants\nimport {VERSION, GIT_SHA} from 'src/shared/constants'\n\ninterface Props {\n  widthPixels?: number\n}\n\nclass VersionInfo extends PureComponent<Props> {\n  public render() {\n    return (\n      <div className=\"version-info\" style={this.style}>\n        <p>\n          Version {VERSION} {GIT_SHA && <code>({GIT_SHA.slice(0, 7)})</code>}\n        </p>\n      </div>\n    )\n  }\n\n  private get style() {\n    if (this.props.widthPixels) {\n      return {width: `${this.props.widthPixels}px`}\n    }\n  }\n}\n\nexport default VersionInfo\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\n// APIs\nimport {client} from 'src/utils/api'\n\n// Actions\nimport {dismissAllNotifications} from 'src/shared/actions/notifications'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport SplashPage from 'src/shared/components/splash_page/SplashPage'\nimport SigninForm from 'src/onboarding/components/SigninForm'\nimport {\n  SpinnerContainer,\n  TechnoSpinner,\n  Panel,\n  AlignItems,\n} from '@influxdata/clockface'\nimport {RemoteDataState} from 'src/types'\nimport VersionInfo from 'src/shared/components/VersionInfo'\n\n// Constants\nimport {CLOUD, CLOUD_SIGNIN_PATHNAME} from 'src/shared/constants'\n\ninterface State {\n  status: RemoteDataState\n}\n\ninterface DispatchProps {\n  dismissAllNotifications: typeof dismissAllNotifications\n}\n\ntype Props = WithRouterProps & DispatchProps\n@ErrorHandling\nclass SigninPage extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      status: RemoteDataState.Loading,\n    }\n  }\n  public async componentDidMount() {\n    const {allowed} = await client.setup.status()\n\n    if (allowed) {\n      this.props.router.push('/onboarding/0')\n    } else if (CLOUD) {\n      window.location.pathname = CLOUD_SIGNIN_PATHNAME\n      return\n    }\n\n    this.setState({status: RemoteDataState.Done})\n  }\n\n  componentWillUnmount() {\n    this.props.dismissAllNotifications()\n  }\n\n  public render() {\n    return (\n      <SpinnerContainer\n        loading={this.state.status}\n        spinnerComponent={<TechnoSpinner />}\n      >\n        <SplashPage>\n          <Panel className=\"signin-panel\">\n            <Panel.Body alignItems={AlignItems.Center}>\n              <SplashPage.Logo />\n              <SplashPage.Header title=\"InfluxData\" />\n              <SigninForm />\n            </Panel.Body>\n            <Panel.Footer>\n              <VersionInfo />\n            </Panel.Footer>\n          </Panel>\n        </SplashPage>\n      </SpinnerContainer>\n    )\n  }\n}\n\nconst mdtp: DispatchProps = {\n  dismissAllNotifications,\n}\nexport default connect(\n  null,\n  mdtp\n)(withRouter(SigninPage))\n","// Libraries\nimport {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// APIs\nimport {postSignout} from 'src/client'\n\n// Constants\nimport {CLOUD, CLOUD_URL, CLOUD_LOGOUT_PATH} from 'src/shared/constants'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ntype Props = WithRouterProps\n\n@ErrorHandling\nexport class Logout extends PureComponent<Props> {\n  public componentDidMount() {\n    this.handleSignOut()\n  }\n\n  public render() {\n    return null\n  }\n\n  private handleSignOut = async () => {\n    if (CLOUD) {\n      window.location.href = `${CLOUD_URL}${CLOUD_LOGOUT_PATH}`\n      return\n    } else {\n      const resp = await postSignout({})\n\n      if (resp.status !== 204) {\n        throw new Error(resp.data.message)\n      }\n\n      this.props.router.push(`/signin`)\n    }\n  }\n}\n\nexport default withRouter<Props>(Logout)\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Components\nimport {Form, Input, Grid} from '@influxdata/clockface'\n\n// Types\nimport {Columns, InputType} from '@influxdata/clockface'\nimport {TaskSchedule} from 'src/types'\n\ninterface Props {\n  schedule: TaskSchedule\n  cron: string\n  offset: string\n  interval: string\n  onChangeInput: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport default class TaskScheduleFormFields extends PureComponent<Props> {\n  public render() {\n    const {offset, onChangeInput, interval, cron, schedule} = this.props\n\n    return (\n      <>\n        <Grid.Column widthXS={Columns.Six}>\n          <Form.Element\n            label={schedule === TaskSchedule.interval ? 'Every' : 'Cron'}\n          >\n            <Input\n              name={schedule}\n              type={InputType.Text}\n              placeholder={\n                schedule === TaskSchedule.interval ? '3h30s' : '0 2 * * *'\n              }\n              value={schedule === TaskSchedule.interval ? interval : cron}\n              onChange={this.props.onChangeInput}\n              testID=\"task-form-schedule-input\"\n            />\n          </Form.Element>\n        </Grid.Column>\n\n        <Grid.Column widthXS={Columns.Six}>\n          <Form.Element label=\"Offset\">\n            <Input\n              name=\"offset\"\n              type={InputType.Text}\n              value={offset}\n              placeholder=\"20m\"\n              onChange={onChangeInput}\n              testID=\"task-form-offset-input\"\n            />\n          </Form.Element>\n        </Grid.Column>\n      </>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {get} from 'lodash'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Dropdown, ComponentStatus} from '@influxdata/clockface'\n\n// Utils\nimport {isSystemBucket} from 'src/buckets/constants/index'\nimport {getAll, getStatus} from 'src/resources/selectors'\n\n// Types\nimport {RemoteDataState, AppState, Bucket, ResourceType} from 'src/types'\n\ninterface OwnProps {\n  onChangeBucketName: (selectedBucketName: string) => void\n  selectedBucketName: string\n}\n\ninterface StateProps {\n  buckets: Bucket[]\n  status: RemoteDataState\n}\n\ntype Props = OwnProps & StateProps\n\nclass TaskOptionsBucketDropdown extends PureComponent<Props> {\n  public componentDidMount() {\n    this.setSelectedToFirst()\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    if (this.props.buckets !== prevProps.buckets) {\n      this.setSelectedToFirst()\n    }\n  }\n\n  public render() {\n    const {selectedBucketName} = this.props\n\n    return (\n      <Dropdown\n        button={(active, onClick) => (\n          <Dropdown.Button\n            active={active}\n            onClick={onClick}\n            status={this.status}\n            testID=\"task-options-bucket-dropdown--button\"\n          >\n            {selectedBucketName}\n          </Dropdown.Button>\n        )}\n        menu={onCollapse => (\n          <Dropdown.Menu onCollapse={onCollapse}>\n            {this.dropdownItems}\n          </Dropdown.Menu>\n        )}\n      />\n    )\n  }\n\n  private get dropdownItems(): JSX.Element[] {\n    const {buckets} = this.props\n\n    if (!buckets || !buckets.length) {\n      return [\n        <Dropdown.Item id=\"no-buckets\" key=\"no-buckets\" value=\"no-buckets\">\n          No Buckets found in Org\n        </Dropdown.Item>,\n      ]\n    }\n\n    const nonSystemBuckets = buckets.filter(\n      bucket => !isSystemBucket(bucket.name)\n    )\n\n    return nonSystemBuckets.map(bucket => {\n      return (\n        <Dropdown.Item\n          id={bucket.name}\n          key={bucket.name}\n          value={bucket.name}\n          onClick={this.props.onChangeBucketName}\n          selected={bucket.name === this.selectedName}\n        >\n          {bucket.name}\n        </Dropdown.Item>\n      )\n    })\n  }\n\n  private get status(): ComponentStatus {\n    const {status, buckets} = this.props\n    if (status === RemoteDataState.Loading) {\n      return ComponentStatus.Loading\n    }\n    if (!buckets || !buckets.length) {\n      return ComponentStatus.Disabled\n    }\n    return ComponentStatus.Default\n  }\n\n  private get selectedName(): string {\n    const {selectedBucketName, buckets} = this.props\n\n    if (buckets && buckets.length) {\n      if (selectedBucketName) {\n        return selectedBucketName\n      }\n      return get(buckets, '0.name', '')\n    }\n    return 'no-buckets'\n  }\n\n  private setSelectedToFirst() {\n    const {buckets, selectedBucketName, onChangeBucketName} = this.props\n    const firstBucketNameInList = get(buckets, '0.name', '')\n\n    if (selectedBucketName) {\n      return\n    }\n\n    onChangeBucketName(firstBucketNameInList)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const buckets = getAll<Bucket>(state, ResourceType.Buckets).filter(\n    (bucket: Bucket): boolean => bucket.type !== 'system'\n  )\n  const status = getStatus(state, ResourceType.Buckets)\n\n  return {\n    buckets,\n    status,\n  }\n}\n\nexport default connect<StateProps, {}, OwnProps>(\n  mstp,\n  null\n)(TaskOptionsBucketDropdown)\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Components\nimport {\n  Form,\n  SelectGroup,\n  Input,\n  Button,\n  FlexBox,\n  Grid,\n} from '@influxdata/clockface'\nimport TaskScheduleFormField from 'src/tasks/components/TaskScheduleFormField'\nimport TaskOptionsBucketDropdown from 'src/tasks/components/TasksOptionsBucketDropdown'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Types\nimport {\n  Columns,\n  ButtonType,\n  ButtonShape,\n  ComponentColor,\n  ComponentStatus,\n  FlexDirection,\n  AlignItems,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport {ResourceType, TaskOptions, TaskSchedule} from 'src/types'\n\ninterface Props {\n  taskOptions: TaskOptions\n  isInOverlay: boolean\n  canSubmit: boolean\n  onSubmit: () => void\n  dismiss: () => void\n  onChangeScheduleType: (schedule: TaskSchedule) => void\n  onChangeInput: (e: ChangeEvent<HTMLInputElement>) => void\n  onChangeToBucketName: (bucketName: string) => void\n}\n\ninterface State {\n  schedule: TaskSchedule\n}\n\nexport default class TaskForm extends PureComponent<Props, State> {\n  public static defaultProps = {\n    isInOverlay: false,\n    canSubmit: true,\n    onSubmit: () => {},\n    dismiss: () => {},\n    onChangeToBucketName: () => {},\n  }\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      schedule: props.taskOptions.taskScheduleType,\n    }\n  }\n\n  public render() {\n    const {\n      onChangeInput,\n      onChangeToBucketName,\n      taskOptions: {\n        name,\n        taskScheduleType,\n        interval,\n        offset,\n        cron,\n        toBucketName,\n      },\n      isInOverlay,\n    } = this.props\n\n    return (\n      <Form>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Element label=\"Name\">\n                <Input\n                  name=\"name\"\n                  placeholder=\"Name your task\"\n                  onChange={onChangeInput}\n                  value={name}\n                  testID=\"task-form-name\"\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column>\n              <Form.Element label=\"Schedule Task\">\n                <FlexBox\n                  direction={FlexDirection.Column}\n                  alignItems={AlignItems.FlexStart}\n                  margin={ComponentSize.Small}\n                >\n                  <SelectGroup shape={ButtonShape.StretchToFit}>\n                    <SelectGroup.Option\n                      name=\"task-schedule\"\n                      id=\"every\"\n                      active={taskScheduleType === TaskSchedule.interval}\n                      value={TaskSchedule.interval}\n                      titleText=\"Run task at regular intervals\"\n                      onClick={this.handleChangeScheduleType}\n                      testID=\"task-card-every-btn\"\n                    >\n                      Every\n                    </SelectGroup.Option>\n                    <SelectGroup.Option\n                      name=\"task-schedule\"\n                      id=\"cron\"\n                      active={taskScheduleType === TaskSchedule.cron}\n                      value={TaskSchedule.cron}\n                      titleText=\"Use cron syntax for more control over scheduling\"\n                      onClick={this.handleChangeScheduleType}\n                      testID=\"task-card-cron-btn\"\n                    >\n                      Cron\n                    </SelectGroup.Option>\n                  </SelectGroup>\n                  {this.cronHelper}\n                </FlexBox>\n              </Form.Element>\n            </Grid.Column>\n            <TaskScheduleFormField\n              onChangeInput={onChangeInput}\n              schedule={taskScheduleType}\n              interval={interval}\n              offset={offset}\n              cron={cron}\n            />\n            {isInOverlay && (\n              <Grid.Column widthXS={Columns.Twelve}>\n                <Form.Element label=\"Output Bucket\">\n                  <GetResources resources={[ResourceType.Buckets]}>\n                    <TaskOptionsBucketDropdown\n                      selectedBucketName={toBucketName}\n                      onChangeBucketName={onChangeToBucketName}\n                    />\n                  </GetResources>\n                </Form.Element>\n              </Grid.Column>\n            )}\n            {isInOverlay && this.buttons}\n          </Grid.Row>\n        </Grid>\n      </Form>\n    )\n  }\n\n  private get buttons(): JSX.Element {\n    const {onSubmit, canSubmit, dismiss} = this.props\n    return (\n      <Grid.Column widthXS={Columns.Twelve}>\n        <Form.Footer>\n          <Button\n            text=\"Cancel\"\n            onClick={dismiss}\n            titleText=\"Cancel save\"\n            type={ButtonType.Button}\n          />\n          <Button\n            text=\"Save as Task\"\n            color={ComponentColor.Success}\n            type={ButtonType.Submit}\n            onClick={onSubmit}\n            status={\n              canSubmit ? ComponentStatus.Default : ComponentStatus.Disabled\n            }\n            testID=\"task-form-save\"\n          />\n        </Form.Footer>\n      </Grid.Column>\n    )\n  }\n\n  private get cronHelper(): JSX.Element {\n    const {taskOptions} = this.props\n\n    if (taskOptions.taskScheduleType === TaskSchedule.cron) {\n      return (\n        <Form.Box>\n          <p className=\"time-format--helper\">\n            For more information on cron syntax,{' '}\n            <a href=\"https://crontab.guru/\" target=\"_blank\">\n              click here\n            </a>\n          </p>\n        </Form.Box>\n      )\n    }\n  }\n\n  private handleChangeScheduleType = (schedule: TaskSchedule): void => {\n    this.props.onChangeScheduleType(schedule)\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  Page,\n  FlexBox,\n  FlexDirection,\n  AlignItems,\n  ComponentSize,\n} from '@influxdata/clockface'\n\n// Types\nimport {AppState} from 'src/types'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface OwnProps {\n  title: string\n  altText?: string\n}\n\ninterface StateProps {\n  orgName: string\n}\n\ntype Props = OwnProps & StateProps\n\n@ErrorHandling\nclass PageTitleWithOrg extends PureComponent<Props> {\n  render() {\n    const {orgName, title, altText} = this.props\n\n    return (\n      <FlexBox\n        direction={FlexDirection.Column}\n        alignItems={AlignItems.FlexStart}\n        margin={ComponentSize.Small}\n      >\n        <Page.Title title={title} altText={altText} />\n        <Page.SubTitle title={orgName} />\n      </FlexBox>\n    )\n  }\n}\n\nconst mstp = (state: AppState) => {\n  return {orgName: getOrg(state).name}\n}\n\nexport default connect<StateProps>(mstp)(PageTitleWithOrg)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport PageTitleWithOrg from 'src/shared/components/PageTitleWithOrg'\n\n// Types\nimport {\n  ComponentColor,\n  Button,\n  ComponentStatus,\n  Page,\n} from '@influxdata/clockface'\n\ninterface Props {\n  title: string\n  canSubmit: boolean\n  onCancel: () => void\n  onSave: () => void\n}\n\nexport default class TaskHeader extends PureComponent<Props> {\n  public render() {\n    const {onCancel, onSave, title} = this.props\n    return (\n      <Page.Header fullWidth={true}>\n        <Page.HeaderLeft>\n          <PageTitleWithOrg title={title} />\n        </Page.HeaderLeft>\n        <Page.HeaderRight>\n          <Button\n            color={ComponentColor.Default}\n            text=\"Cancel\"\n            onClick={onCancel}\n            testID=\"task-cancel-btn\"\n          />\n          <Button\n            color={ComponentColor.Success}\n            text=\"Save\"\n            status={this.status}\n            onClick={onSave}\n            testID=\"task-save-btn\"\n          />\n        </Page.HeaderRight>\n      </Page.Header>\n    )\n  }\n\n  private get status() {\n    return this.props.canSubmit\n      ? ComponentStatus.Default\n      : ComponentStatus.Disabled\n  }\n}\n","import {MonacoType} from 'src/types'\n\nexport const THEME_NAME = 'baseTheme'\nexport default function(monaco: MonacoType) {\n  monaco.editor.defineTheme(THEME_NAME, {\n    base: 'vs-dark',\n    inherit: false,\n    rules: [\n      {\n        token: 'support.function',\n        foreground: '#9394FF',\n      },\n      {\n        token: 'keyword.operator.new',\n        foreground: '#9394FF',\n      },\n      {\n        token: 'keyword.control.flux',\n        foreground: '#9394FF',\n      },\n      {\n        token: 'comment.line.double-slash',\n        foreground: '#676978',\n      },\n      {\n        token: 'string.quoted.double.flux',\n        foreground: '#7CE490',\n      },\n      {\n        token: 'string.regexp',\n        foreground: '#FFB6A0',\n      },\n      {\n        token: 'constant.time',\n        foreground: '#6BDFFF',\n      },\n      {\n        token: 'constant.numeric',\n        foreground: '#6BDFFF',\n      },\n      {\n        token: 'constant.language',\n        foreground: '#32B08C',\n      },\n      {\n        token: 'keyword.operator',\n        foreground: '#ff4d96',\n      },\n      {\n        token: '',\n        foreground: '#f8f8f8',\n        background: '#202028',\n      },\n    ],\n    colors: {\n      'editor.foreground': '#F8F8F8',\n      'editor.background': '#202028',\n      'editorGutter.background': '#25252e',\n      'editor.selectionBackground': '#353640',\n      'editorLineNumber.foreground': '#666978',\n      'editor.lineHighlightBackground': '#353640',\n      'editorCursor.foreground': '#ffffff',\n      'editorActiveLineNumber.foreground': '#bec2cc',\n    },\n  })\n}\n","export const FLUXLANGID = 'flux' as const\n","import {get} from 'lodash'\n\n// Constants\nimport {FLUXLANGID} from 'src/external/constants'\n\n// Types\nimport {ServerResponse} from 'src/types'\n\ntype LSPMessage =\n  | typeof initialize\n  | ReturnType<typeof didOpen>\n  | ReturnType<typeof didChange>\n  | ReturnType<typeof completion>\n\nconst URI = 'monacoeditor' as const\nconst JSONRPC = '2.0' as const\n\nexport const initialize = {\n  jsonrpc: JSONRPC,\n  id: 1,\n  method: 'initialize',\n  params: {},\n} as const\n\nexport const didOpen = (text: string) => ({\n  jsonrpc: JSONRPC,\n  id: 2,\n  method: 'textDocument/didOpen' as const,\n  params: {\n    textDocument: {\n      uri: URI,\n      languageId: FLUXLANGID,\n      version: 1 as const,\n      text,\n    },\n  },\n})\n\nexport const didChange = (\n  newText: string,\n  version: number,\n  messageID: number\n) => ({\n  jsonrpc: JSONRPC,\n  id: messageID,\n  method: 'textDocument/didChange' as const,\n  params: {\n    textDocument: {\n      uri: URI,\n      version: version,\n    },\n    contentChanges: [\n      {\n        text: newText,\n      },\n    ],\n  },\n})\n\nexport const completion = (position, context) => ({\n  jsonrpc: JSONRPC,\n  id: 100,\n  method: 'textDocument/completion' as const,\n  params: {\n    textDocument: {uri: URI},\n    position,\n    context,\n  },\n})\n\nexport const parseResponse = (response: ServerResponse): null | object => {\n  const message = response.get_message()\n  if (message) {\n    const split = message.split('\\n')\n    const parsed_msg = get(split, '2', null)\n    return JSON.parse(parsed_msg)\n  } else {\n    const error = response.get_error()\n    const split = error.split('\\n')\n    const parsed_err = get(split, '2', null)\n    return JSON.parse(parsed_err)\n  }\n}\n\nexport const sendMessage = (message: LSPMessage, server) => {\n  const stringifiedMessage = JSON.stringify(message)\n  const size = stringifiedMessage.length\n\n  const resp = server.process(\n    `Content-Length: ${size}\\r\\n\\r\\n` + stringifiedMessage\n  )\n\n  return parseResponse(resp)\n}\n","// Libraries\nimport {completion, sendMessage} from 'src/external/monaco.lspMessages'\nimport {\n  MonacoToProtocolConverter,\n  ProtocolToMonacoConverter,\n} from 'monaco-languageclient/lib/monaco-converter'\nimport {get} from 'lodash'\n\n// Constants\nimport {FLUXLANGID} from 'src/external/constants'\n\n// Types\nimport {CompletionItem} from 'monaco-languageclient/lib/services'\nimport {MonacoType} from 'src/types'\nimport {IDisposable} from 'monaco-editor'\n\nconst m2p = new MonacoToProtocolConverter()\nconst p2m = new ProtocolToMonacoConverter()\n\nexport const registerCompletion = (monaco: MonacoType, server): IDisposable => {\n  const completionProvider = monaco.languages.registerCompletionItemProvider(\n    FLUXLANGID,\n    {\n      provideCompletionItems: (model, position, context) => {\n        const wordUntil = model.getWordUntilPosition(position)\n        const defaultRange = new monaco.Range(\n          position.lineNumber,\n          wordUntil.startColumn,\n          position.lineNumber,\n          wordUntil.endColumn\n        )\n        const response = sendMessage(\n          completion(\n            m2p.asPosition(position.lineNumber, position.column),\n            context\n          ),\n          server\n        )\n\n        const completionItems = get(\n          response,\n          'result.items',\n          null\n        ) as CompletionItem[]\n\n        if (!completionItems) {\n          return\n        }\n        return p2m.asCompletionResult(completionItems, defaultRange)\n      },\n      triggerCharacters: [\n        '.',\n        'a',\n        'b',\n        'c',\n        'd',\n        'e',\n        'f',\n        'g',\n        'h',\n        'i',\n        'j',\n        'k',\n        'l',\n        'm',\n        'n',\n        'o',\n        'p',\n        'q',\n        'r',\n        's',\n        't',\n        'u',\n        'v',\n        'w',\n        'x',\n        'y',\n        'z',\n      ],\n    }\n  )\n  return completionProvider\n}\n","import loader from 'src/external/monaco.onigasm'\nimport {Registry} from 'monaco-textmate' // peer dependency\nimport {wireTmGrammars} from 'monaco-editor-textmate'\n\n// Constants\nimport {FLUXLANGID} from 'src/external/constants'\n\n// Types\nimport {MonacoType} from 'src/types'\n\nexport async function addSyntax(monaco: MonacoType) {\n  await loader()\n\n  const registry = new Registry({\n    // TODO: this is maintained in influxdata/vsflux, which is currently\n    // a private repo, so we can't use it yet (alex)\n    getGrammarDefinition: async () => ({\n      format: 'json',\n      content: await import(/* webpackPrefetch: 0 */ 'src/external/flux.tmLanguage.json').then(\n        data => {\n          return JSON.stringify(data)\n        }\n      ),\n    }),\n  })\n\n  // map of monaco \"language id's\" to TextMate scopeNames\n  const grammars = new Map()\n  grammars.set(FLUXLANGID, FLUXLANGID)\n\n  monaco.languages.setLanguageConfiguration(FLUXLANGID, {\n    autoClosingPairs: [\n      {open: '\"', close: '\"'},\n      {open: '[', close: ']'},\n      {open: \"'\", close: \"'\"},\n      {open: '{', close: '}'},\n      {open: '(', close: ')'},\n    ],\n  })\n\n  await wireTmGrammars(monaco, registry, grammars)\n}\n","import {MonacoType, EditorType} from 'src/types'\n\nexport const toggleCommenting = (s: string, isTogglingOn: boolean) => {\n  if (isTogglingOn) {\n    return `// ${s}`\n  }\n  return s.replace(/\\/\\/\\s*/, '')\n}\n\nexport const isCommented = (s: string) => !!s.match(/^\\s*(\\/\\/(.*)$)/g)\n\nexport function addKeyBindings(editor: EditorType, monaco: MonacoType) {\n  editor.addAction({\n    // An unique identifier of the contributed action.\n    id: 'toggle-comment',\n\n    // A label of the action that will be presented to the user.\n    label: 'toggling comments',\n\n    // An optional array of keybindings for the action.\n    keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_SLASH],\n\n    run: function(ed: EditorType) {\n      const values = ed.getValue().split('\\n')\n\n      const selection = ed.getSelection()\n\n      const {\n        startLineNumber,\n        endLineNumber,\n        positionColumn,\n        selectionStartColumn,\n      } = selection\n\n      // if any of the lines in the selection is uncommented then toggle commenting on\n      const isTogglingCommentingOn = values\n        .slice(startLineNumber - 1, endLineNumber)\n        .some((v: string) => !(v === '') && !isCommented(v))\n\n      const updatedValues = values.map((v: string, i: number) =>\n        i >= startLineNumber - 1 && i <= endLineNumber - 1\n          ? toggleCommenting(v, isTogglingCommentingOn)\n          : v\n      )\n\n      ed.setValue(updatedValues.join('\\n'))\n\n      ed.setSelection({\n        ...selection,\n        selectionStartColumn: isTogglingCommentingOn\n          ? selectionStartColumn + 3\n          : selectionStartColumn - 3,\n        positionColumn: isTogglingCommentingOn\n          ? positionColumn + 3\n          : positionColumn - 3,\n      })\n\n      return null\n    },\n  })\n}\n","// Libraries\nimport React, {FC, useEffect, useRef, useState} from 'react'\nimport {Server} from '@influxdata/flux-lsp-browser'\n\n// Components\nimport MonacoEditor from 'react-monaco-editor'\n\n// Utils\nimport addFluxTheme, {THEME_NAME} from 'src/external/monaco.fluxTheme'\nimport {registerCompletion} from 'src/external/monaco.fluxCompletions'\nimport {addSyntax} from 'src/external/monaco.fluxSyntax'\nimport {addKeyBindings} from 'src/external/monaco.keyBindings'\nimport {\n  sendMessage,\n  initialize,\n  didChange,\n  didOpen,\n} from 'src/external/monaco.lspMessages'\n\n// Constants\nimport {FLUXLANGID} from 'src/external/constants'\n\n// Types\nimport {OnChangeScript} from 'src/types/flux'\nimport {MonacoType, EditorType} from 'src/types'\n\nimport './FluxMonacoEditor.scss'\n\ninterface Props {\n  script: string\n  onChangeScript: OnChangeScript\n  onSubmitScript?: () => void\n  setEditorInstance?: (editor: EditorType) => void\n}\n\nconst FluxEditorMonaco: FC<Props> = ({\n  script,\n  onChangeScript,\n  onSubmitScript,\n  setEditorInstance,\n}) => {\n  let completionProvider = {dispose: () => {}}\n  const lspServer = useRef(new Server(false))\n  const [docVersion, setdocVersion] = useState(2)\n  const [msgID, setmsgID] = useState(3)\n\n  useEffect(() => {\n    sendMessage(initialize, lspServer.current)\n    sendMessage(didOpen(script), lspServer.current)\n    return () => {\n      completionProvider.dispose()\n    }\n  }, [])\n\n  const editorWillMount = (monaco: MonacoType) => {\n    monaco.languages.register({id: FLUXLANGID})\n    addFluxTheme(monaco)\n    addSyntax(monaco)\n    completionProvider = registerCompletion(monaco, lspServer.current)\n  }\n\n  const editorDidMount = (editor: EditorType, monaco: MonacoType) => {\n    if (setEditorInstance) {\n      setEditorInstance(editor)\n    }\n    addKeyBindings(editor, monaco)\n    editor.focus()\n    editor.onKeyUp(evt => {\n      const {ctrlKey, code} = evt\n      if (ctrlKey && code === 'Enter') {\n        if (onSubmitScript) {\n          onSubmitScript()\n        }\n      }\n    })\n  }\n\n  const onChange = (text: string) => {\n    sendMessage(didChange(text, docVersion, msgID), lspServer.current)\n    setdocVersion(docVersion + 1)\n    setmsgID(msgID + 1)\n    onChangeScript(text)\n  }\n\n  return (\n    <div className=\"time-machine-editor\" data-testid=\"flux-editor\">\n      <MonacoEditor\n        language={FLUXLANGID}\n        theme={THEME_NAME}\n        value={script}\n        onChange={onChange}\n        options={{\n          fontSize: 13,\n          fontFamily: '\"RobotoMono\", monospace',\n          cursorWidth: 2,\n          lineNumbersMinChars: 4,\n          lineDecorationsWidth: 0,\n          minimap: {\n            renderCharacters: false,\n          },\n          overviewRulerBorder: false,\n          automaticLayout: true,\n        }}\n        editorWillMount={editorWillMount}\n        editorDidMount={editorDidMount}\n      />\n    </div>\n  )\n}\n\nexport default FluxEditorMonaco\n","// Libraries\nimport {trimEnd} from 'lodash'\n\n// Types\nimport {TaskOptions, TaskSchedule} from 'src/types'\n\nexport const taskOptionsToFluxScript = (options: TaskOptions): string => {\n  let fluxScript = `option task = { \\n  name: \"${options.name}\",\\n`\n\n  if (options.taskScheduleType === TaskSchedule.interval) {\n    fluxScript = `${fluxScript}  every: ${options.interval},\\n`\n  } else if (options.taskScheduleType === TaskSchedule.cron) {\n    fluxScript = `${fluxScript}  cron: \"${options.cron}\",\\n`\n  }\n\n  if (options.offset) {\n    fluxScript = `${fluxScript}  offset: ${options.offset}\\n`\n  }\n\n  fluxScript = `${fluxScript}}`\n  return fluxScript\n}\n\nexport const addDestinationToFluxScript = (\n  script: string,\n  options: TaskOptions\n): string => {\n  const {toOrgName, toBucketName} = options\n\n  if (toOrgName && toBucketName) {\n    const trimmedScript = trimEnd(script)\n    const trimmedOrgName = toOrgName.trim()\n    const trimmedBucketName = toBucketName.trim()\n    return `${trimmedScript}\\n  |> to(bucket: \"${trimmedBucketName}\", org: \"${trimmedOrgName}\")`\n  }\n\n  return script\n}\n","import {getOrg} from 'src/organizations/selectors'\nimport {store} from 'src/index'\n\nexport const pageTitleSuffixer = (pageTitles: string[]): string => {\n  const state = store.getState()\n  const {name} = getOrg(state) || null\n  const titles = [...pageTitles, name, 'InfluxDB 2.0']\n\n  return titles.join(' | ')\n}\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {InjectedRouter} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport TaskForm from 'src/tasks/components/TaskForm'\nimport TaskHeader from 'src/tasks/components/TaskHeader'\nimport {Page} from '@influxdata/clockface'\n\nimport FluxEditor from 'src/shared/components/FluxMonacoEditor'\n\n// Actions\nimport {\n  setNewScript,\n  setTaskOption,\n  clearTask,\n} from 'src/tasks/actions/creators'\nimport {saveNewScript, cancel} from 'src/tasks/actions/thunks'\n\n// Utils\nimport {\n  taskOptionsToFluxScript,\n  addDestinationToFluxScript,\n} from 'src/utils/taskOptionsToFluxScript'\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\n\n// Types\nimport {AppState, TaskOptions, TaskOptionKeys, TaskSchedule} from 'src/types'\n\ninterface OwnProps {\n  router: InjectedRouter\n}\n\ninterface StateProps {\n  taskOptions: TaskOptions\n  newScript: string\n}\n\ninterface DispatchProps {\n  setNewScript: typeof setNewScript\n  saveNewScript: typeof saveNewScript\n  setTaskOption: typeof setTaskOption\n  clearTask: typeof clearTask\n  cancel: typeof cancel\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nclass TaskPage extends PureComponent<Props> {\n  constructor(props) {\n    super(props)\n  }\n\n  public componentDidMount() {\n    this.props.setTaskOption({\n      key: 'taskScheduleType',\n      value: TaskSchedule.interval,\n    })\n  }\n\n  public componentWillUnmount() {\n    this.props.clearTask()\n  }\n\n  public render(): JSX.Element {\n    const {newScript, taskOptions} = this.props\n\n    return (\n      <Page titleTag={pageTitleSuffixer(['Create Task'])}>\n        <TaskHeader\n          title=\"Create Task\"\n          canSubmit={this.isFormValid}\n          onCancel={this.handleCancel}\n          onSave={this.handleSave}\n        />\n        <Page.Contents fullWidth={true} scrollable={false}>\n          <div className=\"task-form\">\n            <div className=\"task-form--options\">\n              <TaskForm\n                taskOptions={taskOptions}\n                canSubmit={this.isFormValid}\n                onChangeInput={this.handleChangeInput}\n                onChangeScheduleType={this.handleChangeScheduleType}\n              />\n            </div>\n            <div className=\"task-form--editor\">\n              <FluxEditor\n                script={newScript}\n                onChangeScript={this.handleChangeScript}\n              />\n            </div>\n          </div>\n        </Page.Contents>\n      </Page>\n    )\n  }\n\n  private get isFormValid(): boolean {\n    const {\n      taskOptions: {name, cron, interval},\n      newScript,\n    } = this.props\n\n    const hasSchedule = !!cron || !!interval\n    return hasSchedule && !!name && !!newScript\n  }\n\n  private handleChangeScript = (script: string) => {\n    this.props.setNewScript(script)\n  }\n\n  private handleChangeScheduleType = (value: TaskSchedule) => {\n    this.props.setTaskOption({key: 'taskScheduleType', value})\n  }\n\n  private handleSave = () => {\n    const {newScript, taskOptions} = this.props\n\n    const taskOption: string = taskOptionsToFluxScript(taskOptions)\n    const script: string = addDestinationToFluxScript(newScript, taskOptions)\n    const preamble = `${taskOption}`\n\n    this.props.saveNewScript(script, preamble)\n  }\n\n  private handleCancel = () => {\n    this.props.cancel()\n  }\n\n  private handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const {name, value} = e.target\n    const key = name as TaskOptionKeys\n\n    this.props.setTaskOption({key, value})\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {tasks} = state.resources\n  const {taskOptions, newScript} = tasks\n\n  return {\n    taskOptions,\n    newScript,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  setNewScript,\n  saveNewScript,\n  setTaskOption,\n  clearTask,\n  cancel,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(TaskPage)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {\n  IconFont,\n  ComponentColor,\n  ComponentSize,\n  Dropdown,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\ninterface OwnProps {\n  onSelectNew: () => void\n  onSelectImport: () => void\n  onSelectTemplate?: () => void\n  resourceName: string\n}\n\ninterface DefaultProps {\n  canImportFromTemplate: boolean\n  status: ComponentStatus\n  titleText: string\n}\n\ntype Props = OwnProps & DefaultProps\n\nexport default class AddResourceDropdown extends PureComponent<Props> {\n  public static defaultProps: DefaultProps = {\n    canImportFromTemplate: false,\n    status: ComponentStatus.Default,\n    titleText: null,\n  }\n\n  public render() {\n    const {titleText, status} = this.props\n    return (\n      <Dropdown\n        style={{width: `${160}px`}}\n        testID=\"add-resource-dropdown\"\n        button={(active, onClick) => (\n          <Dropdown.Button\n            testID=\"add-resource-dropdown--button\"\n            active={active}\n            onClick={onClick}\n            color={ComponentColor.Primary}\n            size={ComponentSize.Small}\n            icon={IconFont.Plus}\n            status={status}\n          >\n            {titleText || `Create ${this.props.resourceName}`}\n          </Dropdown.Button>\n        )}\n        menu={onCollapse => (\n          <Dropdown.Menu\n            onCollapse={onCollapse}\n            testID=\"add-resource-dropdown--menu\"\n          >\n            {this.optionItems}\n          </Dropdown.Menu>\n        )}\n      >\n        {this.optionItems}\n      </Dropdown>\n    )\n  }\n\n  private get optionItems(): JSX.Element[] {\n    const importOption = this.importOption\n    const newOption = this.newOption\n    const templateOption = this.templateOption\n\n    const items = [\n      <Dropdown.Item\n        id={newOption}\n        key={newOption}\n        onClick={this.handleSelect}\n        value={newOption}\n        testID=\"add-resource-dropdown--new\"\n      >\n        {newOption}\n      </Dropdown.Item>,\n      <Dropdown.Item\n        id={importOption}\n        key={importOption}\n        onClick={this.handleSelect}\n        value={importOption}\n        testID=\"add-resource-dropdown--import\"\n      >\n        {importOption}\n      </Dropdown.Item>,\n    ]\n\n    if (!!this.props.canImportFromTemplate) {\n      items.push(\n        <Dropdown.Item\n          id={templateOption}\n          key={templateOption}\n          onClick={this.handleSelect}\n          value={templateOption}\n          testID=\"add-resource-dropdown--template\"\n        >\n          {templateOption}\n        </Dropdown.Item>\n      )\n    }\n\n    return items\n  }\n\n  private get newOption(): string {\n    return `New ${this.props.resourceName}`\n  }\n\n  private get importOption(): string {\n    return `Import ${this.props.resourceName}`\n  }\n\n  private get templateOption(): string {\n    return `From a Template`\n  }\n\n  private handleSelect = (selection: string): void => {\n    const {onSelectNew, onSelectImport, onSelectTemplate} = this.props\n\n    if (selection === this.newOption) {\n      onSelectNew()\n    }\n    if (selection === this.importOption) {\n      onSelectImport()\n    }\n    if (selection == this.templateOption) {\n      onSelectTemplate()\n    }\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {\n  InputLabel,\n  SlideToggle,\n  ComponentSize,\n  ComponentStatus,\n  Page,\n} from '@influxdata/clockface'\nimport AddResourceDropdown from 'src/shared/components/AddResourceDropdown'\nimport PageTitleWithOrg from 'src/shared/components/PageTitleWithOrg'\n\n// Types\nimport {LimitStatus} from 'src/cloud/actions/limits'\n\ninterface Props {\n  onCreateTask: () => void\n  setShowInactive: () => void\n  showInactive: boolean\n  onImportTask: () => void\n  limitStatus: LimitStatus\n  onImportFromTemplate: () => void\n}\n\nexport default class TasksHeader extends PureComponent<Props> {\n  public render() {\n    const {\n      onCreateTask,\n      setShowInactive,\n      showInactive,\n      onImportTask,\n      onImportFromTemplate,\n    } = this.props\n\n    return (\n      <Page.Header fullWidth={false}>\n        <Page.HeaderLeft>\n          <PageTitleWithOrg title=\"Tasks\" />\n        </Page.HeaderLeft>\n        <Page.HeaderRight>\n          <InputLabel>Show Inactive</InputLabel>\n          <SlideToggle\n            active={showInactive}\n            size={ComponentSize.ExtraSmall}\n            onChange={setShowInactive}\n          />\n          <AddResourceDropdown\n            canImportFromTemplate\n            onSelectNew={onCreateTask}\n            onSelectImport={onImportTask}\n            onSelectTemplate={onImportFromTemplate}\n            resourceName=\"Task\"\n            status={this.addResourceStatus}\n          />\n        </Page.HeaderRight>\n      </Page.Header>\n    )\n  }\n\n  private get addResourceStatus(): ComponentStatus {\n    const {limitStatus} = this.props\n    if (limitStatus === LimitStatus.EXCEEDED) {\n      return ComponentStatus.Disabled\n    }\n    return ComponentStatus.Default\n  }\n}\n","// Libraries\nimport React, {Component, MouseEvent} from 'react'\nimport classnames from 'classnames'\nimport _ from 'lodash'\n\n// Components\nimport {Label} from '@influxdata/clockface'\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  active: boolean\n  id: string\n  name: string\n  colorHex: string\n  description: string\n  onClick: (labelID: string) => void\n  onMouseOver: (labelID: string) => void\n}\n\n@ErrorHandling\nclass InlineLabelsListItem extends Component<Props> {\n  public render() {\n    const {name, colorHex, description, id} = this.props\n\n    return (\n      <div\n        className={this.className}\n        onMouseOver={this.handleMouseOver}\n        onClick={this.handleClick}\n        data-testid={`label-list--item ${name}`}\n      >\n        <Label name={name} description={description} id={id} color={colorHex} />\n      </div>\n    )\n  }\n\n  private handleMouseOver = (): void => {\n    const {onMouseOver, id} = this.props\n\n    onMouseOver(id)\n  }\n\n  private handleClick = (e: MouseEvent<HTMLDivElement>): void => {\n    e.stopPropagation()\n    const {onClick, id} = this.props\n\n    onClick(id)\n  }\n\n  private get className(): string {\n    const {active} = this.props\n\n    return classnames('inline-labels--list-item', {active})\n  }\n}\n\nexport default InlineLabelsListItem\n","// Libraries\nimport React, {Component, MouseEvent} from 'react'\nimport classnames from 'classnames'\nimport _ from 'lodash'\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  active: boolean\n  id: string\n  name: string\n  onClick: () => void\n  onMouseOver: (labelID: string) => void\n}\n\n@ErrorHandling\nclass InlineLabelsCreateLabelButton extends Component<Props> {\n  public render() {\n    const {name} = this.props\n\n    return (\n      <div\n        className={this.className}\n        onMouseOver={this.handleMouseOver}\n        onClick={this.handleClick}\n        data-testid=\"inline-labels--create-new\"\n      >\n        Create new label \"<strong>{`${name}`}</strong>\"\n      </div>\n    )\n  }\n\n  private handleMouseOver = (): void => {\n    const {onMouseOver, id} = this.props\n\n    onMouseOver(id)\n  }\n\n  private handleClick = (e: MouseEvent<HTMLDivElement>): void => {\n    e.stopPropagation()\n    this.props.onClick()\n  }\n\n  private get className(): string {\n    const {active} = this.props\n\n    return classnames('inline-labels--list-item inline-labels--create-new', {\n      active,\n    })\n  }\n}\n\nexport default InlineLabelsCreateLabelButton\n","// Libraries\nimport React, {Component} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {EmptyState, DapperScrollbars} from '@influxdata/clockface'\nimport InlineLabelsListItem from 'src/shared/components/inlineLabels/InlineLabelsListItem'\nimport InlineLabelsCreateLabelButton from 'src/shared/components/inlineLabels/InlineLabelsCreateLabelButton'\n\n// Constants\nimport {ADD_NEW_LABEL_ITEM_ID} from 'src/shared/components/inlineLabels/InlineLabelsEditor'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {Label} from 'src/types'\nimport {ComponentSize} from '@influxdata/clockface'\n\ninterface Props {\n  searchTerm: string\n  selectedItemID: string\n  onUpdateSelectedItemID: (labelID: string) => void\n  filteredLabels: Label[]\n  onItemClick: (labelID: string) => void\n  allLabelsUsed: boolean\n  onStartCreatingLabel: () => void\n}\n\n@ErrorHandling\nclass InlineLabelsList extends Component<Props> {\n  public render() {\n    return (\n      <div className=\"inline-labels--list-container\">\n        <DapperScrollbars\n          autoSize={true}\n          autoHide={false}\n          style={{maxWidth: '100%', maxHeight: '300px'}}\n          noScrollX={true}\n        >\n          <div\n            className=\"inline-labels--list\"\n            data-testid=\"inline-labels--list\"\n          >\n            {this.menuItems}\n          </div>\n        </DapperScrollbars>\n      </div>\n    )\n  }\n\n  private get menuItems(): JSX.Element[] | JSX.Element {\n    const {\n      filteredLabels,\n      onItemClick,\n      onUpdateSelectedItemID,\n      selectedItemID,\n      allLabelsUsed,\n      searchTerm,\n      onStartCreatingLabel,\n    } = this.props\n\n    if (filteredLabels.length) {\n      return filteredLabels.map(label => {\n        if (label.id === ADD_NEW_LABEL_ITEM_ID) {\n          return (\n            <InlineLabelsCreateLabelButton\n              active={selectedItemID === label.id}\n              key={label.id}\n              name={label.name}\n              id={label.id}\n              onClick={onStartCreatingLabel}\n              onMouseOver={onUpdateSelectedItemID}\n            />\n          )\n        }\n\n        return (\n          <InlineLabelsListItem\n            active={selectedItemID === label.id}\n            key={label.id}\n            name={label.name}\n            id={label.id}\n            description={label.properties.description}\n            colorHex={label.properties.color}\n            onClick={onItemClick}\n            onMouseOver={onUpdateSelectedItemID}\n          />\n        )\n      })\n    }\n\n    if (allLabelsUsed) {\n      return (\n        <EmptyState\n          size={ComponentSize.Small}\n          testID=\"inline-labels-list--used-all\"\n        >\n          <EmptyState.Text>\n            This resource has all available labels,\n            <br />\n            start typing to create a new label\n          </EmptyState.Text>\n        </EmptyState>\n      )\n    }\n\n    if (!searchTerm) {\n      return (\n        <EmptyState\n          size={ComponentSize.Small}\n          testID=\"inline-labels-list--none-exist\"\n        >\n          <EmptyState.Text>Start typing to create a new label</EmptyState.Text>\n        </EmptyState>\n      )\n    }\n  }\n}\n\nexport default InlineLabelsList\n","// Libraries\nimport React, {\n  PureComponent,\n  ChangeEvent,\n  KeyboardEvent,\n  RefObject,\n} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {Input} from '@influxdata/clockface'\nimport InlineLabelsList from 'src/shared/components/inlineLabels/InlineLabelsList'\n\n// Constants\nimport {ADD_NEW_LABEL_ITEM_ID} from 'src/shared/components/inlineLabels/InlineLabelsEditor'\n\n// Types\nimport {Label} from 'src/types'\nimport {\n  Appearance,\n  IconFont,\n  Popover,\n  PopoverPosition,\n  PopoverInteraction,\n} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\nenum ArrowDirection {\n  Up = -1,\n  Down = 1,\n}\n\ninterface Props {\n  searchTerm: string\n  triggerRef: RefObject<HTMLDivElement>\n  selectedItemID: string\n  onUpdateSelectedItemID: (highlightedID: string) => void\n  allLabelsUsed: boolean\n  onStartCreatingLabel: () => void\n  onInputChange: (e: ChangeEvent<HTMLInputElement>) => void\n  filteredLabels: Label[]\n  onAddLabel: (labelID: string) => void\n}\n\n@ErrorHandling\nexport default class InlineLabelPopover extends PureComponent<Props> {\n  public render() {\n    const {\n      searchTerm,\n      allLabelsUsed,\n      selectedItemID,\n      onAddLabel,\n      triggerRef,\n      onStartCreatingLabel,\n      onUpdateSelectedItemID,\n      onInputChange,\n      filteredLabels,\n    } = this.props\n\n    return (\n      <Popover\n        appearance={Appearance.Outline}\n        position={PopoverPosition.Below}\n        triggerRef={triggerRef}\n        distanceFromTrigger={8}\n        showEvent={PopoverInteraction.Click}\n        hideEvent={PopoverInteraction.Click}\n        testID=\"inline-labels--popover\"\n        contents={() => (\n          <span>\n            <h5 className=\"inline-labels--popover-heading\">Add Labels</h5>\n            <Input\n              icon={IconFont.Search}\n              placeholder=\"Filter labels...\"\n              value={searchTerm}\n              onKeyDown={this.handleKeyDown}\n              onChange={onInputChange}\n              autoFocus={true}\n              onBlur={this.handleRefocusInput}\n              testID=\"inline-labels--popover-field\"\n            />\n            <InlineLabelsList\n              searchTerm={searchTerm}\n              allLabelsUsed={allLabelsUsed}\n              filteredLabels={filteredLabels}\n              selectedItemID={selectedItemID}\n              onItemClick={onAddLabel}\n              onUpdateSelectedItemID={onUpdateSelectedItemID}\n              onStartCreatingLabel={onStartCreatingLabel}\n            />\n          </span>\n        )}\n      />\n    )\n  }\n\n  private handleKeyDown = (e: KeyboardEvent<HTMLInputElement>): void => {\n    const {selectedItemID, onAddLabel, onStartCreatingLabel} = this.props\n\n    switch (e.key) {\n      case 'Enter':\n        e.preventDefault()\n        e.stopPropagation()\n        if (selectedItemID === ADD_NEW_LABEL_ITEM_ID) {\n          onStartCreatingLabel()\n          break\n        }\n\n        if (selectedItemID) {\n          onAddLabel(selectedItemID)\n          break\n        }\n      case 'ArrowUp':\n        this.handleHighlightAdjacentItem(ArrowDirection.Up)\n        break\n      case 'ArrowDown':\n        this.handleHighlightAdjacentItem(ArrowDirection.Down)\n        break\n      default:\n        break\n    }\n  }\n\n  private handleHighlightAdjacentItem = (direction: ArrowDirection): void => {\n    const {selectedItemID, filteredLabels, onUpdateSelectedItemID} = this.props\n\n    if (!filteredLabels.length || !selectedItemID) {\n      return null\n    }\n\n    const selectedItemIndex = _.findIndex(\n      filteredLabels,\n      label => label.id === selectedItemID\n    )\n\n    const adjacentIndex = Math.min(\n      Math.max(selectedItemIndex + direction, 0),\n      filteredLabels.length - 1\n    )\n\n    const adjacentID = filteredLabels[adjacentIndex].id\n\n    onUpdateSelectedItemID(adjacentID)\n  }\n\n  private handleRefocusInput = (e: ChangeEvent<HTMLInputElement>): void => {\n    e.target.focus()\n  }\n}\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Components\nimport {\n  Input,\n  Button,\n  ColorPicker,\n  Grid,\n  Label,\n  Form,\n} from '@influxdata/clockface'\n\n// Types\nimport {\n  Columns,\n  InputType,\n  ButtonType,\n  ComponentSize,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\n// Constants\nimport {INPUT_ERROR_COLOR} from 'src/labels/constants'\nconst MAX_LABEL_CHARS = 50\n\n// Utils\nimport {validateHexCode} from 'src/labels/utils/'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  id: string\n  name: string\n  description: string\n  color: string\n  onColorChange: (color: string, status?: ComponentStatus) => void\n  onSubmit: () => void\n  onCloseModal: () => void\n  onInputChange: (e: ChangeEvent<HTMLInputElement>) => void\n  onLabelPropertyChange: (e: ChangeEvent<HTMLInputElement>) => void\n  onNameValidation: (name: string) => string | null\n  buttonText: string\n  isFormValid: boolean\n}\n\n@ErrorHandling\nexport default class LabelOverlayForm extends PureComponent<Props> {\n  public render() {\n    const {\n      id,\n      name,\n      color,\n      onSubmit,\n      buttonText,\n      description,\n      onCloseModal,\n      onInputChange,\n      onLabelPropertyChange,\n      onColorChange,\n      isFormValid,\n    } = this.props\n\n    return (\n      <Form onSubmit={onSubmit} testID=\"label-overlay-form\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Element label=\"Preview\">\n                <Form.Box className=\"label-overlay--preview\">\n                  <Label\n                    size={ComponentSize.Small}\n                    name={this.placeholderLabelName}\n                    description={description}\n                    color={this.validatedColor}\n                    id={id}\n                  />\n                </Form.Box>\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthSM={Columns.Twelve}>\n              <Form.ValidationElement\n                label=\"Name\"\n                value={name}\n                required={true}\n                validationFunc={this.handleNameValidation}\n              >\n                {status => (\n                  <Input\n                    type={InputType.Text}\n                    placeholder=\"Name this Label\"\n                    name=\"name\"\n                    autoFocus={true}\n                    value={name}\n                    onChange={onInputChange}\n                    status={status}\n                    maxLength={MAX_LABEL_CHARS}\n                    testID=\"create-label-form--name\"\n                  />\n                )}\n              </Form.ValidationElement>\n            </Grid.Column>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Element label=\"Description\">\n                <Input\n                  type={InputType.Text}\n                  placeholder=\"Add a optional description\"\n                  name=\"description\"\n                  value={description}\n                  onChange={onLabelPropertyChange}\n                  testID=\"create-label-form--description\"\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthSM={Columns.Twelve}>\n              <Form.Element label=\"Color\">\n                <ColorPicker color={color} onChange={onColorChange} />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Footer>\n                <Button\n                  text=\"Cancel\"\n                  onClick={onCloseModal}\n                  titleText=\"Cancel creation of Label and return to list\"\n                  type={ButtonType.Button}\n                  testID=\"create-label-form--cancel\"\n                />\n                <Button\n                  text={buttonText}\n                  color={ComponentColor.Success}\n                  type={ButtonType.Submit}\n                  testID=\"create-label-form--submit\"\n                  status={\n                    isFormValid\n                      ? ComponentStatus.Default\n                      : ComponentStatus.Disabled\n                  }\n                />\n              </Form.Footer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form>\n    )\n  }\n\n  private get placeholderLabelName(): string {\n    const {name} = this.props\n\n    if (!name) {\n      return 'Name this Label'\n    }\n\n    return name\n  }\n\n  private get validatedColor(): string {\n    const {color} = this.props\n\n    if (validateHexCode(color)) {\n      return INPUT_ERROR_COLOR\n    }\n\n    return color\n  }\n\n  private handleNameValidation = (name: string): string | null => {\n    return this.props.onNameValidation(name)\n  }\n}\n","// Libraries\nimport React, {Component, ChangeEvent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport LabelOverlayForm from 'src/labels/components/LabelOverlayForm'\nimport {Overlay, ComponentStatus} from '@influxdata/clockface'\n\n// Types\nimport {Label} from 'src/types'\n\n// Constants\nimport {EMPTY_LABEL} from 'src/labels/constants'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  isVisible: boolean\n  onDismiss: () => void\n  onCreateLabel: (label: Label) => void\n  onNameValidation: (name: string) => string | null\n  overrideDefaultName?: string\n}\ninterface State {\n  label: Label\n  colorStatus: ComponentStatus\n}\n\n@ErrorHandling\nclass CreateLabelOverlay extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      label: {...EMPTY_LABEL, name: this.props.overrideDefaultName},\n      colorStatus: ComponentStatus.Default,\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.overrideDefaultName !== this.props.overrideDefaultName &&\n      this.props.isVisible === false\n    ) {\n      const name = this.props.overrideDefaultName\n      const label = {...this.state.label, name}\n\n      this.setState({label})\n    }\n  }\n\n  public render() {\n    const {isVisible, onDismiss, onNameValidation} = this.props\n    const {label} = this.state\n\n    return (\n      <Overlay visible={isVisible}>\n        <Overlay.Container maxWidth={400}>\n          <Overlay.Header title=\"Create Label\" onDismiss={onDismiss} />\n          <Overlay.Body>\n            <LabelOverlayForm\n              data-testid=\"create-label--overlay\"\n              id={label.id}\n              name={label.name}\n              onCloseModal={onDismiss}\n              buttonText=\"Create Label\"\n              onSubmit={this.handleSubmit}\n              isFormValid={this.isFormValid}\n              color={label.properties.color}\n              onNameValidation={onNameValidation}\n              onInputChange={this.handleInputChange}\n              onLabelPropertyChange={this.handleLabelPropertyChange}\n              onColorChange={this.handleColorChange}\n              description={label.properties.description}\n            />\n          </Overlay.Body>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private get isFormValid(): boolean {\n    const {label, colorStatus} = this.state\n    const {onNameValidation} = this.props\n\n    const nameIsValid = onNameValidation(label.name) === null && !!label.name\n    const colorIsValid =\n      colorStatus === ComponentStatus.Default ||\n      colorStatus === ComponentStatus.Valid\n\n    return nameIsValid && colorIsValid\n  }\n\n  private handleSubmit = () => {\n    const {onCreateLabel, onDismiss} = this.props\n\n    try {\n      onCreateLabel(this.state.label)\n    } finally {\n      onDismiss()\n      this.resetForm()\n    }\n  }\n\n  private resetForm() {\n    this.setState({\n      label: EMPTY_LABEL,\n    })\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {value, name} = e.target\n\n    this.setState(prevState => ({\n      label: {...prevState.label, [name]: value},\n    }))\n  }\n\n  private handleLabelPropertyChange = (\n    e: ChangeEvent<HTMLInputElement>\n  ): void => {\n    const {value, name} = e.target\n\n    this.setState(prevState => ({\n      label: {\n        ...prevState.label,\n        properties: {...prevState.label.properties, [name]: value},\n      },\n    }))\n  }\n\n  private handleColorChange = (\n    color: string,\n    colorStatus: ComponentStatus\n  ): void => {\n    const properties = {...this.state.label.properties, color}\n    const label = {...this.state.label, properties}\n\n    this.setState({label, colorStatus})\n  }\n}\n\nexport default CreateLabelOverlay\n","// Libraries\nimport React, {Component, ChangeEvent, createRef} from 'react'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\n// Components\nimport {SquareButton, IconFont, ComponentColor} from '@influxdata/clockface'\nimport InlineLabelPopover from 'src/shared/components/inlineLabels/InlineLabelPopover'\nimport CreateLabelOverlay from 'src/labels/components/CreateLabelOverlay'\n\n// Utils\nimport {validateLabelUniqueness} from 'src/labels/utils'\n\n// Types\nimport {Label, RemoteDataState} from 'src/types'\nimport {OverlayState} from 'src/types/overlay'\nimport {createLabel} from 'src/labels/actions/thunks'\n\n// Constants\nexport const ADD_NEW_LABEL_ITEM_ID = 'add-new-label'\nexport const ADD_NEW_LABEL_LABEL: Label = {\n  id: ADD_NEW_LABEL_ITEM_ID,\n  name: '',\n  properties: {\n    color: '#000000',\n    description: '',\n  },\n  status: RemoteDataState.NotStarted,\n}\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface DispatchProps {\n  onCreateLabel: typeof createLabel\n}\n\ninterface StateProps {}\n\ninterface OwnProps {\n  selectedLabels: Label[]\n  labels: Label[]\n  onAddLabel: (label: Label) => void\n}\n\ntype Props = DispatchProps & StateProps & OwnProps\n\ninterface State {\n  searchTerm: string\n  isPopoverVisible: boolean\n  selectedItemID: string\n  isCreatingLabel: OverlayState\n}\n\n@ErrorHandling\nclass InlineLabelsEditor extends Component<Props, State> {\n  private popoverTrigger = createRef<HTMLDivElement>()\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      selectedItemID: null,\n      searchTerm: '',\n      isPopoverVisible: false,\n      isCreatingLabel: OverlayState.Closed,\n    }\n  }\n\n  public render() {\n    const {isCreatingLabel, searchTerm} = this.state\n\n    return (\n      <>\n        <div className=\"inline-labels--editor\">\n          <div className=\"inline-labels--add-wrapper\" ref={this.popoverTrigger}>\n            <div className=\"inline-labels--add\">\n              <SquareButton\n                color={ComponentColor.Secondary}\n                titleText=\"Add labels\"\n                icon={IconFont.Plus}\n                testID=\"inline-labels--add\"\n              />\n            </div>\n            {this.noLabelsIndicator}\n          </div>\n          {this.popover}\n        </div>\n        <CreateLabelOverlay\n          isVisible={isCreatingLabel === OverlayState.Open}\n          onDismiss={this.handleStopCreatingLabel}\n          overrideDefaultName={searchTerm}\n          onCreateLabel={this.handleCreateLabel}\n          onNameValidation={this.handleEnsureUniqueLabelName}\n        />\n      </>\n    )\n  }\n\n  private get popover(): JSX.Element {\n    const {labels, selectedLabels} = this.props\n    const {searchTerm, selectedItemID} = this.state\n\n    const labelsUsed =\n      labels.length > 0 && labels.length === selectedLabels.length\n\n    return (\n      <InlineLabelPopover\n        searchTerm={searchTerm}\n        triggerRef={this.popoverTrigger}\n        selectedItemID={selectedItemID}\n        onUpdateSelectedItemID={this.handleUpdateSelectedItemID}\n        allLabelsUsed={labelsUsed}\n        onStartCreatingLabel={this.handleStartCreatingLabel}\n        onInputChange={this.handleInputChange}\n        filteredLabels={this.filterLabels(searchTerm)}\n        onAddLabel={this.handleAddLabel}\n      />\n    )\n  }\n\n  private get noLabelsIndicator(): JSX.Element {\n    const {selectedLabels} = this.props\n\n    if (selectedLabels.length) {\n      return\n    }\n\n    return (\n      <div\n        className=\"cf-label cf-label--xs cf-label--colorless\"\n        onClick={this.handleShowPopover}\n        data-testid=\"inline-labels--empty\"\n      >\n        <span className=\"cf-label--name\">Add a label</span>\n      </div>\n    )\n  }\n\n  private handleAddLabel = async (labelID: string) => {\n    const {onAddLabel, labels} = this.props\n\n    const label = labels.find(label => label.id === labelID)\n\n    if (label) {\n      this.selectAvailableItem()\n      await onAddLabel(label)\n    }\n  }\n\n  private selectAvailableItem = (): void => {\n    const {searchTerm} = this.state\n\n    const filteredLabels = this.filterLabels(searchTerm)\n\n    if (filteredLabels.length) {\n      this.handleUpdateSelectedItemID(filteredLabels[0].id)\n    }\n  }\n\n  private handleUpdateSelectedItemID = (selectedItemID: string): void => {\n    this.setState({selectedItemID})\n  }\n\n  private handleShowPopover = () => {\n    const {availableLabels} = this\n    const {isPopoverVisible} = this.state\n\n    if (_.isEmpty(availableLabels)) {\n      if (isPopoverVisible) {\n        return\n      }\n\n      return this.setState({\n        isPopoverVisible: true,\n        selectedItemID: null,\n        searchTerm: '',\n      })\n    }\n\n    const selectedItemID = this.availableLabels[0].id\n    this.setState({isPopoverVisible: true, selectedItemID, searchTerm: ''})\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const searchTerm = e.target.value\n    const filteredLabels = this.filterLabels(searchTerm)\n    if (filteredLabels.length) {\n      const selectedItemID = filteredLabels[0].id\n      this.setState({searchTerm, selectedItemID})\n    } else {\n      this.setState({searchTerm})\n    }\n  }\n\n  private filterLabels = (searchTerm: string): Label[] => {\n    const filteredLabels = this.availableLabels.filter(label => {\n      const lowercaseName = label.name.toLowerCase()\n      const lowercaseSearchTerm = searchTerm.toLowerCase()\n\n      return lowercaseName.includes(lowercaseSearchTerm)\n    })\n\n    const searchTermHasExactMatch = filteredLabels.reduce(\n      (acc: boolean, current: Label) => {\n        return acc === true || current.name === searchTerm\n      },\n      false\n    )\n\n    if (!searchTermHasExactMatch && searchTerm) {\n      return this.filteredLabelsWithAddButton(filteredLabels)\n    }\n\n    return this.filteredLabelsWithoutAddButton(filteredLabels)\n  }\n\n  private filteredLabelsWithAddButton = (filteredLabels: Label[]): Label[] => {\n    const {searchTerm} = this.state\n\n    const updatedAddButton = {...ADD_NEW_LABEL_LABEL, name: searchTerm}\n\n    const addButton = filteredLabels.find(\n      label => label.id === updatedAddButton.id\n    )\n\n    if (addButton) {\n      return filteredLabels.map(fl => {\n        return fl.id === updatedAddButton.id ? updatedAddButton : fl\n      })\n    }\n\n    return [updatedAddButton, ...filteredLabels]\n  }\n\n  private filteredLabelsWithoutAddButton = (\n    filteredLabels: Label[]\n  ): Label[] => {\n    return filteredLabels.filter(label => label.id !== ADD_NEW_LABEL_ITEM_ID)\n  }\n\n  private get availableLabels(): Label[] {\n    const {selectedLabels, labels} = this.props\n\n    return _.differenceBy(labels, selectedLabels, label => label.name)\n  }\n\n  private handleCreateLabel = async (label: Label) => {\n    const {onCreateLabel, onAddLabel} = this.props\n    const {name, properties} = label\n\n    await onCreateLabel(name, properties)\n    const newLabel = this.props.labels.find(l => l.name === label.name)\n    onAddLabel(newLabel)\n  }\n\n  private handleStartCreatingLabel = (): void => {\n    this.setState({isCreatingLabel: OverlayState.Open})\n  }\n\n  private handleStopCreatingLabel = (): void => {\n    this.setState({isCreatingLabel: OverlayState.Closed, searchTerm: ''})\n  }\n\n  private handleEnsureUniqueLabelName = (name: string): string | null => {\n    const {labels} = this.props\n    const names = labels.map(label => label.name)\n\n    return validateLabelUniqueness(names, name)\n  }\n}\n\nconst mstp = (): StateProps => {\n  return {}\n}\n\nconst mdtp: DispatchProps = {\n  onCreateLabel: createLabel,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(InlineLabelsEditor)\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Label as LabelComponent} from '@influxdata/clockface'\nimport InlineLabelsEditor from 'src/shared/components/inlineLabels/InlineLabelsEditor'\n\n// Types\nimport {Label, ResourceType, AppState} from 'src/types'\n\n// Selectors\nimport {getAll, getLabels} from 'src/resources/selectors'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\nexport enum LabelsEditMode {\n  Editable = 'editable',\n  Readonly = 'readonly',\n}\n\ninterface OwnProps {\n  editMode?: LabelsEditMode // temporary for displaying labels\n  selectedLabelIDs: string[]\n  onRemoveLabel?: (label: Label) => void\n  onAddLabel?: (label: Label) => void\n  onFilterChange?: (searchTerm: string) => void\n}\n\ninterface StateProps {\n  labels: Label[]\n  selectedLabels: Label[]\n}\n\ntype Props = StateProps & OwnProps\n\n@ErrorHandling\nclass InlineLabels extends Component<Props> {\n  public static defaultProps = {\n    editMode: LabelsEditMode.Editable,\n  }\n\n  public render() {\n    return <div className=\"inline-labels\">{this.selectedLabels}</div>\n  }\n\n  private get selectedLabels(): JSX.Element {\n    const {selectedLabels, labels, onAddLabel} = this.props\n\n    return (\n      <div className=\"inline-labels--container\">\n        {this.isEditable && (\n          <InlineLabelsEditor\n            labels={labels}\n            selectedLabels={selectedLabels}\n            onAddLabel={onAddLabel}\n          />\n        )}\n        {this.currentLabels}\n      </div>\n    )\n  }\n\n  private get currentLabels(): JSX.Element[] {\n    const {selectedLabels} = this.props\n    const onDelete = this.isEditable ? this.handleDeleteLabel : null\n\n    if (selectedLabels.length) {\n      return selectedLabels.map(_label => {\n        const label = {..._label}\n\n        // TODO: clean this up during normalization effort at\n        // the service layer and not in the view (alex)\n        if (!label.hasOwnProperty('properties')) {\n          label.properties = {\n            color: '#FF0000',\n            description: '',\n          }\n        }\n\n        return (\n          <LabelComponent\n            id={label.id}\n            key={label.id}\n            name={label.name}\n            color={label.properties.color}\n            description={label.properties.description}\n            onDelete={onDelete}\n            onClick={this.handleLabelClick.bind(this, label.name)}\n          />\n        )\n      })\n    }\n  }\n\n  private get isEditable(): boolean {\n    return this.props.editMode === LabelsEditMode.Editable\n  }\n\n  private handleLabelClick = (labelName: string) => {\n    const {onFilterChange} = this.props\n\n    onFilterChange(labelName)\n  }\n\n  private handleDeleteLabel = (labelID: string) => {\n    const {onRemoveLabel, selectedLabels} = this.props\n    const label = selectedLabels.find(label => label.id === labelID)\n\n    onRemoveLabel(label)\n  }\n}\n\nconst mstp = (state: AppState, props: OwnProps) => {\n  const labels = getAll<Label>(state, ResourceType.Labels)\n  const selectedLabels = getLabels(state, props.selectedLabelIDs)\n\n  return {labels, selectedLabels}\n}\n\nexport default connect<StateProps>(mstp)(InlineLabels)\n","// Libraries\nimport React, {FC, useRef, useState} from 'react'\nimport classnames from 'classnames'\n\n// Components\nimport {\n  Icon,\n  IconFont,\n  Popover,\n  Appearance,\n  PopoverInteraction,\n  ComponentColor,\n} from '@influxdata/clockface'\n\n// Styles\nimport './LastRunTaskStatus.scss'\n\ninterface PassedProps {\n  lastRunError?: string\n  lastRunStatus: string\n}\n\nconst LastRunTaskStatus: FC<PassedProps> = ({lastRunError, lastRunStatus}) => {\n  const triggerRef = useRef<HTMLDivElement>(null)\n  const [highlight, setHighlight] = useState<boolean>(false)\n\n  let color = ComponentColor.Success\n  let icon = IconFont.Checkmark\n  let text = 'Task ran successfully!'\n\n  if (lastRunStatus === 'failed' || lastRunError !== undefined) {\n    color = ComponentColor.Danger\n    icon = IconFont.AlertTriangle\n    text = lastRunError\n  }\n\n  if (lastRunStatus === 'cancel') {\n    color = ComponentColor.Warning\n    icon = IconFont.Remove\n    text = 'Task Cancelled'\n  }\n\n  const statusClassName = classnames('last-run-task-status', {\n    [`last-run-task-status__${color}`]: color,\n    'last-run-task-status__highlight': highlight,\n  })\n\n  const popoverContents = () => (\n    <>\n      <h6>Last Run Status:</h6>\n      <p>{text}</p>\n    </>\n  )\n\n  return (\n    <>\n      <div\n        data-testid=\"last-run-status--icon\"\n        className={statusClassName}\n        ref={triggerRef}\n      >\n        <Icon glyph={icon} />\n      </div>\n      <Popover\n        className=\"last-run-task-status--popover\"\n        enableDefaultStyles={false}\n        color={color}\n        appearance={Appearance.Outline}\n        triggerRef={triggerRef}\n        contents={popoverContents}\n        showEvent={PopoverInteraction.Hover}\n        hideEvent={PopoverInteraction.Hover}\n        onShow={() => setHighlight(true)}\n        onHide={() => setHighlight(false)}\n      />\n    </>\n  )\n}\n\nexport default LastRunTaskStatus\n","// Libraries\nimport React, {PureComponent, MouseEvent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {\n  SlideToggle,\n  ComponentSize,\n  ResourceCard,\n  IconFont,\n  InputLabel,\n  FlexBox,\n} from '@influxdata/clockface'\nimport {Context} from 'src/clockface'\nimport InlineLabels from 'src/shared/components/inlineLabels/InlineLabels'\nimport LastRunTaskStatus from 'src/shared/components/lastRunTaskStatus/LastRunTaskStatus'\n\n// Actions\nimport {\n  addTaskLabel,\n  deleteTaskLabel,\n  selectTask,\n} from 'src/tasks/actions/thunks'\n\n// Types\nimport {ComponentColor} from '@influxdata/clockface'\nimport {Task, Label} from 'src/types'\n\n// Constants\nimport {DEFAULT_TASK_NAME} from 'src/dashboards/constants'\n\ninterface PassedProps {\n  task: Task\n  onActivate: (task: Task) => void\n  onDelete: (task: Task) => void\n  onSelect: typeof selectTask\n  onClone: (task: Task) => void\n  onRunTask: (taskID: string) => void\n  onUpdate: (name: string, taskID: string) => void\n  onFilterChange: (searchTerm: string) => void\n}\n\ninterface DispatchProps {\n  onAddTaskLabel: typeof addTaskLabel\n  onDeleteTaskLabel: typeof deleteTaskLabel\n}\n\ntype Props = PassedProps & DispatchProps\n\nexport class TaskCard extends PureComponent<Props & WithRouterProps> {\n  public render() {\n    const {task} = this.props\n\n    return (\n      <ResourceCard\n        testID=\"task-card\"\n        disabled={!this.isTaskActive}\n        labels={this.labels}\n        contextMenu={this.contextMenu}\n        name={\n          <ResourceCard.EditableName\n            onClick={this.handleNameClick}\n            onUpdate={this.handleRenameTask}\n            name={task.name}\n            noNameString={DEFAULT_TASK_NAME}\n            testID=\"task-card--name\"\n            buttonTestID=\"task-card--name-button\"\n            inputTestID=\"task-card--input\"\n          />\n        }\n        metaData={[\n          this.activeToggle,\n          <>Last completed at {task.latestCompleted}</>,\n          <>{`Scheduled to run ${this.schedule}`}</>,\n        ]}\n        toggle={\n          <LastRunTaskStatus\n            lastRunError={task.lastRunError}\n            lastRunStatus={task.lastRunStatus}\n          />\n        }\n      />\n    )\n  }\n\n  private get activeToggle(): JSX.Element {\n    const labelText = this.isTaskActive ? 'Active' : 'Inactive'\n    return (\n      <FlexBox margin={ComponentSize.Small}>\n        <SlideToggle\n          active={this.isTaskActive}\n          size={ComponentSize.ExtraSmall}\n          onChange={this.changeToggle}\n          testID=\"task-card--slide-toggle\"\n        />\n        <InputLabel active={this.isTaskActive}>{labelText}</InputLabel>\n      </FlexBox>\n    )\n  }\n\n  private get contextMenu(): JSX.Element {\n    const {task, onClone, onDelete, onRunTask} = this.props\n\n    return (\n      <Context>\n        <Context.Menu icon={IconFont.CogThick}>\n          <Context.Item label=\"Export\" action={this.handleExport} />\n          <Context.Item label=\"View Task Runs\" action={this.handleViewRuns} />\n          <Context.Item label=\"Run Task\" action={onRunTask} value={task.id} />\n        </Context.Menu>\n        <Context.Menu\n          icon={IconFont.Duplicate}\n          color={ComponentColor.Secondary}\n        >\n          <Context.Item label=\"Clone\" action={onClone} value={task} />\n        </Context.Menu>\n        <Context.Menu\n          icon={IconFont.Trash}\n          color={ComponentColor.Danger}\n          testID=\"context-delete-menu\"\n        >\n          <Context.Item\n            label=\"Delete\"\n            action={onDelete}\n            value={task}\n            testID=\"context-delete-task\"\n          />\n        </Context.Menu>\n      </Context>\n    )\n  }\n\n  private handleNameClick = (e: MouseEvent) => {\n    e.preventDefault()\n\n    this.props.onSelect(this.props.task.id)\n  }\n\n  private handleViewRuns = () => {\n    const {\n      router,\n      task,\n      params: {orgID},\n    } = this.props\n    router.push(`/orgs/${orgID}/tasks/${task.id}/runs`)\n  }\n\n  private handleRenameTask = (name: string) => {\n    const {\n      onUpdate,\n      task: {id},\n    } = this.props\n    onUpdate(name, id)\n  }\n\n  private handleExport = () => {\n    const {\n      router,\n      task,\n      location: {pathname},\n    } = this.props\n    router.push(`${pathname}/${task.id}/export`)\n  }\n\n  private get labels(): JSX.Element {\n    const {task, onFilterChange} = this.props\n\n    return (\n      <InlineLabels\n        selectedLabelIDs={task.labels}\n        onFilterChange={onFilterChange}\n        onAddLabel={this.handleAddLabel}\n        onRemoveLabel={this.handleRemoveLabel}\n      />\n    )\n  }\n\n  private handleAddLabel = (label: Label) => {\n    const {task, onAddTaskLabel} = this.props\n\n    onAddTaskLabel(task.id, label)\n  }\n\n  private handleRemoveLabel = (label: Label) => {\n    const {task, onDeleteTaskLabel} = this.props\n\n    onDeleteTaskLabel(task.id, label)\n  }\n\n  private get isTaskActive(): boolean {\n    const {task} = this.props\n    if (task.status === 'active') {\n      return true\n    }\n    return false\n  }\n\n  private changeToggle = () => {\n    const {task, onActivate} = this.props\n    if (task.status === 'active') {\n      task.status = 'inactive'\n    } else {\n      task.status = 'active'\n    }\n    onActivate(task)\n  }\n\n  private get schedule(): string {\n    const {task} = this.props\n    if (task.every && task.offset) {\n      return `every ${task.every}, offset ${task.offset}`\n    }\n    if (task.every) {\n      return `every ${task.every}`\n    }\n    if (task.cron) {\n      return task.cron\n    }\n    return ''\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onAddTaskLabel: addTaskLabel,\n  onDeleteTaskLabel: deleteTaskLabel,\n}\n\nexport default connect<{}, DispatchProps, PassedProps>(\n  null,\n  mdtp\n)(withRouter<Props>(TaskCard))\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {EmptyState} from '@influxdata/clockface'\nimport AddResourceDropdown from 'src/shared/components/AddResourceDropdown'\n\n// Types\nimport {ComponentSize} from '@influxdata/clockface'\n\ninterface Props {\n  searchTerm: string\n  onCreate: () => void\n  totalCount: number\n  onImportTask: () => void\n  onImportFromTemplate: () => void\n}\n\nexport default class EmptyTasksLists extends PureComponent<Props> {\n  public render() {\n    const {\n      searchTerm,\n      onCreate,\n      totalCount,\n      onImportTask,\n      onImportFromTemplate,\n    } = this.props\n\n    if (totalCount && searchTerm === '') {\n      return (\n        <EmptyState testID=\"empty-tasks-list\" size={ComponentSize.Large}>\n          <EmptyState.Text>{`All ${totalCount} of your Tasks are inactive`}</EmptyState.Text>\n        </EmptyState>\n      )\n    }\n\n    if (searchTerm === '') {\n      return (\n        <EmptyState testID=\"empty-tasks-list\" size={ComponentSize.Large}>\n          <EmptyState.Text>\n            Looks like you don't have any <b>Tasks</b>, why not create one?\"\n          </EmptyState.Text>\n          <AddResourceDropdown\n            canImportFromTemplate\n            onSelectNew={onCreate}\n            onSelectImport={onImportTask}\n            onSelectTemplate={onImportFromTemplate}\n            resourceName=\"Task\"\n          />\n        </EmptyState>\n      )\n    }\n\n    return (\n      <EmptyState testID=\"empty-tasks-list\" size={ComponentSize.Large}>\n        <EmptyState.Text>No Tasks match your search term</EmptyState.Text>\n      </EmptyState>\n    )\n  }\n}\n","import {orderBy, get, toLower} from 'lodash'\n\nexport enum SortTypes {\n  String = 'string',\n  Date = 'date',\n  Float = 'float',\n}\n\nfunction orderByType(data, type) {\n  switch (type) {\n    case SortTypes.String:\n      return toLower(data)\n    case SortTypes.Date:\n      return Date.parse(data)\n    case SortTypes.Float:\n      return parseFloat(data)\n    default:\n      return data\n  }\n}\n\nexport function getSortedResources<T>(\n  resourceList: T[],\n  sortKey: string,\n  sortDirection: string,\n  sortType: string\n): T[] {\n  if (sortKey && sortDirection) {\n    return orderBy<T>(\n      resourceList,\n      r => orderByType(get(r, sortKey), sortType),\n      [sortDirection]\n    )\n  }\n  return resourceList\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport {ResourceList} from '@influxdata/clockface'\nimport TaskCard from 'src/tasks/components/TaskCard'\n\n// Types\nimport EmptyTasksList from 'src/tasks/components/EmptyTasksList'\nimport {Task} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {Sort} from '@influxdata/clockface'\n\nimport {selectTask, addTaskLabel, runTask} from 'src/tasks/actions/thunks'\nimport {checkTaskLimits as checkTaskLimitsAction} from 'src/cloud/actions/limits'\n\n// Selectors\nimport {getSortedResources} from 'src/shared/utils/sort'\n\ninterface Props {\n  tasks: Task[]\n  searchTerm: string\n  onActivate: (task: Task) => void\n  onDelete: (task: Task) => void\n  onCreate: () => void\n  onClone: (task: Task) => void\n  onFilterChange: (searchTerm: string) => void\n  totalCount: number\n  onSelect: typeof selectTask\n  onAddTaskLabel: typeof addTaskLabel\n  onRunTask: typeof runTask\n  onUpdate: (name: string, taskID: string) => void\n  filterComponent?: JSX.Element\n  onImportTask: () => void\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (nextSort: Sort, sortKey: SortKey) => void\n  checkTaskLimits: typeof checkTaskLimitsAction\n  onImportFromTemplate: () => void\n}\n\ntype SortKey = keyof Task\n\ninterface State {\n  taskLabelsEdit: Task\n  isEditingTaskLabels: boolean\n}\n\nexport default class TasksList extends PureComponent<Props, State> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      taskLabelsEdit: null,\n      isEditingTaskLabels: false,\n    }\n  }\n\n  public componentDidMount() {\n    this.props.checkTaskLimits()\n  }\n\n  public render() {\n    const {\n      searchTerm,\n      onCreate,\n      totalCount,\n      filterComponent,\n      onImportTask,\n      sortKey,\n      sortDirection,\n      onClickColumn,\n      onImportFromTemplate,\n    } = this.props\n\n    const headerKeys: SortKey[] = ['name', 'status', 'every', 'latestCompleted']\n\n    return (\n      <>\n        <ResourceList>\n          <ResourceList.Header filterComponent={filterComponent}>\n            <ResourceList.Sorter\n              name=\"Name\"\n              sortKey={headerKeys[0]}\n              sort={sortKey === headerKeys[0] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n            <ResourceList.Sorter\n              name=\"Active\"\n              sortKey={headerKeys[1]}\n              sort={sortKey === headerKeys[1] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n            <ResourceList.Sorter\n              name=\"Schedule\"\n              sortKey={headerKeys[2]}\n              sort={sortKey === headerKeys[2] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n            <ResourceList.Sorter\n              name=\"Last Completed\"\n              sortKey={headerKeys[3]}\n              sort={sortKey === headerKeys[3] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n          </ResourceList.Header>\n          <ResourceList.Body\n            emptyState={\n              <EmptyTasksList\n                searchTerm={searchTerm}\n                onCreate={onCreate}\n                totalCount={totalCount}\n                onImportTask={onImportTask}\n                onImportFromTemplate={onImportFromTemplate}\n              />\n            }\n          >\n            {this.rows}\n          </ResourceList.Body>\n        </ResourceList>\n      </>\n    )\n  }\n\n  private get rows(): JSX.Element[] {\n    const {\n      tasks,\n      sortKey,\n      sortDirection,\n      sortType,\n      onActivate,\n      onDelete,\n      onSelect,\n      onClone,\n      onUpdate,\n      onRunTask,\n      onFilterChange,\n    } = this.props\n\n    const sortedTasks = this.memGetSortedResources(\n      tasks,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    return sortedTasks.map(task => (\n      <TaskCard\n        key={`task-id--${task.id}`}\n        task={task}\n        onActivate={onActivate}\n        onDelete={onDelete}\n        onClone={onClone}\n        onSelect={onSelect}\n        onUpdate={onUpdate}\n        onRunTask={onRunTask}\n        onFilterChange={onFilterChange}\n      />\n    ))\n  }\n}\n","// Libraries\nimport React, {Component, ChangeEvent} from 'react'\nimport {debounce} from 'lodash'\n\n// Components\nimport {Input} from '@influxdata/clockface'\n\n// Types\nimport {IconFont} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  onSearch: (searchTerm: string) => void\n  widthPixels: number\n  placeholderText: string\n  searchTerm: string\n  testID: string\n}\n\ninterface State {\n  searchTerm: string\n}\n\n@ErrorHandling\nclass SearchWidget extends Component<Props, State> {\n  public static defaultProps = {\n    widthPixels: 440,\n    placeholderText: 'Search...',\n    searchTerm: '',\n    testID: 'search-widget',\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    if (this.props.searchTerm !== prevProps.searchTerm) {\n      this.setState({searchTerm: this.props.searchTerm})\n    }\n  }\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      searchTerm: this.props.searchTerm,\n    }\n  }\n\n  public UNSAFE_componentWillMount() {\n    this.handleSearch = debounce(this.handleSearch, 50)\n  }\n\n  public render() {\n    const {placeholderText, widthPixels, testID} = this.props\n    const {searchTerm} = this.state\n\n    return (\n      <Input\n        icon={IconFont.Search}\n        placeholder={placeholderText}\n        style={{width: `${widthPixels}px`}}\n        value={searchTerm}\n        onChange={this.handleChange}\n        onBlur={this.handleBlur}\n        testID={testID}\n      />\n    )\n  }\n\n  private handleSearch = (): void => {\n    this.props.onSearch(this.state.searchTerm)\n  }\n\n  private handleBlur = (e: ChangeEvent<HTMLInputElement>): void => {\n    this.setState({searchTerm: e.target.value}, this.handleSearch)\n  }\n\n  private handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    this.setState({searchTerm: e.target.value}, this.handleSearch)\n  }\n}\n\nexport default SearchWidget\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Actions\nimport {getAssetLimits as getAssetLimitsAction} from 'src/cloud/actions/limits'\n\n// Components\nimport {\n  TechnoSpinner,\n  SpinnerContainer,\n  RemoteDataState,\n} from '@influxdata/clockface'\n\n// Types\nimport {AppState} from 'src/types'\n\n// Constants\nimport {CLOUD} from 'src/shared/constants'\n\ninterface StateProps {\n  status: RemoteDataState\n}\n\ninterface DispatchProps {\n  getAssetLimits: typeof getAssetLimitsAction\n}\n\ntype Props = StateProps & DispatchProps\n\nclass GetAssetLimits extends PureComponent<Props> {\n  public componentDidMount() {\n    if (CLOUD) {\n      this.props.getAssetLimits()\n    }\n  }\n\n  public render() {\n    const {status} = this.props\n    if (CLOUD) {\n      return (\n        <SpinnerContainer loading={status} spinnerComponent={<TechnoSpinner />}>\n          {this.props.children}\n        </SpinnerContainer>\n      )\n    }\n    return this.props.children\n  }\n}\n\nconst mstp = ({\n  cloud: {\n    limits: {status},\n  },\n}: AppState): StateProps => ({status})\n\nconst mdtp: DispatchProps = {getAssetLimits: getAssetLimitsAction}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(GetAssetLimits)\n","import React, {FunctionComponent} from 'react'\n\n// Components\nimport {FeatureFlag} from 'src/shared/utils/featureFlag'\nimport {\n  Button,\n  ComponentColor,\n  ComponentSize,\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n} from '@influxdata/clockface'\n\n// Constants\nimport {CLOUD_CHECKOUT_PATH, CLOUD_URL} from 'src/shared/constants'\n\nconst CheckoutButton: FunctionComponent<{}> = () => {\n  const checkoutURL = `${CLOUD_URL}${CLOUD_CHECKOUT_PATH}`\n  const onClick = () => (window.location.href = checkoutURL)\n\n  return (\n    <FeatureFlag name=\"cloudBilling\">\n      <FlexBox\n        direction={FlexDirection.Row}\n        justifyContent={JustifyContent.SpaceAround}\n        margin={ComponentSize.Small}\n      >\n        <div>Want to remove these limits?</div>\n        <Button\n          color={ComponentColor.Primary}\n          onClick={onClick}\n          text=\"Upgrade Now\"\n          size={ComponentSize.Small}\n        />\n      </FlexBox>\n    </FeatureFlag>\n  )\n}\n\nexport default CheckoutButton\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {\n  FlexBox,\n  FlexDirection,\n  AlignItems,\n  ComponentSize,\n  IconFont,\n  ComponentColor,\n  Alert,\n  JustifyContent,\n} from '@influxdata/clockface'\n\n// Constants\nimport {CLOUD} from 'src/shared/constants'\n\n// Types\nimport {LimitStatus} from 'src/cloud/actions/limits'\nimport CheckoutButton from 'src/cloud/components/CheckoutButton'\n\ninterface Props {\n  resourceName: string\n  limitStatus: LimitStatus\n  className?: string\n}\n\nexport default class AssetLimitAlert extends PureComponent<Props> {\n  public render() {\n    const {limitStatus, resourceName, className} = this.props\n\n    if (CLOUD && limitStatus === LimitStatus.EXCEEDED) {\n      return (\n        <FlexBox\n          direction={FlexDirection.Column}\n          alignItems={AlignItems.Center}\n          margin={ComponentSize.Large}\n          stretchToFitWidth={true}\n          className={className}\n        >\n          <Alert icon={IconFont.Cloud} color={ComponentColor.Primary}>\n            <FlexBox\n              alignItems={AlignItems.Center}\n              direction={FlexDirection.Row}\n              justifyContent={JustifyContent.SpaceBetween}\n              margin={ComponentSize.Medium}\n            >\n              <div>\n                {`Hey there, looks like you have reached the maximum number of\n              ${resourceName} you can create as part of your plan.`}\n                <br />\n              </div>\n              <CheckoutButton />\n            </FlexBox>\n          </Alert>\n        </FlexBox>\n      )\n    }\n\n    return null\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport TasksHeader from 'src/tasks/components/TasksHeader'\nimport TasksList from 'src/tasks/components/TasksList'\nimport {Page} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport FilterList from 'src/shared/components/FilterList'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport GetResources from 'src/resources/components/GetResources'\nimport GetAssetLimits from 'src/cloud/components/GetAssetLimits'\nimport AssetLimitAlert from 'src/cloud/components/AssetLimitAlert'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\n\n// Actions\nimport {\n  updateTaskStatus,\n  updateTaskName,\n  deleteTask,\n  selectTask,\n  cloneTask,\n  addTaskLabel,\n  runTask,\n} from 'src/tasks/actions/thunks'\n\nimport {\n  setSearchTerm as setSearchTermAction,\n  setShowInactive as setShowInactiveAction,\n} from 'src/tasks/actions/creators'\n\nimport {\n  checkTaskLimits as checkTasksLimitsAction,\n  LimitStatus,\n} from 'src/cloud/actions/limits'\n\n// Types\nimport {AppState, Task, RemoteDataState, ResourceType} from 'src/types'\nimport {InjectedRouter, WithRouterProps} from 'react-router'\nimport {Sort} from '@influxdata/clockface'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {extractTaskLimits} from 'src/cloud/utils/limits'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\ninterface PassedInProps {\n  router: InjectedRouter\n}\n\ninterface ConnectedDispatchProps {\n  updateTaskStatus: typeof updateTaskStatus\n  updateTaskName: typeof updateTaskName\n  deleteTask: typeof deleteTask\n  cloneTask: typeof cloneTask\n  selectTask: typeof selectTask\n  setSearchTerm: typeof setSearchTermAction\n  setShowInactive: typeof setShowInactiveAction\n  onAddTaskLabel: typeof addTaskLabel\n  onRunTask: typeof runTask\n  checkTaskLimits: typeof checkTasksLimitsAction\n}\n\ninterface ConnectedStateProps {\n  tasks: Task[]\n  searchTerm: string\n  showInactive: boolean\n  status: RemoteDataState\n  limitStatus: LimitStatus\n}\n\ntype Props = ConnectedDispatchProps &\n  PassedInProps &\n  ConnectedStateProps &\n  WithRouterProps\n\ninterface State {\n  isImporting: boolean\n  taskLabelsEdit: Task\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ntype SortKey = keyof Task\n\nconst Filter = FilterList<Task>()\n\n@ErrorHandling\nclass TasksPage extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    props.setSearchTerm('')\n    if (!props.showInactive) {\n      props.setShowInactive()\n    }\n\n    this.state = {\n      isImporting: false,\n      taskLabelsEdit: null,\n      sortKey: 'name',\n      sortDirection: Sort.Ascending,\n      sortType: SortTypes.String,\n    }\n  }\n\n  public render(): JSX.Element {\n    const {sortKey, sortDirection, sortType} = this.state\n    const {\n      selectTask,\n      setSearchTerm,\n      updateTaskName,\n      searchTerm,\n      setShowInactive,\n      showInactive,\n      onAddTaskLabel,\n      onRunTask,\n      checkTaskLimits,\n      limitStatus,\n      children,\n    } = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Tasks'])}>\n          <TasksHeader\n            onCreateTask={this.handleCreateTask}\n            setShowInactive={setShowInactive}\n            showInactive={showInactive}\n            onImportTask={this.summonImportOverlay}\n            onImportFromTemplate={this.summonImportFromTemplateOverlay}\n            limitStatus={limitStatus}\n          />\n          <Page.Contents fullWidth={false} scrollable={true}>\n            <GetResources resources={[ResourceType.Tasks, ResourceType.Labels]}>\n              <GetAssetLimits>\n                <AssetLimitAlert\n                  resourceName=\"tasks\"\n                  limitStatus={limitStatus}\n                />\n                <Filter\n                  list={this.filteredTasks}\n                  searchTerm={searchTerm}\n                  searchKeys={['name', 'labels[].name']}\n                >\n                  {ts => (\n                    <TasksList\n                      searchTerm={searchTerm}\n                      tasks={ts}\n                      totalCount={this.totalTaskCount}\n                      onActivate={this.handleActivate}\n                      onDelete={this.handleDelete}\n                      onCreate={this.handleCreateTask}\n                      onClone={this.handleClone}\n                      onSelect={selectTask}\n                      onAddTaskLabel={onAddTaskLabel}\n                      onRunTask={onRunTask}\n                      onFilterChange={setSearchTerm}\n                      filterComponent={this.search}\n                      onUpdate={updateTaskName}\n                      onImportTask={this.summonImportOverlay}\n                      onImportFromTemplate={\n                        this.summonImportFromTemplateOverlay\n                      }\n                      sortKey={sortKey}\n                      sortDirection={sortDirection}\n                      sortType={sortType}\n                      onClickColumn={this.handleClickColumn}\n                      checkTaskLimits={checkTaskLimits}\n                    />\n                  )}\n                </Filter>\n                {this.hiddenTaskAlert}\n              </GetAssetLimits>\n            </GetResources>\n          </Page.Contents>\n        </Page>\n        {children}\n      </>\n    )\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    let sortType = SortTypes.String\n\n    if (sortKey === 'latestCompleted') {\n      sortType = SortTypes.Date\n    }\n\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private handleActivate = (task: Task) => {\n    this.props.updateTaskStatus(task)\n  }\n\n  private handleDelete = (task: Task) => {\n    this.props.deleteTask(task.id)\n  }\n\n  private handleClone = (task: Task) => {\n    this.props.cloneTask(task)\n  }\n\n  private handleCreateTask = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/tasks/new`)\n  }\n\n  private summonImportFromTemplateOverlay = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/tasks/import/template`)\n  }\n\n  private summonImportOverlay = (): void => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/tasks/import`)\n  }\n\n  private get search(): JSX.Element {\n    const {setSearchTerm, searchTerm} = this.props\n\n    return (\n      <SearchWidget\n        placeholderText=\"Filter tasks...\"\n        onSearch={setSearchTerm}\n        searchTerm={searchTerm}\n      />\n    )\n  }\n\n  private get filteredTasks(): Task[] {\n    const {tasks, showInactive} = this.props\n    const matchingTasks = tasks.filter(t => {\n      let activeFilter = true\n      if (!showInactive) {\n        activeFilter = t.status === 'active'\n      }\n\n      return activeFilter\n    })\n\n    return matchingTasks\n  }\n\n  private get totalTaskCount(): number {\n    return this.props.tasks.length\n  }\n\n  private get hiddenTaskAlert(): JSX.Element {\n    const {showInactive, tasks} = this.props\n\n    const hiddenCount = tasks.filter(t => t.status === 'inactive').length\n\n    const allTasksAreHidden = hiddenCount === tasks.length\n\n    if (allTasksAreHidden || showInactive) {\n      return null\n    }\n\n    if (hiddenCount) {\n      const pluralizer = hiddenCount === 1 ? '' : 's'\n      const verb = hiddenCount === 1 ? 'is' : 'are'\n\n      return (\n        <div className=\"hidden-tasks-alert\">{`${hiddenCount} inactive task${pluralizer} ${verb} hidden from view`}</div>\n      )\n    }\n  }\n}\n\nconst mstp = (state: AppState): ConnectedStateProps => {\n  const {\n    resources,\n    cloud: {limits},\n  } = state\n  const {status, searchTerm, showInactive} = resources.tasks\n\n  return {\n    tasks: getAll<Task>(state, ResourceType.Tasks),\n    status: status,\n    searchTerm,\n    showInactive,\n    limitStatus: extractTaskLimits(limits),\n  }\n}\n\nconst mdtp: ConnectedDispatchProps = {\n  updateTaskStatus,\n  updateTaskName,\n  deleteTask,\n  selectTask,\n  cloneTask,\n  setSearchTerm: setSearchTermAction,\n  setShowInactive: setShowInactiveAction,\n  onAddTaskLabel: addTaskLabel,\n  onRunTask: runTask,\n  checkTaskLimits: checkTasksLimitsAction,\n}\n\nexport default connect<\n  ConnectedStateProps,\n  ConnectedDispatchProps,\n  PassedInProps\n>(\n  mstp,\n  mdtp\n)(TasksPage)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\n\n// Components\nimport {IndexList} from '@influxdata/clockface'\n\n// Types\nimport {LogEvent} from 'src/types'\nimport {DEFAULT_TIME_FORMAT} from 'src/shared/constants'\n\ninterface Props {\n  log: LogEvent\n}\n\nclass RunLogRow extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props)\n  }\n\n  public render() {\n    const {log} = this.props\n\n    return (\n      <IndexList.Row>\n        <IndexList.Cell>\n          <span className=\"run-logs--list-time\">\n            {this.dateTimeString(log.time)}\n          </span>\n        </IndexList.Cell>\n        <IndexList.Cell>\n          <span className=\"run-logs--list-message\">{log.message}</span>\n        </IndexList.Cell>\n      </IndexList.Row>\n    )\n  }\n\n  private dateTimeString(dt: string): string {\n    if (!dt) {\n      return ''\n    }\n\n    const newdate = new Date(dt)\n    const formatted = moment(newdate).format(DEFAULT_TIME_FORMAT)\n\n    return formatted\n  }\n}\n\nexport default RunLogRow\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n//Components\nimport {Overlay, IndexList} from '@influxdata/clockface'\nimport RunLogRow from 'src/tasks/components/RunLogRow'\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\n\n// Types\nimport {LogEvent} from 'src/types'\n\ninterface Props {\n  onDismissOverlay: () => void\n  logs: LogEvent[]\n}\n\nclass RunLogsOverlay extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props)\n  }\n\n  public render() {\n    const {onDismissOverlay} = this.props\n\n    return (\n      <Overlay.Container className=\"run-logs--list\">\n        <Overlay.Header title=\"Run Logs\" onDismiss={onDismissOverlay} />\n        <Overlay.Body>\n          <FancyScrollbar autoHeight={true} maxHeight={700}>\n            <IndexList>\n              <IndexList.Header>\n                <IndexList.HeaderCell columnName=\"Time\" width=\"10%\" />\n                <IndexList.HeaderCell columnName=\"Message\" width=\"90%\" />\n              </IndexList.Header>\n              <IndexList.Body emptyState={<></>} columnCount={2}>\n                {this.listLogs}\n              </IndexList.Body>\n            </IndexList>\n          </FancyScrollbar>\n        </Overlay.Body>\n      </Overlay.Container>\n    )\n  }\n\n  public get listLogs(): JSX.Element[] {\n    const logs = this.props.logs.map(rl => (\n      <RunLogRow key={rl.message} log={rl} />\n    ))\n\n    return logs\n  }\n}\n\nexport default RunLogsOverlay\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport moment from 'moment'\n\n// Components\nimport {Overlay, IndexList} from '@influxdata/clockface'\nimport RunLogsOverlay from 'src/tasks/components/RunLogsList'\n\n// Actions\nimport {getLogs} from 'src/tasks/actions/thunks'\n\n// Types\nimport {ComponentSize, ComponentColor, Button} from '@influxdata/clockface'\nimport {AppState, LogEvent, Run} from 'src/types'\nimport {DEFAULT_TIME_FORMAT} from 'src/shared/constants'\n\ninterface OwnProps {\n  taskID: string\n  run: Run\n}\n\ninterface DispatchProps {\n  getLogs: typeof getLogs\n}\n\ninterface StateProps {\n  logs: LogEvent[]\n}\n\ntype Props = OwnProps & DispatchProps & StateProps\n\ninterface State {\n  isImportOverlayVisible: boolean\n}\n\nclass TaskRunsRow extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      isImportOverlayVisible: false,\n    }\n  }\n\n  public render() {\n    const {run} = this.props\n    return (\n      <>\n        <IndexList.Row>\n          <IndexList.Cell>{run.status}</IndexList.Cell>\n          <IndexList.Cell>\n            {this.dateTimeString(run.scheduledFor)}\n          </IndexList.Cell>\n          <IndexList.Cell>{this.dateTimeString(run.startedAt)}</IndexList.Cell>\n          <IndexList.Cell>{run.duration}</IndexList.Cell>\n          <IndexList.Cell>\n            <Button\n              key={run.id}\n              size={ComponentSize.ExtraSmall}\n              color={ComponentColor.Default}\n              text=\"View Logs\"\n              onClick={this.handleToggleOverlay}\n            />\n            {this.renderLogOverlay}\n          </IndexList.Cell>\n        </IndexList.Row>\n      </>\n    )\n  }\n\n  private dateTimeString(dt: string): string {\n    if (!dt) {\n      return ''\n    }\n    const newdate = new Date(dt)\n    const formatted = moment(newdate).format(DEFAULT_TIME_FORMAT)\n\n    return formatted\n  }\n\n  private handleToggleOverlay = () => {\n    const {taskID, run, getLogs} = this.props\n    getLogs(taskID, run.id)\n\n    this.setState({isImportOverlayVisible: !this.state.isImportOverlayVisible})\n  }\n\n  private get renderLogOverlay(): JSX.Element {\n    const {isImportOverlayVisible} = this.state\n    const {logs} = this.props\n\n    return (\n      <Overlay visible={isImportOverlayVisible}>\n        <RunLogsOverlay\n          onDismissOverlay={this.handleToggleOverlay}\n          logs={logs}\n        />\n      </Overlay>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {logs} = state.resources.tasks\n\n  return {logs}\n}\n\nconst mdtp: DispatchProps = {getLogs: getLogs}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(TaskRunsRow)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport {EmptyState, IndexList} from '@influxdata/clockface'\nimport TaskRunsRow from 'src/tasks/components/TaskRunsRow'\n\n// Types\nimport {Sort, ComponentSize} from '@influxdata/clockface'\nimport {Run} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\n\n// Utils\nimport {getSortedResources} from 'src/shared/utils/sort'\n\ninterface Props {\n  taskID: string\n  runs: Run[]\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (nextSort: Sort, sortKey: SortKey) => void\n}\n\ntype SortKey = keyof Run\n\nexport default class TaskRunsList extends PureComponent<Props> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  public render() {\n    const {sortKey, sortDirection, onClickColumn} = this.props\n\n    return (\n      <IndexList>\n        <IndexList.Header>\n          <IndexList.HeaderCell\n            columnName=\"Status\"\n            width=\"10%\"\n            sortKey={this.headerKeys[0]}\n            sort={sortKey === this.headerKeys[0] ? sortDirection : Sort.None}\n            onClick={onClickColumn}\n          />\n          <IndexList.HeaderCell\n            columnName=\"Schedule\"\n            width=\"20%\"\n            sortKey={this.headerKeys[1]}\n            sort={sortKey === this.headerKeys[1] ? sortDirection : Sort.None}\n            onClick={onClickColumn}\n          />\n          <IndexList.HeaderCell\n            columnName=\"Started\"\n            width=\"20%\"\n            sortKey={this.headerKeys[2]}\n            sort={sortKey === this.headerKeys[2] ? sortDirection : Sort.None}\n            onClick={onClickColumn}\n          />\n          <IndexList.HeaderCell\n            columnName=\"Duration\"\n            width=\"20%\"\n            sortKey={this.headerKeys[3]}\n            sort={sortKey === this.headerKeys[3] ? sortDirection : Sort.None}\n            onClick={onClickColumn}\n          />\n          <IndexList.HeaderCell width=\"10%\" />\n        </IndexList.Header>\n        <IndexList.Body\n          emptyState={\n            <EmptyState size={ComponentSize.Large}>\n              <EmptyState.Text>\n                Looks like this Task doesn't have any <b>Runs</b>\n              </EmptyState.Text>\n            </EmptyState>\n          }\n          columnCount={5}\n        >\n          {this.sortedRuns}\n        </IndexList.Body>\n      </IndexList>\n    )\n  }\n  private get headerKeys(): SortKey[] {\n    return ['status', 'scheduledFor', 'startedAt', 'duration']\n  }\n\n  private get sortedRuns(): JSX.Element[] {\n    const {runs, sortKey, sortDirection, sortType, taskID} = this.props\n\n    const sortedRuns = this.memGetSortedResources(\n      runs,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    const mostRecentRuns = sortedRuns.slice(0, 20)\n\n    return mostRecentRuns.map(run => (\n      <TaskRunsRow key={`run-id==${run.id}`} taskID={taskID} run={run} />\n    ))\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Page, IconFont, Sort} from '@influxdata/clockface'\nimport TaskRunsList from 'src/tasks/components/TaskRunsList'\nimport PageTitleWithOrg from 'src/shared/components/PageTitleWithOrg'\n\n// Types\nimport {AppState, RemoteDataState, Task, Run} from 'src/types'\nimport {\n  SpinnerContainer,\n  TechnoSpinner,\n  Button,\n  ComponentColor,\n} from '@influxdata/clockface'\n\n// Actions\nimport {getRuns, runTask} from 'src/tasks/actions/thunks'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\n\n// Types\nimport {SortTypes} from 'src/shared/utils/sort'\n\ninterface OwnProps {\n  params: {id: string}\n}\n\ninterface DispatchProps {\n  getRuns: typeof getRuns\n  onRunTask: typeof runTask\n}\n\ninterface StateProps {\n  runs: Run[]\n  runStatus: RemoteDataState\n  currentTask: Task\n}\n\ntype Props = OwnProps & DispatchProps & StateProps\n\ninterface State {\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ntype SortKey = keyof Run\n\nclass TaskRunsPage extends PureComponent<Props & WithRouterProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sortKey: 'scheduledFor',\n      sortDirection: Sort.Descending,\n      sortType: SortTypes.Date,\n    }\n  }\n\n  public render() {\n    const {params, runs} = this.props\n    const {sortKey, sortDirection, sortType} = this.state\n\n    return (\n      <SpinnerContainer\n        loading={this.props.runStatus}\n        spinnerComponent={<TechnoSpinner />}\n      >\n        <Page titleTag={pageTitleSuffixer(['Task Runs'])}>\n          <Page.Header fullWidth={false}>\n            <Page.HeaderLeft>\n              <PageTitleWithOrg title={this.title} />\n            </Page.HeaderLeft>\n            <Page.HeaderRight>\n              <Button\n                onClick={this.handleEditTask}\n                text=\"Edit Task\"\n                color={ComponentColor.Primary}\n              />\n              <Button\n                onClick={this.handleRunTask}\n                text=\"Run Task\"\n                icon={IconFont.Play}\n              />\n            </Page.HeaderRight>\n          </Page.Header>\n          <Page.Contents fullWidth={false} scrollable={true}>\n            <TaskRunsList\n              taskID={params.id}\n              runs={runs}\n              sortKey={sortKey}\n              sortDirection={sortDirection}\n              sortType={sortType}\n              onClickColumn={this.handleClickColumn}\n            />\n          </Page.Contents>\n        </Page>\n      </SpinnerContainer>\n    )\n  }\n\n  public componentDidMount() {\n    this.props.getRuns(this.props.params.id)\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    let sortType = SortTypes.String\n\n    if (sortKey !== 'status') {\n      sortType = SortTypes.Date\n    }\n\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private get title() {\n    const {currentTask} = this.props\n\n    if (currentTask) {\n      return `${currentTask.name} - Runs`\n    }\n    return 'Runs'\n  }\n\n  private handleRunTask = () => {\n    const {onRunTask, params, getRuns} = this.props\n    onRunTask(params.id)\n    getRuns(params.id)\n  }\n\n  private handleEditTask = () => {\n    const {\n      router,\n      currentTask,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/tasks/${currentTask.id}`)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {runs, runStatus, currentTask} = state.resources.tasks\n\n  return {\n    runs,\n    runStatus,\n    currentTask,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  getRuns: getRuns,\n  onRunTask: runTask,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<OwnProps>(TaskRunsPage))\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {InjectedRouter} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport TaskForm from 'src/tasks/components/TaskForm'\nimport TaskHeader from 'src/tasks/components/TaskHeader'\nimport {Page} from '@influxdata/clockface'\n\nimport FluxEditor from 'src/shared/components/FluxMonacoEditor'\n\n// Actions\nimport {\n  setCurrentScript,\n  setTaskOption,\n  clearTask,\n} from 'src/tasks/actions/creators'\nimport {\n  updateScript,\n  selectTaskByID,\n  cancel,\n  setAllTaskOptionsByID,\n} from 'src/tasks/actions/thunks'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\n\n// Types\nimport {\n  AppState,\n  Task,\n  TaskOptions,\n  TaskOptionKeys,\n  TaskSchedule,\n} from 'src/types'\n\ninterface OwnProps {\n  router: InjectedRouter\n  params: {id: string}\n}\n\ninterface StateProps {\n  taskOptions: TaskOptions\n  currentTask: Task\n  currentScript: string\n}\n\ninterface DispatchProps {\n  setTaskOption: typeof setTaskOption\n  setCurrentScript: typeof setCurrentScript\n  updateScript: typeof updateScript\n  cancel: typeof cancel\n  selectTaskByID: typeof selectTaskByID\n  clearTask: typeof clearTask\n  setAllTaskOptionsByID: typeof setAllTaskOptionsByID\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nclass TaskEditPage extends PureComponent<Props> {\n  constructor(props) {\n    super(props)\n  }\n\n  public componentDidMount() {\n    const {\n      params: {id},\n    } = this.props\n    this.props.selectTaskByID(id)\n    this.props.setAllTaskOptionsByID(id)\n  }\n\n  public componentWillUnmount() {\n    this.props.clearTask()\n  }\n\n  public render(): JSX.Element {\n    const {currentScript, taskOptions} = this.props\n\n    return (\n      <Page titleTag={pageTitleSuffixer([`Edit ${taskOptions.name}`])}>\n        <TaskHeader\n          title=\"Edit Task\"\n          canSubmit={this.isFormValid}\n          onCancel={this.handleCancel}\n          onSave={this.handleSave}\n        />\n        <Page.Contents fullWidth={true} scrollable={false}>\n          <div className=\"task-form\">\n            <div className=\"task-form--options\">\n              <TaskForm\n                canSubmit={this.isFormValid}\n                taskOptions={taskOptions}\n                onChangeInput={this.handleChangeInput}\n                onChangeScheduleType={this.handleChangeScheduleType}\n              />\n            </div>\n            <div className=\"task-form--editor\">\n              <FluxEditor\n                script={currentScript}\n                onChangeScript={this.handleChangeScript}\n              />\n            </div>\n          </div>\n        </Page.Contents>\n      </Page>\n    )\n  }\n\n  private get isFormValid(): boolean {\n    const {\n      taskOptions: {name, cron, interval},\n      currentScript,\n    } = this.props\n\n    const hasSchedule = !!cron || !!interval\n    return hasSchedule && !!name && !!currentScript\n  }\n\n  private handleChangeScript = (script: string) => {\n    this.props.setCurrentScript(script)\n  }\n\n  private handleChangeScheduleType = (schedule: TaskSchedule) => {\n    this.props.setTaskOption({key: 'taskScheduleType', value: schedule})\n  }\n\n  private handleSave = () => {\n    this.props.updateScript()\n  }\n\n  private handleCancel = () => {\n    this.props.cancel()\n  }\n\n  private handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const {name, value} = e.target\n    const key = name as TaskOptionKeys\n\n    this.props.setTaskOption({key, value})\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {taskOptions, currentScript, currentTask} = state.resources.tasks\n\n  return {\n    taskOptions,\n    currentScript,\n    currentTask,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  setTaskOption,\n  setCurrentScript,\n  updateScript,\n  cancel,\n  selectTaskByID,\n  setAllTaskOptionsByID,\n  clearTask,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(TaskEditPage)\n","// Libraries\nimport {get} from 'lodash'\n\n// Types\nimport {AppState, RemoteDataState} from 'src/types'\nimport {Resource} from 'src/resources/components/GetResource'\n\nexport const getResourceStatus = (\n  state: AppState,\n  resources: Resource[]\n): RemoteDataState => {\n  const statuses = resources.map(resource => {\n    return getStatus(state, resource)\n  })\n\n  let status = RemoteDataState.NotStarted\n\n  if (statuses.every(s => s === RemoteDataState.Done)) {\n    status = RemoteDataState.Done\n  } else if (statuses.includes(RemoteDataState.Error)) {\n    status = RemoteDataState.Error\n  } else if (statuses.includes(RemoteDataState.Loading)) {\n    status = RemoteDataState.Loading\n  }\n\n  return status\n}\n\nconst getStatus = ({resources}: AppState, {type, id}: Resource) => {\n  return get(resources, [type, 'byID', id, 'status'], RemoteDataState.Loading)\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Actions\nimport {getDashboard} from 'src/dashboards/actions/thunks'\n\n// Types\nimport {AppState, RemoteDataState, ResourceType} from 'src/types'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {TechnoSpinner, SpinnerContainer} from '@influxdata/clockface'\n\n// Selectors\nimport {getResourceStatus} from 'src/resources/selectors/getResourceStatus'\n\ninterface StateProps {\n  remoteDataState: RemoteDataState\n}\n\ninterface DispatchProps {\n  getDashboard: typeof getDashboard\n}\n\nexport interface Resource {\n  type: ResourceType\n  id: string\n}\n\ninterface OwnProps {\n  resources: Resource[]\n}\n\nexport type Props = StateProps & DispatchProps & OwnProps\n\n@ErrorHandling\nclass GetResource extends PureComponent<Props, StateProps> {\n  public componentDidMount() {\n    const {resources} = this.props\n    const promises = []\n    resources.forEach(resource => {\n      promises.push(this.getResourceDetails(resource))\n    })\n    Promise.all(promises)\n  }\n\n  private getResourceDetails({type, id}: Resource) {\n    switch (type) {\n      case ResourceType.Dashboards: {\n        return this.props.getDashboard(id)\n      }\n\n      default: {\n        throw new Error(\n          `incorrect resource type: \"${type}\" provided to GetResources`\n        )\n      }\n    }\n  }\n\n  public render() {\n    const {children, remoteDataState} = this.props\n\n    return (\n      <>\n        <SpinnerContainer\n          loading={remoteDataState}\n          spinnerComponent={<TechnoSpinner />}\n          testID=\"dashboard-container--spinner\"\n        >\n          {children}\n        </SpinnerContainer>\n      </>\n    )\n  }\n}\n\nconst mstp = (state: AppState, props: Props): StateProps => {\n  const remoteDataState = getResourceStatus(state, props.resources)\n\n  return {\n    remoteDataState,\n  }\n}\n\nconst mdtp = {\n  getDashboard: getDashboard,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(GetResource)\n","export enum AutoRefreshOptionType {\n  Option = 'option',\n  Header = 'header',\n}\n\nexport interface AutoRefreshOption {\n  id: string\n  milliseconds: number\n  label: string\n  type: AutoRefreshOptionType\n}\n\nconst autoRefreshOptions: AutoRefreshOption[] = [\n  {\n    id: 'auto-refresh-header',\n    milliseconds: 1,\n    label: 'Refresh',\n    type: AutoRefreshOptionType.Header,\n  },\n  {\n    id: 'auto-refresh-paused',\n    milliseconds: 0,\n    label: 'Paused',\n    type: AutoRefreshOptionType.Option,\n  },\n  {\n    id: 'auto-refresh-5s',\n    milliseconds: 5000,\n    label: '5s',\n    type: AutoRefreshOptionType.Option,\n  },\n  {\n    id: 'auto-refresh-10s',\n    milliseconds: 10000,\n    label: '10s',\n    type: AutoRefreshOptionType.Option,\n  },\n  {\n    id: 'auto-refresh-15s',\n    milliseconds: 15000,\n    label: '15s',\n    type: AutoRefreshOptionType.Option,\n  },\n  {\n    id: 'auto-refresh-30s',\n    milliseconds: 30000,\n    label: '30s',\n    type: AutoRefreshOptionType.Option,\n  },\n  {\n    id: 'auto-refresh-60s',\n    milliseconds: 60000,\n    label: '60s',\n    type: AutoRefreshOptionType.Option,\n  },\n]\n\nexport default autoRefreshOptions\n","// Libraries\nimport React, {Component} from 'react'\nimport classnames from 'classnames'\n\n// Components\nimport {\n  SquareButton,\n  IconFont,\n  ComponentStatus,\n  Dropdown,\n} from '@influxdata/clockface'\n\n// Constants\nimport autoRefreshOptions, {\n  AutoRefreshOption,\n  AutoRefreshOptionType,\n} from 'src/shared/data/autoRefreshes'\n\n// Types\nimport {AutoRefresh, AutoRefreshStatus} from 'src/types'\n\nconst DROPDOWN_WIDTH_COLLAPSED = 50\nconst DROPDOWN_WIDTH_FULL = 84\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  selected: AutoRefresh\n  onChoose: (milliseconds: number) => void\n  showManualRefresh: boolean\n  onManualRefresh?: () => void\n}\n\n@ErrorHandling\nexport default class AutoRefreshDropdown extends Component<Props> {\n  public static defaultProps = {\n    showManualRefresh: true,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isOpen: false,\n    }\n  }\n\n  public render() {\n    return (\n      <div className={this.className}>\n        <Dropdown\n          style={{width: `${this.dropdownWidthPixels}px`}}\n          button={(active, onClick) => (\n            <Dropdown.Button\n              active={active}\n              onClick={onClick}\n              status={this.dropdownStatus}\n              icon={this.dropdownIcon}\n            >\n              {this.selectedOptionLabel}\n            </Dropdown.Button>\n          )}\n          menu={onCollapse => (\n            <Dropdown.Menu\n              onCollapse={onCollapse}\n              style={{width: `${DROPDOWN_WIDTH_FULL}px`}}\n            >\n              {autoRefreshOptions.map(option => {\n                if (option.type === AutoRefreshOptionType.Header) {\n                  return (\n                    <Dropdown.Divider\n                      key={option.id}\n                      id={option.id}\n                      text={option.label}\n                    />\n                  )\n                }\n\n                return (\n                  <Dropdown.Item\n                    key={option.id}\n                    id={option.id}\n                    value={option}\n                    selected={option.id === this.selectedOptionID}\n                    onClick={this.handleDropdownChange}\n                  >\n                    {option.label}\n                  </Dropdown.Item>\n                )\n              })}\n            </Dropdown.Menu>\n          )}\n        />\n        {this.manualRefreshButton}\n      </div>\n    )\n  }\n\n  public handleDropdownChange = (\n    autoRefreshOption: AutoRefreshOption\n  ): void => {\n    this.props.onChoose(autoRefreshOption.milliseconds)\n  }\n\n  private get dropdownStatus(): ComponentStatus {\n    if (this.isDisabled) {\n      return ComponentStatus.Disabled\n    }\n\n    return ComponentStatus.Default\n  }\n\n  private get isDisabled(): boolean {\n    const {selected} = this.props\n\n    return selected.status === AutoRefreshStatus.Disabled\n  }\n\n  private get isPaused(): boolean {\n    const {selected} = this.props\n\n    return selected.status === AutoRefreshStatus.Paused || this.isDisabled\n  }\n\n  private get className(): string {\n    return classnames('autorefresh-dropdown', {paused: this.isPaused})\n  }\n\n  private get dropdownIcon(): IconFont {\n    if (this.isPaused) {\n      return IconFont.Pause\n    }\n\n    return IconFont.Refresh\n  }\n\n  private get dropdownWidthPixels(): number {\n    if (this.isPaused) {\n      return DROPDOWN_WIDTH_COLLAPSED\n    }\n\n    return DROPDOWN_WIDTH_FULL\n  }\n\n  private get selectedOptionID(): string {\n    const {selected} = this.props\n\n    const selectedOption = autoRefreshOptions.find(\n      option => option.milliseconds === selected.interval\n    )\n\n    return selectedOption.id\n  }\n\n  private get selectedOptionLabel(): string {\n    const {selected} = this.props\n\n    const selectedOption = autoRefreshOptions.find(\n      option => option.milliseconds === selected.interval\n    )\n\n    return selectedOption.label\n  }\n\n  private get manualRefreshButton(): JSX.Element {\n    const {showManualRefresh, onManualRefresh} = this.props\n\n    if (!showManualRefresh) {\n      return\n    }\n\n    if (this.isPaused) {\n      return (\n        <SquareButton\n          icon={IconFont.Refresh}\n          onClick={onManualRefresh}\n          className=\"autorefresh-dropdown--pause\"\n        />\n      )\n    }\n\n    return null\n  }\n}\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport ReactDatePicker from 'react-datepicker'\nimport moment from 'moment'\n\n// Components\nimport {Input, Grid, Form} from '@influxdata/clockface'\n\n// Styles\nimport 'react-datepicker/dist/react-datepicker.css'\n\n// Types\nimport {Columns, ComponentSize, ComponentStatus} from '@influxdata/clockface'\n\ninterface Props {\n  label: string\n  dateTime: string\n  onSelectDate: (date: string) => void\n}\n\ninterface State {\n  inputValue: string\n  inputFormat: string\n}\n\nconst isValidRTC3339 = (d: string): boolean => {\n  return (\n    moment(d, 'YYYY-MM-DD HH:mm', true).isValid() ||\n    moment(d, 'YYYY-MM-DD HH:mm:ss', true).isValid() ||\n    moment(d, 'YYYY-MM-DD HH:mm:ss.SSS', true).isValid() ||\n    moment(d, 'YYYY-MM-DD', true).isValid()\n  )\n}\n\nconst getFormat = (d: string): string => {\n  if (moment(d, 'YYYY-MM-DD', true).isValid()) {\n    return 'YYYY-MM-DD'\n  }\n  if (moment(d, 'YYYY-MM-DD HH:mm', true).isValid()) {\n    return 'YYYY-MM-DD HH:mm'\n  }\n  if (moment(d, 'YYYY-MM-DD HH:mm:ss', true).isValid()) {\n    return 'YYYY-MM-DD HH:mm:ss'\n  }\n  if (moment(d, 'YYYY-MM-DD HH:mm:ss.SSS', true).isValid()) {\n    return 'YYYY-MM-DD HH:mm:ss.SSS'\n  }\n  return null\n}\n\nexport default class DatePicker extends PureComponent<Props, State> {\n  private inCurrentMonth: boolean = false\n  state = {\n    inputValue: null,\n    inputFormat: null,\n  }\n\n  public render() {\n    const {dateTime, label} = this.props\n\n    const date = new Date(dateTime)\n\n    return (\n      <div className=\"range-picker--date-picker\">\n        <Grid.Row>\n          <Grid.Column widthXS={Columns.Twelve}>\n            <Form.Element label={label} errorMessage={this.inputErrorMessage}>\n              <Input\n                size={ComponentSize.Medium}\n                className=\"range-picker--input react-datepicker-ignore-onclickoutside\"\n                titleText={label}\n                value={this.inputValue}\n                onChange={this.handleChangeInput}\n                status={this.inputStatus}\n              />\n            </Form.Element>\n            <div className=\"range-picker--popper-container\">\n              <ReactDatePicker\n                inline={true}\n                selected={date}\n                onChange={this.handleSelectDate}\n                startOpen={true}\n                dateFormat=\"yyyy-MM-dd HH:mm\"\n                showTimeSelect={true}\n                timeFormat=\"HH:mm\"\n                shouldCloseOnSelect={false}\n                disabledKeyboardNavigation={true}\n                calendarClassName=\"range-picker--calendar\"\n                dayClassName={this.dayClassName}\n                timeIntervals={60}\n                fixedHeight={true}\n              />\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </div>\n    )\n  }\n\n  private get inputValue(): string {\n    const {dateTime} = this.props\n    const {inputValue, inputFormat} = this.state\n\n    if (this.isInputValueInvalid) {\n      return inputValue\n    }\n\n    if (inputFormat) {\n      return moment(dateTime).format(inputFormat)\n    }\n\n    return moment(dateTime).format('YYYY-MM-DD HH:mm:ss.SSS')\n  }\n\n  private get isInputValueInvalid(): boolean {\n    const {inputValue} = this.state\n    if (inputValue === null) {\n      return false\n    }\n\n    return !isValidRTC3339(inputValue)\n  }\n\n  private get inputErrorMessage(): string | undefined {\n    if (this.isInputValueInvalid) {\n      return 'Format must be YYYY-MM-DD [HH:mm:ss.SSS]'\n    }\n\n    return '\\u00a0\\u00a0'\n  }\n\n  private get inputStatus(): ComponentStatus {\n    if (this.isInputValueInvalid) {\n      return ComponentStatus.Error\n    }\n    return ComponentStatus.Default\n  }\n\n  private dayClassName = (date: Date) => {\n    const day = date.getDate()\n\n    if (day === 1) {\n      this.inCurrentMonth = !this.inCurrentMonth\n    }\n\n    if (this.inCurrentMonth) {\n      return 'range-picker--day-in-month'\n    }\n\n    return 'range-picker--day'\n  }\n\n  private handleSelectDate = (date: Date): void => {\n    const {onSelectDate} = this.props\n    onSelectDate(date.toISOString())\n  }\n\n  private handleChangeInput = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {onSelectDate} = this.props\n    const value = e.target.value\n\n    if (isValidRTC3339(value)) {\n      onSelectDate(moment(value).toISOString())\n      this.setState({inputValue: value, inputFormat: getFormat(value)})\n      return\n    }\n\n    this.setState({inputValue: value, inputFormat: null})\n  }\n}\n","// Libraries\nimport React, {PureComponent, CSSProperties} from 'react'\n\n// Components\nimport DatePicker from 'src/shared/components/dateRangePicker/DatePicker'\nimport {ClickOutside} from 'src/shared/components/ClickOutside'\n\n// Types\nimport {TimeRange} from 'src/types'\nimport {Button, ComponentColor, ComponentSize} from '@influxdata/clockface'\n\ninterface Props {\n  timeRange: TimeRange\n  onSetTimeRange: (timeRange: TimeRange) => void\n  onClose: () => void\n  position?: {\n    top?: number\n    right?: number\n    bottom?: number\n    left?: number\n    position?: string\n  }\n}\n\ninterface State {\n  lower: string\n  upper: string\n}\n\nclass DateRangePicker extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    const {\n      timeRange: {lower, upper},\n    } = props\n\n    this.state = {lower, upper}\n  }\n\n  public render() {\n    const {onClose} = this.props\n    const {upper, lower} = this.state\n\n    return (\n      <ClickOutside onClickOutside={onClose}>\n        <div\n          className=\"range-picker react-datepicker-ignore-onclickoutside\"\n          style={this.stylePosition}\n        >\n          <button className=\"range-picker--dismiss\" onClick={onClose} />\n          <div className=\"range-picker--date-pickers\">\n            <DatePicker\n              dateTime={lower}\n              onSelectDate={this.handleSelectLower}\n              label=\"Start\"\n            />\n            <DatePicker\n              dateTime={upper}\n              onSelectDate={this.handleSelectUpper}\n              label=\"Stop\"\n            />\n          </div>\n          <Button\n            className=\"range-picker--submit\"\n            color={ComponentColor.Primary}\n            size={ComponentSize.Small}\n            onClick={this.handleSetTimeRange}\n            text=\"Apply Time Range\"\n          />\n        </div>\n      </ClickOutside>\n    )\n  }\n\n  private get stylePosition(): CSSProperties {\n    const {position} = this.props\n\n    if (!position) {\n      return {\n        top: `${window.innerHeight / 2}px`,\n        left: `${window.innerWidth / 2}px`,\n        transform: `translate(-50%, -50%)`,\n      }\n    }\n\n    const style = Object.entries(position).reduce((acc, [k, v]) => {\n      const obj = {...acc}\n      if (isNaN(+v)) {\n        obj[k] = v\n      } else {\n        obj[k] = `${v}px`\n      }\n      return obj\n    }, {})\n\n    return style\n  }\n\n  private handleSetTimeRange = (): void => {\n    const {onSetTimeRange} = this.props\n    const {upper, lower} = this.state\n\n    onSetTimeRange({lower, upper, type: 'custom'})\n  }\n\n  private handleSelectLower = (lower: string): void => {\n    this.setState({lower})\n  }\n\n  private handleSelectUpper = (upper: string): void => {\n    this.setState({upper})\n  }\n}\n\nexport default DateRangePicker\n","// Libraries\nimport React, {PureComponent, createRef} from 'react'\n\n// Components\nimport {\n  Dropdown,\n  Popover,\n  PopoverPosition,\n  PopoverInteraction,\n  Appearance,\n} from '@influxdata/clockface'\nimport DateRangePicker from 'src/shared/components/dateRangePicker/DateRangePicker'\n\n// Utils\nimport {\n  convertTimeRangeToCustom,\n  getTimeRangeLabel,\n} from 'src/shared/utils/duration'\n\n// Constants\nimport {\n  SELECTABLE_TIME_RANGES,\n  CUSTOM_TIME_RANGE_LABEL,\n} from 'src/shared/constants/timeRanges'\n\n// Types\nimport {\n  TimeRange,\n  CustomTimeRange,\n  SelectableDurationTimeRange,\n} from 'src/types'\n\ninterface Props {\n  timeRange: TimeRange\n  onSetTimeRange: (timeRange: TimeRange) => void\n}\n\ninterface State {\n  isDatePickerOpen: boolean\n}\n\nclass TimeRangeDropdown extends PureComponent<Props, State> {\n  private dropdownRef = createRef<HTMLDivElement>()\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {isDatePickerOpen: false}\n  }\n\n  public render() {\n    const timeRange = this.timeRange\n    const timeRangeLabel = getTimeRangeLabel(timeRange)\n    return (\n      <>\n        <Popover\n          appearance={Appearance.Outline}\n          position={PopoverPosition.ToTheLeft}\n          triggerRef={this.dropdownRef}\n          visible={this.state.isDatePickerOpen}\n          showEvent={PopoverInteraction.None}\n          hideEvent={PopoverInteraction.None}\n          distanceFromTrigger={8}\n          testID=\"timerange-popover\"\n          enableDefaultStyles={false}\n          contents={() => (\n            <DateRangePicker\n              timeRange={timeRange}\n              onSetTimeRange={this.handleApplyTimeRange}\n              onClose={this.handleHideDatePicker}\n              position={\n                this.state.isDatePickerOpen ? {position: 'relative'} : undefined\n              }\n            />\n          )}\n        />\n        <div ref={this.dropdownRef}>\n          <Dropdown\n            style={{width: `${this.dropdownWidth}px`}}\n            testID=\"timerange-dropdown\"\n            button={(active, onClick) => (\n              <Dropdown.Button active={active} onClick={onClick}>\n                {timeRangeLabel}\n              </Dropdown.Button>\n            )}\n            menu={onCollapse => (\n              <Dropdown.Menu\n                onCollapse={onCollapse}\n                style={{width: `${this.dropdownWidth + 50}px`}}\n              >\n                <Dropdown.Divider\n                  key=\"Time Range\"\n                  text=\"Time Range\"\n                  id=\"Time Range\"\n                />\n                <Dropdown.Item\n                  key={CUSTOM_TIME_RANGE_LABEL}\n                  value={CUSTOM_TIME_RANGE_LABEL}\n                  id={CUSTOM_TIME_RANGE_LABEL}\n                  testID=\"dropdown-item-customtimerange\"\n                  selected={this.state.isDatePickerOpen}\n                  onClick={this.handleClickCustomTimeRange}\n                >\n                  {CUSTOM_TIME_RANGE_LABEL}\n                </Dropdown.Item>\n                {SELECTABLE_TIME_RANGES.map(({label}) => {\n                  const testID = label.toLowerCase().replace(/\\s/g, '')\n                  return (\n                    <Dropdown.Item\n                      key={label}\n                      value={label}\n                      id={label}\n                      testID={`dropdown-item-${testID}`}\n                      selected={label === timeRangeLabel}\n                      onClick={this.handleClickDropdownItem}\n                    >\n                      {label}\n                    </Dropdown.Item>\n                  )\n                })}\n              </Dropdown.Menu>\n            )}\n          />\n        </div>\n      </>\n    )\n  }\n\n  private get dropdownWidth(): number {\n    if (this.props.timeRange.type === 'custom') {\n      return 250\n    }\n    return 100\n  }\n\n  private get timeRange(): CustomTimeRange | SelectableDurationTimeRange {\n    const {timeRange} = this.props\n    const {isDatePickerOpen} = this.state\n\n    if (isDatePickerOpen && timeRange.type !== 'custom') {\n      return convertTimeRangeToCustom(timeRange)\n    }\n\n    if (timeRange.type === 'duration') {\n      return convertTimeRangeToCustom(timeRange)\n    }\n\n    return timeRange\n  }\n\n  private handleApplyTimeRange = (timeRange: TimeRange) => {\n    this.props.onSetTimeRange(timeRange)\n    this.handleHideDatePicker()\n  }\n\n  private handleHideDatePicker = () => {\n    this.setState({isDatePickerOpen: false})\n  }\n\n  private handleClickCustomTimeRange = (): void => {\n    this.setState({isDatePickerOpen: true})\n  }\n\n  private handleClickDropdownItem = (label: string): void => {\n    const {onSetTimeRange} = this.props\n    const timeRange = SELECTABLE_TIME_RANGES.find(t => t.label === label)\n\n    onSetTimeRange(timeRange)\n  }\n}\n\nexport default TimeRangeDropdown\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {ComponentColor, QuestionMarkTooltip} from '@influxdata/clockface'\n\nconst GraphTips: FC = () => (\n  <>\n    <QuestionMarkTooltip\n      diameter={18}\n      color={ComponentColor.Primary}\n      testID=\"graphtips-question-mark\"\n      tooltipContents={\n        <span>\n          <h1>Graph Tips:</h1>\n          <p>\n            <code>Click + Drag</code> Zoom in (X or Y)\n            <br />\n            <code>Shift + Click</code> Pan Graph Window\n            <br />\n            <code>Double Click</code> Reset Graph Window\n          </p>\n          <h1>Static Legend Tips:</h1>\n          <p>\n            <code>Click</code>Focus on single Series\n            <br />\n            <code>Shift + Click</code> Show/Hide single Series\n          </p>\n        </span>\n      }\n    />\n  </>\n)\n\nexport default GraphTips\n","// Libraries\nimport React, {\n  PureComponent,\n  KeyboardEvent,\n  ChangeEvent,\n  MouseEvent,\n} from 'react'\nimport classnames from 'classnames'\n\n// Components\nimport {\n  Input,\n  Icon,\n  IconFont,\n  Page,\n  FlexBox,\n  FlexDirection,\n  AlignItems,\n} from '@influxdata/clockface'\nimport {ClickOutside} from 'src/shared/components/ClickOutside'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  onRename: (name: string) => void\n  onClickOutside?: (e: MouseEvent<HTMLElement>) => void\n  name: string\n  placeholder: string\n  maxLength: number\n  prefix: string\n}\n\ninterface State {\n  isEditing: boolean\n  workingName: string\n}\n\n@ErrorHandling\nclass RenamablePageTitle extends PureComponent<Props, State> {\n  public static defaultProps = {\n    prefix: '',\n  }\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      isEditing: false,\n      workingName: props.name,\n    }\n  }\n\n  public render() {\n    const {placeholder} = this.props\n    const {isEditing, workingName} = this.state\n\n    let title = (\n      <div className={this.titleClassName} onClick={this.handleStartEditing}>\n        <Page.Title title={workingName || placeholder} />\n        <Icon glyph={IconFont.Pencil} />\n      </div>\n    )\n\n    if (isEditing) {\n      title = (\n        <ClickOutside onClickOutside={this.handleStopEditing}>\n          {this.input}\n        </ClickOutside>\n      )\n    }\n\n    return (\n      <FlexBox\n        direction={FlexDirection.Column}\n        alignItems={AlignItems.FlexStart}\n        className=\"renamable-page-title\"\n      >\n        {title}\n        {this.prefix}\n      </FlexBox>\n    )\n  }\n\n  private get prefix(): JSX.Element {\n    const {prefix} = this.props\n    if (prefix) {\n      return <Page.SubTitle title={prefix} />\n    }\n  }\n\n  private get input(): JSX.Element {\n    const {placeholder, maxLength} = this.props\n    const {workingName} = this.state\n\n    return (\n      <Input\n        maxLength={maxLength}\n        autoFocus={true}\n        spellCheck={false}\n        placeholder={placeholder}\n        onFocus={this.handleInputFocus}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        className=\"renamable-page-title--input\"\n        value={workingName}\n      />\n    )\n  }\n\n  private handleStartEditing = (): void => {\n    this.setState({isEditing: true})\n  }\n\n  private handleStopEditing = e => {\n    const {workingName} = this.state\n    const {onRename, onClickOutside} = this.props\n\n    onRename(workingName)\n\n    if (onClickOutside) {\n      onClickOutside(e)\n    }\n\n    this.setState({isEditing: false})\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    this.setState({workingName: e.target.value})\n  }\n\n  private handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    const {onRename, name} = this.props\n    const {workingName} = this.state\n\n    if (e.key === 'Enter') {\n      onRename(workingName)\n      this.setState({isEditing: false})\n    }\n\n    if (e.key === 'Escape') {\n      this.setState({isEditing: false, workingName: name})\n    }\n  }\n\n  private handleInputFocus = (e: ChangeEvent<HTMLInputElement>): void => {\n    e.currentTarget.select()\n  }\n\n  private get titleClassName(): string {\n    const {name, placeholder} = this.props\n\n    const nameIsUntitled = name === placeholder || name === ''\n\n    return classnames('renamable-page-title--title', {\n      untitled: nameIsUntitled,\n    })\n  }\n}\n\nexport default RenamablePageTitle\n","import {TimeZone} from 'src/types'\n\nexport const TIME_ZONES: Array<{timeZone: TimeZone; displayName: string}> = [\n  {timeZone: 'Local', displayName: 'Local Time'},\n  {timeZone: 'UTC', displayName: 'UTC'},\n\n  // We can expose more time zone settings in the future, if we want:\n  //\n  //     {timeZone: 'America/Los_Angeles', displayName: 'Los Angeles'}\n  //\n]\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {SelectDropdown, IconFont} from '@influxdata/clockface'\n\n// Actions\nimport {setTimeZone} from 'src/shared/actions/app'\n\n// Constants\nimport {TIME_ZONES} from 'src/shared/constants/timeZones'\n\n// Types\nimport {AppState, TimeZone} from 'src/types'\n\ninterface StateProps {\n  timeZone: TimeZone\n}\n\ninterface DispatchProps {\n  onSetTimeZone: typeof setTimeZone\n}\n\ntype Props = StateProps & DispatchProps\n\nconst TimeZoneDropdown: FunctionComponent<Props> = ({\n  timeZone: selectedTimeZone,\n  onSetTimeZone,\n}) => {\n  return (\n    <SelectDropdown\n      options={TIME_ZONES.map(tz => tz.timeZone)}\n      selectedOption={selectedTimeZone}\n      onSelect={onSetTimeZone}\n      buttonIcon={IconFont.Annotate}\n      style={{width: '115px'}}\n    />\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {timeZone: state.app.persisted.timeZone || 'Local'}\n}\n\nconst mdtp = {onSetTimeZone: setTimeZone}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(TimeZoneDropdown)\n","export type ActionTypes = ToggleShowVariablesControlsAction\n\ninterface ToggleShowVariablesControlsAction {\n  type: 'TOGGLE_SHOW_VARIABLES_CONTROLS'\n}\n\nexport const toggleShowVariablesControls = (): ToggleShowVariablesControlsAction => ({\n  type: 'TOGGLE_SHOW_VARIABLES_CONTROLS',\n})\n","import {AutoRefreshStatus} from 'src/types'\n\nexport type Action = SetAutoRefresh | SetAutoRefreshStatus\n\ninterface SetAutoRefresh {\n  type: 'SET_AUTO_REFRESH_INTERVAL'\n  payload: {dashboardID: string; milliseconds: number}\n}\n\nexport const setAutoRefreshInterval = (\n  dashboardID: string,\n  milliseconds: number\n): SetAutoRefresh => ({\n  type: 'SET_AUTO_REFRESH_INTERVAL',\n  payload: {dashboardID, milliseconds},\n})\n\ninterface SetAutoRefreshStatus {\n  type: 'SET_AUTO_REFRESH_STATUS'\n  payload: {dashboardID: string; status: AutoRefreshStatus}\n}\n\nexport const setAutoRefreshStatus = (\n  dashboardID: string,\n  status: AutoRefreshStatus\n): SetAutoRefreshStatus => ({\n  type: 'SET_AUTO_REFRESH_STATUS',\n  payload: {dashboardID, status},\n})\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport AutoRefreshDropdown from 'src/shared/components/dropdown_auto_refresh/AutoRefreshDropdown'\nimport TimeRangeDropdown from 'src/shared/components/TimeRangeDropdown'\nimport GraphTips from 'src/shared/components/graph_tips/GraphTips'\nimport RenamablePageTitle from 'src/pageLayout/components/RenamablePageTitle'\nimport TimeZoneDropdown from 'src/shared/components/TimeZoneDropdown'\nimport {\n  SquareButton,\n  Button,\n  IconFont,\n  ComponentColor,\n  Page,\n} from '@influxdata/clockface'\n\n// Actions\nimport {delayEnablePresentationMode} from 'src/shared/actions/app'\nimport {toggleShowVariablesControls} from 'src/userSettings/actions'\nimport {updateDashboard} from 'src/dashboards/actions/thunks'\nimport {\n  setAutoRefreshInterval,\n  setAutoRefreshStatus,\n} from 'src/shared/actions/autoRefresh'\nimport {\n  setDashboardTimeRange,\n  updateQueryParams,\n} from 'src/dashboards/actions/ranges'\n\n// Selectors\nimport {getTimeRangeByDashboardID} from 'src/dashboards/selectors'\nimport {getByID} from 'src/resources/selectors'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Constants\nimport {\n  DEFAULT_DASHBOARD_NAME,\n  DASHBOARD_NAME_MAX_LENGTH,\n} from 'src/dashboards/constants/index'\n\n// Types\nimport {\n  AppState,\n  AutoRefresh,\n  AutoRefreshStatus,\n  Dashboard,\n  Organization,\n  ResourceType,\n  TimeRange,\n} from 'src/types'\n\ninterface OwnProps {\n  autoRefresh: AutoRefresh\n  onManualRefresh: () => void\n}\n\ninterface StateProps {\n  org: Organization\n  dashboard: Dashboard\n  showVariablesControls: boolean\n  timeRange: TimeRange\n}\n\ninterface DispatchProps {\n  handleClickPresentationButton: typeof delayEnablePresentationMode\n  toggleShowVariablesControls: typeof toggleShowVariablesControls\n  updateDashboard: typeof updateDashboard\n  onSetAutoRefreshStatus: typeof setAutoRefreshStatus\n  updateQueryParams: typeof updateQueryParams\n  setDashboardTimeRange: typeof setDashboardTimeRange\n  handleChooseAutoRefresh: typeof setAutoRefreshInterval\n}\n\ntype Props = OwnProps & StateProps & DispatchProps & WithRouterProps\n\nclass DashboardHeader extends Component<Props> {\n  public render() {\n    const {\n      org,\n      dashboard,\n      onManualRefresh,\n      toggleShowVariablesControls,\n      showVariablesControls,\n      autoRefresh,\n      timeRange,\n    } = this.props\n\n    return (\n      <Page.Header fullWidth={true}>\n        <Page.HeaderLeft>\n          <RenamablePageTitle\n            prefix={org && org.name}\n            maxLength={DASHBOARD_NAME_MAX_LENGTH}\n            onRename={this.handleRenameDashboard}\n            name={dashboard && dashboard.name}\n            placeholder={DEFAULT_DASHBOARD_NAME}\n          />\n        </Page.HeaderLeft>\n        <Page.HeaderRight>\n          <GraphTips />\n          <Button\n            icon={IconFont.AddCell}\n            color={ComponentColor.Primary}\n            onClick={this.handleAddCell}\n            text=\"Add Cell\"\n            titleText=\"Add cell to dashboard\"\n          />\n          <Button\n            icon={IconFont.TextBlock}\n            text=\"Add Note\"\n            onClick={this.handleAddNote}\n          />\n          <TimeZoneDropdown />\n          <AutoRefreshDropdown\n            onChoose={this.handleChooseAutoRefresh}\n            onManualRefresh={onManualRefresh}\n            selected={autoRefresh}\n          />\n          <TimeRangeDropdown\n            onSetTimeRange={this.handleChooseTimeRange}\n            timeRange={timeRange}\n          />\n          <Button\n            icon={IconFont.Cube}\n            text=\"Variables\"\n            onClick={toggleShowVariablesControls}\n            color={\n              showVariablesControls\n                ? ComponentColor.Secondary\n                : ComponentColor.Default\n            }\n          />\n          <SquareButton\n            icon={IconFont.ExpandA}\n            titleText=\"Enter Presentation Mode\"\n            onClick={this.handleClickPresentationButton}\n          />\n        </Page.HeaderRight>\n      </Page.Header>\n    )\n  }\n\n  private handleAddNote = () => {\n    const {router, org, dashboard} = this.props\n    router.push(`/orgs/${org.id}/dashboards/${dashboard.id}/notes/new`)\n  }\n\n  private handleAddCell = () => {\n    const {router, org, dashboard} = this.props\n    router.push(`/orgs/${org.id}/dashboards/${dashboard.id}/cells/new`)\n  }\n\n  private handleRenameDashboard = (name: string) => {\n    const {dashboard, updateDashboard} = this.props\n\n    updateDashboard(dashboard.id, {name})\n  }\n\n  private handleClickPresentationButton = (): void => {\n    this.props.handleClickPresentationButton()\n  }\n\n  private handleChooseAutoRefresh = (milliseconds: number) => {\n    const {handleChooseAutoRefresh, dashboard} = this.props\n    handleChooseAutoRefresh(dashboard.id, milliseconds)\n  }\n\n  private handleChooseTimeRange = (timeRange: TimeRange) => {\n    const {\n      autoRefresh,\n      onSetAutoRefreshStatus,\n      setDashboardTimeRange,\n      updateQueryParams,\n      dashboard,\n    } = this.props\n\n    setDashboardTimeRange(dashboard.id, timeRange)\n    updateQueryParams({\n      lower: timeRange.lower,\n      upper: timeRange.upper,\n    })\n\n    if (timeRange.type === 'custom') {\n      onSetAutoRefreshStatus(dashboard.id, AutoRefreshStatus.Disabled)\n      return\n    }\n\n    if (autoRefresh.status === AutoRefreshStatus.Disabled) {\n      if (autoRefresh.interval === 0) {\n        onSetAutoRefreshStatus(dashboard.id, AutoRefreshStatus.Paused)\n        return\n      }\n\n      onSetAutoRefreshStatus(dashboard.id, AutoRefreshStatus.Active)\n    }\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {showVariablesControls} = state.userSettings\n  const dashboard = getByID<Dashboard>(\n    state,\n    ResourceType.Dashboards,\n    state.currentDashboard.id\n  )\n\n  const timeRange = getTimeRangeByDashboardID(state, state.currentDashboard.id)\n  const org = getOrg(state)\n\n  return {\n    org,\n    dashboard,\n    timeRange,\n    showVariablesControls,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  toggleShowVariablesControls: toggleShowVariablesControls,\n  updateDashboard: updateDashboard,\n  handleClickPresentationButton: delayEnablePresentationMode,\n  onSetAutoRefreshStatus: setAutoRefreshStatus,\n  updateQueryParams: updateQueryParams,\n  setDashboardTimeRange: setDashboardTimeRange,\n  handleChooseAutoRefresh: setAutoRefreshInterval,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<OwnProps>(DashboardHeader))\n","// Libraries\nimport React, {FunctionComponent, useRef, RefObject, useState} from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport classnames from 'classnames'\n\n// Components\nimport {\n  Popover,\n  PopoverInteraction,\n  Icon,\n  IconFont,\n  Appearance,\n  DapperScrollbars,\n} from '@influxdata/clockface'\n\n// Constants\nconst MAX_POPOVER_WIDTH = 280\nconst MAX_POPOVER_HEIGHT = 200\n\ninterface Props {\n  note: string\n}\n\nconst CellHeaderNote: FunctionComponent<Props> = ({note}) => {\n  const [popoverVisible, setPopoverVisibility] = useState<boolean>(false)\n  const triggerRef: RefObject<HTMLDivElement> = useRef<HTMLDivElement>(null)\n  const indicatorClass = classnames('cell--note-indicator', {\n    'cell--note-indicator__active': popoverVisible,\n  })\n  const contentStyle = {\n    width: `${MAX_POPOVER_WIDTH}px`,\n    minWidth: `${MAX_POPOVER_WIDTH}px`,\n    maxWidth: `${MAX_POPOVER_WIDTH}px`,\n    maxHeight: `${MAX_POPOVER_HEIGHT}px`,\n  }\n\n  const handlePopoverShow = (): void => {\n    setPopoverVisibility(true)\n  }\n\n  const handlePopoverHide = (): void => {\n    setPopoverVisibility(false)\n  }\n\n  return (\n    <>\n      <div className={indicatorClass} ref={triggerRef}>\n        <Icon glyph={IconFont.Chat} />\n      </div>\n      <Popover\n        triggerRef={triggerRef}\n        appearance={Appearance.Outline}\n        showEvent={PopoverInteraction.Click}\n        hideEvent={PopoverInteraction.Click}\n        onShow={handlePopoverShow}\n        onHide={handlePopoverHide}\n        enableDefaultStyles={false}\n        contents={() => (\n          <DapperScrollbars style={contentStyle} autoSize={true}>\n            <div className=\"cell--note-contents markdown-format\">\n              <ReactMarkdown source={note} />\n            </div>\n          </DapperScrollbars>\n        )}\n      />\n    </>\n  )\n}\n\nexport default CellHeaderNote\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport CellHeaderNote from 'src/shared/components/cells/CellHeaderNote'\n\ninterface Props {\n  name: string\n  note: string\n}\n\nconst CellHeader: FunctionComponent<Props> = ({name, note, children}) => {\n  return (\n    <div className=\"cell--header\">\n      <div className=\"cell--draggable\">\n        <div className=\"cell--dot-grid\" />\n        <div className=\"cell--dot-grid\" />\n        <div className=\"cell--dot-grid\" />\n      </div>\n      <div className=\"cell--name\">{name}</div>\n      {note && <CellHeaderNote note={note} />}\n      {children}\n    </div>\n  )\n}\n\nexport default CellHeader\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {Icon, IconFont} from '@influxdata/clockface'\n\ninterface Props {\n  testID?: string\n  label: string\n  icon: IconFont\n  onClick: () => void\n  onHide?: () => void\n}\n\nconst CellContextItem: FunctionComponent<Props> = ({\n  icon,\n  label,\n  testID,\n  onHide,\n  onClick,\n}) => {\n  const handleClick = (): void => {\n    onHide && onHide()\n    onClick()\n  }\n\n  return (\n    <div\n      className=\"cell--context-item\"\n      onClick={handleClick}\n      data-testid={testID}\n    >\n      <Icon glyph={icon} />\n      {label}\n    </div>\n  )\n}\n\nexport default CellContextItem\n","// Libraries\nimport React, {FunctionComponent, useState} from 'react'\n\n// Components\nimport {\n  Icon,\n  IconFont,\n  Button,\n  ComponentColor,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport {ButtonShape} from 'src/clockface'\n\ninterface Props {\n  testID?: string\n  label: string\n  icon?: IconFont\n  onClick: () => void\n  onHide?: () => void\n  confirmationText?: string\n}\n\nconst CellContextItem: FunctionComponent<Props> = ({\n  icon = IconFont.Trash,\n  label,\n  testID,\n  onHide,\n  onClick,\n  confirmationText = 'Confirm Delete',\n}) => {\n  const [confirming, setConfirmationState] = useState<boolean>(false)\n\n  const toggleConfirmationState = (): void => {\n    setConfirmationState(true)\n  }\n\n  const handleClick = (): void => {\n    onHide && onHide()\n    onClick()\n  }\n\n  if (confirming) {\n    return (\n      <div className=\"cell--context-item cell--context-item__confirm\">\n        <Button\n          color={ComponentColor.Danger}\n          text={confirmationText}\n          onClick={handleClick}\n          size={ComponentSize.ExtraSmall}\n          shape={ButtonShape.StretchToFit}\n          testID={`${testID}-confirm`}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div\n      className=\"cell--context-item cell--context-item__danger\"\n      onClick={toggleConfirmationState}\n      data-testid={testID}\n    >\n      <Icon glyph={icon} />\n      {label}\n    </div>\n  )\n}\n\nexport default CellContextItem\n","// Libraries\nimport React, {FC, useRef, RefObject, useState} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\nimport classnames from 'classnames'\n\n// Components\nimport {\n  Popover,\n  Appearance,\n  Icon,\n  IconFont,\n  PopoverInteraction,\n} from '@influxdata/clockface'\nimport CellContextItem from 'src/shared/components/cells/CellContextItem'\nimport CellContextDangerItem from 'src/shared/components/cells/CellContextDangerItem'\nimport {FeatureFlag} from 'src/shared/utils/featureFlag'\n\n// Actions\nimport {deleteCell, createCellWithView} from 'src/cells/actions/thunks'\n\n// Types\nimport {Cell, View} from 'src/types'\ninterface DispatchProps {\n  onDeleteCell: typeof deleteCell\n  onCloneCell: typeof createCellWithView\n}\n\ninterface OwnProps {\n  cell: Cell\n  view: View\n  onCSVDownload: () => void\n}\n\ntype Props = OwnProps & DispatchProps & WithRouterProps\n\nconst CellContext: FC<Props> = ({\n  view,\n  router,\n  location,\n  cell,\n  onCloneCell,\n  onDeleteCell,\n  onCSVDownload,\n}) => {\n  const [popoverVisible, setPopoverVisibility] = useState<boolean>(false)\n  const editNoteText = !!get(view, 'properties.note') ? 'Edit Note' : 'Add Note'\n  const triggerRef: RefObject<HTMLButtonElement> = useRef<HTMLButtonElement>(\n    null\n  )\n  const buttonClass = classnames('cell--context', {\n    'cell--context__active': popoverVisible,\n  })\n\n  const handleCloneCell = () => {\n    onCloneCell(cell.dashboardID, view, cell)\n  }\n\n  const handleDeleteCell = (): void => {\n    const {dashboardID, id} = cell\n\n    onDeleteCell(dashboardID, id)\n  }\n\n  const handleEditNote = () => {\n    if (view.id) {\n      router.push(`${location.pathname}/notes/${view.id}/edit`)\n    } else {\n      router.push(`${location.pathname}/notes/new`)\n    }\n  }\n\n  const handleEditCell = (): void => {\n    router.push(`${location.pathname}/cells/${cell.id}/edit`)\n  }\n\n  const popoverContents = (onHide): JSX.Element => {\n    if (view.properties.type === 'markdown') {\n      return (\n        <div className=\"cell--context-menu\">\n          <CellContextItem\n            label=\"Edit Note\"\n            onClick={handleEditNote}\n            icon={IconFont.TextBlock}\n            onHide={onHide}\n            testID=\"cell-context--note\"\n          />\n          <CellContextDangerItem\n            label=\"Delete\"\n            onClick={handleDeleteCell}\n            icon={IconFont.Trash}\n            onHide={onHide}\n            testID=\"cell-context--delete\"\n          />\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"cell--context-menu\">\n        <CellContextItem\n          label=\"Configure\"\n          onClick={handleEditCell}\n          icon={IconFont.Pencil}\n          onHide={onHide}\n          testID=\"cell-context--configure\"\n        />\n        <CellContextItem\n          label={editNoteText}\n          onClick={handleEditNote}\n          icon={IconFont.TextBlock}\n          onHide={onHide}\n          testID=\"cell-context--note\"\n        />\n        <CellContextItem\n          label=\"Clone\"\n          onClick={handleCloneCell}\n          icon={IconFont.Duplicate}\n          onHide={onHide}\n          testID=\"cell-context--clone\"\n        />\n        <FeatureFlag name=\"downloadCellCSV\">\n          <CellContextItem\n            label=\"Download CSV\"\n            onClick={onCSVDownload}\n            icon={IconFont.Download}\n            onHide={onHide}\n            testID=\"cell-context--download\"\n          />\n        </FeatureFlag>\n        <CellContextDangerItem\n          label=\"Delete\"\n          onClick={handleDeleteCell}\n          icon={IconFont.Trash}\n          onHide={onHide}\n          testID=\"cell-context--delete\"\n        />\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        ref={triggerRef}\n        data-testid=\"cell-context--toggle\"\n      >\n        <Icon glyph={IconFont.CogThick} />\n      </button>\n      <Popover\n        appearance={Appearance.Outline}\n        enableDefaultStyles={false}\n        showEvent={PopoverInteraction.Click}\n        hideEvent={PopoverInteraction.Click}\n        triggerRef={triggerRef}\n        contents={popoverContents}\n        onShow={() => {\n          setPopoverVisibility(true)\n        }}\n        onHide={() => {\n          setPopoverVisibility(false)\n        }}\n      />\n    </>\n  )\n}\n\nconst mdtp: DispatchProps = {\n  onDeleteCell: deleteCell,\n  onCloneCell: createCellWithView,\n}\n\nexport default withRouter<OwnProps>(\n  connect<{}, DispatchProps>(\n    null,\n    mdtp\n  )(CellContext)\n)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport ReactMarkdown from 'react-markdown'\n\n// Components\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\n\n// Utils\nimport {humanizeNote} from 'src/dashboards/utils/notes'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  text: string\n}\n\n@ErrorHandling\nclass Markdown extends PureComponent<Props> {\n  public render() {\n    const {text} = this.props\n\n    return (\n      <FancyScrollbar className=\"markdown-cell\" autoHide={true}>\n        <div className=\"markdown-cell--contents\">\n          <ReactMarkdown\n            source={humanizeNote(text)}\n            className=\"markdown-format\"\n          />\n        </div>\n      </FancyScrollbar>\n    )\n  }\n}\n\nexport default Markdown\n","// Library\nimport React, {Component, RefObject, CSSProperties} from 'react'\nimport {isEqual} from 'lodash'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {fromFlux, FromFluxResult} from '@influxdata/giraffe'\n\n// API\nimport {\n  runQuery,\n  RunQueryResult,\n  RunQuerySuccessResult,\n} from 'src/shared/apis/query'\nimport {runStatusesQuery} from 'src/alerting/utils/statusEvents'\n\n// Utils\nimport {checkQueryResult} from 'src/shared/utils/checkQueryResult'\nimport {getWindowVars} from 'src/variables/utils/getWindowVars'\nimport {buildVarsOption} from 'src/variables/utils/buildVarsOption'\nimport 'intersection-observer'\n\n// Constants\nimport {rateLimitReached, resultTooLarge} from 'src/shared/copy/notifications'\n\n// Actions\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\n\n// Types\nimport {RemoteDataState, Check, StatusRow} from 'src/types'\nimport {DashboardQuery} from 'src/types/dashboards'\nimport {AppState} from 'src/types'\nimport {CancelBox} from 'src/types/promises'\nimport {VariableAssignment} from 'src/types/ast'\n\ninterface QueriesState {\n  files: string[] | null\n  loading: RemoteDataState\n  errorMessage: string\n  isInitialFetch: boolean\n  duration: number\n  giraffeResult: FromFluxResult\n  statuses: StatusRow[][]\n}\n\ninterface StateProps {\n  queryLink: string\n}\n\ninterface OwnProps {\n  className: string\n  style: CSSProperties\n  queries: DashboardQuery[]\n  variables?: VariableAssignment[]\n  submitToken: number\n  implicitSubmit?: boolean\n  children: (r: QueriesState) => JSX.Element\n  check: Partial<Check>\n}\n\ninterface DispatchProps {\n  notify: typeof notifyAction\n}\n\ntype Props = StateProps & OwnProps & DispatchProps\n\ninterface State {\n  loading: RemoteDataState\n  files: string[] | null\n  errorMessage: string\n  fetchCount: number\n  duration: number\n  giraffeResult: FromFluxResult\n  statuses: StatusRow[][]\n}\n\nconst defaultState = (): State => ({\n  loading: RemoteDataState.NotStarted,\n  files: null,\n  fetchCount: 0,\n  errorMessage: '',\n  duration: 0,\n  giraffeResult: null,\n  statuses: [[]],\n})\n\nclass TimeSeries extends Component<Props & WithRouterProps, State> {\n  public static defaultProps = {\n    implicitSubmit: true,\n    className: 'time-series-container',\n    style: null,\n  }\n\n  public state: State = defaultState()\n\n  private observer: IntersectionObserver\n  private ref: RefObject<HTMLDivElement> = React.createRef()\n  private isIntersecting: boolean = false\n  private pendingReload: boolean = true\n\n  private pendingResults: Array<CancelBox<RunQueryResult>> = []\n  private pendingCheckStatuses: CancelBox<StatusRow[][]> = null\n\n  public componentDidMount() {\n    this.observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        const {isIntersecting} = entry\n        if (!this.isIntersecting && isIntersecting && this.pendingReload) {\n          this.reload()\n        }\n\n        this.isIntersecting = isIntersecting\n      })\n    })\n\n    this.observer.observe(this.ref.current)\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    if (this.shouldReload(prevProps) && this.isIntersecting) {\n      this.reload()\n    }\n  }\n\n  public componentWillUnmount() {\n    this.observer && this.observer.disconnect()\n  }\n\n  public render() {\n    const {\n      giraffeResult,\n      files,\n      loading,\n      errorMessage,\n      fetchCount,\n      duration,\n      statuses,\n    } = this.state\n    const {className, style} = this.props\n\n    return (\n      <div ref={this.ref} className={className} style={style}>\n        {this.props.children({\n          giraffeResult,\n          files,\n          loading,\n          errorMessage,\n          duration,\n          isInitialFetch: fetchCount === 1,\n          statuses,\n        })}\n      </div>\n    )\n  }\n\n  private reload = async () => {\n    const {variables, notify, check} = this.props\n    const queries = this.props.queries.filter(({text}) => !!text.trim())\n    const orgID = this.props.params.orgID\n\n    if (!queries.length) {\n      this.setState(defaultState())\n\n      return\n    }\n\n    this.setState({\n      loading: RemoteDataState.Loading,\n      fetchCount: this.state.fetchCount + 1,\n      errorMessage: '',\n    })\n\n    try {\n      const startTime = Date.now()\n\n      // Cancel any existing queries\n      this.pendingResults.forEach(({cancel}) => cancel())\n\n      // Issue new queries\n      this.pendingResults = queries.map(({text}) => {\n        const windowVars = getWindowVars(text, variables)\n        const extern = buildVarsOption([...variables, ...windowVars])\n\n        return runQuery(orgID, text, extern)\n      })\n\n      // Wait for new queries to complete\n      const results = await Promise.all(this.pendingResults.map(r => r.promise))\n\n      let statuses = [] as StatusRow[][]\n      if (check) {\n        const extern = buildVarsOption(variables)\n        this.pendingCheckStatuses = runStatusesQuery(orgID, check.id, extern)\n        statuses = await this.pendingCheckStatuses.promise // TODO handle errors\n      }\n\n      const duration = Date.now() - startTime\n\n      for (const result of results) {\n        if (result.type === 'UNKNOWN_ERROR') {\n          throw new Error(result.message)\n        }\n\n        if (result.type === 'RATE_LIMIT_ERROR') {\n          notify(rateLimitReached(result.retryAfter))\n\n          throw new Error(result.message)\n        }\n\n        if (result.didTruncate) {\n          notify(resultTooLarge(result.bytesRead))\n        }\n\n        checkQueryResult(result.csv)\n      }\n\n      const files = (results as RunQuerySuccessResult[]).map(r => r.csv)\n      const giraffeResult = fromFlux(files.join('\\n\\n'))\n      this.pendingReload = false\n\n      this.setState({\n        giraffeResult,\n        files,\n        duration,\n        loading: RemoteDataState.Done,\n        statuses,\n      })\n    } catch (error) {\n      if (error.name === 'CancellationError') {\n        return\n      }\n\n      console.error(error)\n\n      this.setState({\n        errorMessage: error.message,\n        giraffeResult: null,\n        loading: RemoteDataState.Error,\n        statuses: [[]],\n      })\n    }\n\n    this.pendingReload = false\n  }\n\n  private shouldReload(prevProps: Props) {\n    if (prevProps.submitToken !== this.props.submitToken) {\n      return true\n    }\n\n    if (!this.props.implicitSubmit) {\n      return false\n    }\n\n    if (!isEqual(prevProps.queries, this.props.queries)) {\n      return true\n    }\n\n    if (!isEqual(prevProps.variables, this.props.variables)) {\n      return true\n    }\n\n    return false\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const {links} = state\n\n  return {queryLink: links.query.self}\n}\n\nconst mdtp: DispatchProps = {\n  notify: notifyAction,\n}\n\nexport default connect<StateProps, {}, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter(TimeSeries))\n","import React, {SFC} from 'react'\n\ninterface Props {\n  message: string\n  testID?: string\n}\n\nconst EmptyGraphMessage: SFC<Props> = ({message, testID}) => {\n  return (\n    <div className=\"cell--view-empty\" data-testid={testID}>\n      <h4>{message}</h4>\n    </div>\n  )\n}\n\nexport default EmptyGraphMessage\n","// Libraries\nimport React, {FC, useRef, useState} from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\n// Components\nimport {\n  Button,\n  ComponentSize,\n  ComponentColor,\n  IconFont,\n  Popover,\n  PopoverPosition,\n  PopoverInteraction,\n  Appearance,\n} from '@influxdata/clockface'\n\ninterface Props {\n  message: string\n  testID?: string\n}\n\nconst EmptyGraphError: FC<Props> = ({message, testID}) => {\n  const [didCopy, setDidCopy] = useState(false)\n\n  const buttonText = didCopy ? 'Copied!' : 'Copy'\n  const buttonColor = didCopy ? ComponentColor.Success : ComponentColor.Default\n\n  const onClick = () => {\n    setDidCopy(true)\n    setTimeout(() => setDidCopy(false), 2000)\n  }\n\n  const trigger = useRef<HTMLDivElement>(null)\n\n  return (\n    <div className=\"cell--view-empty error\" data-testid={testID}>\n      <div ref={trigger}>\n        <span\n          className={`icon ${IconFont.AlertTriangle} empty-graph-error--icon`}\n        />\n        <Popover\n          appearance={Appearance.Outline}\n          position={PopoverPosition.ToTheRight}\n          triggerRef={trigger}\n          showEvent={PopoverInteraction.Hover}\n          hideEvent={PopoverInteraction.Hover}\n          distanceFromTrigger={8}\n          testID=\"emptygraph-popover\"\n          contents={() => (\n            <pre>\n              <CopyToClipboard text={message}>\n                <Button\n                  size={ComponentSize.ExtraSmall}\n                  color={buttonColor}\n                  titleText={buttonText}\n                  text={buttonText}\n                  onClick={onClick}\n                  className=\"empty-graph-error--copy\"\n                />\n              </CopyToClipboard>\n              <code>{message}</code>\n            </pre>\n          )}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EmptyGraphError\n","// Libraries\nimport React, {useState, FunctionComponent} from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\n// Components\nimport {\n  Button,\n  ComponentSize,\n  ComponentColor,\n  IconFont,\n} from '@influxdata/clockface'\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\n\ninterface Props {\n  message: string\n  testID?: string\n}\n\nconst EmptyGraphError: FunctionComponent<Props> = ({message, testID}) => {\n  const [didCopy, setDidCopy] = useState(false)\n\n  const buttonText = didCopy ? 'Copied!' : 'Copy'\n  const buttonColor = didCopy ? ComponentColor.Success : ComponentColor.Default\n\n  const onClick = () => {\n    setDidCopy(true)\n    setTimeout(() => setDidCopy(false), 2000)\n  }\n\n  return (\n    <div className=\"cell--view-empty\" data-testid={testID}>\n      <div className=\"empty-graph-error\">\n        <CopyToClipboard text={message}>\n          <Button\n            size={ComponentSize.ExtraSmall}\n            color={buttonColor}\n            titleText={buttonText}\n            text={buttonText}\n            onClick={onClick}\n            className=\"empty-graph-error--copy\"\n          />\n        </CopyToClipboard>\n        <FancyScrollbar\n          className=\"empty-graph-error--scroll\"\n          autoHide={false}\n          thumbStartColor=\"#FF8564\"\n          thumbStopColor=\"#DC4E58\"\n        >\n          <pre>\n            <span\n              className={`icon ${\n                IconFont.AlertTriangle\n              } empty-graph-error--icon`}\n            />\n            <code className=\"cell--error-message\">{message}</code>\n          </pre>\n        </FancyScrollbar>\n      </div>\n    </div>\n  )\n}\n\nexport default EmptyGraphError\n","import _ from 'lodash'\n\nconst emptyFunny = [\n  'Looks like you don’t have any queries. Be a lot cooler if you did!',\n  'Create a query. Go on!',\n  'Create a query. Have fun!',\n]\n\nexport const emptyGraphCopy = _.sample(emptyFunny)\n\nexport const INVALID_DATA_COPY =\n  \"The data returned from the query can't be visualized with this graph type.\"\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport EmptyGraphMessage from 'src/shared/components/EmptyGraphMessage'\nimport EmptyGraphErrorTooltip from 'src/shared/components/EmptyGraphErrorTooltip'\nimport EmptyGraphError from 'src/shared/components/EmptyGraphError'\nimport Markdown from 'src/shared/components/views/Markdown'\n\n// Constants\nimport {emptyGraphCopy} from 'src/shared/copy/cell'\n\n// Types\nimport {RemoteDataState} from 'src/types'\nimport {DashboardQuery} from 'src/types'\n\nexport enum ErrorFormat {\n  Tooltip = 'tooltip',\n  Scroll = 'scroll',\n}\n\ninterface Props {\n  errorMessage: string\n  errorFormat: ErrorFormat\n  isInitialFetch: boolean\n  loading: RemoteDataState\n  hasResults: boolean\n  queries: DashboardQuery[]\n  fallbackNote?: string\n}\n\nexport default class EmptyQueryView extends PureComponent<Props> {\n  public render() {\n    const {\n      errorMessage,\n      isInitialFetch,\n      loading,\n      queries,\n      fallbackNote,\n      hasResults,\n      errorFormat,\n    } = this.props\n\n    if (loading === RemoteDataState.NotStarted || !queries.length) {\n      return (\n        <EmptyGraphMessage\n          message={emptyGraphCopy}\n          testID=\"empty-graph--no-queries\"\n        />\n      )\n    }\n\n    if (errorMessage) {\n      if (errorFormat === ErrorFormat.Tooltip)\n        return (\n          <EmptyGraphErrorTooltip\n            message={errorMessage}\n            testID=\"empty-graph--error\"\n          />\n        )\n\n      if (errorFormat === ErrorFormat.Scroll)\n        return (\n          <EmptyGraphError message={errorMessage} testID=\"empty-graph--error\" />\n        )\n    }\n\n    if (\n      (isInitialFetch || !hasResults) &&\n      loading === RemoteDataState.Loading\n    ) {\n      return <EmptyGraphMessage message=\"Loading...\" />\n    }\n\n    if (!hasResults && fallbackNote) {\n      return <Markdown text={fallbackNote} />\n    }\n\n    if (!hasResults) {\n      return (\n        <EmptyGraphMessage\n          message=\"No Results\"\n          testID=\"empty-graph--no-results\"\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n","export const preventNegativeZero = (\n  value: number | string\n): number | string => {\n  // eslint-disable-next-line no-compare-neg-zero\n  if (Number(value) === -0) {\n    return typeof value === 'number' ? 0 : value.replace(/-/g, '')\n  }\n  return value\n}\n","// Libraries\nimport {isNumber, isString} from 'lodash'\n\n// Types\nimport {DecimalPlaces} from 'src/types/dashboards'\n\n// Constants\nimport {MAX_DECIMAL_PLACES} from 'src/dashboards/constants'\n\n// Utils\nimport {preventNegativeZero} from 'src/shared/utils/preventNegativeZero'\n\ninterface FormatStatValueOptions {\n  decimalPlaces?: DecimalPlaces\n  prefix?: string\n  suffix?: string\n}\n\nexport const formatStatValue = (\n  value: number | string = 0,\n  {decimalPlaces, prefix, suffix}: FormatStatValueOptions = {}\n): string => {\n  let localeFormattedValue: undefined | string | number\n\n  if (isNumber(value)) {\n    let digits: number\n\n    if (decimalPlaces && decimalPlaces.isEnforced) {\n      digits = decimalPlaces.digits\n    } else {\n      digits = getAutoDigits(value)\n    }\n\n    const roundedValue = value.toFixed(digits)\n\n    localeFormattedValue =\n      Number(roundedValue) === 0\n        ? roundedValue\n        : Number(roundedValue).toLocaleString(undefined, {\n            maximumFractionDigits: MAX_DECIMAL_PLACES,\n          })\n  } else if (isString(value)) {\n    localeFormattedValue = value\n  } else {\n    return 'Data cannot be displayed'\n  }\n\n  localeFormattedValue = preventNegativeZero(localeFormattedValue)\n  const formattedValue = `${prefix || ''}${localeFormattedValue}${suffix || ''}`\n\n  return formattedValue\n}\n\nconst getAutoDigits = (value: number): number => {\n  const decimalIndex = value.toString().indexOf('.')\n\n  return decimalIndex === -1 ? 0 : 2\n}\n","export const GAUGE_SPECS = {\n  degree: (5 / 4) * Math.PI,\n  lineCount: 5,\n  smallLineCount: 10,\n  lineColor: '#545667',\n  labelColor: '#8E91A1',\n  labelFontSize: 13,\n  lineStrokeSmall: 1,\n  lineStrokeLarge: 3,\n  tickSizeSmall: 9,\n  tickSizeLarge: 18,\n  minFontSize: 22,\n  minLineWidth: 24,\n  valueColor: '#ffffff',\n  needleColor0: '#434453',\n  needleColor1: '#ffffff',\n\n  // This constant expresses how far past the gauge max the needle should be\n  // drawn if the value for the needle is greater than the gauge max. It is\n  // expressed as a percentage of the circumference of a circle, e.g. 0.5 means\n  // draw halfway around the gauge from the max value\n  overflowDelta: 0.03,\n}\n","// Libraries\nimport React, {Component} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Utils\nimport {formatStatValue} from 'src/shared/utils/formatStatValue'\n\n// Constants\nimport {GAUGE_SPECS} from 'src/shared/constants/gaugeSpecs'\nimport {\n  COLOR_TYPE_MIN,\n  COLOR_TYPE_MAX,\n  DEFAULT_VALUE_MAX,\n  DEFAULT_VALUE_MIN,\n  MIN_THRESHOLDS,\n} from 'src/shared/constants/thresholds'\n\n// Types\nimport {Color} from 'src/types/colors'\nimport {DecimalPlaces} from 'src/types/dashboards'\n\ninterface Props {\n  width: number\n  height: number\n  gaugePosition: number\n  colors?: Color[]\n  prefix: string\n  tickPrefix: string\n  suffix: string\n  tickSuffix: string\n  decimalPlaces: DecimalPlaces\n}\n\n@ErrorHandling\nclass Gauge extends Component<Props> {\n  private canvasRef: React.RefObject<HTMLCanvasElement>\n\n  constructor(props: Props) {\n    super(props)\n    this.canvasRef = React.createRef()\n  }\n\n  public componentDidMount() {\n    this.updateCanvas()\n  }\n\n  public componentDidUpdate() {\n    this.updateCanvas()\n  }\n\n  public render() {\n    const {width, height} = this.props\n\n    return (\n      <canvas\n        className=\"gauge\"\n        width={width}\n        height={height}\n        ref={this.canvasRef}\n      />\n    )\n  }\n\n  private updateCanvas = () => {\n    this.resetCanvas()\n\n    const canvas = this.canvasRef.current\n    const ctx = canvas.getContext('2d')\n    const {width, height} = this.props\n\n    const centerX = width / 2\n    const centerY = (height / 2) * 1.13\n    const radius = (Math.min(width, height) / 2) * 0.5\n\n    const {minLineWidth, minFontSize} = GAUGE_SPECS\n    const gradientThickness = Math.max(minLineWidth, radius / 4)\n    const labelValueFontSize = Math.max(minFontSize, radius / 4)\n\n    const {colors} = this.props\n    if (!colors || colors.length === 0) {\n      return\n    }\n\n    // Distill out max and min values\n    const minValue = Number(\n      _.get(\n        colors.find(color => color.type === COLOR_TYPE_MIN),\n        'value',\n        DEFAULT_VALUE_MIN\n      )\n    )\n    const maxValue = Number(\n      _.get(\n        colors.find(color => color.type === COLOR_TYPE_MAX),\n        'value',\n        DEFAULT_VALUE_MAX\n      )\n    )\n\n    // The following functions must be called in the specified order\n    if (colors.length === MIN_THRESHOLDS) {\n      this.drawGradientGauge(ctx, centerX, centerY, radius, gradientThickness)\n    } else {\n      this.drawSegmentedGauge(\n        ctx,\n        centerX,\n        centerY,\n        radius,\n        minValue,\n        maxValue,\n        gradientThickness\n      )\n    }\n    this.drawGaugeLines(ctx, centerX, centerY, radius, gradientThickness)\n    this.drawGaugeLabels(ctx, radius, gradientThickness, minValue, maxValue)\n    this.drawGaugeValue(ctx, radius, labelValueFontSize)\n    this.drawNeedle(ctx, radius, minValue, maxValue)\n  }\n\n  private resetCanvas = () => {\n    const canvas = this.canvasRef.current\n    const ctx = canvas.getContext('2d')\n    const {width, height} = this.props\n    const dpRatio = window.devicePixelRatio || 1\n\n    // Set up canvas to draw on HiDPI / Retina screens correctly\n    canvas.width = width * dpRatio\n    canvas.height = height * dpRatio\n    canvas.style.width = `${width}px`\n    canvas.style.height = `${height}px`\n    ctx.scale(dpRatio, dpRatio)\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, width, height)\n  }\n\n  private drawGradientGauge = (ctx, xc, yc, r, gradientThickness) => {\n    const {colors} = this.props\n    const sortedColors = _.sortBy(colors, color => Number(color.value))\n\n    const arcStart = Math.PI * 0.75\n    const arcEnd = arcStart + Math.PI * 1.5\n\n    // Determine coordinates for gradient\n    const xStart = xc + Math.cos(arcStart) * r\n    const yStart = yc + Math.sin(arcStart) * r\n    const xEnd = xc + Math.cos(arcEnd) * r\n    const yEnd = yc + Math.sin(arcEnd) * r\n\n    const gradient = ctx.createLinearGradient(xStart, yStart, xEnd, yEnd)\n    gradient.addColorStop(0, sortedColors[0].hex)\n    gradient.addColorStop(1.0, sortedColors[1].hex)\n\n    ctx.beginPath()\n    ctx.lineWidth = gradientThickness\n    ctx.strokeStyle = gradient\n    ctx.arc(xc, yc, r, arcStart, arcEnd)\n    ctx.stroke()\n  }\n\n  private drawSegmentedGauge = (\n    ctx,\n    xc,\n    yc,\n    r,\n    minValue,\n    maxValue,\n    gradientThickness\n  ) => {\n    const {colors} = this.props\n    const sortedColors = _.sortBy(colors, color => Number(color.value))\n\n    const trueValueRange = Math.abs(maxValue - minValue)\n    const totalArcLength = Math.PI * 1.5\n    let startingPoint = Math.PI * 0.75\n\n    // Iterate through colors, draw arc for each\n    for (let c = 0; c < sortedColors.length - 1; c++) {\n      // Use this color and the next to determine arc length\n      const color = sortedColors[c]\n      const nextColor = sortedColors[c + 1]\n\n      // adjust values by subtracting minValue from them\n      const adjustedValue = Number(color.value) - minValue\n      const adjustedNextValue = Number(nextColor.value) - minValue\n\n      const thisArc = Math.abs(adjustedValue - adjustedNextValue)\n      // Multiply by arcLength to determine this arc's length\n      const arcLength = totalArcLength * (thisArc / trueValueRange)\n      // Draw arc\n      ctx.beginPath()\n      ctx.lineWidth = gradientThickness\n      ctx.strokeStyle = color.hex\n      ctx.arc(xc, yc, r, startingPoint, startingPoint + arcLength)\n      ctx.stroke()\n      // Add this arc's length to starting point\n      startingPoint += arcLength\n    }\n  }\n\n  private drawGaugeLines = (ctx, xc, yc, radius, gradientThickness) => {\n    const {\n      degree,\n      lineCount,\n      lineColor,\n      lineStrokeSmall,\n      lineStrokeLarge,\n      tickSizeSmall,\n      tickSizeLarge,\n      smallLineCount,\n    } = GAUGE_SPECS\n\n    const arcStart = Math.PI * 0.75\n    const arcLength = Math.PI * 1.5\n    const arcStop = arcStart + arcLength\n    const totalSmallLineCount = lineCount * smallLineCount\n\n    const startDegree = degree * 135\n    const arcLargeIncrement = arcLength / lineCount\n    const arcSmallIncrement = arcLength / totalSmallLineCount\n\n    // Semi-circle\n    const arcRadius = radius + gradientThickness * 0.8\n    ctx.beginPath()\n    ctx.arc(xc, yc, arcRadius, arcStart, arcStop)\n    ctx.lineWidth = 3\n    ctx.lineCap = 'round'\n    ctx.strokeStyle = lineColor\n    ctx.stroke()\n    ctx.closePath()\n\n    // Match center of canvas to center of gauge\n    ctx.translate(xc, yc)\n\n    // Draw Large ticks\n    for (let lt = 0; lt <= lineCount; lt++) {\n      // Rotation before drawing line\n      ctx.rotate(startDegree)\n      ctx.rotate(lt * arcLargeIncrement)\n      // Draw line\n      ctx.beginPath()\n      ctx.lineWidth = lineStrokeLarge\n      ctx.lineCap = 'round'\n      ctx.strokeStyle = lineColor\n      ctx.moveTo(arcRadius, 0)\n      ctx.lineTo(arcRadius + tickSizeLarge, 0)\n      ctx.stroke()\n      ctx.closePath()\n      // Return to starting rotation\n      ctx.rotate(-lt * arcLargeIncrement)\n      ctx.rotate(-startDegree)\n    }\n\n    // Draw Small ticks\n    for (let lt = 0; lt <= totalSmallLineCount; lt++) {\n      // Rotation before drawing line\n      ctx.rotate(startDegree)\n      ctx.rotate(lt * arcSmallIncrement)\n      // Draw line\n      ctx.beginPath()\n      ctx.lineWidth = lineStrokeSmall\n      ctx.lineCap = 'round'\n      ctx.strokeStyle = lineColor\n      ctx.moveTo(arcRadius, 0)\n      ctx.lineTo(arcRadius + tickSizeSmall, 0)\n      ctx.stroke()\n      ctx.closePath()\n      // Return to starting rotation\n      ctx.rotate(-lt * arcSmallIncrement)\n      ctx.rotate(-startDegree)\n    }\n  }\n\n  private drawGaugeLabels = (\n    ctx,\n    radius,\n    gradientThickness,\n    minValue,\n    maxValue\n  ) => {\n    const {tickPrefix, tickSuffix, decimalPlaces} = this.props\n    let {prefix, suffix} = this.props\n    const {degree, lineCount, labelColor, labelFontSize} = GAUGE_SPECS\n\n    const tickValues = [\n      ..._.range(minValue, maxValue, Math.abs(maxValue - minValue) / lineCount),\n      maxValue,\n    ]\n\n    if (tickPrefix === 'true') {\n      prefix = ''\n    }\n\n    if (tickSuffix === 'true') {\n      suffix = ''\n    }\n\n    const labels = tickValues.map(tick =>\n      formatStatValue(tick, {decimalPlaces, prefix, suffix})\n    )\n\n    const startDegree = degree * 135\n    const arcLength = Math.PI * 1.5\n    const arcIncrement = arcLength / lineCount\n\n    // Format labels text\n    ctx.font = `bold ${labelFontSize}px Helvetica`\n    ctx.fillStyle = labelColor\n    ctx.textBaseline = 'middle'\n    ctx.textAlign = 'right'\n    let labelRadius\n\n    for (let i = 0; i <= lineCount; i++) {\n      if (i === 3) {\n        ctx.textAlign = 'center'\n        labelRadius = radius + gradientThickness + 30\n      } else {\n        labelRadius = radius + gradientThickness + 23\n      }\n      if (i > 3) {\n        ctx.textAlign = 'left'\n      }\n\n      ctx.rotate(startDegree)\n      ctx.rotate(i * arcIncrement)\n      ctx.translate(labelRadius, 0)\n      ctx.rotate(i * -arcIncrement)\n      ctx.rotate(-startDegree)\n      ctx.fillText(labels[i], 0, 0)\n      ctx.rotate(startDegree)\n      ctx.rotate(i * arcIncrement)\n      ctx.translate(-labelRadius, 0)\n      ctx.rotate(i * -arcIncrement)\n      ctx.rotate(-startDegree)\n    }\n  }\n\n  private drawGaugeValue = (ctx, radius, labelValueFontSize) => {\n    const {gaugePosition, prefix, suffix, decimalPlaces} = this.props\n    const {valueColor} = GAUGE_SPECS\n\n    ctx.font = `${labelValueFontSize}px Roboto`\n    ctx.fillStyle = valueColor\n    ctx.textBaseline = 'middle'\n    ctx.textAlign = 'center'\n\n    const textY = radius\n    const textContent = formatStatValue(gaugePosition, {\n      decimalPlaces,\n      prefix,\n      suffix,\n    })\n\n    ctx.fillText(textContent, 0, textY)\n  }\n\n  private drawNeedle = (ctx, radius, minValue, maxValue) => {\n    const {gaugePosition} = this.props\n    const {degree, needleColor0, needleColor1, overflowDelta} = GAUGE_SPECS\n    const arcDistance = Math.PI * 1.5\n\n    let needleRotation: number\n\n    if (gaugePosition <= minValue) {\n      needleRotation = 0 - overflowDelta\n    } else if (gaugePosition >= maxValue) {\n      needleRotation = 1 + overflowDelta\n    } else {\n      needleRotation = (gaugePosition - minValue) / (maxValue - minValue)\n    }\n\n    const needleGradient = ctx.createLinearGradient(0, -10, 0, radius)\n    needleGradient.addColorStop(0, needleColor0)\n    needleGradient.addColorStop(1, needleColor1)\n\n    // Starting position of needle is at minimum\n    ctx.rotate(degree * 45)\n    ctx.rotate(arcDistance * needleRotation)\n    ctx.beginPath()\n    ctx.fillStyle = needleGradient\n    ctx.arc(0, 0, 10, 0, Math.PI, true)\n    ctx.lineTo(0, radius)\n    ctx.lineTo(10, 0)\n    ctx.fill()\n  }\n}\n\nexport default Gauge\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport {AutoSizer} from 'react-virtualized'\n\n// Components\nimport Gauge from 'src/shared/components/Gauge'\n\n// Types\nimport {GaugeViewProperties} from 'src/types/dashboards'\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  value: number\n  properties: GaugeViewProperties\n}\n\n@ErrorHandling\nclass GaugeChart extends PureComponent<Props> {\n  public render() {\n    const {value} = this.props\n    const {\n      colors,\n      prefix,\n      tickPrefix,\n      suffix,\n      tickSuffix,\n      decimalPlaces,\n    } = this.props.properties\n\n    return (\n      <AutoSizer>\n        {({width, height}) => (\n          <div className=\"gauge\">\n            <Gauge\n              width={width}\n              height={height}\n              colors={colors}\n              prefix={prefix}\n              tickPrefix={tickPrefix}\n              suffix={suffix}\n              tickSuffix={tickSuffix}\n              gaugePosition={value}\n              decimalPlaces={decimalPlaces}\n            />\n          </div>\n        )}\n      </AutoSizer>\n    )\n  }\n}\n\nexport default GaugeChart\n","import _ from 'lodash'\nimport chroma from 'chroma-js'\n\nimport {\n  THRESHOLD_COLORS,\n  BASE_THRESHOLD_ID,\n  THRESHOLD_TYPE_TEXT,\n} from 'src/shared/constants/thresholds'\n\nimport {Color} from 'src/types/colors'\n\nconst getLegibleTextColor = bgColorHex => {\n  const darkText = '#292933'\n  const lightText = '#ffffff'\n\n  const [red, green, blue] = chroma(bgColorHex).rgb()\n  const average = (red + green + blue) / 3\n  const mediumGrey = 128\n\n  return average > mediumGrey ? darkText : lightText\n}\n\nconst findNearestCrossedThreshold = (colors, lastValue) => {\n  const sortedColors = _.sortBy(colors, color => Number(color.value))\n  const nearestCrossedThreshold = sortedColors\n    .filter(color => lastValue >= color.value)\n    .pop()\n\n  return nearestCrossedThreshold\n}\n\nexport const generateThresholdsListHexs = ({\n  colors,\n  lastValue,\n  cellType = 'line',\n}: {\n  colors: Color[]\n  lastValue: string | number | null\n  cellType: string\n}) => {\n  const defaultColoring = {\n    bgColor: null,\n    textColor: cellType === 'table' ? '#BEC2CC' : THRESHOLD_COLORS[11].hex,\n  }\n\n  const lastValueNumber = Number(lastValue) || 0\n\n  if (!colors.length) {\n    return defaultColoring\n  }\n\n  // baseColor is expected in all cases\n  const baseColor = colors.find(color => color.id === BASE_THRESHOLD_ID) || {\n    hex: defaultColoring.textColor,\n  }\n\n  if (!lastValue && lastValue !== 0) {\n    return {...defaultColoring, textColor: baseColor.hex}\n  }\n\n  // If the single stat is above a line graph never have a background color\n  if (cellType === 'line-plus-single-stat') {\n    return baseColor\n      ? {bgColor: null, textColor: baseColor.hex}\n      : defaultColoring\n  }\n\n  // When there is only a base color and it's applied to the text\n  const shouldColorizeText = !!colors.find(\n    color => color.type === THRESHOLD_TYPE_TEXT\n  )\n\n  if (shouldColorizeText && colors.length === 1 && baseColor) {\n    return {bgColor: null, textColor: baseColor.hex}\n  }\n\n  if (shouldColorizeText && colors.length === 1) {\n    return defaultColoring\n  }\n\n  // When there's multiple colors and they're applied to the text\n  if (shouldColorizeText && colors.length > 1) {\n    const nearestCrossedThreshold = findNearestCrossedThreshold(\n      colors,\n      lastValueNumber\n    )\n\n    return {bgColor: null, textColor: nearestCrossedThreshold.hex}\n  }\n\n  // When there is only a base color and it's applued to the background\n  if (colors.length === 1) {\n    return {\n      bgColor: baseColor.hex,\n      textColor: getLegibleTextColor(baseColor.hex),\n    }\n  }\n\n  // When there are multiple colors and they're applied to the background\n  if (colors.length > 1) {\n    const nearestCrossedThreshold = findNearestCrossedThreshold(\n      colors,\n      lastValueNumber\n    )\n\n    const bgColor = nearestCrossedThreshold\n      ? nearestCrossedThreshold.hex\n      : baseColor.hex\n\n    return {bgColor, textColor: getLegibleTextColor(bgColor)}\n  }\n\n  return {bgColor: null, textColor: baseColor.hex}\n}\n","// Libraries\nimport React, {SFC} from 'react'\n\n// Utils\nimport {generateThresholdsListHexs} from 'src/shared/constants/colorOperations'\nimport {formatStatValue} from 'src/shared/utils/formatStatValue'\n\n// Types\nimport {SingleStatViewProperties} from 'src/types/dashboards'\n\ninterface Props {\n  properties: SingleStatViewProperties\n  stat: number\n}\n\nconst SingleStat: SFC<Props> = ({stat, properties}) => {\n  const {prefix, suffix, colors, decimalPlaces} = properties\n\n  const {bgColor: backgroundColor, textColor} = generateThresholdsListHexs({\n    colors,\n    lastValue: stat,\n    cellType: 'single-stat',\n  })\n\n  const formattedValue = formatStatValue(stat, {decimalPlaces, prefix, suffix})\n\n  return (\n    <div\n      className=\"single-stat\"\n      style={{backgroundColor}}\n      data-testid=\"single-stat\"\n    >\n      <div className=\"single-stat--resizer\">\n        <svg\n          width=\"100%\"\n          height=\"100%\"\n          viewBox={`0 0 ${formattedValue.length * 55} 100`}\n        >\n          <text\n            className=\"single-stat--text\"\n            data-testid=\"single-stat--text\"\n            fontSize=\"100\"\n            y=\"59%\"\n            x=\"50%\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"middle\"\n            style={{fill: textColor}}\n          >\n            {formattedValue}\n          </text>\n        </svg>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleStat\n","// Libraries\nimport {PureComponent} from 'react'\nimport _ from 'lodash'\nimport memoizeOne from 'memoize-one'\n\n// Utils\nimport {transformTableData} from 'src/dashboards/utils/tableGraph'\n\n// Types\nimport {TableViewProperties, SortOptions} from 'src/types/dashboards'\nimport {TransformTableDataReturnType} from 'src/dashboards/utils/tableGraph'\n\ninterface Props {\n  data: string[][]\n  dataTypes: {[x: string]: string}\n  properties: TableViewProperties\n  sortOptions: SortOptions\n  children: (transformedDataBundle: TransformTableDataReturnType) => JSX.Element\n}\n\nconst areFormatPropertiesEqual = (\n  prevProperties: Props,\n  newProperties: Props\n) => {\n  const formatProps = ['tableOptions', 'fieldOptions', 'timeFormat', 'sort']\n  if (!prevProperties.properties) {\n    return false\n  }\n  const propsEqual = formatProps.every(k =>\n    _.isEqual(prevProperties.properties[k], newProperties.properties[k])\n  )\n\n  return propsEqual\n}\n\nclass TableGraphTransform extends PureComponent<Props> {\n  private memoizedTableTransform: typeof transformTableData = memoizeOne(\n    transformTableData,\n    areFormatPropertiesEqual\n  )\n\n  public render() {\n    const {properties, data, dataTypes, sortOptions} = this.props\n    const {tableOptions, timeFormat, decimalPlaces, fieldOptions} = properties\n    const fo =\n      fieldOptions &&\n      fieldOptions.map(opts => ({\n        ...opts,\n        dataType: dataTypes[opts.internalName],\n      }))\n\n    const transformedDataBundle = this.memoizedTableTransform(\n      data,\n      sortOptions,\n      fo,\n      tableOptions,\n      timeFormat,\n      decimalPlaces\n    )\n\n    return this.props.children(transformedDataBundle)\n  }\n}\n\nexport default TableGraphTransform\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport classnames from 'classnames'\n\n// Constants\nimport {ASCENDING} from 'src/shared/constants/tableGraph'\nimport {DEFAULT_TIME_FIELD} from 'src/dashboards/constants'\n\n// Utils\nimport {generateThresholdsListHexs} from 'src/shared/constants/colorOperations'\n\n// Types\nimport {SortOptions, FieldOption} from 'src/types/dashboards'\nimport {TableViewProperties} from 'src/types/dashboards'\nimport {CellRendererProps} from 'src/shared/components/tables/TableGraphTable'\n\ninterface Props extends CellRendererProps {\n  sortOptions: SortOptions\n  data: string\n  dataType: string\n  properties: TableViewProperties\n  hoveredRowIndex: number\n  hoveredColumnIndex: number\n  isTimeVisible: boolean\n  isVerticalTimeAxis: boolean\n  isFirstColumnFixed: boolean\n  onClickFieldName: (data: string) => void\n  onHover: (e: React.MouseEvent<HTMLElement>) => void\n  resolvedFieldOptions: FieldOption[]\n  timeFormatter: (time: string) => string\n}\n\nconst URL_REGEXP = /(https?:\\/\\/[^\\s]+)/g\n\n// NOTE: rip this out if you spend time any here as per:\n// https://stackoverflow.com/questions/1500260/detect-urls-in-text-with-javascript/1500501#1500501\nfunction asLink(str) {\n  if (!URL_REGEXP.test('' + str)) {\n    return str\n  }\n\n  const regex = RegExp(URL_REGEXP.source, URL_REGEXP.flags),\n    out = []\n  let idx = 0,\n    link,\n    m\n\n  do {\n    m = regex.exec(str)\n\n    if (m) {\n      if (m.index - idx > 0) {\n        out.push(str.slice(idx, m.index))\n      }\n\n      link = str.slice(m.index, m.index + m[1].length)\n      out.push(\n        <a href={link} target=\"_blank\">\n          {link}\n        </a>\n      )\n\n      idx = m.index + m[1].length\n    }\n  } while (m)\n\n  return out\n}\n\nclass TableCell extends PureComponent<Props> {\n  public render() {\n    const {data, rowIndex, columnIndex, onHover} = this.props\n    if (rowIndex === 0) {\n      return (\n        <div\n          style={this.style}\n          className={this.class}\n          onClick={this.handleClick}\n          data-column-index={columnIndex}\n          data-row-index={rowIndex}\n          data-testid={`${data}-table-header`}\n          onMouseOver={onHover}\n          title={this.contents}\n        >\n          {this.contents}\n        </div>\n      )\n    }\n    return (\n      <div\n        style={this.style}\n        className={this.class}\n        onClick={this.handleClick}\n        data-column-index={columnIndex}\n        data-row-index={rowIndex}\n        onMouseOver={onHover}\n        title={this.contents}\n      >\n        {asLink(this.contents)}\n      </div>\n    )\n  }\n\n  private handleClick = () => {\n    const {data} = this.props\n\n    return this.isFieldName && _.isString(data)\n      ? this.props.onClickFieldName(data)\n      : null\n  }\n\n  private get isFieldName(): boolean {\n    return this.props.isVerticalTimeAxis ? this.isFirstRow : this.isFirstCol\n  }\n\n  private get isHighlightedRow(): boolean {\n    const {parent, rowIndex, hoveredRowIndex} = this.props\n\n    return (\n      rowIndex === parent.props.scrollToRow ||\n      (rowIndex === hoveredRowIndex && hoveredRowIndex > 0)\n    )\n  }\n\n  private get isHighlightedColumn(): boolean {\n    const {columnIndex, hoveredColumnIndex} = this.props\n\n    return columnIndex === hoveredColumnIndex && hoveredColumnIndex > 0\n  }\n\n  private get isTimeData(): boolean {\n    return (\n      this.props.isTimeVisible &&\n      (this.props.isVerticalTimeAxis\n        ? !this.isFirstRow && this.props.columnIndex === this.timeFieldIndex\n        : this.props.rowIndex === this.timeFieldIndex && this.isFirstCol)\n    )\n  }\n\n  private get class(): string {\n    return classnames('table-graph-cell', {\n      'table-graph-cell__fixed-row': this.isFixedRow,\n      'table-graph-cell__fixed-column': this.isFixedColumn,\n      'table-graph-cell__fixed-corner': this.isFixedCorner,\n      'table-graph-cell__highlight-row': this.isHighlightedRow,\n      'table-graph-cell__highlight-column': this.isHighlightedColumn,\n      'table-graph-cell__numerical': !this.isNaN,\n      'table-graph-cell__field-name': this.isFieldName,\n      'table-graph-cell__sort-asc':\n        this.isFieldName && this.isSorted && this.isAscending,\n      'table-graph-cell__sort-desc':\n        this.isFieldName && this.isSorted && !this.isAscending,\n    })\n  }\n\n  private get isSorted(): boolean {\n    const {sortOptions, data} = this.props\n\n    return sortOptions.field === data\n  }\n\n  private get isAscending(): boolean {\n    const {sortOptions} = this.props\n\n    return sortOptions.direction === ASCENDING\n  }\n\n  private get isFirstRow(): boolean {\n    const {rowIndex} = this.props\n\n    return rowIndex === 0\n  }\n\n  private get isFirstCol(): boolean {\n    const {columnIndex} = this.props\n\n    return columnIndex === 0\n  }\n\n  private get isFixedRow(): boolean {\n    return this.isFirstRow && !this.isFirstCol\n  }\n\n  private get isFixedColumn(): boolean {\n    return this.props.isFirstColumnFixed && !this.isFirstRow && this.isFirstCol\n  }\n\n  private get isFixedCorner(): boolean {\n    return this.isFirstRow && this.isFirstCol\n  }\n\n  private get isTimestamp(): boolean {\n    return this.props.dataType === 'dateTime:RFC3339'\n  }\n\n  private get isNaN(): boolean {\n    return isNaN(Number(this.props.data))\n  }\n\n  private get isFixed(): boolean {\n    return this.isFixedRow || this.isFixedColumn || this.isFixedCorner\n  }\n\n  private get timeFieldIndex(): number {\n    const {resolvedFieldOptions} = this.props\n\n    let hiddenBeforeTime = 0\n    const timeIndex = resolvedFieldOptions.findIndex(\n      ({internalName, visible}) => {\n        if (!visible) {\n          hiddenBeforeTime += 1\n        }\n        return internalName === DEFAULT_TIME_FIELD.internalName\n      }\n    )\n\n    return timeIndex - hiddenBeforeTime\n  }\n\n  private get style(): React.CSSProperties {\n    const {style, properties, data} = this.props\n    const {colors} = properties\n\n    if (this.isFixed || this.isTimeData || this.isTimestamp || this.isNaN) {\n      return style\n    }\n\n    const thresholdData = {colors, lastValue: data, cellType: 'table'}\n    const {bgColor, textColor} = generateThresholdsListHexs(thresholdData)\n    return {\n      ...style,\n      backgroundColor: bgColor,\n      color: textColor,\n    }\n  }\n\n  private get fieldName(): string {\n    const {data, resolvedFieldOptions = [DEFAULT_TIME_FIELD]} = this.props\n\n    const foundField =\n      this.isFieldName &&\n      resolvedFieldOptions.find(({internalName}) => internalName === data)\n\n    return foundField && (foundField.displayName || foundField.internalName)\n  }\n\n  private get contents(): string {\n    const {properties, data, dataType, timeFormatter} = this.props\n    const {decimalPlaces} = properties\n\n    if (dataType.includes('dateTime')) {\n      return timeFormatter(data)\n    }\n\n    if (_.isString(data) && this.isFieldName) {\n      return _.defaultTo(this.fieldName, '').toString()\n    }\n\n    if (\n      !isNaN(+data) &&\n      decimalPlaces.isEnforced &&\n      decimalPlaces.digits < 100\n    ) {\n      return (+data).toFixed(decimalPlaces.digits)\n    }\n\n    return _.defaultTo(data, '').toString()\n  }\n}\n\nexport default TableCell\n","import {CellMeasurerCache} from 'react-virtualized'\n\ninterface CellMeasurerCacheDecoratorParams {\n  cellMeasurerCache: CellMeasurerCache\n  columnIndexOffset: number\n  rowIndexOffset: number\n}\n\ninterface IndexParam {\n  index: number\n}\n\nclass CellMeasurerCacheDecorator {\n  private cellMeasurerCache: CellMeasurerCache\n  private columnIndexOffset: number\n  private rowIndexOffset: number\n\n  constructor(params: Partial<CellMeasurerCacheDecoratorParams> = {}) {\n    const {\n      cellMeasurerCache,\n      columnIndexOffset = 0,\n      rowIndexOffset = 0,\n    } = params\n\n    this.cellMeasurerCache = cellMeasurerCache\n    this.columnIndexOffset = columnIndexOffset\n    this.rowIndexOffset = rowIndexOffset\n  }\n\n  public clear(rowIndex: number, columnIndex: number): void {\n    this.cellMeasurerCache.clear(\n      rowIndex + this.rowIndexOffset,\n      columnIndex + this.columnIndexOffset\n    )\n  }\n\n  public clearAll(): void {\n    this.cellMeasurerCache.clearAll()\n  }\n\n  public columnWidth = ({index}: IndexParam) => {\n    this.cellMeasurerCache.columnWidth({\n      index: index + this.columnIndexOffset,\n    })\n  }\n\n  get defaultHeight(): number {\n    return this.cellMeasurerCache.defaultHeight\n  }\n\n  get defaultWidth(): number {\n    return this.cellMeasurerCache.defaultWidth\n  }\n\n  public hasFixedHeight(): boolean {\n    return this.cellMeasurerCache.hasFixedHeight()\n  }\n\n  public hasFixedWidth(): boolean {\n    return this.cellMeasurerCache.hasFixedWidth()\n  }\n\n  public getHeight(rowIndex: number, columnIndex: number = 0): number | null {\n    return this.cellMeasurerCache.getHeight(\n      rowIndex + this.rowIndexOffset,\n      columnIndex + this.columnIndexOffset\n    )\n  }\n\n  public getWidth(rowIndex: number, columnIndex: number = 0): number | null {\n    return this.cellMeasurerCache.getWidth(\n      rowIndex + this.rowIndexOffset,\n      columnIndex + this.columnIndexOffset\n    )\n  }\n\n  public has(rowIndex: number, columnIndex: number = 0): boolean {\n    return this.cellMeasurerCache.has(\n      rowIndex + this.rowIndexOffset,\n      columnIndex + this.columnIndexOffset\n    )\n  }\n\n  public rowHeight = ({index}: IndexParam) => {\n    this.cellMeasurerCache.rowHeight({\n      index: index + this.rowIndexOffset,\n    })\n  }\n\n  public set(\n    rowIndex: number,\n    columnIndex: number,\n    width: number,\n    height: number\n  ): void {\n    this.cellMeasurerCache.set(\n      rowIndex + this.rowIndexOffset,\n      columnIndex + this.columnIndexOffset,\n      width,\n      height\n    )\n  }\n}\n\nexport default CellMeasurerCacheDecorator\n","import * as React from 'react'\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator'\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\nimport {Grid} from 'react-virtualized'\n\nconst SCROLLBAR_SIZE_BUFFER = 20\ntype HeightWidthFunction = (arg: {index: number}) => number\n\nexport interface PropsMultiGrid {\n  width: number\n  height: number\n  columnCount?: number\n  classNameBottomLeftGrid?: string\n  classNameBottomRightGrid?: string\n  classNameTopLeftGrid?: string\n  classNameTopRightGrid?: string\n  enableFixedColumnScroll?: boolean\n  enableFixedRowScroll?: boolean\n  fixedColumnCount?: number\n  fixedRowCount?: number\n  style?: object\n  styleBottomLeftGrid?: object\n  styleBottomRightGrid?: object\n  styleTopLeftGrid?: object\n  styleTopRightGrid?: object\n  scrollTop?: number\n  scrollLeft?: number\n  rowCount?: number\n  rowHeight?: number | HeightWidthFunction\n  columnWidth?: number | HeightWidthFunction\n  onScroll?: (arg: object) => {}\n  onSectionRendered?: () => {}\n  cellRenderer?: (arg: object) => JSX.Element\n  [key: string]: any // MultiGrid can accept any prop, and will rerender if they change\n}\n\ninterface State {\n  scrollLeft: number\n  scrollTop: number\n  scrollbarSize: number\n  showHorizontalScrollbar: boolean\n  showVerticalScrollbar: boolean\n}\n\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\nclass MultiGrid extends React.PureComponent<PropsMultiGrid, State> {\n  public static defaultProps = {\n    classNameBottomLeftGrid: '',\n    classNameBottomRightGrid: '',\n    classNameTopLeftGrid: '',\n    classNameTopRightGrid: '',\n    enableFixedColumnScroll: false,\n    enableFixedRowScroll: false,\n    fixedColumnCount: 0,\n    fixedRowCount: 0,\n    scrollToColumn: -1,\n    scrollToRow: -1,\n    style: {},\n    styleBottomLeftGrid: {},\n    styleBottomRightGrid: {},\n    styleTopLeftGrid: {},\n    styleTopRightGrid: {},\n  }\n\n  public static getDerivedStateFromProps(\n    nextProps: PropsMultiGrid,\n    prevState: State\n  ) {\n    if (\n      nextProps.scrollLeft !== prevState.scrollLeft ||\n      nextProps.scrollTop !== prevState.scrollTop\n    ) {\n      return {\n        scrollLeft:\n          nextProps.scrollLeft != null && nextProps.scrollLeft >= 0\n            ? nextProps.scrollLeft\n            : prevState.scrollLeft,\n        scrollTop:\n          nextProps.scrollTop != null && nextProps.scrollTop >= 0\n            ? nextProps.scrollTop\n            : prevState.scrollTop,\n      }\n    }\n\n    return null\n  }\n\n  private deferredInvalidateColumnIndex: number = 0\n  private deferredInvalidateRowIndex: number = 0\n  private bottomLeftGrid: Grid\n  private bottomRightGrid: Grid\n  private topLeftGrid: Grid\n  private topRightGrid: Grid\n  private deferredMeasurementCacheBottomLeftGrid: CellMeasurerCacheDecorator\n  private deferredMeasurementCacheBottomRightGrid: CellMeasurerCacheDecorator\n  private deferredMeasurementCacheTopRightGrid: CellMeasurerCacheDecorator\n  private leftGridWidth: number | null = 0\n  private topGridHeight: number | null = 0\n  private lastRenderedColumnWidth: number | HeightWidthFunction\n  private lastRenderedFixedColumnCount: number = 0\n  private lastRenderedFixedRowCount: number = 0\n  private lastRenderedRowHeight: number | HeightWidthFunction\n  private bottomRightGridStyle: object | null\n  private topRightGridStyle: object | null\n  private lastRenderedStyle: object | null\n  private lastRenderedHeight: number = 0\n  private lastRenderedWidth: number = 0\n  private containerTopStyle: object | null\n  private containerBottomStyle: object | null\n  private containerOuterStyle: object | null\n  private lastRenderedStyleBottomLeftGrid: object | null\n  private lastRenderedStyleBottomRightGrid: object | null\n  private lastRenderedStyleTopLeftGrid: object | null\n  private lastRenderedStyleTopRightGrid: object | null\n  private bottomLeftGridStyle: object | null\n  private topLeftGridStyle: object | null\n\n  constructor(props: PropsMultiGrid, context) {\n    super(props, context)\n\n    this.state = {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false,\n    }\n\n    const {deferredMeasurementCache, fixedColumnCount, fixedRowCount} = props\n\n    this.maybeCalculateCachedStyles(true)\n\n    if (deferredMeasurementCache) {\n      this.deferredMeasurementCacheBottomLeftGrid =\n        fixedRowCount > 0\n          ? new CellMeasurerCacheDecorator({\n              cellMeasurerCache: deferredMeasurementCache,\n              columnIndexOffset: 0,\n              rowIndexOffset: fixedRowCount,\n            })\n          : deferredMeasurementCache\n\n      this.deferredMeasurementCacheBottomRightGrid =\n        fixedColumnCount > 0 || fixedRowCount > 0\n          ? new CellMeasurerCacheDecorator({\n              cellMeasurerCache: deferredMeasurementCache,\n              columnIndexOffset: fixedColumnCount,\n              rowIndexOffset: fixedRowCount,\n            })\n          : deferredMeasurementCache\n\n      this.deferredMeasurementCacheTopRightGrid =\n        fixedColumnCount > 0\n          ? new CellMeasurerCacheDecorator({\n              cellMeasurerCache: deferredMeasurementCache,\n              columnIndexOffset: fixedColumnCount,\n              rowIndexOffset: 0,\n            })\n          : deferredMeasurementCache\n    }\n  }\n\n  public forceUpdateGrids() {\n    if (this.bottomLeftGrid) {\n      this.bottomLeftGrid.forceUpdate()\n    }\n    if (this.bottomRightGrid) {\n      this.bottomRightGrid.forceUpdate()\n    }\n    if (this.topLeftGrid) {\n      this.topLeftGrid.forceUpdate()\n    }\n    if (this.topRightGrid) {\n      this.topRightGrid.forceUpdate()\n    }\n  }\n\n  /** See Grid#invalidateCellSizeAfterRender */\n  public invalidateCellSizeAfterRender({columnIndex = 0, rowIndex = 0} = {}) {\n    this.deferredInvalidateColumnIndex =\n      typeof this.deferredInvalidateColumnIndex === 'number'\n        ? Math.min(this.deferredInvalidateColumnIndex, columnIndex)\n        : columnIndex\n    this.deferredInvalidateRowIndex =\n      typeof this.deferredInvalidateRowIndex === 'number'\n        ? Math.min(this.deferredInvalidateRowIndex, rowIndex)\n        : rowIndex\n  }\n\n  /** See Grid#measureAllCells */\n  public measureAllCells() {\n    if (this.bottomLeftGrid) {\n      this.bottomLeftGrid.measureAllCells()\n    }\n    if (this.bottomRightGrid) {\n      this.bottomRightGrid.measureAllCells()\n    }\n    if (this.topLeftGrid) {\n      this.topLeftGrid.measureAllCells()\n    }\n    if (this.topRightGrid) {\n      this.topRightGrid.measureAllCells()\n    }\n  }\n\n  public recomputeGridSize({columnIndex = 0, rowIndex = 0} = {}) {\n    const {fixedColumnCount, fixedRowCount} = this.props\n\n    const adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount)\n    const adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount)\n\n    if (this.bottomLeftGrid) {\n      this.bottomLeftGrid.recomputeGridSize({\n        columnIndex,\n        rowIndex: adjustedRowIndex,\n      })\n    }\n    if (this.bottomRightGrid) {\n      this.bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex,\n      })\n    }\n\n    if (this.topLeftGrid) {\n      this.topLeftGrid.recomputeGridSize({\n        columnIndex,\n        rowIndex,\n      })\n    }\n\n    if (this.topRightGrid) {\n      this.topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex,\n      })\n    }\n\n    this.leftGridWidth = null\n    this.topGridHeight = null\n    this.maybeCalculateCachedStyles(true)\n  }\n\n  public componentDidMount() {\n    const {scrollLeft, scrollTop} = this.props\n\n    if (scrollLeft > 0 || scrollTop > 0) {\n      const newState: Partial<State> = {}\n\n      if (scrollLeft > 0) {\n        newState.scrollLeft = scrollLeft\n      }\n\n      if (scrollTop > 0) {\n        newState.scrollTop = scrollTop\n      }\n\n      this.setState({...this.state, ...newState})\n    }\n    this.handleInvalidatedGridSize()\n  }\n\n  public componentDidUpdate() {\n    this.handleInvalidatedGridSize()\n  }\n\n  public render() {\n    const {\n      onScroll,\n      onSectionRendered,\n      scrollToRow,\n      scrollToColumn,\n      ...rest\n    } = this.props\n\n    this.prepareForRender()\n\n    // Don't render any of our Grids if there are no cells.\n    // This mirrors what Grid does,\n    // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n    if (this.props.width === 0 || this.props.height === 0) {\n      return null\n    }\n\n    // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n    const {scrollLeft, scrollTop} = this.state\n\n    return (\n      <div style={this.containerOuterStyle}>\n        <div style={this.containerTopStyle}>\n          {this.renderTopLeftGrid(rest)}\n          {this.renderTopRightGrid({\n            ...rest,\n            ...onScroll,\n            scrollLeft,\n          })}\n        </div>\n        <div style={this.containerBottomStyle}>\n          {this.renderBottomLeftGrid({\n            ...rest,\n            onScroll,\n            scrollTop,\n          })}\n          {this.renderBottomRightGrid({\n            ...rest,\n            onScroll,\n            onSectionRendered,\n            scrollLeft,\n            scrollToColumn,\n            scrollToRow,\n            scrollTop,\n          })}\n        </div>\n      </div>\n    )\n  }\n\n  public cellRendererBottomLeftGrid = ({rowIndex, ...rest}) => {\n    const {cellRenderer, fixedRowCount, rowCount} = this.props\n\n    if (rowIndex === rowCount - fixedRowCount) {\n      return (\n        <div\n          key={rest.key}\n          style={{\n            ...rest.style,\n            height: SCROLLBAR_SIZE_BUFFER,\n          }}\n        />\n      )\n    } else {\n      return cellRenderer({\n        ...rest,\n        parent: this,\n        rowIndex: rowIndex + fixedRowCount,\n      })\n    }\n  }\n\n  private getBottomGridHeight(props: PropsMultiGrid) {\n    const {height} = props\n\n    const topGridHeight = this.getTopGridHeight(props)\n\n    return height - topGridHeight\n  }\n\n  private getLeftGridWidth(props: PropsMultiGrid) {\n    const {fixedColumnCount, columnWidth} = props\n\n    if (this.leftGridWidth == null) {\n      if (typeof columnWidth === 'function') {\n        let leftGridWidth = 0\n\n        for (let index = 0; index < fixedColumnCount; index++) {\n          leftGridWidth += columnWidth({index})\n        }\n\n        this.leftGridWidth = leftGridWidth\n      } else {\n        this.leftGridWidth = columnWidth * fixedColumnCount\n      }\n    }\n\n    return this.leftGridWidth\n  }\n\n  private getRightGridWidth(props: PropsMultiGrid) {\n    const {width} = props\n\n    const leftGridWidth = this.getLeftGridWidth(props)\n    const result = width - leftGridWidth\n\n    return result\n  }\n\n  private getTopGridHeight(props: PropsMultiGrid) {\n    const {fixedRowCount, rowHeight} = props\n\n    if (this.topGridHeight == null) {\n      if (typeof rowHeight === 'function') {\n        let topGridHeight = 0\n\n        for (let index = 0; index < fixedRowCount; index++) {\n          topGridHeight += rowHeight({index})\n        }\n\n        this.topGridHeight = topGridHeight\n      } else {\n        this.topGridHeight = rowHeight * fixedRowCount\n      }\n    }\n\n    return this.topGridHeight\n  }\n\n  private onScrollbarsScroll = (e: React.MouseEvent<HTMLElement>) => {\n    const {target} = e\n    this.onScroll(target)\n  }\n\n  private onScroll = scrollInfo => {\n    const {scrollLeft, scrollTop} = scrollInfo\n    this.setState({\n      scrollLeft,\n      scrollTop,\n    })\n\n    const {onScroll} = this.props\n    if (onScroll) {\n      onScroll(scrollInfo)\n    }\n  }\n\n  private onScrollLeft = scrollInfo => {\n    const {scrollLeft} = scrollInfo\n    this.onScroll({\n      scrollLeft,\n      scrollTop: this.state.scrollTop,\n    })\n  }\n\n  private renderBottomLeftGrid(props) {\n    const {fixedColumnCount, fixedRowCount, rowCount} = props\n\n    if (!fixedColumnCount) {\n      return null\n    }\n\n    const width = this.getLeftGridWidth(props)\n    const height = this.getBottomGridHeight(props)\n\n    return (\n      <Grid\n        {...props}\n        cellRenderer={this.cellRendererBottomLeftGrid}\n        className={this.props.classNameBottomLeftGrid}\n        columnCount={fixedColumnCount}\n        deferredMeasurementCache={this.deferredMeasurementCacheBottomLeftGrid}\n        onScroll={this.onScroll}\n        height={height}\n        ref={this.bottomLeftGridRef}\n        rowCount={Math.max(0, rowCount - fixedRowCount)}\n        rowHeight={this.rowHeightBottomGrid}\n        style={{\n          ...this.bottomLeftGridStyle,\n        }}\n        tabIndex={null}\n        width={width}\n      />\n    )\n  }\n\n  private renderBottomRightGrid(props) {\n    const {\n      columnCount,\n      fixedColumnCount,\n      fixedRowCount,\n      rowCount,\n      scrollToColumn,\n      scrollToRow,\n    } = props\n\n    const width = this.getRightGridWidth(props)\n    const height = this.getBottomGridHeight(props)\n\n    return (\n      <FancyScrollbar\n        style={{...this.bottomRightGridStyle, width, height}}\n        autoHide={true}\n        scrollTop={this.state.scrollTop}\n        scrollLeft={this.state.scrollLeft}\n        setScrollTop={this.onScrollbarsScroll}\n      >\n        <Grid\n          {...props}\n          cellRenderer={this.cellRendererBottomRightGrid}\n          className={this.props.classNameBottomRightGrid}\n          columnCount={Math.max(0, columnCount - fixedColumnCount)}\n          columnWidth={this.columnWidthRightGrid}\n          deferredMeasurementCache={\n            this.deferredMeasurementCacheBottomRightGrid\n          }\n          height={height}\n          ref={this.bottomRightGridRef}\n          rowCount={Math.max(0, rowCount - fixedRowCount)}\n          rowHeight={this.rowHeightBottomGrid}\n          onScroll={this.onScroll}\n          scrollToColumn={scrollToColumn - fixedColumnCount}\n          scrollToRow={scrollToRow - fixedRowCount}\n          style={{\n            ...this.bottomRightGridStyle,\n            overflowX: false,\n            overflowY: true,\n            left: 0,\n          }}\n          width={width}\n        />\n      </FancyScrollbar>\n    )\n  }\n\n  private renderTopLeftGrid(props) {\n    const {fixedColumnCount, fixedRowCount} = props\n\n    if (!fixedColumnCount || !fixedRowCount) {\n      return null\n    }\n\n    return (\n      <Grid\n        {...props}\n        className={this.props.classNameTopLeftGrid}\n        columnCount={fixedColumnCount}\n        height={this.getTopGridHeight(props)}\n        ref={this.topLeftGridRef}\n        rowCount={fixedRowCount}\n        style={this.topLeftGridStyle}\n        tabIndex={null}\n        width={this.getLeftGridWidth(props)}\n      />\n    )\n  }\n\n  private renderTopRightGrid(props) {\n    const {\n      columnCount,\n      enableFixedRowScroll,\n      fixedColumnCount,\n      fixedRowCount,\n      scrollLeft,\n    } = props\n\n    if (!fixedRowCount) {\n      return null\n    }\n\n    const width = this.getRightGridWidth(props)\n    const height = this.getTopGridHeight(props)\n\n    return (\n      <Grid\n        {...props}\n        cellRenderer={this.cellRendererTopRightGrid}\n        className={this.props.classNameTopRightGrid}\n        columnCount={Math.max(0, columnCount - fixedColumnCount)}\n        columnWidth={this.columnWidthRightGrid}\n        deferredMeasurementCache={this.deferredMeasurementCacheTopRightGrid}\n        height={height}\n        onScroll={enableFixedRowScroll ? this.onScrollLeft : undefined}\n        ref={this.topRightGridRef}\n        rowCount={fixedRowCount}\n        scrollLeft={scrollLeft}\n        style={this.topRightGridStyle}\n        tabIndex={null}\n        width={width}\n      />\n    )\n  }\n\n  private rowHeightBottomGrid = ({index}) => {\n    const {fixedRowCount, rowCount, rowHeight} = this.props\n    const {scrollbarSize, showVerticalScrollbar} = this.state\n\n    // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n    if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n      return scrollbarSize\n    }\n\n    return typeof rowHeight === 'function'\n      ? rowHeight({index: index + fixedRowCount})\n      : rowHeight\n  }\n\n  private topLeftGridRef = ref => {\n    this.topLeftGrid = ref\n  }\n\n  private topRightGridRef = ref => {\n    this.topRightGrid = ref\n  }\n\n  /**\n   * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n   * This method recalculates styles only when specific props change.\n   */\n  private maybeCalculateCachedStyles(resetAll) {\n    const {\n      columnWidth,\n      height,\n      fixedColumnCount,\n      fixedRowCount,\n      rowHeight,\n      style,\n      styleBottomLeftGrid,\n      styleBottomRightGrid,\n      styleTopLeftGrid,\n      styleTopRightGrid,\n      width,\n    } = this.props\n\n    const sizeChange =\n      resetAll ||\n      height !== this.lastRenderedHeight ||\n      width !== this.lastRenderedWidth\n    const leftSizeChange =\n      resetAll ||\n      columnWidth !== this.lastRenderedColumnWidth ||\n      fixedColumnCount !== this.lastRenderedFixedColumnCount\n    const topSizeChange =\n      resetAll ||\n      fixedRowCount !== this.lastRenderedFixedRowCount ||\n      rowHeight !== this.lastRenderedRowHeight\n\n    if (resetAll || sizeChange || style !== this.lastRenderedStyle) {\n      this.containerOuterStyle = {\n        height,\n        overflow: 'visible', // Let :focus outline show through\n        width,\n        ...style,\n      }\n    }\n\n    if (resetAll || sizeChange || topSizeChange) {\n      this.containerTopStyle = {\n        height: this.getTopGridHeight(this.props),\n        position: 'relative',\n        width,\n      }\n\n      this.containerBottomStyle = {\n        height: height - this.getTopGridHeight(this.props),\n        overflow: 'visible', // Let :focus outline show through\n        position: 'relative',\n        width,\n      }\n    }\n\n    if (\n      resetAll ||\n      styleBottomLeftGrid !== this.lastRenderedStyleBottomLeftGrid\n    ) {\n      this.bottomLeftGridStyle = {\n        left: 0,\n        overflowY: 'hidden',\n        overflowX: 'hidden',\n        position: 'absolute',\n        ...styleBottomLeftGrid,\n      }\n    }\n\n    if (\n      resetAll ||\n      leftSizeChange ||\n      styleBottomRightGrid !== this.lastRenderedStyleBottomRightGrid\n    ) {\n      this.bottomRightGridStyle = {\n        left: this.getLeftGridWidth(this.props),\n        position: 'absolute',\n        ...styleBottomRightGrid,\n      }\n    }\n\n    if (resetAll || styleTopLeftGrid !== this.lastRenderedStyleTopLeftGrid) {\n      this.topLeftGridStyle = {\n        left: 0,\n        overflowX: 'hidden',\n        overflowY: 'hidden',\n        position: 'absolute',\n        top: 0,\n        ...styleTopLeftGrid,\n      }\n    }\n\n    if (\n      resetAll ||\n      leftSizeChange ||\n      styleTopRightGrid !== this.lastRenderedStyleTopRightGrid\n    ) {\n      this.topRightGridStyle = {\n        left: this.getLeftGridWidth(this.props),\n        overflowX: 'hidden',\n        overflowY: 'hidden',\n        position: 'absolute',\n        top: 0,\n        ...styleTopRightGrid,\n      }\n    }\n\n    this.lastRenderedColumnWidth = columnWidth\n    this.lastRenderedFixedColumnCount = fixedColumnCount\n    this.lastRenderedFixedRowCount = fixedRowCount\n    this.lastRenderedHeight = height\n    this.lastRenderedRowHeight = rowHeight\n    this.lastRenderedStyle = style\n    this.lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid\n    this.lastRenderedStyleBottomRightGrid = styleBottomRightGrid\n    this.lastRenderedStyleTopLeftGrid = styleTopLeftGrid\n    this.lastRenderedStyleTopRightGrid = styleTopRightGrid\n    this.lastRenderedWidth = width\n  }\n\n  private bottomLeftGridRef = ref => {\n    this.bottomLeftGrid = ref\n  }\n\n  private bottomRightGridRef = ref => {\n    this.bottomRightGrid = ref\n  }\n\n  private cellRendererBottomRightGrid = ({columnIndex, rowIndex, ...rest}) => {\n    const {cellRenderer, fixedColumnCount, fixedRowCount} = this.props\n\n    return cellRenderer({\n      ...rest,\n      columnIndex: columnIndex + fixedColumnCount,\n      parent: this,\n      rowIndex: rowIndex + fixedRowCount,\n    })\n  }\n\n  private cellRendererTopRightGrid = ({columnIndex, ...rest}) => {\n    const {cellRenderer, columnCount, fixedColumnCount} = this.props\n\n    if (columnIndex === columnCount - fixedColumnCount) {\n      return (\n        <div\n          key={rest.key}\n          style={{\n            ...rest.style,\n            width: SCROLLBAR_SIZE_BUFFER,\n          }}\n        />\n      )\n    } else {\n      return cellRenderer({\n        ...rest,\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: this,\n      })\n    }\n  }\n\n  private columnWidthRightGrid = ({index}) => {\n    const {columnCount, fixedColumnCount, columnWidth} = this.props\n    const {scrollbarSize, showHorizontalScrollbar} = this.state\n\n    // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n    if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n      return scrollbarSize\n    }\n\n    return typeof columnWidth === 'function'\n      ? columnWidth({index: index + fixedColumnCount})\n      : columnWidth\n  }\n\n  private handleInvalidatedGridSize() {\n    if (typeof this.deferredInvalidateColumnIndex === 'number') {\n      const columnIndex = this.deferredInvalidateColumnIndex\n      const rowIndex = this.deferredInvalidateRowIndex\n\n      this.deferredInvalidateColumnIndex = null\n      this.deferredInvalidateRowIndex = null\n\n      this.recomputeGridSize({\n        columnIndex,\n        rowIndex,\n      })\n      this.forceUpdate()\n    }\n  }\n\n  private prepareForRender() {\n    if (\n      this.lastRenderedColumnWidth !== this.props.columnWidth ||\n      this.lastRenderedFixedColumnCount !== this.props.fixedColumnCount\n    ) {\n      this.leftGridWidth = null\n    }\n\n    if (\n      this.lastRenderedFixedRowCount !== this.props.fixedRowCount ||\n      this.lastRenderedRowHeight !== this.props.rowHeight\n    ) {\n      this.topGridHeight = null\n    }\n\n    this.maybeCalculateCachedStyles(false)\n\n    this.lastRenderedColumnWidth = this.props.columnWidth\n    this.lastRenderedFixedColumnCount = this.props.fixedColumnCount\n    this.lastRenderedFixedRowCount = this.props.fixedRowCount\n    this.lastRenderedRowHeight = this.props.rowHeight\n  }\n}\n\nexport default MultiGrid\n","import MultiGrid, {PropsMultiGrid} from './MultiGrid'\nexport {MultiGrid, PropsMultiGrid}\n","import React, {PureComponent} from 'react'\n\nexport interface InjectedHoverProps {\n  hoverTime: number | null\n  onSetHoverTime: (hoverTime: number | null) => void\n}\n\nconst {Provider, Consumer} = React.createContext<InjectedHoverProps>(null)\n\nexport class HoverTimeProvider extends PureComponent<{}, InjectedHoverProps> {\n  public state: InjectedHoverProps = {\n    hoverTime: null,\n    onSetHoverTime: (hoverTime: number | null) => this.setState({hoverTime}),\n  }\n\n  public render() {\n    return <Provider value={this.state}>{this.props.children}</Provider>\n  }\n}\n\nexport const withHoverTime = <P extends {}>(\n  Component: React.ComponentType<P & InjectedHoverProps>\n) => (props: P) => (\n  <Consumer>\n    {hoverTimeProps => <Component {...props} {...hoverTimeProps} />}\n  </Consumer>\n)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport {timeFormatter} from '@influxdata/giraffe'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport TableCell from 'src/shared/components/tables/TableCell'\nimport {ColumnSizer, SizedColumnProps, AutoSizer} from 'react-virtualized'\nimport {MultiGrid, PropsMultiGrid} from 'src/shared/components/MultiGrid'\n\n// Utils\nimport {withHoverTime, InjectedHoverProps} from 'src/dashboards/utils/hoverTime'\nimport {\n  findHoverTimeIndex,\n  resolveTimeFormat,\n} from 'src/dashboards/utils/tableGraph'\n\n// Constants\nimport {\n  NULL_ARRAY_INDEX,\n  DEFAULT_FIX_FIRST_COLUMN,\n  DEFAULT_VERTICAL_TIME_AXIS,\n} from 'src/shared/constants/tableGraph'\nimport {DEFAULT_TIME_FIELD} from 'src/dashboards/constants'\nconst COLUMN_MIN_WIDTH = 100\nconst ROW_HEIGHT = 30\n\n// Types\nimport {TableViewProperties, TimeZone} from 'src/types'\nimport {TransformTableDataReturnType} from 'src/dashboards/utils/tableGraph'\n\nexport interface ColumnWidths {\n  totalWidths: number\n  widths: {[x: string]: number}\n}\n\nexport interface CellRendererProps {\n  columnIndex: number\n  rowIndex: number\n  key: string\n  parent: React.Component<PropsMultiGrid>\n  style: React.CSSProperties\n}\n\ninterface OwnProps {\n  dataTypes: {[x: string]: string}\n  transformedDataBundle: TransformTableDataReturnType\n  properties: TableViewProperties\n  onSort: (fieldName: string) => void\n  timeZone: TimeZone\n}\n\ntype Props = OwnProps & InjectedHoverProps\n\ninterface State {\n  timeColumnWidth: number\n  hoveredColumnIndex: number\n  hoveredRowIndex: number\n  totalColumnWidths: number\n  shouldResize: boolean\n}\n\n@ErrorHandling\nclass TableGraphTable extends PureComponent<Props, State> {\n  public state = {\n    timeColumnWidth: 0,\n    shouldResize: false,\n    totalColumnWidths: 0,\n    hoveredRowIndex: NULL_ARRAY_INDEX,\n    hoveredColumnIndex: NULL_ARRAY_INDEX,\n  }\n\n  private gridContainer: HTMLDivElement\n  private multiGrid?: MultiGrid\n\n  public componentDidUpdate() {\n    if (this.state.shouldResize) {\n      if (this.multiGrid) {\n        this.multiGrid.recomputeGridSize()\n      }\n      this.setState({shouldResize: false})\n    }\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  public render() {\n    const {\n      transformedDataBundle: {transformedData},\n    } = this.props\n\n    const rowCount = this.columnCount === 0 ? 0 : transformedData.length\n    const fixedColumnCount = this.fixFirstColumn && this.columnCount > 1 ? 1 : 0\n    const {scrollToColumn, scrollToRow} = this.scrollToColRow\n\n    return (\n      <div\n        className=\"time-machine-table\"\n        ref={gridContainer => (this.gridContainer = gridContainer)}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {rowCount > 0 && (\n          <AutoSizer>\n            {({width, height}) => {\n              return (\n                <ColumnSizer\n                  columnCount={this.computedColumnCount}\n                  columnMinWidth={COLUMN_MIN_WIDTH}\n                  width={width}\n                >\n                  {({\n                    adjustedWidth,\n                    columnWidth,\n                    registerChild,\n                  }: SizedColumnProps) => {\n                    return (\n                      <MultiGrid\n                        height={height}\n                        ref={registerChild}\n                        rowCount={rowCount}\n                        width={adjustedWidth}\n                        rowHeight={ROW_HEIGHT}\n                        scrollToRow={scrollToRow}\n                        columnCount={this.columnCount}\n                        scrollToColumn={scrollToColumn}\n                        fixedColumnCount={fixedColumnCount}\n                        cellRenderer={this.cellRenderer}\n                        onMount={this.handleMultiGridMount}\n                        classNameBottomRightGrid=\"table-graph--scroll-window\"\n                        columnWidth={this.calculateColumnWidth(columnWidth)}\n                      />\n                    )\n                  }}\n                </ColumnSizer>\n              )\n            }}\n          </AutoSizer>\n        )}\n      </div>\n    )\n  }\n\n  private get timeField() {\n    const {transformedDataBundle} = this.props\n    const {resolvedFieldOptions} = transformedDataBundle\n\n    return _.find(\n      resolvedFieldOptions,\n      f => f.internalName === DEFAULT_TIME_FIELD.internalName\n    )\n  }\n\n  private get fixFirstColumn(): boolean {\n    const {\n      transformedDataBundle: {resolvedFieldOptions},\n      properties: {tableOptions},\n    } = this.props\n\n    const {fixFirstColumn = DEFAULT_FIX_FIRST_COLUMN} = tableOptions\n\n    if (resolvedFieldOptions.length === 1) {\n      return false\n    }\n\n    const visibleFields = resolvedFieldOptions.reduce((acc, f) => {\n      if (f.visible) {\n        acc += 1\n      }\n      return acc\n    }, 0)\n\n    if (visibleFields === 1) {\n      return false\n    }\n\n    return fixFirstColumn\n  }\n\n  private get columnCount(): number {\n    const {\n      transformedDataBundle: {transformedData},\n    } = this.props\n    return _.get(transformedData, ['0', 'length'], 0)\n  }\n\n  private get computedColumnCount(): number {\n    if (this.fixFirstColumn) {\n      return this.columnCount - 1\n    }\n\n    return this.columnCount\n  }\n\n  private get tableWidth(): number {\n    let tableWidth = 0\n\n    if (this.gridContainer && this.gridContainer.clientWidth) {\n      tableWidth = this.gridContainer.clientWidth\n    }\n\n    return tableWidth\n  }\n\n  private get scrollToColRow(): {\n    scrollToRow: number | null\n    scrollToColumn: number | null\n  } {\n    const {\n      transformedDataBundle: {sortedTimeVals},\n    } = this.props\n    const {hoveredColumnIndex} = this.state\n    const {hoverTime} = this.props\n    const hoveringThisTable = hoveredColumnIndex !== NULL_ARRAY_INDEX\n\n    if (!hoverTime || hoveringThisTable || !this.isTimeVisible) {\n      return {scrollToColumn: 0, scrollToRow: -1}\n    }\n\n    const hoverIndex = findHoverTimeIndex(sortedTimeVals, hoverTime)\n    const scrollToColumn = this.isVerticalTimeAxis ? -1 : hoverIndex\n    const scrollToRow = this.isVerticalTimeAxis ? hoverIndex : null\n    return {scrollToRow, scrollToColumn}\n  }\n\n  private get isVerticalTimeAxis(): boolean {\n    const {\n      properties: {tableOptions},\n    } = this.props\n\n    const {verticalTimeAxis = DEFAULT_VERTICAL_TIME_AXIS} = tableOptions\n    return verticalTimeAxis\n  }\n\n  private get isTimeVisible(): boolean {\n    return _.get(this.timeField, 'visible', false)\n  }\n\n  private handleMultiGridMount = (ref: MultiGrid) => {\n    this.multiGrid = ref\n    ref.forceUpdate()\n  }\n\n  private handleHover = (e: React.MouseEvent<HTMLElement>) => {\n    const {dataset} = e.target as HTMLElement\n    const {onSetHoverTime} = this.props\n    const {\n      transformedDataBundle: {sortedTimeVals},\n    } = this.props\n\n    if (this.isVerticalTimeAxis && +dataset.rowIndex === 0) {\n      return\n    }\n    if (onSetHoverTime && this.isTimeVisible) {\n      const hoverTime = this.isVerticalTimeAxis\n        ? sortedTimeVals[dataset.rowIndex]\n        : sortedTimeVals[dataset.columnIndex]\n\n      onSetHoverTime(new Date(hoverTime).valueOf())\n    }\n    this.setState({\n      hoveredColumnIndex: +dataset.columnIndex,\n      hoveredRowIndex: +dataset.rowIndex,\n    })\n  }\n\n  private handleMouseLeave = (): void => {\n    const {onSetHoverTime} = this.props\n\n    if (onSetHoverTime) {\n      onSetHoverTime(0)\n    }\n    this.setState({\n      hoveredColumnIndex: NULL_ARRAY_INDEX,\n      hoveredRowIndex: NULL_ARRAY_INDEX,\n    })\n  }\n\n  private calculateColumnWidth = (columnSizerWidth: number) => (column: {\n    index: number\n  }): number => {\n    const {index} = column\n\n    const {\n      transformedDataBundle: {transformedData, columnWidths},\n    } = this.props\n\n    const {totalColumnWidths} = this.state\n    const columnLabel = transformedData[0][index]\n\n    const original = columnWidths[columnLabel] || 0\n\n    if (this.fixFirstColumn && index === 0) {\n      return original\n    }\n\n    if (this.tableWidth <= totalColumnWidths) {\n      return original\n    }\n\n    if (this.columnCount <= 1) {\n      return columnSizerWidth\n    }\n\n    const difference = this.tableWidth - totalColumnWidths\n    const increment = difference / this.computedColumnCount\n\n    return original + increment\n  }\n\n  private handleResize = () => {\n    this.forceUpdate()\n  }\n\n  private getCellData = (rowIndex, columnIndex) => {\n    const {\n      transformedDataBundle: {transformedData},\n    } = this.props\n    return transformedData[rowIndex][columnIndex]\n  }\n\n  private dataType = (rowIndex, columnIndex): string => {\n    const {\n      transformedDataBundle: {transformedData},\n      dataTypes,\n    } = this.props\n\n    if (rowIndex === 0) {\n      return 'n/a'\n    }\n\n    const columnName = transformedData[0][columnIndex]\n\n    return _.get(dataTypes, columnName, 'n/a')\n  }\n\n  private get timeFormatter() {\n    const {\n      timeZone,\n      properties: {timeFormat},\n    } = this.props\n\n    return timeFormatter({\n      timeZone: timeZone === 'Local' ? undefined : timeZone,\n      format: resolveTimeFormat(timeFormat),\n    })\n  }\n\n  private cellRenderer = (cellProps: CellRendererProps) => {\n    const {rowIndex, columnIndex} = cellProps\n    const {\n      transformedDataBundle: {sortOptions, resolvedFieldOptions},\n      onSort,\n      properties,\n    } = this.props\n    const {hoveredRowIndex, hoveredColumnIndex} = this.state\n    const {scrollToRow} = this.scrollToColRow\n    const hoverIndex = scrollToRow >= 0 ? scrollToRow : hoveredRowIndex\n\n    return (\n      <TableCell\n        {...cellProps}\n        sortOptions={sortOptions}\n        onHover={this.handleHover}\n        isTimeVisible={this.isTimeVisible}\n        data={this.getCellData(rowIndex, columnIndex)}\n        dataType={this.dataType(rowIndex, columnIndex)}\n        hoveredRowIndex={hoverIndex}\n        properties={properties}\n        resolvedFieldOptions={resolvedFieldOptions}\n        hoveredColumnIndex={hoveredColumnIndex}\n        isFirstColumnFixed={this.fixFirstColumn}\n        isVerticalTimeAxis={this.isVerticalTimeAxis}\n        onClickFieldName={onSort}\n        timeFormatter={this.timeFormatter}\n      />\n    )\n  }\n}\n\nexport default withHoverTime(TableGraphTable)\n","import React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\nimport {\n  ASCENDING,\n  DESCENDING,\n  DEFAULT_SORT_DIRECTION,\n} from 'src/shared/constants/tableGraph'\nimport {TableViewProperties, SortOptions, FluxTable, TimeZone} from 'src/types'\nimport TableGraphTransform from 'src/shared/components/tables/TableGraphTransform'\nimport TableGraphTable from 'src/shared/components/tables/TableGraphTable'\n\ninterface Props {\n  table: FluxTable\n  properties: TableViewProperties\n  timeZone: TimeZone\n}\n\ninterface State {\n  sortOptions: SortOptions\n}\n\n@ErrorHandling\nclass TableGraph extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    const sortField = _.get(\n      props,\n      'properties.tableOptions.sortBy.internalName'\n    )\n\n    this.state = {\n      sortOptions: {\n        field: sortField,\n        direction: ASCENDING,\n      },\n    }\n  }\n\n  public render() {\n    const {table, properties, timeZone} = this.props\n    const {sortOptions} = this.state\n    return (\n      <TableGraphTransform\n        data={table.data}\n        properties={properties}\n        dataTypes={table.dataTypes}\n        sortOptions={sortOptions}\n      >\n        {transformedDataBundle => (\n          <TableGraphTable\n            properties={properties}\n            dataTypes={table.dataTypes}\n            onSort={this.handleSetSort}\n            transformedDataBundle={transformedDataBundle}\n            timeZone={timeZone}\n          />\n        )}\n      </TableGraphTransform>\n    )\n  }\n\n  public handleSetSort = (fieldName: string) => {\n    this.setState(({sortOptions}) => {\n      const newSortOptions = {...sortOptions}\n      if (fieldName === sortOptions.field) {\n        newSortOptions.direction =\n          sortOptions.direction === ASCENDING ? DESCENDING : ASCENDING\n      } else {\n        newSortOptions.field = fieldName\n        newSortOptions.direction = DEFAULT_SORT_DIRECTION\n      }\n      return {sortOptions: newSortOptions}\n    })\n  }\n}\n\nexport default TableGraph\n","import React, {Fragment, PureComponent} from 'react'\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface GroupKey {\n  [x: string]: string\n}\n\ninterface Props {\n  name: string\n  id: string\n  isSelected: boolean\n  groupKey: GroupKey\n  onSelect: (name: string) => void\n}\n\n@ErrorHandling\nexport default class TableSidebarItem extends PureComponent<Props> {\n  public render() {\n    const {isSelected} = this.props\n    return (\n      <div\n        className={`time-machine-sidebar-item ${isSelected ? 'active' : ''}`}\n        onClick={this.handleClick}\n      >\n        {this.name}\n      </div>\n    )\n  }\n\n  private get name(): JSX.Element[] {\n    const keysIHate = ['_start', '_stop']\n    return Object.entries(this.props.groupKey)\n      .filter(([k]) => !keysIHate.includes(k))\n      .map(([k, v], i) => {\n        return (\n          <Fragment key={i}>\n            <span className=\"key\">{k}</span>\n            <span className=\"equals\">=</span>\n            <span className=\"value\">{v}</span>\n          </Fragment>\n        )\n      })\n  }\n\n  private handleClick = (): void => {\n    this.props.onSelect(this.props.name)\n  }\n}\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {Input, DapperScrollbars} from '@influxdata/clockface'\nimport TableSidebarItem from 'src/shared/components/tables/TableSidebarItem'\n\n// Types\nimport {IconFont} from '@influxdata/clockface'\nimport {FluxTable} from 'src/types'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  data: FluxTable[]\n  selectedTableName: string\n  onSelectTable: (name: string) => void\n}\n\ninterface State {\n  searchTerm: string\n}\n\n@ErrorHandling\nexport default class TableSidebar extends PureComponent<Props, State> {\n  public state = {\n    searchTerm: '',\n  }\n\n  public render() {\n    const {selectedTableName, onSelectTable} = this.props\n    const {searchTerm} = this.state\n\n    return (\n      <div className=\"time-machine-sidebar\">\n        {!this.isDataEmpty && (\n          <div className=\"time-machine-sidebar--heading\">\n            <Input\n              icon={IconFont.Search}\n              onChange={this.handleSearch}\n              placeholder=\"Filter tables...\"\n              value={searchTerm}\n              className=\"time-machine-sidebar--filter\"\n            />\n          </div>\n        )}\n        <DapperScrollbars\n          autoHide={true}\n          className=\"time-machine-sidebar--scroll\"\n        >\n          <div className=\"time-machine-sidebar--items\">\n            {this.filteredData.map(({groupKey, id, name}) => {\n              return (\n                <TableSidebarItem\n                  id={id}\n                  key={id}\n                  name={name}\n                  groupKey={groupKey}\n                  onSelect={onSelectTable}\n                  isSelected={name === selectedTableName}\n                />\n              )\n            })}\n          </div>\n        </DapperScrollbars>\n      </div>\n    )\n  }\n\n  private handleSearch = (e: ChangeEvent<HTMLInputElement>): void => {\n    this.setState({searchTerm: e.target.value})\n  }\n\n  get filteredData(): FluxTable[] {\n    const {data} = this.props\n    const {searchTerm} = this.state\n\n    return data.filter(d => d.name.includes(searchTerm))\n  }\n\n  get isDataEmpty(): boolean {\n    return _.isEmpty(this.props.data)\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport TableGraph from 'src/shared/components/tables/TableGraph'\nimport TableSidebar from 'src/shared/components/tables/TableSidebar'\nimport EmptyGraphMessage from 'src/shared/components/EmptyGraphMessage'\n\n// Actions\nimport {setFieldOptions as setFieldOptionsAction} from 'src/timeMachine/actions'\n\n// Utils\nimport {getDeep} from 'src/utils/wrappers'\n\n// Types\nimport {TableViewProperties, FluxTable, TimeZone} from 'src/types'\n\ninterface PassedProps {\n  tables: FluxTable[]\n  properties: TableViewProperties\n  timeZone: TimeZone\n}\n\ninterface DispatchProps {\n  setFieldOptions: typeof setFieldOptionsAction\n}\n\ntype Props = PassedProps & DispatchProps\n\ninterface State {\n  selectedTableName: string\n}\n\n@ErrorHandling\nclass TableGraphs extends PureComponent<Props, State> {\n  public state = {\n    selectedTableName: getDeep<string>(this, 'props.tables[0].name', null),\n  }\n\n  public render() {\n    const {tables, properties, timeZone} = this.props\n\n    return (\n      <div className=\"time-machine-tables\">\n        {this.showSidebar && (\n          <TableSidebar\n            data={tables}\n            selectedTableName={this.nameOfSelectedTable}\n            onSelectTable={this.handleSelectTable}\n          />\n        )}\n        {this.shouldShowTable && (\n          <TableGraph\n            key={this.nameOfSelectedTable}\n            table={this.selectedTable}\n            properties={properties}\n            timeZone={timeZone}\n          />\n        )}\n        {!this.hasData && (\n          <EmptyGraphMessage message=\"This table has no data\" />\n        )}\n      </div>\n    )\n  }\n\n  private get nameOfSelectedTable(): string {\n    const {tables} = this.props\n\n    const isNameInTables = tables.find(\n      t => t.name === this.state.selectedTableName\n    )\n\n    if (!isNameInTables) {\n      return this.defaultTableName\n    }\n\n    return this.state.selectedTableName\n  }\n\n  private get defaultTableName() {\n    return _.get(this.props.tables, '0.name', null)\n  }\n\n  private handleSelectTable = (selectedTableName: string): void => {\n    this.setState({selectedTableName})\n  }\n\n  private get showSidebar(): boolean {\n    return this.props.tables.length > 1\n  }\n\n  private get hasData(): boolean {\n    const {data} = this.selectedTable\n    return !!data && !!data.length\n  }\n\n  private get shouldShowTable(): boolean {\n    return !!this.props.tables && !!this.selectedTable\n  }\n\n  private get selectedTable(): FluxTable {\n    const {tables} = this.props\n    return tables.find(t => t.name === this.nameOfSelectedTable)\n  }\n}\n\nconst mdtp: DispatchProps = {\n  setFieldOptions: setFieldOptionsAction,\n}\n\nexport default connect<null, DispatchProps, PassedProps>(\n  null,\n  mdtp\n)(TableGraphs)\n","import React, {FunctionComponent} from 'react'\n\nconst GraphLoadingDots: FunctionComponent<{}> = () => {\n  return (\n    <div className=\"graph-panel__refreshing\">\n      <div />\n      <div />\n      <div />\n    </div>\n  )\n}\n\nexport default GraphLoadingDots\n","// Libraries\nimport {useMemo} from 'react'\nimport {NumericColumnData} from '@influxdata/giraffe'\nimport {isNull} from 'lodash'\n\n// Utils\nimport {useOneWayState} from 'src/shared/utils/useOneWayState'\nimport {extent} from 'src/shared/utils/vis'\nimport {getStartTime, getEndTime} from 'src/timeMachine/selectors/index'\n\n// Types\nimport {TimeRange} from 'src/types'\n/*\n  This hook helps map the domain setting stored for line graph to the\n  appropriate settings on a @influxdata/giraffe `Config` object.\n\n  If the domain setting is present, it should be used. If the domain setting is\n  not present, then the min/max values shown should be derived from the data\n  passed to the plot.\n*/\nexport const getValidRange = (\n  data: NumericColumnData = [],\n  timeRange: TimeRange | null\n) => {\n  const range = extent((data as number[]) || [])\n  if (isNull(timeRange)) {\n    return range\n  }\n  if (range && range.length >= 2) {\n    const startTime = getStartTime(timeRange)\n    const endTime = getEndTime(timeRange)\n    const start = Math.min(startTime, range[0])\n    const end = Math.max(endTime, range[1])\n    return [start, end]\n  }\n  return range\n}\n\nexport const useVisDomainSettings = (\n  storedDomain: number[],\n  data: NumericColumnData,\n  timeRange: TimeRange | null = null\n) => {\n  const initialDomain = useMemo(() => {\n    if (storedDomain) {\n      return storedDomain\n    }\n\n    return getValidRange(data, timeRange)\n  }, [storedDomain, data])\n\n  const [domain, setDomain] = useOneWayState(initialDomain)\n  const resetDomain = () => setDomain(initialDomain)\n\n  return [domain, setDomain, resetDomain]\n}\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {Config, Table} from '@influxdata/giraffe'\n\n// Components\nimport EmptyGraphMessage from 'src/shared/components/EmptyGraphMessage'\nimport GraphLoadingDots from 'src/shared/components/GraphLoadingDots'\n\n// Utils\nimport {useVisDomainSettings} from 'src/shared/utils/useVisDomainSettings'\nimport {getFormatter} from 'src/shared/utils/vis'\n\n// Constants\nimport {VIS_THEME} from 'src/shared/constants'\nimport {DEFAULT_LINE_COLORS} from 'src/shared/constants/graphColorPalettes'\nimport {INVALID_DATA_COPY} from 'src/shared/copy/cell'\n\n// Types\nimport {RemoteDataState, HistogramViewProperties, TimeZone} from 'src/types'\n\ninterface Props {\n  table: Table\n  loading: RemoteDataState\n  viewProperties: HistogramViewProperties\n  children: (config: Config) => JSX.Element\n  timeZone: TimeZone\n}\n\nconst HistogramPlot: FunctionComponent<Props> = ({\n  table,\n  loading,\n  children,\n  timeZone,\n  viewProperties: {\n    xColumn,\n    fillColumns,\n    binCount,\n    position,\n    colors,\n    xAxisLabel,\n    xDomain: storedXDomain,\n  },\n}) => {\n  const columnKeys = table.columnKeys\n\n  const [xDomain, onSetXDomain, onResetXDomain] = useVisDomainSettings(\n    storedXDomain,\n    table.getColumn(xColumn, 'number')\n  )\n\n  const isValidView =\n    xColumn &&\n    columnKeys.includes(xColumn) &&\n    fillColumns.every(col => columnKeys.includes(col))\n\n  if (!isValidView) {\n    return <EmptyGraphMessage message={INVALID_DATA_COPY} />\n  }\n\n  const colorHexes =\n    colors && colors.length\n      ? colors.map(c => c.hex)\n      : DEFAULT_LINE_COLORS.map(c => c.hex)\n\n  const xFormatter = getFormatter(table.getColumnType(xColumn), {timeZone})\n\n  const config: Config = {\n    ...VIS_THEME,\n    table,\n    xAxisLabel,\n    xDomain,\n    onSetXDomain,\n    onResetXDomain,\n    valueFormatters: {[xColumn]: xFormatter},\n    layers: [\n      {\n        type: 'histogram',\n        x: xColumn,\n        colors: colorHexes,\n        fill: fillColumns,\n        binCount,\n        position,\n      },\n    ],\n  }\n\n  return (\n    <>\n      {loading === RemoteDataState.Loading && <GraphLoadingDots />}\n      {children(config)}\n    </>\n  )\n}\n\nexport default HistogramPlot\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {Config, Table} from '@influxdata/giraffe'\n\n// Components\nimport EmptyGraphMessage from 'src/shared/components/EmptyGraphMessage'\nimport GraphLoadingDots from 'src/shared/components/GraphLoadingDots'\n\n// Utils\nimport {useVisDomainSettings} from 'src/shared/utils/useVisDomainSettings'\nimport {getFormatter} from 'src/shared/utils/vis'\n\n// Constants\nimport {VIS_THEME} from 'src/shared/constants'\nimport {DEFAULT_LINE_COLORS} from 'src/shared/constants/graphColorPalettes'\nimport {INVALID_DATA_COPY} from 'src/shared/copy/cell'\n\n// Types\nimport {\n  RemoteDataState,\n  HeatmapViewProperties,\n  TimeZone,\n  TimeRange,\n} from 'src/types'\n\ninterface Props {\n  loading: RemoteDataState\n  timeRange: TimeRange | null\n  table: Table\n  timeZone: TimeZone\n  viewProperties: HeatmapViewProperties\n  children: (config: Config) => JSX.Element\n}\n\nconst HeatmapPlot: FunctionComponent<Props> = ({\n  loading,\n  timeRange,\n  table,\n  timeZone,\n  viewProperties: {\n    xColumn,\n    yColumn,\n    xDomain: storedXDomain,\n    yDomain: storedYDomain,\n    xAxisLabel,\n    yAxisLabel,\n    xPrefix,\n    xSuffix,\n    yPrefix,\n    ySuffix,\n    colors: storedColors,\n    binSize,\n    timeFormat,\n  },\n  children,\n}) => {\n  const columnKeys = table.columnKeys\n\n  const [xDomain, onSetXDomain, onResetXDomain] = useVisDomainSettings(\n    storedXDomain,\n    table.getColumn(xColumn, 'number'),\n    timeRange\n  )\n\n  const [yDomain, onSetYDomain, onResetYDomain] = useVisDomainSettings(\n    storedYDomain,\n    table.getColumn(yColumn, 'number')\n  )\n\n  const isValidView =\n    xColumn &&\n    yColumn &&\n    columnKeys.includes(yColumn) &&\n    columnKeys.includes(xColumn)\n\n  if (!isValidView) {\n    return <EmptyGraphMessage message={INVALID_DATA_COPY} />\n  }\n\n  const colors: string[] =\n    storedColors && storedColors.length\n      ? storedColors\n      : DEFAULT_LINE_COLORS.map(c => c.hex)\n\n  const xFormatter = getFormatter(table.getColumnType(xColumn), {\n    prefix: xPrefix,\n    suffix: xSuffix,\n    timeZone,\n    timeFormat,\n  })\n\n  const yFormatter = getFormatter(table.getColumnType(yColumn), {\n    prefix: yPrefix,\n    suffix: ySuffix,\n    timeZone,\n    timeFormat,\n  })\n\n  const config: Config = {\n    ...VIS_THEME,\n    table,\n    xAxisLabel,\n    yAxisLabel,\n    xDomain,\n    onSetXDomain,\n    onResetXDomain,\n    yDomain,\n    onSetYDomain,\n    onResetYDomain,\n    valueFormatters: {\n      [xColumn]: xFormatter,\n      [yColumn]: yFormatter,\n    },\n    layers: [\n      {\n        type: 'heatmap',\n        x: xColumn,\n        y: yColumn,\n        colors,\n        binSize,\n      },\n    ],\n  }\n\n  return (\n    <>\n      {loading === RemoteDataState.Loading && <GraphLoadingDots />}\n      {children(config)}\n    </>\n  )\n}\n\nexport default HeatmapPlot\n","// Libraries\nimport {useMemo, FunctionComponent} from 'react'\nimport {flatMap} from 'lodash'\n\n// Utils\nimport {parseResponse} from 'src/shared/parsing/flux/response'\n\n// Types\nimport {FluxTable} from 'src/types'\n\ninterface Props {\n  files: string[]\n  children: (tables: FluxTable[]) => JSX.Element\n}\n\nconst FluxTablesTransform: FunctionComponent<Props> = ({files, children}) => {\n  const tables = useMemo(() => flatMap(files, parseResponse), [files])\n  return children(tables)\n}\n\nexport default FluxTablesTransform\n","// Libraries\nimport React, {FunctionComponent, useMemo} from 'react'\nimport {\n  Config,\n  Table,\n  DomainLabel,\n  lineTransform,\n  getDomainDataFromLines,\n} from '@influxdata/giraffe'\n\n// Components\nimport EmptyGraphMessage from 'src/shared/components/EmptyGraphMessage'\nimport GraphLoadingDots from 'src/shared/components/GraphLoadingDots'\n\n// Utils\nimport {useVisDomainSettings} from 'src/shared/utils/useVisDomainSettings'\nimport {\n  getFormatter,\n  geomToInterpolation,\n  filterNoisyColumns,\n  parseBounds,\n  defaultXColumn,\n  defaultYColumn,\n} from 'src/shared/utils/vis'\n\n// Constants\nimport {VIS_THEME} from 'src/shared/constants'\nimport {DEFAULT_LINE_COLORS} from 'src/shared/constants/graphColorPalettes'\nimport {INVALID_DATA_COPY} from 'src/shared/copy/cell'\n\n// Types\nimport {RemoteDataState, XYViewProperties, TimeZone, TimeRange} from 'src/types'\n\ninterface Props {\n  children: (config: Config) => JSX.Element\n  fluxGroupKeyUnion: string[]\n  loading: RemoteDataState\n  timeRange: TimeRange | null\n  table: Table\n  timeZone: TimeZone\n  viewProperties: XYViewProperties\n}\n\nconst XYPlot: FunctionComponent<Props> = ({\n  children,\n  fluxGroupKeyUnion,\n  loading,\n  timeRange,\n  table,\n  timeZone,\n  viewProperties: {\n    geom,\n    colors,\n    xColumn: storedXColumn,\n    yColumn: storedYColumn,\n    shadeBelow,\n    axes: {\n      x: {\n        label: xAxisLabel,\n        prefix: xTickPrefix,\n        suffix: xTickSuffix,\n        base: xTickBase,\n        bounds: xBounds,\n      },\n      y: {\n        label: yAxisLabel,\n        prefix: yTickPrefix,\n        suffix: yTickSuffix,\n        bounds: yBounds,\n        base: yTickBase,\n      },\n    },\n    position,\n    timeFormat,\n  },\n}) => {\n  const storedXDomain = useMemo(() => parseBounds(xBounds), [xBounds])\n  const storedYDomain = useMemo(() => parseBounds(yBounds), [yBounds])\n\n  const xColumn = storedXColumn || defaultXColumn(table)\n  const yColumn = storedYColumn || defaultYColumn(table)\n\n  const columnKeys = table.columnKeys\n\n  const isValidView =\n    xColumn &&\n    columnKeys.includes(xColumn) &&\n    yColumn &&\n    columnKeys.includes(yColumn)\n\n  if (!isValidView) {\n    return <EmptyGraphMessage message={INVALID_DATA_COPY} />\n  }\n\n  const colorHexes =\n    colors && colors.length\n      ? colors.map(c => c.hex)\n      : DEFAULT_LINE_COLORS.map(c => c.hex)\n\n  const interpolation = geomToInterpolation(geom)\n\n  const groupKey = [...fluxGroupKeyUnion, 'result']\n\n  const [xDomain, onSetXDomain, onResetXDomain] = useVisDomainSettings(\n    storedXDomain,\n    table.getColumn(xColumn, 'number'),\n    timeRange\n  )\n\n  const memoizedYColumnData = useMemo(() => {\n    if (position === 'stacked') {\n      const {lineData} = lineTransform(\n        table,\n        xColumn,\n        yColumn,\n        groupKey,\n        colorHexes,\n        position\n      )\n      return getDomainDataFromLines(lineData, DomainLabel.Y)\n    }\n    return table.getColumn(yColumn, 'number')\n  }, [table, yColumn, position])\n\n  const [yDomain, onSetYDomain, onResetYDomain] = useVisDomainSettings(\n    storedYDomain,\n    memoizedYColumnData\n  )\n\n  const legendColumns = filterNoisyColumns(\n    [...groupKey, xColumn, yColumn],\n    table\n  )\n\n  const xFormatter = getFormatter(table.getColumnType(xColumn), {\n    prefix: xTickPrefix,\n    suffix: xTickSuffix,\n    base: xTickBase,\n    timeZone,\n    timeFormat,\n  })\n\n  const yFormatter = getFormatter(table.getColumnType(yColumn), {\n    prefix: yTickPrefix,\n    suffix: yTickSuffix,\n    base: yTickBase,\n    timeZone,\n    timeFormat,\n  })\n\n  const config: Config = {\n    ...VIS_THEME,\n    table,\n    xAxisLabel,\n    yAxisLabel,\n    xDomain,\n    onSetXDomain,\n    onResetXDomain,\n    yDomain,\n    onSetYDomain,\n    onResetYDomain,\n    legendColumns,\n    valueFormatters: {\n      [xColumn]: xFormatter,\n      [yColumn]: yFormatter,\n    },\n    layers: [\n      {\n        type: 'line',\n        x: xColumn,\n        y: yColumn,\n        fill: groupKey,\n        interpolation,\n        position,\n        colors: colorHexes,\n        shadeBelow: !!shadeBelow,\n        shadeBelowOpacity: 0.08,\n      },\n    ],\n  }\n\n  return (\n    <>\n      {loading === RemoteDataState.Loading && <GraphLoadingDots />}\n      {children(config)}\n    </>\n  )\n}\n\nexport default XYPlot\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {Config, Table} from '@influxdata/giraffe'\n\n// Components\nimport EmptyGraphMessage from 'src/shared/components/EmptyGraphMessage'\nimport GraphLoadingDots from 'src/shared/components/GraphLoadingDots'\n\n// Utils\nimport {useVisDomainSettings} from 'src/shared/utils/useVisDomainSettings'\nimport {\n  getFormatter,\n  defaultXColumn,\n  defaultYColumn,\n} from 'src/shared/utils/vis'\n\n// Constants\nimport {VIS_THEME} from 'src/shared/constants'\nimport {DEFAULT_LINE_COLORS} from 'src/shared/constants/graphColorPalettes'\nimport {INVALID_DATA_COPY} from 'src/shared/copy/cell'\n\n// Types\nimport {\n  RemoteDataState,\n  ScatterViewProperties,\n  TimeZone,\n  TimeRange,\n} from 'src/types'\n\ninterface Props {\n  children: (config: Config) => JSX.Element\n  fluxGroupKeyUnion?: string[]\n  loading: RemoteDataState\n  timeRange: TimeRange | null\n  table: Table\n  timeZone: TimeZone\n  viewProperties: ScatterViewProperties\n}\n\nconst ScatterPlot: FunctionComponent<Props> = ({\n  children,\n  loading,\n  timeRange,\n  timeZone,\n  table,\n  viewProperties: {\n    xAxisLabel,\n    yAxisLabel,\n    xPrefix,\n    xSuffix,\n    yPrefix,\n    ySuffix,\n    fillColumns: storedFill,\n    symbolColumns: storedSymbol,\n    colors,\n    xDomain: storedXDomain,\n    yDomain: storedYDomain,\n    xColumn: storedXColumn,\n    yColumn: storedYColumn,\n    timeFormat,\n  },\n}) => {\n  const fillColumns = storedFill || []\n  const symbolColumns = storedSymbol || []\n\n  const xColumn = storedXColumn || defaultXColumn(table)\n  const yColumn = storedYColumn || defaultYColumn(table)\n\n  const columnKeys = table.columnKeys\n\n  const [xDomain, onSetXDomain, onResetXDomain] = useVisDomainSettings(\n    storedXDomain,\n    table.getColumn(xColumn, 'number'),\n    timeRange\n  )\n\n  const [yDomain, onSetYDomain, onResetYDomain] = useVisDomainSettings(\n    storedYDomain,\n    table.getColumn(yColumn, 'number')\n  )\n\n  const isValidView =\n    xColumn &&\n    columnKeys.includes(xColumn) &&\n    yColumn &&\n    columnKeys.includes(yColumn) &&\n    fillColumns.every(col => columnKeys.includes(col)) &&\n    symbolColumns.every(col => columnKeys.includes(col))\n\n  if (!isValidView) {\n    return <EmptyGraphMessage message={INVALID_DATA_COPY} />\n  }\n\n  const colorHexes =\n    colors && colors.length ? colors : DEFAULT_LINE_COLORS.map(c => c.hex)\n\n  const xFormatter = getFormatter(table.getColumnType(xColumn), {\n    prefix: xPrefix,\n    suffix: xSuffix,\n    timeZone,\n    timeFormat,\n  })\n\n  const yFormatter = getFormatter(table.getColumnType(yColumn), {\n    prefix: yPrefix,\n    suffix: ySuffix,\n    timeZone,\n    timeFormat,\n  })\n\n  const config: Config = {\n    ...VIS_THEME,\n    table,\n    xAxisLabel,\n    yAxisLabel,\n    xDomain,\n    onSetXDomain,\n    onResetXDomain,\n    yDomain,\n    onSetYDomain,\n    onResetYDomain,\n    valueFormatters: {\n      [xColumn]: xFormatter,\n      [yColumn]: yFormatter,\n    },\n    layers: [\n      {\n        type: 'scatter',\n        x: xColumn,\n        y: yColumn,\n        colors: colorHexes,\n        fill: fillColumns,\n        symbol: symbolColumns,\n      },\n    ],\n  }\n  return (\n    <>\n      {loading === RemoteDataState.Loading && <GraphLoadingDots />}\n      {children(config)}\n    </>\n  )\n}\n\nexport default ScatterPlot\n","import {range, flatMap, isFinite, isString} from 'lodash'\nimport {Table, NumericColumnData} from '@influxdata/giraffe'\n\n/*\n  Return a list of the maximum elements in `xs`, where the magnitude of each\n  element is computed using the passed function `d`.\n*/\nconst maxesBy = <X>(xs: X[], d: (x: X) => number): X[] => {\n  let maxes = []\n  let maxDist = -Infinity\n\n  for (const x of xs) {\n    const dist = d(x)\n\n    if (dist > maxDist) {\n      maxes = [x]\n      maxDist = dist\n    } else if (dist === maxDist && dist !== -Infinity) {\n      maxes.push(x)\n    }\n  }\n\n  return maxes\n}\n\nconst EXCLUDED_COLUMNS = new Set([\n  '_start',\n  '_stop',\n  '_time',\n  'table',\n  'result',\n  '',\n])\n\n/*\n  Determine if the values in a column should be considered in `latestValues`.\n*/\nconst isValueCol = (table: Table, colKey: string): boolean => {\n  const columnType = table.getColumnType(colKey)\n  const columnName = table.getColumnName(colKey)\n\n  return (\n    (columnType === 'number' ||\n      columnType === 'time' ||\n      columnType === 'string') &&\n    !EXCLUDED_COLUMNS.has(columnName)\n  )\n}\n\n/*\n  We sort the column keys that we pluck latest values from, so that:\n\n  - Columns named `_value` have precedence\n  - The returned latest values are in a somewhat stable order\n*/\nconst sortTableKeys = (keyA: string, keyB: string): number => {\n  if (keyA.includes('_value')) {\n    return -1\n  } else if (keyB.includes('_value')) {\n    return 1\n  } else {\n    return keyA.localeCompare(keyB)\n  }\n}\n\n/*\n  Return a list of the most recent numeric values present in a `Table`.\n\n  This utility searches any numeric column to find values, and uses the `_time`\n  column as their associated timestamp.\n\n  If the table only has one row, then a time column is not needed.\n*/\nexport const latestValues = (table: Table): number[] => {\n  const valueColsData = table.columnKeys\n    .sort((a, b) => sortTableKeys(a, b))\n    .filter(k => isValueCol(table, k))\n    .map(k => table.getColumn(k)) as number[][]\n\n  if (!valueColsData.length) {\n    return []\n  }\n\n  const columnKeys = table.columnKeys\n\n  // Fallback to `_stop` column if `_time` column missing otherwise return empty array.\n  let timeColData: NumericColumnData = []\n\n  if (columnKeys.includes('_time')) {\n    timeColData = table.getColumn('_time', 'number')\n  } else if (columnKeys.includes('_stop')) {\n    timeColData = table.getColumn('_stop', 'number')\n  }\n\n  if (!timeColData && table.length !== 1) {\n    return []\n  }\n\n  const d = (i: number) => {\n    const time = timeColData[i]\n\n    if (\n      time &&\n      valueColsData.some(colData => {\n        return isFinite(colData[i]) || isString(colData[i])\n      })\n    ) {\n      return time\n    }\n\n    return -Infinity\n  }\n\n  const latestRowIndices =\n    table.length === 1 ? [0] : maxesBy(range(table.length), d)\n\n  const latestValues = flatMap(latestRowIndices, i =>\n    valueColsData.map(colData => colData[i])\n  )\n\n  const definedLatestValues = latestValues.filter(\n    x => isFinite(x) || isString(x)\n  )\n\n  return definedLatestValues\n}\n","// Libraries\nimport React, {useMemo, FunctionComponent} from 'react'\nimport {Table} from '@influxdata/giraffe'\nimport {isString} from 'lodash'\n\n// Components\nimport EmptyGraphMessage from 'src/shared/components/EmptyGraphMessage'\n\n// Utils\nimport {latestValues as getLatestValues} from 'src/shared/utils/latestValues'\n\ninterface Props {\n  table: Table\n  children: (latestValue: number) => JSX.Element\n  allowString: boolean\n  // If `quiet` is set and a latest value can't be found, this component will\n  // display nothing instead of an empty graph error message\n  quiet?: boolean\n}\n\nconst LatestValueTransform: FunctionComponent<Props> = ({\n  table,\n  quiet = false,\n  children,\n  allowString,\n}) => {\n  const latestValues = useMemo(() => getLatestValues(table), [table])\n\n  if (latestValues.length === 0 && quiet) {\n    return null\n  }\n\n  if (latestValues.length === 0) {\n    return <EmptyGraphMessage message=\"No latest value found\" />\n  }\n\n  const latestValue = latestValues[0]\n\n  if (isString(latestValue) && !allowString && quiet) {\n    return null\n  }\n\n  if (isString(latestValue) && !allowString) {\n    return (\n      <EmptyGraphMessage message=\"String value cannot be displayed in this graph type\" />\n    )\n  }\n\n  return children(latestValue)\n}\n\nexport default LatestValueTransform\n","import * as React from 'react'\nimport {useCallback} from 'react'\n\nexport interface DragEvent {\n  x: number\n  y: number\n  type: 'dragStart' | 'drag' | 'dragStop'\n}\n\ntype MouseDownEvent = React.MouseEvent<Element, MouseEvent>\n\nexport const useDragBehavior = (\n  onDrag: (e: DragEvent) => any\n): {onMouseDown: (e: MouseDownEvent) => any} => {\n  const onMouseDown = useCallback(\n    (mouseDownEvent: MouseDownEvent) => {\n      mouseDownEvent.stopPropagation()\n\n      onDrag({\n        type: 'dragStart',\n        x: mouseDownEvent.pageX,\n        y: mouseDownEvent.pageY,\n      })\n\n      const onMouseMove = mouseMoveEvent => {\n        onDrag({\n          type: 'drag',\n          x: mouseMoveEvent.pageX,\n          y: mouseMoveEvent.pageY,\n        })\n      }\n\n      const onMouseUp = mouseUpEvent => {\n        document.removeEventListener('mousemove', onMouseMove)\n        document.removeEventListener('mouseup', onMouseUp)\n\n        onDrag({\n          type: 'dragStop',\n          x: mouseUpEvent.pageX,\n          y: mouseUpEvent.pageY,\n        })\n      }\n\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener('mouseup', onMouseUp)\n    },\n    [onDrag]\n  )\n\n  return {onMouseDown}\n}\n","// Libraries\nimport React, {FunctionComponent, MouseEvent} from 'react'\n\n// Utils\nimport {useDragBehavior, DragEvent} from 'src/shared/utils/useDragBehavior'\n\n// Types\nimport {CheckStatusLevel} from 'src/types'\n\ninterface Props {\n  level: CheckStatusLevel\n  y: number\n  onDrag: (e: DragEvent) => void\n  onMouseUp: (e: MouseEvent<HTMLDivElement>) => void\n}\n\nconst ThresholdMarker: FunctionComponent<Props> = ({\n  level,\n  y,\n  onDrag,\n  onMouseUp,\n}) => {\n  const dragTargetProps = useDragBehavior(onDrag)\n  const levelClass = `threshold-marker--${level.toLowerCase()}`\n  const style = {top: `${y}px`}\n\n  return (\n    <>\n      <div className={`threshold-marker--line ${levelClass}`} style={style} />\n      <div\n        className={`threshold-marker--handle ${levelClass}`}\n        style={style}\n        {...dragTargetProps}\n        onMouseUp={onMouseUp}\n      />\n    </>\n  )\n}\n\nexport default ThresholdMarker\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Types\nimport {CheckStatusLevel} from 'src/types'\n\ninterface Props {\n  level: CheckStatusLevel\n  top: number\n  height: number\n}\n\nconst ThresholdMarkerArea: FunctionComponent<Props> = ({\n  level,\n  top,\n  height,\n}) => (\n  <div\n    className={`threshold-marker--area threshold-marker--${level.toLowerCase()}`}\n    style={{\n      top: `${top}px`,\n      height: `${height}px`,\n    }}\n  />\n)\n\nexport default ThresholdMarkerArea\n","// Libraries\nimport React, {FunctionComponent, MouseEvent} from 'react'\nimport {Scale} from '@influxdata/giraffe'\n\n// Components\nimport ThresholdMarker from 'src/shared/components/ThresholdMarker'\nimport ThresholdMarkerArea from 'src/shared/components/ThresholdMarkerArea'\n\n// Utils\nimport {isInDomain, clamp} from 'src/shared/utils/vis'\nimport {DragEvent} from 'src/shared/utils/useDragBehavior'\n\n// Types\nimport {RangeThreshold} from 'src/types'\n\ninterface Props {\n  yScale: Scale<number, number>\n  yDomain: number[]\n  threshold: RangeThreshold\n  onChangeMaxPos: (e: DragEvent) => void\n  onChangeMinPos: (e: DragEvent) => void\n  onMouseUp: (e: MouseEvent<HTMLDivElement>) => void\n}\n\nconst RangeThresholdMarkers: FunctionComponent<Props> = ({\n  yScale,\n  yDomain,\n  threshold: {level, within, min, max},\n  onChangeMinPos,\n  onChangeMaxPos,\n  onMouseUp,\n}) => {\n  const minY = yScale(clamp(min, yDomain))\n  const maxY = yScale(clamp(max, yDomain))\n\n  return (\n    <>\n      {isInDomain(min, yDomain) && (\n        <ThresholdMarker\n          level={level}\n          y={minY}\n          onDrag={onChangeMinPos}\n          onMouseUp={onMouseUp}\n        />\n      )}\n      {isInDomain(max, yDomain) && (\n        <ThresholdMarker\n          level={level}\n          y={maxY}\n          onDrag={onChangeMaxPos}\n          onMouseUp={onMouseUp}\n        />\n      )}\n      {within ? (\n        <ThresholdMarkerArea level={level} top={maxY} height={minY - maxY} />\n      ) : (\n        <>\n          {max <= yDomain[1] && (\n            <ThresholdMarkerArea\n              level={level}\n              top={yScale(yDomain[1])}\n              height={maxY - yScale(yDomain[1])}\n            />\n          )}\n          {min >= yDomain[0] && (\n            <ThresholdMarkerArea\n              level={level}\n              top={minY}\n              height={yScale(yDomain[0]) - minY}\n            />\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default RangeThresholdMarkers\n","// Libraries\nimport React, {FunctionComponent, MouseEvent} from 'react'\nimport {Scale} from '@influxdata/giraffe'\n\n// Components\nimport ThresholdMarker from 'src/shared/components/ThresholdMarker'\nimport ThresholdMarkerArea from 'src/shared/components/ThresholdMarkerArea'\n\n// Utils\nimport {clamp, isInDomain} from 'src/shared/utils/vis'\nimport {DragEvent} from 'src/shared/utils/useDragBehavior'\n\n// Types\nimport {LesserThreshold} from 'src/types'\n\ninterface Props {\n  yScale: Scale<number, number>\n  yDomain: number[]\n  threshold: LesserThreshold\n  onChangePos: (e: DragEvent) => void\n  onMouseUp: (e: MouseEvent<HTMLDivElement>) => void\n}\n\nconst LessThresholdMarker: FunctionComponent<Props> = ({\n  yScale,\n  yDomain,\n  threshold: {level, value},\n  onChangePos,\n  onMouseUp,\n}) => {\n  const y = yScale(clamp(value, yDomain))\n\n  return (\n    <>\n      {isInDomain(value, yDomain) && (\n        <ThresholdMarker\n          level={level}\n          y={y}\n          onDrag={onChangePos}\n          onMouseUp={onMouseUp}\n        />\n      )}\n      {value >= yDomain[0] && (\n        <ThresholdMarkerArea\n          level={level}\n          top={y}\n          height={yScale(yDomain[0]) - y}\n        />\n      )}\n    </>\n  )\n}\n\nexport default LessThresholdMarker\n","// Libraries\nimport React, {FunctionComponent, MouseEvent} from 'react'\nimport {Scale} from '@influxdata/giraffe'\n\n// Components\nimport ThresholdMarker from 'src/shared/components/ThresholdMarker'\nimport ThresholdMarkerArea from 'src/shared/components/ThresholdMarkerArea'\n\n// Utils\nimport {isInDomain, clamp} from 'src/shared/utils/vis'\nimport {DragEvent} from 'src/shared/utils/useDragBehavior'\n\n// Types\nimport {GreaterThreshold} from 'src/types'\n\ninterface Props {\n  yScale: Scale<number, number>\n  yDomain: number[]\n  threshold: GreaterThreshold\n  onChangePos: (e: DragEvent) => void\n  onMouseUp: (e: MouseEvent<HTMLDivElement>) => void\n}\n\nconst GreaterThresholdMarker: FunctionComponent<Props> = ({\n  yDomain,\n  yScale,\n  threshold: {level, value},\n  onChangePos,\n  onMouseUp,\n}) => {\n  const y = yScale(clamp(value, yDomain))\n\n  return (\n    <>\n      {isInDomain(value, yDomain) && (\n        <ThresholdMarker\n          level={level}\n          y={y}\n          onDrag={onChangePos}\n          onMouseUp={onMouseUp}\n        />\n      )}\n      {value <= yDomain[1] && (\n        <ThresholdMarkerArea\n          level={level}\n          top={yScale(yDomain[1])}\n          height={y - yScale(yDomain[1])}\n        />\n      )}\n    </>\n  )\n}\n\nexport default GreaterThresholdMarker\n","// Libraries\nimport React, {useRef, useState, FunctionComponent} from 'react'\nimport {Scale} from '@influxdata/giraffe'\nimport {debounce, round} from 'lodash'\n\n// Components\nimport RangeThresholdMarkers from 'src/shared/components/RangeThresholdMarkers'\nimport LessThresholdMarker from 'src/shared/components/LessThresholdMarker'\nimport GreaterThresholdMarker from 'src/shared/components/GreaterThresholdMarker'\n\n// Utils\nimport {clamp} from 'src/shared/utils/vis'\n\n// Types\nimport {Threshold} from 'src/types'\n\n// Constants\nconst DRAGGABLE_THRESHOLD_PRECISION = 2\nconst ZOOM_IN_WAIT = 500\n\ninterface Props {\n  thresholds: Threshold[]\n  onSetThresholds: (newThresholds: Threshold[]) => void\n  yScale: Scale<number, number>\n  yDomain: number[]\n}\n\nconst ThresholdMarkers: FunctionComponent<Props> = ({\n  yScale,\n  yDomain,\n  thresholds,\n  onSetThresholds,\n}) => {\n  const originRef = useRef<HTMLDivElement>(null)\n\n  const nextZoomThreshold: {\n    index?: number\n    minValue?: number\n    maxValue?: number\n  } = {}\n\n  const [zoomThreshold, setZoomThreshold] = useState(nextZoomThreshold)\n\n  const zoomIn = () => {\n    onSetThresholds(\n      thresholds.map((t, i) => {\n        if (zoomThreshold.index !== i) {\n          return t\n        }\n        if (t.type === 'greater' || t.type === 'lesser') {\n          return {...t, max: t.value}\n        }\n        if (t.type === 'range') {\n          return {\n            ...t,\n            max: zoomThreshold.maxValue,\n            min: zoomThreshold.minValue,\n          }\n        }\n      })\n    )\n  }\n\n  const debouncedZoomIn = debounce(zoomIn, ZOOM_IN_WAIT)\n\n  const handleDrag = (index: number, field: string, y: number) => {\n    nextZoomThreshold.index = index\n    const yRelative = y - originRef.current.getBoundingClientRect().top\n    const yValue = clamp(yScale.invert(yRelative), yDomain)\n\n    const nextThreshold: Threshold = {\n      ...thresholds[index],\n      [field]: yValue,\n    }\n\n    if (\n      nextThreshold.type === 'range' &&\n      nextThreshold.min > nextThreshold.max\n    ) {\n      // If the user drags the min past the max or vice versa, we swap the\n      // values that are set so that the min is always at most the max\n      const maxValue = nextThreshold.min\n\n      nextThreshold.min = nextThreshold.max\n      nextThreshold.max = maxValue\n    }\n\n    const nextThresholds = thresholds.map((t, i) =>\n      i === index ? nextThreshold : t\n    )\n\n    const roundedThresholds = nextThresholds.map(nt => {\n      if (nt.type === 'greater' || nt.type === 'lesser') {\n        return {\n          ...nt,\n          value: round(nt.value, DRAGGABLE_THRESHOLD_PRECISION),\n          max: yDomain[1],\n        }\n      }\n\n      if (nt.type === 'range') {\n        if (field === 'maxValue') {\n          nextZoomThreshold.maxValue = round(\n            nt['maxValue'],\n            DRAGGABLE_THRESHOLD_PRECISION\n          )\n          nextZoomThreshold.minValue = round(\n            nt.min,\n            DRAGGABLE_THRESHOLD_PRECISION\n          )\n          return {\n            ...nt,\n            max: round(yDomain[1], DRAGGABLE_THRESHOLD_PRECISION),\n            min: round(nt.min, DRAGGABLE_THRESHOLD_PRECISION),\n          }\n        }\n        nextZoomThreshold.maxValue = round(\n          nt.max,\n          DRAGGABLE_THRESHOLD_PRECISION\n        )\n        nextZoomThreshold.minValue = round(\n          nt['minValue'],\n          DRAGGABLE_THRESHOLD_PRECISION\n        )\n        return {\n          ...nt,\n          max: round(nt.max, DRAGGABLE_THRESHOLD_PRECISION),\n          min: yDomain[0]\n            ? round(yDomain[0], DRAGGABLE_THRESHOLD_PRECISION)\n            : 0,\n        }\n      }\n    })\n    setZoomThreshold(nextZoomThreshold)\n    onSetThresholds(roundedThresholds)\n  }\n\n  return (\n    <div className=\"threshold-markers\" ref={originRef}>\n      {thresholds.map((threshold, index) => {\n        const onChangePos = ({y}) => handleDrag(index, 'value', y)\n        const onChangeMaxPos = ({y}) => handleDrag(index, 'maxValue', y)\n        const onChangeMinPos = ({y}) => handleDrag(index, 'minValue', y)\n\n        switch (threshold.type) {\n          case 'greater':\n            return (\n              <GreaterThresholdMarker\n                key={index}\n                yScale={yScale}\n                yDomain={yDomain}\n                threshold={threshold}\n                onChangePos={onChangePos}\n                onMouseUp={debouncedZoomIn}\n              />\n            )\n          case 'lesser':\n            return (\n              <LessThresholdMarker\n                key={index}\n                yScale={yScale}\n                yDomain={yDomain}\n                threshold={threshold}\n                onChangePos={onChangePos}\n                onMouseUp={debouncedZoomIn}\n              />\n            )\n          case 'range':\n            return (\n              <RangeThresholdMarkers\n                key={index}\n                yScale={yScale}\n                yDomain={yDomain}\n                threshold={{\n                  ...threshold,\n                  min: zoomThreshold.minValue\n                    ? zoomThreshold.minValue\n                    : round(threshold.min, DRAGGABLE_THRESHOLD_PRECISION),\n                  max: zoomThreshold.maxValue\n                    ? zoomThreshold.maxValue\n                    : round(threshold.max, DRAGGABLE_THRESHOLD_PRECISION),\n                }}\n                onChangeMinPos={onChangeMinPos}\n                onChangeMaxPos={onChangeMaxPos}\n                onMouseUp={debouncedZoomIn}\n              />\n            )\n          default:\n            throw new Error('Unknown threshold type in <ThresholdMarkers /> ')\n        }\n      })}\n    </div>\n  )\n}\n\nexport default ThresholdMarkers\n","// Libraries\nimport React, {useRef, useLayoutEffect, FunctionComponent} from 'react'\nimport {createPortal} from 'react-dom'\n\n// Constants\nimport {TOOLTIP_PORTAL_ID} from 'src/portals/TooltipPortal'\n\n// Types\nimport {ComponentColor} from '@influxdata/clockface'\n\ninterface Props {\n  triggerRect: DOMRect\n  children: JSX.Element\n  maxWidth?: number\n  color?: ComponentColor\n}\n\nconst BoxTooltip: FunctionComponent<Props> = ({\n  triggerRect,\n  children,\n  maxWidth = 300,\n  color = ComponentColor.Primary,\n}) => {\n  const ref = useRef<HTMLDivElement>(null)\n\n  // Position the tooltip after it has rendered, taking into account its size\n  useLayoutEffect(() => {\n    const el = ref.current\n\n    if (!el || !triggerRect) {\n      return\n    }\n\n    const rect = el.getBoundingClientRect()\n    let left = Math.floor(triggerRect.left - rect.width) - 2\n    // Hacky for #15518 (https://github.com/influxdata/influxdb/issues/15518)\n    // Long term solution would be to have getBoundingClientRect output\n    // to the left / ride side of the div based on boxtooltip location\n    let caretClassName = 'left'\n\n    // If the width of the tooltip causes it to overflow left\n    // position it to the right of the trigger element\n    if (left < 0) {\n      left = triggerRect.left + triggerRect.width\n      caretClassName = 'right'\n    }\n\n    // Attempt to position the vertical midpoint of tooltip next to the\n    // vertical midpoint of the trigger rectangle\n    let top = triggerRect.top + triggerRect.height / 2 - rect.height / 2\n\n    // If the tooltip overflows the top of the screen, align the top of\n    // the tooltip with the top of the screen\n    if (top < 0) {\n      top = 0\n    }\n\n    // If the tooltip overflows the bottom of the screen, align the bottom of\n    // the tooltip with the bottom of the screen\n    if (top + rect.height > window.innerHeight) {\n      top = window.innerHeight - rect.height\n    }\n\n    el.setAttribute(\n      'style',\n      `visibility: visible; top: ${top}px; left: ${left}px; max-width: ${maxWidth}px;`\n    )\n\n    // Position the caret (little arrow on the side of the tooltip) so that it\n    // points to the vertical midpoint of the trigger rectangle\n    const caretTop = triggerRect.top + triggerRect.height / 2 - top\n\n    el.querySelector('.box-tooltip--caret').setAttribute(\n      'style',\n      `top: ${caretTop}px;`\n    )\n\n    el.className = `box-tooltip  box-tooltip__${color} ${caretClassName}`\n  })\n\n  return createPortal(\n    <div\n      className={`box-tooltip box-tooltip__${color}`}\n      ref={ref}\n      style={{maxWidth}}\n    >\n      {children}\n      <div className=\"box-tooltip--caret-container\">\n        <div className=\"box-tooltip--caret\" />\n      </div>\n    </div>,\n    document.querySelector(`#${TOOLTIP_PORTAL_ID}`)\n  )\n}\n\nexport default BoxTooltip\n","// Libraries\nimport React, {FunctionComponent, Fragment, CSSProperties} from 'react'\n\n// Constants\nimport {LEVEL_COLORS} from 'src/alerting/constants'\n\ninterface EventsRow {\n  time: string\n  checkName: string\n  level: string\n  message: string\n}\n\ninterface Props {\n  events: EventsRow[]\n}\n\nconst EventMarkerTooltip: FunctionComponent<Props> = ({events}) => {\n  const columns = ['time', 'checkName', 'level', 'message']\n\n  const calculateLevelStyle = (\n    level: string,\n    colorize: boolean\n  ): CSSProperties => {\n    if (!colorize) {\n      return\n    }\n\n    const color = LEVEL_COLORS[`${level.toUpperCase()}`]\n    return {color}\n  }\n\n  return (\n    <div className=\"box-tooltip--contents event-marker-tooltip\">\n      <div className=\"event-marker-tooltip--table\">\n        {columns.map(colName => (\n          <div key={colName} className=\"event-marker-tooltip--column\">\n            <div className=\"event-marker-tooltip--header\">{colName}</div>\n            {events.map((event, i) => {\n              const {time, checkName, level} = event\n              return (\n                <Fragment key={`${time}-${checkName}-${level}-${i}`}>\n                  <div\n                    className=\"event-marker-tooltip--cell\"\n                    style={calculateLevelStyle(level, colName === 'level')}\n                  >\n                    {event[colName]}\n                  </div>\n                </Fragment>\n              )\n            })}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default EventMarkerTooltip\n","// Libraries\nimport React, {FC, useState, useRef} from 'react'\n\n// Utils\nimport {Scale} from '@influxdata/giraffe'\nimport {isInDomain} from 'src/shared/utils/vis'\n\n// Components\nimport BoxTooltip from './BoxTooltip'\n\n//Types\nimport {StatusRow, LowercaseCheckStatusLevel} from 'src/types'\nimport EventMarkerTooltip from './EventMarkerTooltip'\n\ninterface Props {\n  events: StatusRow[]\n  xScale: Scale<number, number>\n  xDomain: number[]\n  xFormatter: (x: number) => string\n}\n\nconst findMaxLevel = (event: StatusRow[]) => {\n  const levels: LowercaseCheckStatusLevel[] = [\n    'crit',\n    'warn',\n    'info',\n    'ok',\n    'unknown',\n  ]\n  const eventLevels = event.map(e => e.level)\n  for (const l of levels) {\n    if (eventLevels.includes(l)) {\n      return l\n    }\n  }\n  return 'unknown'\n}\n\nconst EventMarker: FC<Props> = ({xScale, xDomain, events, xFormatter}) => {\n  const trigger = useRef<HTMLDivElement>(null)\n\n  const [tooltipVisible, setTooltipVisible] = useState(false)\n  let triggerRect: DOMRect = null\n\n  if (trigger.current) {\n    triggerRect = trigger.current.getBoundingClientRect() as DOMRect\n  }\n\n  const {time} = events[0]\n  const x = Math.ceil(xScale(time))\n  const style = {left: `${x}px`}\n\n  const level = findMaxLevel(events)\n  const markerClass = `event-marker--line__${level.toLowerCase()}`\n\n  const formattedEvents = events.map(e => ({...e, time: xFormatter(e.time)}))\n\n  return (\n    isInDomain(time, xDomain) && (\n      <>\n        <div className={markerClass} style={style}>\n          <div\n            className=\"event-marker--line-rect\"\n            ref={trigger}\n            onMouseOver={() => {\n              setTooltipVisible(true)\n            }}\n            onMouseOut={() => {\n              setTooltipVisible(false)\n            }}\n          />\n        </div>\n        {tooltipVisible && trigger.current && (\n          <BoxTooltip triggerRect={triggerRect} maxWidth={500}>\n            <EventMarkerTooltip events={formattedEvents} />\n          </BoxTooltip>\n        )}\n      </>\n    )\n  )\n}\n\nexport default EventMarker\n","// Libraries\nimport React, {FunctionComponent, useState, useEffect} from 'react'\n\n// Components\nimport EventMarker from 'src/shared/components/EventMarker'\n\n// Types\nimport {Scale} from '@influxdata/giraffe'\nimport {StatusRow} from 'src/types'\nimport {IconFont, Icon} from '@influxdata/clockface'\nimport {LEVEL_COLORS} from 'src/alerting/constants'\n\ninterface Props {\n  eventsArray: StatusRow[][]\n  xScale: Scale<number, number>\n  xDomain: number[]\n  xFormatter: (x: number) => string\n}\n\nconst filterEvents = (\n  eventsArray: StatusRow[][],\n  isOkVisible: boolean,\n  isInfoVisible: boolean,\n  isWarnVisible: boolean,\n  isCritVisible: boolean,\n  isUnknownVisible: boolean\n): StatusRow[][] => {\n  return eventsArray\n    .map(events => {\n      return (\n        events.length &&\n        events.filter(e => {\n          return (\n            (e.level === 'ok' && isOkVisible) ||\n            (e.level === 'info' && isInfoVisible) ||\n            (e.level === 'warn' && isWarnVisible) ||\n            (e.level === 'crit' && isCritVisible) ||\n            (e.level === 'unknown' && isUnknownVisible)\n          )\n        })\n      )\n    })\n    .filter(events => events && events.length)\n}\n\nconst EventMarkers: FunctionComponent<Props> = ({\n  xScale,\n  xDomain,\n  eventsArray,\n  xFormatter,\n}) => {\n  const [isOkVisible, setOkVisibility] = useState(false)\n  const [isInfoVisible, setInfoVisibility] = useState(true)\n  const [isWarnVisible, setWarnVisibility] = useState(true)\n  const [isCritVisible, setCritVisibility] = useState(true)\n  const [isUnknownVisible, setUnknownVisibility] = useState(true)\n\n  const [filteredEventsArray, setFilteredEventsArray] = useState(\n    filterEvents(\n      eventsArray,\n      isOkVisible,\n      isInfoVisible,\n      isWarnVisible,\n      isCritVisible,\n      isUnknownVisible\n    )\n  )\n\n  useEffect(() => {\n    setFilteredEventsArray(\n      filterEvents(\n        eventsArray,\n        isOkVisible,\n        isInfoVisible,\n        isWarnVisible,\n        isCritVisible,\n        isUnknownVisible\n      )\n    )\n  }, [\n    eventsArray,\n    isOkVisible,\n    isInfoVisible,\n    isWarnVisible,\n    isCritVisible,\n    isUnknownVisible,\n  ])\n\n  const iconGlyph = (visible: boolean) => {\n    return visible ? IconFont.EyeOpen : IconFont.EyeClosed\n  }\n\n  const eventVisToggle = (\n    <div className=\"event-marker--vis-selector\">\n      Toggle markers:\n      <span\n        onClick={() => setOkVisibility(!isOkVisible)}\n        data-testid=\"event-marker-vis-toggle-ok\"\n      >\n        <Icon\n          className=\"event-marker--vis-icon\"\n          style={{color: LEVEL_COLORS['OK']}}\n          glyph={iconGlyph(isOkVisible)}\n          testID=\"event-marker-vis-icon-ok\"\n        />\n      </span>\n      <span\n        onClick={() => setWarnVisibility(!isWarnVisible)}\n        data-testid=\"event-marker-vis-toggle-warn\"\n      >\n        <Icon\n          className=\"event-marker--vis-icon\"\n          style={{color: LEVEL_COLORS['WARN']}}\n          glyph={iconGlyph(isWarnVisible)}\n        />\n      </span>\n      <span\n        onClick={() => setInfoVisibility(!isInfoVisible)}\n        data-testid=\"event-marker-vis-toggle-info\"\n      >\n        <Icon\n          className=\"event-marker--vis-icon\"\n          style={{color: LEVEL_COLORS['INFO']}}\n          glyph={iconGlyph(isInfoVisible)}\n        />\n      </span>\n      <span\n        onClick={() => setCritVisibility(!isCritVisible)}\n        data-testid=\"event-marker-vis-toggle-crit\"\n      >\n        <Icon\n          className=\"event-marker--vis-icon\"\n          style={{color: LEVEL_COLORS['CRIT']}}\n          glyph={iconGlyph(isCritVisible)}\n        />\n      </span>\n      <span\n        onClick={() => setUnknownVisibility(!isUnknownVisible)}\n        data-testid=\"event-marker-vis-toggle-unknown\"\n      >\n        <Icon\n          className=\"event-marker--vis-icon\"\n          style={{color: LEVEL_COLORS['UNKNOWN']}}\n          glyph={iconGlyph(isUnknownVisible)}\n        />\n      </span>\n    </div>\n  )\n\n  return (\n    <>\n      <div className=\"event-markers\" data-testid=\"event-markers\">\n        {filteredEventsArray.map((events, index) => {\n          return (\n            <EventMarker\n              key={index}\n              xScale={xScale}\n              xDomain={xDomain}\n              events={events}\n              xFormatter={xFormatter}\n            />\n          )\n        })}\n      </div>\n      {eventVisToggle}\n    </>\n  )\n}\n\nexport default EventMarkers\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {Config, Table} from '@influxdata/giraffe'\nimport {flatMap} from 'lodash'\n\n// Components\nimport EmptyGraphMessage from 'src/shared/components/EmptyGraphMessage'\nimport GraphLoadingDots from 'src/shared/components/GraphLoadingDots'\nimport ThresholdMarkers from 'src/shared/components/ThresholdMarkers'\nimport EventMarkers from 'src/shared/components/EventMarkers'\n\n// Utils\nimport {getFormatter, filterNoisyColumns} from 'src/shared/utils/vis'\n\n// Constants\nimport {VIS_THEME} from 'src/shared/constants'\nimport {INVALID_DATA_COPY} from 'src/shared/copy/cell'\n\n// Types\nimport {\n  RemoteDataState,\n  CheckViewProperties,\n  TimeZone,\n  CheckType,\n  StatusRow,\n  Threshold,\n} from 'src/types'\nimport {useCheckYDomain} from 'src/alerting/utils/vis'\nimport {updateThresholds} from 'src/alerting/actions/alertBuilder'\n\nconst X_COLUMN = '_time'\nconst Y_COLUMN = '_value'\n\ninterface DispatchProps {\n  onUpdateThresholds: typeof updateThresholds\n}\n\ninterface OwnProps {\n  table: Table\n  checkType: CheckType\n  thresholds: Threshold[]\n  fluxGroupKeyUnion: string[]\n  loading: RemoteDataState\n  timeZone: TimeZone\n  viewProperties: CheckViewProperties\n  children: (config: Config) => JSX.Element\n  statuses: StatusRow[][]\n}\n\ntype Props = OwnProps & DispatchProps\n\nconst CheckPlot: FunctionComponent<Props> = ({\n  table,\n  fluxGroupKeyUnion,\n  loading,\n  children,\n  timeZone,\n  statuses,\n  checkType,\n  thresholds,\n  onUpdateThresholds,\n  viewProperties: {colors},\n}) => {\n  const [yDomain, onSetYDomain, onResetYDomain] = useCheckYDomain(\n    table.getColumn(Y_COLUMN, 'number'),\n    thresholds\n  )\n\n  const columnKeys = table.columnKeys\n  const isValidView =\n    columnKeys.includes(X_COLUMN) && columnKeys.includes(Y_COLUMN)\n\n  if (!isValidView) {\n    return <EmptyGraphMessage message={INVALID_DATA_COPY} />\n  }\n\n  const groupKey = [...fluxGroupKeyUnion, 'result']\n\n  const xFormatter = getFormatter(table.getColumnType(X_COLUMN), {\n    timeZone,\n    trimZeros: false,\n  })\n\n  const yFormatter = getFormatter(table.getColumnType(Y_COLUMN), {\n    timeZone,\n    trimZeros: false,\n  })\n\n  const legendColumns = filterNoisyColumns(\n    [...groupKey, X_COLUMN, Y_COLUMN],\n    table\n  )\n\n  const thresholdValues = flatMap(thresholds, (t: any) => [\n    t.value,\n    t.minValue,\n    t.maxValue,\n  ]).filter(t => t !== undefined)\n\n  const yTicks = thresholdValues.length ? thresholdValues : null\n\n  const config: Config = {\n    ...VIS_THEME,\n    table,\n    legendColumns,\n    yTicks,\n    yDomain,\n    onSetYDomain,\n    onResetYDomain,\n    valueFormatters: {\n      [X_COLUMN]: xFormatter,\n      [Y_COLUMN]: yFormatter,\n    },\n    layers: [\n      {\n        type: 'line',\n        x: X_COLUMN,\n        y: Y_COLUMN,\n        fill: groupKey,\n        interpolation: 'linear',\n        colors,\n      },\n      {\n        type: 'custom',\n        render: ({yScale, yDomain}) => (\n          <ThresholdMarkers\n            key=\"thresholds\"\n            thresholds={checkType === 'threshold' ? thresholds : []}\n            onSetThresholds={onUpdateThresholds}\n            yScale={yScale}\n            yDomain={yDomain}\n          />\n        ),\n      },\n      {\n        type: 'custom',\n        render: ({xScale, xDomain}) => (\n          <EventMarkers\n            key=\"events\"\n            eventsArray={statuses}\n            xScale={xScale}\n            xDomain={xDomain}\n            xFormatter={xFormatter}\n          />\n        ),\n      },\n    ],\n  }\n\n  return (\n    <div className=\"time-series-container time-series-container--alert-check\">\n      {loading === RemoteDataState.Loading && <GraphLoadingDots />}\n      {children(config)}\n    </div>\n  )\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateThresholds: updateThresholds,\n}\n\nexport default connect<{}, DispatchProps, {}>(\n  null,\n  mdtp\n)(CheckPlot)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {Plot, FromFluxResult} from '@influxdata/giraffe'\n\n// Components\nimport GaugeChart from 'src/shared/components/GaugeChart'\nimport SingleStat from 'src/shared/components/SingleStat'\nimport TableGraphs from 'src/shared/components/tables/TableGraphs'\nimport HistogramPlot from 'src/shared/components/HistogramPlot'\nimport HeatmapPlot from 'src/shared/components/HeatmapPlot'\nimport FluxTablesTransform from 'src/shared/components/FluxTablesTransform'\nimport XYPlot from 'src/shared/components/XYPlot'\nimport ScatterPlot from 'src/shared/components/ScatterPlot'\nimport LatestValueTransform from 'src/shared/components/LatestValueTransform'\nimport CheckPlot from 'src/shared/components/CheckPlot'\n\n// Types\nimport {\n  CheckViewProperties,\n  QueryViewProperties,\n  RemoteDataState,\n  SingleStatViewProperties,\n  StatusRow,\n  TimeZone,\n  XYViewProperties,\n  TimeRange,\n  CheckType,\n  Threshold,\n} from 'src/types'\n\ninterface Props {\n  giraffeResult: FromFluxResult\n  files: string[]\n  loading: RemoteDataState\n  properties: QueryViewProperties | CheckViewProperties\n  timeZone: TimeZone\n  statuses: StatusRow[][]\n  timeRange: TimeRange | null\n  checkType?: CheckType\n  checkThresholds?: Threshold[]\n}\n\nconst ViewSwitcher: FunctionComponent<Props> = ({\n  properties,\n  loading,\n  timeRange,\n  files,\n  giraffeResult: {table, fluxGroupKeyUnion},\n  timeZone,\n  statuses,\n  checkType = null,\n  checkThresholds = [],\n}) => {\n  switch (properties.type) {\n    case 'single-stat':\n      return (\n        <LatestValueTransform table={table} allowString={true}>\n          {latestValue => (\n            <SingleStat stat={latestValue} properties={properties} />\n          )}\n        </LatestValueTransform>\n      )\n\n    case 'table':\n      return (\n        <FluxTablesTransform files={files}>\n          {tables => (\n            <TableGraphs\n              tables={tables}\n              properties={properties}\n              timeZone={timeZone}\n            />\n          )}\n        </FluxTablesTransform>\n      )\n\n    case 'gauge':\n      return (\n        <LatestValueTransform table={table} allowString={false}>\n          {latestValue => (\n            <GaugeChart value={latestValue} properties={properties} />\n          )}\n        </LatestValueTransform>\n      )\n    case 'xy':\n      return (\n        <XYPlot\n          timeRange={timeRange}\n          fluxGroupKeyUnion={fluxGroupKeyUnion}\n          loading={loading}\n          table={table}\n          timeZone={timeZone}\n          viewProperties={properties}\n        >\n          {config => <Plot config={config} />}\n        </XYPlot>\n      )\n\n    case 'line-plus-single-stat':\n      const xyProperties = {\n        ...properties,\n        colors: properties.colors.filter(c => c.type === 'scale'),\n        type: 'xy' as 'xy',\n        geom: 'line' as 'line',\n      } as XYViewProperties\n\n      const singleStatProperties = {\n        ...properties,\n        tickPrefix: '',\n        tickSuffix: '',\n        colors: properties.colors.filter(c => c.type !== 'scale'),\n        type: 'single-stat',\n      } as SingleStatViewProperties\n\n      return (\n        <XYPlot\n          timeRange={timeRange}\n          fluxGroupKeyUnion={fluxGroupKeyUnion}\n          loading={loading}\n          table={table}\n          timeZone={timeZone}\n          viewProperties={xyProperties}\n        >\n          {config => (\n            <Plot config={config}>\n              <LatestValueTransform\n                table={config.table}\n                quiet={true}\n                allowString={false}\n              >\n                {latestValue => (\n                  <SingleStat\n                    stat={latestValue}\n                    properties={singleStatProperties}\n                  />\n                )}\n              </LatestValueTransform>\n            </Plot>\n          )}\n        </XYPlot>\n      )\n\n    case 'histogram':\n      return (\n        <HistogramPlot\n          table={table}\n          loading={loading}\n          timeZone={timeZone}\n          viewProperties={properties}\n        >\n          {config => <Plot config={config} />}\n        </HistogramPlot>\n      )\n\n    case 'heatmap':\n      return (\n        <HeatmapPlot\n          timeRange={timeRange}\n          loading={loading}\n          table={table}\n          timeZone={timeZone}\n          viewProperties={properties}\n        >\n          {config => <Plot config={config} />}\n        </HeatmapPlot>\n      )\n\n    case 'scatter':\n      return (\n        <ScatterPlot\n          timeRange={timeRange}\n          loading={loading}\n          table={table}\n          viewProperties={properties}\n          timeZone={timeZone}\n        >\n          {config => <Plot config={config} />}\n        </ScatterPlot>\n      )\n\n    case 'check':\n      return (\n        <CheckPlot\n          checkType={checkType}\n          thresholds={checkThresholds}\n          table={table}\n          fluxGroupKeyUnion={fluxGroupKeyUnion}\n          loading={loading}\n          timeZone={timeZone}\n          viewProperties={properties}\n          statuses={statuses}\n        >\n          {config => <Plot config={config} />}\n        </CheckPlot>\n      )\n\n    default:\n      throw new Error('Unknown view type in <ViewSwitcher /> ')\n  }\n}\n\nexport default ViewSwitcher\n","type func = (...args: any[]) => any\n\nexport class AutoRefresher {\n  public subscribers: func[] = []\n\n  private intervalID: NodeJS.Timer\n\n  public subscribe(fn: func) {\n    this.subscribers = [...this.subscribers, fn]\n  }\n\n  public unsubscribe(fn: func) {\n    this.subscribers = this.subscribers.filter(f => f !== fn)\n  }\n\n  public poll(refreshMs: number) {\n    this.clearInterval()\n\n    if (refreshMs) {\n      this.intervalID = setInterval(this.refresh, refreshMs)\n    }\n  }\n\n  public stopPolling() {\n    this.clearInterval()\n  }\n\n  private clearInterval() {\n    if (!this.intervalID) {\n      return\n    }\n\n    clearInterval(this.intervalID)\n    this.intervalID = null\n  }\n\n  private refresh = () => {\n    this.subscribers.forEach(fn => fn())\n  }\n}\n\nexport const GlobalAutoRefresher = new AutoRefresher()\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport TimeSeries from 'src/shared/components/TimeSeries'\nimport EmptyQueryView, {ErrorFormat} from 'src/shared/components/EmptyQueryView'\nimport ViewSwitcher from 'src/shared/components/ViewSwitcher'\n\n// Utils\nimport {GlobalAutoRefresher} from 'src/utils/AutoRefresher'\nimport {getTimeRangeVars} from 'src/variables/utils/getTimeRangeVars'\nimport {getTimeRangeByDashboardID} from 'src/dashboards/selectors'\nimport {\n  getVariableAssignments,\n  getDashboardValuesStatus,\n} from 'src/variables/selectors'\nimport {checkResultsLength} from 'src/shared/utils/vis'\nimport {getActiveTimeRange} from 'src/timeMachine/selectors/index'\n\n// Types\nimport {\n  TimeRange,\n  RemoteDataState,\n  TimeZone,\n  AppState,\n  DashboardQuery,\n  VariableAssignment,\n  QueryViewProperties,\n} from 'src/types'\n\ninterface OwnProps {\n  manualRefresh: number\n  properties: QueryViewProperties\n}\n\ninterface StateProps {\n  timeRange: TimeRange\n  ranges: TimeRange | null\n  timeZone: TimeZone\n  variableAssignments: VariableAssignment[]\n  variablesStatus: RemoteDataState\n}\n\ninterface State {\n  submitToken: number\n}\n\ntype Props = OwnProps & StateProps\n\nclass RefreshingView extends PureComponent<Props, State> {\n  public static defaultProps = {\n    inView: true,\n    manualRefresh: 0,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {submitToken: 0}\n  }\n\n  public componentDidMount() {\n    GlobalAutoRefresher.subscribe(this.incrementSubmitToken)\n  }\n\n  public componentWillUnmount() {\n    GlobalAutoRefresher.unsubscribe(this.incrementSubmitToken)\n  }\n\n  public render() {\n    const {ranges, properties, manualRefresh, timeZone} = this.props\n    const {submitToken} = this.state\n\n    return (\n      <TimeSeries\n        submitToken={submitToken}\n        queries={this.queries}\n        key={manualRefresh}\n        variables={this.variableAssignments}\n      >\n        {({\n          giraffeResult,\n          files,\n          loading,\n          errorMessage,\n          isInitialFetch,\n          statuses,\n        }) => {\n          return (\n            <EmptyQueryView\n              errorFormat={ErrorFormat.Tooltip}\n              errorMessage={errorMessage}\n              hasResults={checkResultsLength(giraffeResult)}\n              loading={loading}\n              isInitialFetch={isInitialFetch}\n              queries={this.queries}\n              fallbackNote={this.fallbackNote}\n            >\n              <ViewSwitcher\n                files={files}\n                giraffeResult={giraffeResult}\n                loading={loading}\n                properties={properties}\n                timeRange={ranges}\n                statuses={statuses}\n                timeZone={timeZone}\n              />\n            </EmptyQueryView>\n          )\n        }}\n      </TimeSeries>\n    )\n  }\n\n  private get queries(): DashboardQuery[] {\n    const {properties} = this.props\n\n    switch (properties.type) {\n      case 'single-stat':\n      case 'gauge':\n        return [properties.queries[0]]\n      default:\n        return properties.queries\n    }\n  }\n\n  private get variableAssignments(): VariableAssignment[] {\n    const {timeRange, variableAssignments} = this.props\n\n    return [...variableAssignments, ...getTimeRangeVars(timeRange)]\n  }\n\n  private get fallbackNote(): string {\n    const {properties} = this.props\n\n    switch (properties.type) {\n      case 'check':\n        return null\n      default:\n        const {note, showNoteWhenEmpty} = properties\n\n        return showNoteWhenEmpty ? note : null\n    }\n  }\n\n  private incrementSubmitToken = () => {\n    this.setState({submitToken: Date.now()})\n  }\n}\n\nconst mstp = (state: AppState, ownProps: OwnProps): StateProps => {\n  const dashboard = state.currentDashboard.id\n  const variableAssignments = getVariableAssignments(state, dashboard)\n  const timeRange = getTimeRangeByDashboardID(state, dashboard)\n  const valuesStatus = getDashboardValuesStatus(state, dashboard)\n  const ranges = getActiveTimeRange(timeRange, ownProps.properties.queries)\n  const timeZone = state.app.persisted.timeZone\n\n  return {\n    timeRange,\n    ranges,\n    timeZone,\n    variableAssignments,\n    variablesStatus: valuesStatus,\n  }\n}\n\nexport default connect<StateProps, {}, OwnProps>(mstp)(RefreshingView)\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport CellHeader from 'src/shared/components/cells/CellHeader'\nimport CellContext from 'src/shared/components/cells/CellContext'\nimport Markdown from 'src/shared/components/views/Markdown'\nimport RefreshingView from 'src/shared/components/RefreshingView'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport EmptyGraphMessage from 'src/shared/components/EmptyGraphMessage'\n\n// Utils\nimport {getByID} from 'src/resources/selectors'\n\n// Types\nimport {RemoteDataState, AppState, View, Cell, ResourceType} from 'src/types'\n\ninterface StateProps {\n  view: View\n}\n\ninterface OwnProps {\n  cell: Cell\n  manualRefresh: number\n}\n\ninterface State {\n  inView: boolean\n}\n\ntype Props = StateProps & OwnProps\n\n@ErrorHandling\nclass CellComponent extends Component<Props, State> {\n  public render() {\n    const {cell, view} = this.props\n\n    return (\n      <>\n        <CellHeader name={this.viewName} note={this.viewNote}>\n          <CellContext\n            cell={cell}\n            view={view}\n            onCSVDownload={this.handleCSVDownload}\n          />\n        </CellHeader>\n        <div className=\"cell--view\" data-testid=\"cell--view-empty\">\n          {this.view}\n        </div>\n      </>\n    )\n  }\n\n  private get viewName(): string {\n    const {view} = this.props\n\n    if (view && view.properties && view.properties.type !== 'markdown') {\n      return view.name\n    }\n\n    return 'Note'\n  }\n\n  private get viewNote(): string {\n    const {view} = this.props\n\n    if (!view || !view.properties || !view.properties.type) {\n      return ''\n    }\n\n    const isMarkdownView = view.properties.type === 'markdown'\n    const showNoteWhenEmpty = get(view, 'properties.showNoteWhenEmpty')\n\n    if (isMarkdownView || showNoteWhenEmpty) {\n      return ''\n    }\n\n    return get(view, 'properties.note', '')\n  }\n\n  private get view(): JSX.Element {\n    const {manualRefresh, view} = this.props\n\n    if (!view || view.status !== RemoteDataState.Done) {\n      return <EmptyGraphMessage message=\"Loading...\" />\n    }\n\n    if (!view.properties) {\n      return null\n    }\n\n    if (view.properties.type === 'markdown') {\n      return <Markdown text={view.properties.note} />\n    }\n\n    return (\n      <RefreshingView\n        properties={view.properties}\n        manualRefresh={manualRefresh}\n      />\n    )\n  }\n\n  private handleCSVDownload = (): void => {\n    throw new Error('csv download not implemented')\n  }\n}\n\nconst mstp = (state: AppState, ownProps: OwnProps): StateProps => {\n  const view = getByID<View>(state, ResourceType.Views, ownProps.cell.id)\n\n  return {view}\n}\n\nexport default connect<StateProps, {}, OwnProps>(\n  mstp,\n  null\n)(CellComponent)\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst GradientBorder: SFC = () => (\n  <div className=\"gradient-border\">\n    <div className=\"gradient-border--top-left\" />\n    <div className=\"gradient-border--top-right\" />\n    <div className=\"gradient-border--bottom-left\" />\n    <div className=\"gradient-border--bottom-right\" />\n  </div>\n)\n\nexport default GradientBorder\n","import {AppState, Cell} from 'src/types'\n\nexport const getCells = (\n  {resources}: AppState,\n  dashboardID: string\n): Cell[] => {\n  const dashboard = resources.dashboards.byID[dashboardID]\n\n  if (!dashboard || !dashboard.cells) {\n    return []\n  }\n\n  const cellIDs = dashboard.cells\n\n  return cellIDs.map(id => resources.cells.byID[id])\n}\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport ReactGridLayout, {WidthProvider, Layout} from 'react-grid-layout'\nimport {get} from 'lodash'\n\n// Components\nconst Grid = WidthProvider(ReactGridLayout)\nimport CellComponent from 'src/shared/components/cells/Cell'\nimport GradientBorder from 'src/shared/components/cells/GradientBorder'\n\n// Actions\nimport {updateCells} from 'src/cells/actions/thunks'\n\n// Utils\nimport {fastMap} from 'src/utils/fast'\nimport {getCells} from 'src/cells/selectors'\n\n// Constants\nimport {LAYOUT_MARGIN, DASHBOARD_LAYOUT_ROW_HEIGHT} from 'src/shared/constants'\n\n// Types\nimport {AppState, Cell, RemoteDataState, View} from 'src/types'\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\ntype ViewsByID = {[viewID: string]: View}\n\ninterface StateProps {\n  views: ViewsByID\n  cells: Cell[]\n  dashboard: string\n}\n\ninterface DispatchProps {\n  updateCells: typeof updateCells\n}\n\ninterface OwnProps {\n  manualRefresh: number\n}\n\ntype Props = StateProps & OwnProps & DispatchProps\n\n@ErrorHandling\nclass Cells extends Component<Props> {\n  public render() {\n    const {cells, manualRefresh} = this.props\n\n    return (\n      <Grid\n        cols={12}\n        layout={this.cells}\n        rowHeight={DASHBOARD_LAYOUT_ROW_HEIGHT}\n        useCSSTransforms={false}\n        containerPadding={[0, 0]}\n        margin={[LAYOUT_MARGIN, LAYOUT_MARGIN]}\n        onLayoutChange={this.handleLayoutChange}\n        draggableHandle=\".cell--draggable\"\n        isDraggable\n        isResizable\n      >\n        {fastMap(cells, cell => (\n          <div key={cell.id} className=\"cell\">\n            <CellComponent cell={cell} manualRefresh={manualRefresh} />\n            <GradientBorder />\n          </div>\n        ))}\n      </Grid>\n    )\n  }\n\n  private get cells(): Layout[] {\n    const {views} = this.props\n    return this.props.cells\n      .filter(c => c.status === RemoteDataState.Done)\n      .map(c => {\n        const view = views[c.id]\n        const cell = {\n          ...c,\n          x: c.x,\n          y: c.y,\n          h: c.h,\n          w: c.w,\n          i: c.id,\n        }\n        if (get(view, 'properties.type') === 'gauge') {\n          cell.minW = 3\n          cell.minH = 3\n        }\n        return cell\n      })\n  }\n\n  private handleLayoutChange = grid => {\n    const {cells} = this.props\n\n    let changed = false\n\n    const newCells = cells.map(cell => {\n      const l = grid.find(ly => ly.i === cell.id)\n\n      if (\n        cell.x !== l.x ||\n        cell.y !== l.y ||\n        cell.h !== l.h ||\n        cell.w !== l.w\n      ) {\n        changed = true\n      }\n\n      const newCell = {\n        x: l.x,\n        y: l.y,\n        h: l.h,\n        w: l.w,\n      }\n\n      return {\n        ...cell,\n        ...newCell,\n      }\n    })\n\n    if (changed) {\n      this.handlePositionChange(newCells)\n    }\n  }\n  private handlePositionChange = (cells: Cell[]) => {\n    const {dashboard, updateCells} = this.props\n    updateCells(dashboard, cells)\n  }\n}\nconst mstp = (state: AppState): StateProps => {\n  const dashboard = state.currentDashboard.id\n\n  return {\n    dashboard,\n    cells: getCells(state, dashboard),\n    views: state.resources.views.byID,\n  }\n}\nconst mdtp: DispatchProps = {\n  updateCells: updateCells,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(Cells)\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Button, EmptyState} from '@influxdata/clockface'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {IconFont, ComponentSize, ComponentColor} from '@influxdata/clockface'\nimport {AppState} from 'src/types'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface StateProps {\n  org: string\n  dashboard: string\n}\n\ntype Props = WithRouterProps & StateProps\n\n@ErrorHandling\nclass DashboardEmpty extends Component<Props> {\n  public render() {\n    return (\n      <div className=\"dashboard-empty\">\n        <EmptyState size={ComponentSize.Large}>\n          <EmptyState.Text>\n            This Dashboard doesn't have any <b>Cells</b>, why not add one?\n          </EmptyState.Text>\n          <Button\n            text=\"Add Cell\"\n            size={ComponentSize.Medium}\n            icon={IconFont.AddCell}\n            color={ComponentColor.Primary}\n            onClick={this.handleAdd}\n            testID=\"add-cell--button\"\n          />\n        </EmptyState>\n      </div>\n    )\n  }\n\n  private handleAdd = () => {\n    const {router, org, dashboard} = this.props\n    router.push(`/orgs/${org}/dashboards/${dashboard}/cells/new`)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    org: getOrg(state).id,\n    dashboard: state.currentDashboard.id,\n  }\n}\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(withRouter<{}>(DashboardEmpty))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport Cells from 'src/shared/components/cells/Cells'\nimport DashboardEmpty from 'src/dashboards/components/dashboard_empty/DashboardEmpty'\nimport {\n  Page,\n  SpinnerContainer,\n  TechnoSpinner,\n  RemoteDataState,\n} from '@influxdata/clockface'\n\n// Types\nimport {Cell, AppState} from 'src/types'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Utils\nimport {getCells} from 'src/cells/selectors'\n\ninterface StateProps {\n  cells: Cell[]\n  status: RemoteDataState\n}\ninterface OwnProps {\n  manualRefresh: number\n}\n\ntype Props = OwnProps & StateProps\n\n@ErrorHandling\nclass DashboardComponent extends PureComponent<Props> {\n  public render() {\n    const {cells, status, manualRefresh} = this.props\n\n    return (\n      <SpinnerContainer loading={status} spinnerComponent={<TechnoSpinner />}>\n        <Page.Contents fullWidth={true} scrollable={true} className=\"dashboard\">\n          {!!cells.length ? (\n            <Cells manualRefresh={manualRefresh} />\n          ) : (\n            <DashboardEmpty />\n          )}\n          {/* This element is used as a portal container for note tooltips in cell headers */}\n          <div className=\"cell-header-note-tooltip-container\" />\n        </Page.Contents>\n      </SpinnerContainer>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    cells: getCells(state, state.currentDashboard.id),\n    status: state.resources.cells.status,\n  }\n}\n\nexport default connect<StateProps, {}, OwnProps>(\n  mstp,\n  null\n)(DashboardComponent)\n","import React, {Component, ComponentClass} from 'react'\n\nexport interface ManualRefreshProps {\n  manualRefresh: number\n  onManualRefresh: () => void\n}\n\ninterface ManualRefreshState {\n  manualRefresh: number\n}\n\nfunction ManualRefresh<P>(\n  WrappedComponent: ComponentClass<P & ManualRefreshProps>\n): ComponentClass<P> {\n  return class extends Component<P & ManualRefreshProps, ManualRefreshState> {\n    public constructor(props: P & ManualRefreshProps) {\n      super(props)\n      this.state = {\n        manualRefresh: Date.now(),\n      }\n    }\n\n    public render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          manualRefresh={this.state.manualRefresh}\n          onManualRefresh={this.handleManualRefresh}\n        />\n      )\n    }\n\n    private handleManualRefresh = (): void => {\n      this.setState({\n        manualRefresh: Date.now(),\n      })\n    }\n  }\n}\n\nexport default ManualRefresh\n","// Libraries\nimport React, {Component, ErrorInfo} from 'react'\n\n// Components\nimport DefaultErrorMessage from 'src/shared/components/DefaultErrorMessage'\n\n// Utils\nimport {reportError, parseComponentName} from 'src/shared/utils/errors'\n\n// Types\nimport {ErrorMessageComponent} from 'src/types'\n\ninterface ErrorBoundaryProps {\n  errorComponent: ErrorMessageComponent\n}\n\ninterface ErrorBoundaryState {\n  error: Error\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  public static defaultProps = {errorComponent: DefaultErrorMessage}\n\n  public state: ErrorBoundaryState = {error: null}\n\n  public static getDerivedStateFromError(error: Error) {\n    return {error}\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    reportError(error, {component: parseComponentName(errorInfo)})\n  }\n\n  public render() {\n    const {error} = this.state\n\n    if (error) {\n      return <this.props.errorComponent error={error} />\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  Dropdown,\n  DropdownMenuTheme,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\n// Actions\nimport {selectVariableValue} from 'src/dashboards/actions/thunks'\n\n// Utils\nimport {getVariableValuesForDropdown} from 'src/dashboards/selectors'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  values: {name: string; value: string}[]\n  selectedKey: string\n}\n\ninterface DispatchProps {\n  onSelectValue: typeof selectVariableValue\n}\n\ninterface OwnProps {\n  variableID: string\n  dashboardID: string\n}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\nclass VariableDropdown extends PureComponent<Props> {\n  render() {\n    const {selectedKey} = this.props\n    const dropdownValues = this.props.values || []\n\n    const dropdownStatus =\n      dropdownValues.length === 0\n        ? ComponentStatus.Disabled\n        : ComponentStatus.Default\n\n    return (\n      <div className=\"variable-dropdown\">\n        {/* TODO: Add variable description to title attribute when it is ready */}\n        <Dropdown\n          style={{width: `${140}px`}}\n          className=\"variable-dropdown--dropdown\"\n          testID=\"variable-dropdown\"\n          button={(active, onClick) => (\n            <Dropdown.Button\n              active={active}\n              onClick={onClick}\n              testID=\"variable-dropdown--button\"\n              status={dropdownStatus}\n            >\n              {selectedKey || 'No Values'}\n            </Dropdown.Button>\n          )}\n          menu={onCollapse => (\n            <Dropdown.Menu\n              onCollapse={onCollapse}\n              theme={DropdownMenuTheme.Amethyst}\n            >\n              {dropdownValues.map(({name}) => (\n                /*\n                Use key as value since they are unique otherwise\n                multiple selection appear in the dropdown\n              */\n                <Dropdown.Item\n                  key={name}\n                  id={name}\n                  value={name}\n                  onClick={this.handleSelect}\n                  selected={name === selectedKey}\n                  testID=\"variable-dropdown--item\"\n                >\n                  {name}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          )}\n        />\n      </div>\n    )\n  }\n\n  private handleSelect = (selectedKey: string) => {\n    const {dashboardID, variableID, onSelectValue} = this.props\n\n    onSelectValue(dashboardID, variableID, selectedKey)\n  }\n}\n\nconst mstp = (state: AppState, props: OwnProps): StateProps => {\n  const {dashboardID, variableID} = props\n\n  const {selectedKey, list} = getVariableValuesForDropdown(\n    state,\n    variableID,\n    dashboardID\n  )\n\n  return {values: list, selectedKey}\n}\n\nconst mdtp = {\n  onSelectValue: selectVariableValue,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(VariableDropdown)\n","// Libraries\nimport * as React from 'react'\nimport {\n  DragSource,\n  DropTarget,\n  ConnectDropTarget,\n  ConnectDragSource,\n  ConnectDragPreview,\n  DropTargetConnector,\n  DragSourceConnector,\n  DragSourceMonitor,\n} from 'react-dnd'\nimport classnames from 'classnames'\n\n// Components\nimport VariableDropdown from './VariableDropdown'\n\n// Constants\nconst dropdownType = 'dropdown'\n\nconst dropdownSource = {\n  beginDrag(props: Props) {\n    return {\n      id: props.id,\n      index: props.index,\n    }\n  },\n}\n\ninterface Props {\n  id: string\n  index: number\n  name: string\n  moveDropdown: (dragIndex: number, hoverIndex: number) => void\n  dashboardID: string\n}\n\ninterface DropdownSourceCollectedProps {\n  isDragging: boolean\n  connectDragSource: ConnectDragSource\n  connectDragPreview: ConnectDragPreview\n}\n\ninterface DropdownTargetCollectedProps {\n  connectDropTarget?: ConnectDropTarget\n}\n\nconst dropdownTarget = {\n  hover(props, monitor, component) {\n    if (!component) {\n      return null\n    }\n    const dragIndex = monitor.getItem().index\n    const hoverIndex = props.index\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return\n    }\n\n    // Time to actually perform the action\n    props.moveDropdown(dragIndex, hoverIndex)\n\n    monitor.getItem().index = hoverIndex\n  },\n}\n\nclass Dropdown extends React.Component<\n  Props & DropdownSourceCollectedProps & DropdownTargetCollectedProps\n> {\n  public render() {\n    const {\n      name,\n      id,\n      dashboardID,\n      isDragging,\n      connectDragSource,\n      connectDropTarget,\n      connectDragPreview,\n    } = this.props\n\n    const className = classnames('variable-dropdown', {\n      'variable-dropdown__dragging': isDragging,\n    })\n\n    return connectDropTarget(\n      <div className=\"variable-dropdown--container\">\n        {connectDragPreview(\n          <div className={className}>\n            {/* TODO: Add variable description to title attribute when it is ready */}\n            <div className=\"variable-dropdown--label\">\n              {connectDragSource(\n                <div className=\"variable-dropdown--drag\">\n                  <span className=\"hamburger\" />\n                </div>\n              )}\n              <span>{name}</span>\n            </div>\n            <VariableDropdown variableID={id} dashboardID={dashboardID} />\n          </div>\n        )}\n        <div className=\"variable-dropdown--placeholder\" />\n      </div>\n    )\n  }\n}\n\nexport default DropTarget<Props & DropdownTargetCollectedProps>(\n  dropdownType,\n  dropdownTarget,\n  (connect: DropTargetConnector) => ({\n    connectDropTarget: connect.dropTarget(),\n  })\n)(\n  DragSource<Props & DropdownSourceCollectedProps>(\n    dropdownType,\n    dropdownSource,\n    (connect: DragSourceConnector, monitor: DragSourceMonitor) => ({\n      connectDragSource: connect.dragSource(),\n      connectDragPreview: connect.dragPreview(),\n      isDragging: monitor.isDragging(),\n    })\n  )(Dropdown)\n)\n","import {DragDropContext} from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\n\nexport default DragDropContext(HTML5Backend)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {isEmpty} from 'lodash'\nimport classnames from 'classnames'\n\n// Components\nimport {\n  EmptyState,\n  TechnoSpinner,\n  SpinnerContainer,\n} from '@influxdata/clockface'\nimport ErrorBoundary from 'src/shared/components/ErrorBoundary'\n\n// Utils\nimport {\n  getVariablesForDashboard,\n  getDashboardValuesStatus,\n  getDashboardVariablesStatus,\n} from 'src/variables/selectors'\n\n// Actions\nimport {moveVariable} from 'src/variables/actions/creators'\n\n// Types\nimport {AppState, Variable} from 'src/types'\nimport {ComponentSize} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {RemoteDataState} from 'src/types'\nimport DraggableDropdown from 'src/dashboards/components/variablesControlBar/DraggableDropdown'\nimport withDragDropContext from 'src/shared/decorators/withDragDropContext'\n\ninterface StateProps {\n  variables: Variable[]\n  valuesStatus: RemoteDataState\n  variablesStatus: RemoteDataState\n  inPresentationMode: boolean\n  dashboardID: string\n  show: boolean\n}\n\ninterface DispatchProps {\n  moveVariable: typeof moveVariable\n}\n\ninterface State {\n  initialLoading: RemoteDataState\n}\n\ntype Props = StateProps & DispatchProps\n\n@ErrorHandling\nclass VariablesControlBar extends PureComponent<Props, State> {\n  public state: State = {initialLoading: RemoteDataState.Loading}\n\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.valuesStatus === RemoteDataState.Done &&\n      props.variablesStatus === RemoteDataState.Done &&\n      state.initialLoading !== RemoteDataState.Done\n    ) {\n      return {initialLoading: RemoteDataState.Done}\n    }\n\n    return {}\n  }\n\n  render() {\n    const {show, inPresentationMode} = this.props\n    if (!show) {\n      return false\n    }\n    return (\n      <div\n        className={classnames('variables-control-bar', {\n          'presentation-mode': inPresentationMode,\n        })}\n      >\n        <SpinnerContainer\n          loading={this.state.initialLoading}\n          spinnerComponent={<TechnoSpinner diameterPixels={50} />}\n          className=\"variables-spinner-container\"\n        >\n          {this.bar}\n        </SpinnerContainer>\n      </div>\n    )\n  }\n\n  private get emptyBar(): JSX.Element {\n    return (\n      <EmptyState\n        size={ComponentSize.ExtraSmall}\n        className=\"variables-control-bar--empty\"\n      >\n        <EmptyState.Text>\n          This dashboard doesn't have any cells with defined variables.{' '}\n          <a\n            href=\"https://v2.docs.influxdata.com/v2.0/visualize-data/variables/\"\n            target=\"_blank\"\n          >\n            Learn How\n          </a>\n        </EmptyState.Text>\n      </EmptyState>\n    )\n  }\n\n  private get barContents(): JSX.Element {\n    const {dashboardID, variables, valuesStatus} = this.props\n    return (\n      <div className=\"variables-control-bar--full\">\n        {variables.map((v, i) => (\n          <ErrorBoundary key={v.id}>\n            <DraggableDropdown\n              name={v.name}\n              id={v.id}\n              index={i}\n              dashboardID={dashboardID}\n              moveDropdown={this.handleMoveDropdown}\n            />\n          </ErrorBoundary>\n        ))}\n        {valuesStatus === RemoteDataState.Loading && (\n          <TechnoSpinner diameterPixels={18} />\n        )}\n      </div>\n    )\n  }\n\n  private get bar(): JSX.Element {\n    const {variables} = this.props\n\n    if (isEmpty(variables)) {\n      return this.emptyBar\n    }\n\n    return this.barContents\n  }\n\n  private handleMoveDropdown = (\n    originalIndex: number,\n    newIndex: number\n  ): void => {\n    const {dashboardID, moveVariable} = this.props\n    moveVariable(originalIndex, newIndex, dashboardID)\n  }\n}\n\nconst mdtp = {\n  moveVariable,\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const dashboardID = state.currentDashboard.id\n  const variables = getVariablesForDashboard(state, dashboardID)\n  const valuesStatus = getDashboardValuesStatus(state, dashboardID)\n  const variablesStatus = getDashboardVariablesStatus(state)\n  const show = state.userSettings.showVariablesControls\n\n  const {\n    app: {\n      ephemeral: {inPresentationMode},\n    },\n  } = state\n\n  return {\n    variables,\n    valuesStatus,\n    variablesStatus,\n    inPresentationMode,\n    dashboardID,\n    show,\n  }\n}\n\nexport default withDragDropContext(\n  connect<StateProps, DispatchProps>(\n    mstp,\n    mdtp\n  )(VariablesControlBar)\n)\n","// Libraries\nimport {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {CLOUD} from 'src/shared/constants'\n\n// Actions\nimport {getReadWriteCardinalityLimits as getReadWriteCardinalityLimitsAction} from 'src/cloud/actions/limits'\n\ninterface DispatchProps {\n  getReadWriteCardinalityLimits: typeof getReadWriteCardinalityLimitsAction\n}\n\nclass LimitChecker extends PureComponent<DispatchProps, {}> {\n  public componentDidMount() {\n    if (CLOUD) {\n      this.props.getReadWriteCardinalityLimits()\n    }\n  }\n\n  public render() {\n    return this.props.children\n  }\n}\n\nconst mdtp: DispatchProps = {\n  getReadWriteCardinalityLimits: getReadWriteCardinalityLimitsAction,\n}\n\nexport default connect<{}, DispatchProps, {}>(\n  null,\n  mdtp\n)(LimitChecker)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  FlexBox,\n  FlexDirection,\n  AlignItems,\n  ComponentSize,\n  IconFont,\n  ComponentColor,\n  Alert,\n  JustifyContent,\n} from '@influxdata/clockface'\n\n// Utils\nimport {\n  extractRateLimitResources,\n  extractRateLimitStatus,\n} from 'src/cloud/utils/limits'\n\n// Constants\nimport {CLOUD} from 'src/shared/constants'\n\n// Types\nimport {AppState} from 'src/types'\nimport {LimitStatus} from 'src/cloud/actions/limits'\nimport CheckoutButton from 'src/cloud/components/CheckoutButton'\n\ninterface StateProps {\n  resources: string[]\n  status: LimitStatus\n}\ninterface OwnProps {\n  className?: string\n}\ntype Props = StateProps & OwnProps\n\nclass RateLimitAlert extends PureComponent<Props> {\n  public render() {\n    const {status, className} = this.props\n\n    if (CLOUD && status === LimitStatus.EXCEEDED) {\n      return (\n        <FlexBox\n          direction={FlexDirection.Column}\n          alignItems={AlignItems.Center}\n          margin={ComponentSize.Large}\n          stretchToFitWidth={true}\n          className={className}\n        >\n          <Alert icon={IconFont.Cloud} color={ComponentColor.Primary}>\n            <FlexBox\n              alignItems={AlignItems.Center}\n              direction={FlexDirection.Row}\n              justifyContent={JustifyContent.SpaceBetween}\n              margin={ComponentSize.Medium}\n            >\n              <div>\n                {this.message}\n                <br />\n              </div>\n              <CheckoutButton />\n            </FlexBox>\n          </Alert>\n        </FlexBox>\n      )\n    }\n\n    return null\n  }\n\n  private get message(): string {\n    return `Hey there, it looks like you have exceeded your plan's ${\n      this.resourceName\n    } limits.${this.additionalMessage}`\n  }\n\n  private get additionalMessage(): string {\n    if (this.props.resources.includes('cardinality')) {\n      return ' Your writes will be rejected until resolved.'\n    }\n\n    return ''\n  }\n\n  private get resourceName(): string {\n    const {resources} = this.props\n\n    const renamedResources = resources.map(resource => {\n      if (resource === 'cardinality') {\n        return 'total series'\n      }\n\n      return resource\n    })\n\n    return renamedResources.join(' and ')\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    cloud: {limits},\n  } = state\n\n  const resources = extractRateLimitResources(limits)\n  const status = extractRateLimitStatus(limits)\n\n  return {\n    status,\n    resources,\n  }\n}\n\nexport default connect<StateProps, {}>(\n  mstp,\n  null\n)(RateLimitAlert)\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Page} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport DashboardHeader from 'src/dashboards/components/DashboardHeader'\nimport DashboardComponent from 'src/dashboards/components/Dashboard'\nimport ManualRefresh from 'src/shared/components/ManualRefresh'\nimport {HoverTimeProvider} from 'src/dashboards/utils/hoverTime'\nimport VariablesControlBar from 'src/dashboards/components/variablesControlBar/VariablesControlBar'\nimport LimitChecker from 'src/cloud/components/LimitChecker'\nimport RateLimitAlert from 'src/cloud/components/RateLimitAlert'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\n\n// Selectors\nimport {getByID} from 'src/resources/selectors'\n\n// Types\nimport {AppState, AutoRefresh, ResourceType, Dashboard} from 'src/types'\nimport {ManualRefreshProps} from 'src/shared/components/ManualRefresh'\n\ninterface StateProps {\n  dashboard: Dashboard\n}\n\ninterface OwnProps {\n  autoRefresh: AutoRefresh\n}\n\ntype Props = OwnProps & StateProps & ManualRefreshProps\n\n@ErrorHandling\nclass DashboardPage extends Component<Props> {\n  public render() {\n    const {autoRefresh, manualRefresh, onManualRefresh, children} = this.props\n\n    return (\n      <Page titleTag={this.pageTitle}>\n        <LimitChecker>\n          <HoverTimeProvider>\n            <DashboardHeader\n              autoRefresh={autoRefresh}\n              onManualRefresh={onManualRefresh}\n            />\n            <RateLimitAlert className=\"dashboard--rate-alert\" />\n            <VariablesControlBar />\n            <DashboardComponent manualRefresh={manualRefresh} />\n            {children}\n          </HoverTimeProvider>\n        </LimitChecker>\n      </Page>\n    )\n  }\n\n  private get pageTitle(): string {\n    const {dashboard} = this.props\n    const title = dashboard && dashboard.name ? dashboard.name : 'Loading...'\n\n    return pageTitleSuffixer([title])\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const dashboard = getByID<Dashboard>(\n    state,\n    ResourceType.Dashboards,\n    state.currentDashboard.id\n  )\n\n  return {\n    dashboard,\n  }\n}\n\nexport default connect<StateProps, {}>(\n  mstp,\n  null\n)(ManualRefresh<OwnProps>(DashboardPage))\n","// Libraries\nimport React, {FC, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {getTimeRangeByDashboardID} from 'src/dashboards/selectors'\n\n// Actions\nimport * as actions from 'src/dashboards/actions/ranges'\n\n// Types\nimport {TimeRange, AppState} from 'src/types'\n\ninterface StateProps {\n  timeRange: TimeRange\n}\n\ninterface DispatchProps {\n  setDashboardTimeRange: typeof actions.setDashboardTimeRange\n  updateQueryParams: typeof actions.updateQueryParams\n}\n\ntype Props = WithRouterProps & StateProps & DispatchProps\n\nconst GetTimeRange: FC<Props> = ({\n  location,\n  params,\n  timeRange,\n  setDashboardTimeRange,\n  updateQueryParams,\n}: Props) => {\n  const isEditing = location.pathname.includes('edit')\n  const isNew = location.pathname.includes('new')\n\n  useEffect(() => {\n    if (isEditing || isNew) {\n      return\n    }\n\n    setDashboardTimeRange(params.dashboardID, timeRange)\n    const {lower, upper} = timeRange\n    updateQueryParams({\n      lower,\n      upper,\n    })\n  }, [isEditing, isNew])\n\n  return <div />\n}\n\nconst mstp = (state: AppState, props: Props) => {\n  const timeRange = getTimeRangeByDashboardID(state, props.params.dashboardID)\n  return {timeRange}\n}\n\nconst mdtp: DispatchProps = {\n  updateQueryParams: actions.updateQueryParams,\n  setDashboardTimeRange: actions.setDashboardTimeRange,\n}\n\nexport default withRouter(\n  connect<StateProps, DispatchProps>(\n    mstp,\n    mdtp\n  )(GetTimeRange)\n)\n","import React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {setDashboard} from 'src/shared/actions/currentDashboard'\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  dashboard: string\n}\n\ninterface DispatchProps {\n  updateDashboard: typeof setDashboard\n}\n\ntype Props = StateProps & DispatchProps & WithRouterProps\n\nclass DashboardRoute extends PureComponent<Props> {\n  check(props) {\n    const {dashboard, updateDashboard} = props\n    const dashboardID = props.params.dashboardID\n\n    if (dashboard !== dashboardID) {\n      updateDashboard(dashboardID)\n    }\n  }\n\n  componentDidMount() {\n    this.check(this.props)\n  }\n\n  componentWillUnmount() {\n    this.props.updateDashboard(null)\n  }\n\n  render() {\n    if (!this.props.dashboard) {\n      return false\n    }\n\n    return <>{this.props.children}</>\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    dashboard: state.currentDashboard.id,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  updateDashboard: setDashboard,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(withRouter<{}>(DashboardRoute))\n","// Libraries\nimport React, {FC, useEffect} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport GetResource from 'src/resources/components/GetResource'\nimport DashboardPage from 'src/dashboards/components/DashboardPage'\nimport GetTimeRange from 'src/dashboards/components/GetTimeRange'\nimport DashboardRoute from 'src/shared/components/DashboardRoute'\n\n// Utils\nimport {GlobalAutoRefresher} from 'src/utils/AutoRefresher'\n\n// Constants\nimport {AUTOREFRESH_DEFAULT} from 'src/shared/constants'\n\n// Types\nimport {AppState, ResourceType, AutoRefresh, AutoRefreshStatus} from 'src/types'\n\nconst {Active} = AutoRefreshStatus\n\ninterface StateProps {\n  autoRefresh: AutoRefresh\n  dashboard: string\n}\n\ntype Props = StateProps\n\nconst DashboardContainer: FC<Props> = ({autoRefresh, dashboard, children}) => {\n  useEffect(() => {\n    if (autoRefresh.status === Active) {\n      GlobalAutoRefresher.poll(autoRefresh.interval)\n      return\n    }\n\n    GlobalAutoRefresher.stopPolling()\n\n    return function cleanup() {\n      GlobalAutoRefresher.stopPolling()\n    }\n  }, [autoRefresh.status, autoRefresh.interval])\n\n  return (\n    <DashboardRoute>\n      <GetResource resources={[{type: ResourceType.Dashboards, id: dashboard}]}>\n        <GetTimeRange />\n        <DashboardPage autoRefresh={autoRefresh} />\n        {children}\n      </GetResource>\n    </DashboardRoute>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const dashboard = state.currentDashboard.id\n  const autoRefresh = state.autoRefresh[dashboard] || AUTOREFRESH_DEFAULT\n  return {\n    autoRefresh,\n    dashboard,\n  }\n}\n\nexport default connect<StateProps>(mstp)(DashboardContainer)\n","import moment from 'moment'\n\nexport const relativeTimestampFormatter = (\n  time: string,\n  prefix?: string\n): string => {\n  const timeFromNow = moment(time).fromNow()\n\n  if (prefix) {\n    return `${prefix}${timeFromNow}`\n  }\n\n  return timeFromNow\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {IconFont, ComponentColor, ResourceCard} from '@influxdata/clockface'\nimport {Context} from 'src/clockface'\nimport InlineLabels from 'src/shared/components/inlineLabels/InlineLabels'\n\n// Actions\nimport {\n  cloneDashboard,\n  deleteDashboard,\n  updateDashboard,\n  addDashboardLabel,\n  removeDashboardLabel,\n} from 'src/dashboards/actions/thunks'\nimport {resetViews} from 'src/views/actions/creators'\n\n// Types\nimport {Label} from 'src/types'\n\n// Constants\nimport {DEFAULT_DASHBOARD_NAME} from 'src/dashboards/constants'\n\n// Utilities\nimport {relativeTimestampFormatter} from 'src/shared/utils/relativeTimestampFormatter'\n\ninterface OwnProps {\n  id: string\n  name: string\n  description: string\n  updatedAt: string\n  labels: string[]\n  onFilterChange: (searchTerm: string) => void\n}\n\ninterface DispatchProps {\n  onDeleteDashboard: typeof deleteDashboard\n  onCloneDashboard: typeof cloneDashboard\n  onUpdateDashboard: typeof updateDashboard\n  onAddDashboardLabel: typeof addDashboardLabel\n  onRemoveDashboardLabel: typeof removeDashboardLabel\n  onResetViews: typeof resetViews\n}\n\ntype Props = OwnProps & DispatchProps & WithRouterProps\n\nclass DashboardCard extends PureComponent<Props> {\n  public render() {\n    const {\n      id,\n      name,\n      description,\n      onFilterChange,\n      labels,\n      updatedAt,\n    } = this.props\n\n    return (\n      <ResourceCard\n        key={`dashboard-id--${id}`}\n        testID=\"dashboard-card\"\n        name={\n          <ResourceCard.EditableName\n            onUpdate={this.handleUpdateDashboard}\n            onClick={this.handleClickDashboard}\n            name={name}\n            noNameString={DEFAULT_DASHBOARD_NAME}\n            testID=\"dashboard-card--name\"\n            buttonTestID=\"dashboard-card--name-button\"\n            inputTestID=\"dashboard-card--input\"\n          />\n        }\n        description={\n          <ResourceCard.EditableDescription\n            onUpdate={this.handleUpdateDescription}\n            description={description}\n            placeholder={`Describe ${name}`}\n          />\n        }\n        labels={\n          <InlineLabels\n            selectedLabelIDs={labels}\n            onFilterChange={onFilterChange}\n            onAddLabel={this.handleAddLabel}\n            onRemoveLabel={this.handleRemoveLabel}\n          />\n        }\n        metaData={[\n          <>{relativeTimestampFormatter(updatedAt, 'Last modified ')}</>,\n        ]}\n        contextMenu={this.contextMenu}\n      />\n    )\n  }\n\n  private handleUpdateDashboard = (name: string) => {\n    const {id, onUpdateDashboard} = this.props\n\n    onUpdateDashboard(id, {name})\n  }\n\n  private handleCloneDashboard = () => {\n    const {id, name, onCloneDashboard} = this.props\n\n    onCloneDashboard(id, name)\n  }\n\n  private get contextMenu(): JSX.Element {\n    return (\n      <Context>\n        <Context.Menu icon={IconFont.CogThick}>\n          <Context.Item label=\"Export\" action={this.handleExport} />\n        </Context.Menu>\n        <Context.Menu\n          icon={IconFont.Duplicate}\n          color={ComponentColor.Secondary}\n        >\n          <Context.Item\n            label=\"Clone\"\n            action={this.handleCloneDashboard}\n            testID=\"clone-dashboard\"\n          />\n        </Context.Menu>\n        <Context.Menu\n          icon={IconFont.Trash}\n          color={ComponentColor.Danger}\n          testID=\"context-delete-menu\"\n        >\n          <Context.Item\n            label=\"Delete\"\n            action={this.handleDeleteDashboard}\n            testID=\"context-delete-dashboard\"\n          />\n        </Context.Menu>\n      </Context>\n    )\n  }\n\n  private handleDeleteDashboard = () => {\n    const {id, name, onDeleteDashboard} = this.props\n    onDeleteDashboard(id, name)\n  }\n\n  private handleClickDashboard = () => {\n    const {\n      onResetViews,\n      router,\n      id,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/dashboards/${id}`)\n\n    onResetViews()\n  }\n\n  private handleUpdateDescription = (description: string) => {\n    const {id, onUpdateDashboard} = this.props\n\n    onUpdateDashboard(id, {description})\n  }\n\n  private handleAddLabel = (label: Label) => {\n    const {onAddDashboardLabel, id} = this.props\n\n    onAddDashboardLabel(id, label)\n  }\n\n  private handleRemoveLabel = (label: Label) => {\n    const {onRemoveDashboardLabel, id} = this.props\n\n    onRemoveDashboardLabel(id, label)\n  }\n\n  private handleExport = () => {\n    const {\n      router,\n      params: {orgID},\n      id,\n    } = this.props\n\n    router.push(`/orgs/${orgID}/dashboards/${id}/export`)\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onAddDashboardLabel: addDashboardLabel,\n  onRemoveDashboardLabel: removeDashboardLabel,\n  onResetViews: resetViews,\n  onCloneDashboard: cloneDashboard,\n  onDeleteDashboard: deleteDashboard,\n  onUpdateDashboard: updateDashboard,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(withRouter(DashboardCard))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport DashboardCard from 'src/dashboards/components/dashboard_index/DashboardCard'\nimport {TechnoSpinner} from '@influxdata/clockface'\n\n// Selectors\nimport {getSortedResources, SortTypes} from 'src/shared/utils/sort'\n\n// Types\nimport {Dashboard, RemoteDataState} from 'src/types'\nimport {Sort} from 'src/clockface'\n\ninterface Props {\n  dashboards: Dashboard[]\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onFilterChange: (searchTerm: string) => void\n}\n\nexport default class DashboardCards extends PureComponent<Props> {\n  private _frame\n  private _window\n  private _observer\n  private _spinner\n\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  state = {\n    hasMeasured: false,\n    pages: 1,\n    windowSize: 0,\n  }\n\n  public componentDidMount() {\n    this.setState({\n      hasMeasured: false,\n      page: 1,\n      windowSize: 0,\n    })\n  }\n\n  public componentDidUpdate() {\n    this.addMore()\n  }\n\n  private registerFrame = elem => {\n    this._frame = elem\n  }\n\n  private registerWindow = elem => {\n    this._window = elem\n  }\n\n  private registerSpinner = elem => {\n    this._spinner = elem\n\n    if (!elem) return\n\n    let count = 1.0\n    const threshold = []\n\n    while (count > 0) {\n      threshold.push(count)\n      count -= 0.1\n    }\n\n    threshold.reverse()\n\n    this._observer = new IntersectionObserver(this.measure, {\n      threshold,\n      rootMargin: '60px 0px',\n    })\n\n    this._observer.observe(this._spinner)\n  }\n\n  private measure = entries => {\n    if (\n      entries\n        .map(e => e.isIntersecting)\n        .reduce((prev, curr) => prev || curr, false)\n    ) {\n      this.setState({\n        pages: this.state.pages + 2,\n      })\n    }\n  }\n\n  private addMore = () => {\n    if (this.state.hasMeasured) {\n      return\n    }\n\n    if (\n      this.state.windowSize * this.state.pages >=\n      this.props.dashboards.length\n    ) {\n      return\n    }\n\n    if (!this._frame) {\n      return\n    }\n\n    const frame = this._frame.getBoundingClientRect()\n    const win = this._window.getBoundingClientRect()\n\n    if (frame.height == win.height) {\n      this.setState(\n        {\n          windowSize: this.state.windowSize + 1,\n        },\n        () => {\n          this.addMore()\n        }\n      )\n    } else {\n      this.setState({\n        windowSize: this.state.windowSize,\n        pages: 3,\n        hasMeasured: true,\n      })\n    }\n  }\n\n  public render() {\n    const {\n      dashboards,\n      sortDirection,\n      sortKey,\n      sortType,\n      onFilterChange,\n    } = this.props\n    const sortedDashboards = this.memGetSortedResources(\n      dashboards,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    const {windowSize, pages, hasMeasured} = this.state\n\n    return (\n      <div style={{height: '100%', display: 'grid'}} ref={this.registerFrame}>\n        <div className=\"dashboards-card-grid\" ref={this.registerWindow}>\n          {sortedDashboards\n            .filter(d => d.status === RemoteDataState.Done)\n            .slice(0, pages * windowSize)\n            .map(({id, name, description, labels, meta}) => (\n              <DashboardCard\n                key={id}\n                id={id}\n                name={name}\n                labels={labels}\n                updatedAt={meta.updatedAt}\n                description={description}\n                onFilterChange={onFilterChange}\n              />\n            ))}\n        </div>\n        {hasMeasured && windowSize * pages < dashboards.length && (\n          <div\n            style={{height: '140px', margin: '24px auto'}}\n            ref={this.registerSpinner}\n          >\n            <TechnoSpinner />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport _ from 'lodash'\n\n// Components\nimport {EmptyState, ResourceList} from '@influxdata/clockface'\nimport AddResourceDropdown from 'src/shared/components/AddResourceDropdown'\nimport DashboardCards from 'src/dashboards/components/dashboard_index/DashboardCards'\nimport {createDashboard, getDashboards} from 'src/dashboards/actions/thunks'\nimport {getLabels} from 'src/labels/actions/thunks'\n\n// Types\nimport {AppState, Dashboard, RemoteDataState} from 'src/types'\nimport {Sort, ComponentSize} from '@influxdata/clockface'\nimport {SortTypes} from 'src/shared/utils/sort'\n\ninterface OwnProps {\n  searchTerm: string\n  onFilterChange: (searchTerm: string) => void\n  filterComponent?: JSX.Element\n  dashboards: Dashboard[]\n}\n\ninterface State {\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ninterface StateProps {\n  status: RemoteDataState\n}\n\ninterface DispatchProps {\n  getDashboards: typeof getDashboards\n  onCreateDashboard: typeof createDashboard\n  getLabels: typeof getLabels\n}\n\ntype SortKey = keyof Dashboard | 'meta.updatedAt'\n\ntype Props = OwnProps & StateProps & DispatchProps & WithRouterProps\n\nclass DashboardsTable extends PureComponent<Props, State> {\n  state: State = {\n    sortKey: 'name',\n    sortDirection: Sort.Ascending,\n    sortType: SortTypes.String,\n  }\n\n  public componentDidMount() {\n    this.props.getDashboards()\n    this.props.getLabels()\n  }\n\n  public render() {\n    const {status, dashboards, filterComponent, onFilterChange} = this.props\n\n    const {sortKey, sortDirection, sortType} = this.state\n\n    let body\n\n    if (status === RemoteDataState.Done && !dashboards.length) {\n      body = (\n        <ResourceList.Body emptyState={null}>\n          {this.emptyState}\n        </ResourceList.Body>\n      )\n    } else {\n      body = (\n        <ResourceList.Body style={{height: '100%'}} emptyState={null}>\n          <DashboardCards\n            dashboards={dashboards}\n            sortKey={sortKey}\n            sortDirection={sortDirection}\n            sortType={sortType}\n            onFilterChange={onFilterChange}\n          />\n        </ResourceList.Body>\n      )\n    }\n\n    return (\n      <ResourceList>\n        <ResourceList.Header filterComponent={filterComponent}>\n          <ResourceList.Sorter\n            name=\"name\"\n            sortKey=\"name\"\n            sort={sortKey === 'name' ? sortDirection : Sort.None}\n            onClick={this.handleClickColumn}\n          />\n          <ResourceList.Sorter\n            name=\"modified\"\n            sortKey=\"meta.updatedAt\"\n            sort={sortKey === 'meta.updatedAt' ? sortDirection : Sort.None}\n            onClick={this.handleClickColumn}\n          />\n        </ResourceList.Header>\n        {body}\n      </ResourceList>\n    )\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    let sortType = SortTypes.String\n    if (sortKey === 'meta.updatedAt') {\n      sortType = SortTypes.Date\n    }\n\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private summonImportOverlay = (): void => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n    router.push(`/orgs/${orgID}/dashboards/import`)\n  }\n\n  private summonImportFromTemplateOverlay = (): void => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n    router.push(`/orgs/${orgID}/dashboards/import/template`)\n  }\n\n  private get emptyState(): JSX.Element {\n    const {onCreateDashboard, searchTerm} = this.props\n\n    if (searchTerm) {\n      return (\n        <EmptyState size={ComponentSize.Large} testID=\"empty-dashboards-list\">\n          <EmptyState.Text>\n            No Dashboards match your search term\n          </EmptyState.Text>\n        </EmptyState>\n      )\n    }\n\n    return (\n      <EmptyState size={ComponentSize.Large} testID=\"empty-dashboards-list\">\n        <EmptyState.Text>\n          Looks like you don't have any <b>Dashboards</b>, why not create one?\n        </EmptyState.Text>\n        <AddResourceDropdown\n          onSelectNew={onCreateDashboard}\n          onSelectImport={this.summonImportOverlay}\n          onSelectTemplate={this.summonImportFromTemplateOverlay}\n          resourceName=\"Dashboard\"\n          canImportFromTemplate={true}\n        />\n      </EmptyState>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const status = state.resources.dashboards.status\n\n  return {\n    status,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  getDashboards: getDashboards,\n  onCreateDashboard: createDashboard,\n  getLabels: getLabels,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<OwnProps>(DashboardsTable))\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport Table from 'src/dashboards/components/dashboard_index/Table'\nimport FilterList from 'src/shared/components/FilterList'\n\n// Actions\nimport {retainRangesDashTimeV1 as retainRangesDashTimeV1Action} from 'src/dashboards/actions/ranges'\nimport {checkDashboardLimits as checkDashboardLimitsAction} from 'src/cloud/actions/limits'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {Dashboard, AppState, RemoteDataState, ResourceType} from 'src/types'\nimport {getAll} from 'src/resources/selectors'\n\ninterface OwnProps {\n  onFilterChange: (searchTerm: string) => void\n  searchTerm: string\n  filterComponent?: JSX.Element\n}\n\ninterface DispatchProps {\n  retainRangesDashTimeV1: typeof retainRangesDashTimeV1Action\n  checkDashboardLimits: typeof checkDashboardLimitsAction\n}\n\ninterface StateProps {\n  dashboards: Dashboard[]\n  limitStatus: RemoteDataState\n}\n\ntype Props = DispatchProps & StateProps & OwnProps\n\nconst FilterDashboards = FilterList<Dashboard>()\n\n@ErrorHandling\nclass DashboardsIndexContents extends Component<Props> {\n  public componentDidMount() {\n    const {dashboards} = this.props\n\n    const dashboardIDs = dashboards.map(d => d.id)\n    this.props.retainRangesDashTimeV1(dashboardIDs)\n    this.props.checkDashboardLimits()\n  }\n\n  public render() {\n    const {searchTerm, dashboards, filterComponent, onFilterChange} = this.props\n\n    return (\n      <FilterDashboards\n        list={dashboards}\n        searchTerm={searchTerm}\n        searchKeys={['name', 'labels[].name']}\n        sortByKey=\"name\"\n      >\n        {filteredDashboards => (\n          <Table\n            searchTerm={searchTerm}\n            filterComponent={filterComponent}\n            dashboards={filteredDashboards}\n            onFilterChange={onFilterChange}\n          />\n        )}\n      </FilterDashboards>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    cloud: {\n      limits: {status},\n    },\n  } = state\n\n  return {\n    dashboards: getAll<Dashboard>(state, ResourceType.Dashboards),\n    limitStatus: status,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  retainRangesDashTimeV1: retainRangesDashTimeV1Action,\n  checkDashboardLimits: checkDashboardLimitsAction,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(DashboardsIndexContents)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {InjectedRouter} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Components\nimport DashboardsIndexContents from 'src/dashboards/components/dashboard_index/DashboardsIndexContents'\nimport {Page} from '@influxdata/clockface'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport AddResourceDropdown from 'src/shared/components/AddResourceDropdown'\nimport PageTitleWithOrg from 'src/shared/components/PageTitleWithOrg'\nimport GetAssetLimits from 'src/cloud/components/GetAssetLimits'\nimport AssetLimitAlert from 'src/cloud/components/AssetLimitAlert'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {extractDashboardLimits} from 'src/cloud/utils/limits'\n\n// Actions\nimport {createDashboard as createDashboardAction} from 'src/dashboards/actions/thunks'\n\n// Types\nimport {AppState} from 'src/types'\nimport {LimitStatus} from 'src/cloud/actions/limits'\nimport {ComponentStatus} from '@influxdata/clockface'\n\ninterface DispatchProps {\n  createDashboard: typeof createDashboardAction\n}\n\ninterface StateProps {\n  limitStatus: LimitStatus\n}\n\ninterface OwnProps {\n  router: InjectedRouter\n  params: {orgID: string}\n}\n\ntype Props = DispatchProps & StateProps & OwnProps\n\ninterface State {\n  searchTerm: string\n}\n\n@ErrorHandling\nclass DashboardIndex extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      searchTerm: '',\n    }\n  }\n\n  public render() {\n    const {createDashboard, limitStatus} = this.props\n    const {searchTerm} = this.state\n    return (\n      <>\n        <Page\n          testID=\"empty-dashboards-list\"\n          titleTag={pageTitleSuffixer(['Dashboards'])}\n        >\n          <Page.Header fullWidth={false}>\n            <Page.HeaderLeft>\n              <PageTitleWithOrg title=\"Dashboards\" />\n            </Page.HeaderLeft>\n            <Page.HeaderRight>\n              <AddResourceDropdown\n                onSelectNew={createDashboard}\n                onSelectImport={this.summonImportOverlay}\n                onSelectTemplate={this.summonImportFromTemplateOverlay}\n                resourceName=\"Dashboard\"\n                canImportFromTemplate={true}\n                status={this.addResourceStatus}\n              />\n            </Page.HeaderRight>\n          </Page.Header>\n          <Page.Contents\n            className=\"dashboards-index__page-contents\"\n            fullWidth={false}\n            scrollable={true}\n          >\n            <GetAssetLimits>\n              <AssetLimitAlert\n                resourceName=\"dashboards\"\n                limitStatus={limitStatus}\n              />\n              <DashboardsIndexContents\n                filterComponent={\n                  <SearchWidget\n                    placeholderText=\"Filter dashboards...\"\n                    onSearch={this.handleFilterDashboards}\n                    searchTerm={searchTerm}\n                  />\n                }\n                searchTerm={searchTerm}\n                onFilterChange={this.handleFilterDashboards}\n              />\n            </GetAssetLimits>\n          </Page.Contents>\n        </Page>\n        {this.props.children}\n      </>\n    )\n  }\n\n  private handleFilterDashboards = (searchTerm: string): void => {\n    this.setState({searchTerm})\n  }\n\n  private summonImportOverlay = (): void => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n    router.push(`/orgs/${orgID}/dashboards/import`)\n  }\n\n  private summonImportFromTemplateOverlay = (): void => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n    router.push(`/orgs/${orgID}/dashboards/import/template`)\n  }\n\n  private get addResourceStatus(): ComponentStatus {\n    const {limitStatus} = this.props\n    if (limitStatus === LimitStatus.EXCEEDED) {\n      return ComponentStatus.Disabled\n    }\n    return ComponentStatus.Default\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    cloud: {limits},\n  } = state\n\n  return {\n    limitStatus: extractDashboardLimits(limits),\n  }\n}\n\nconst mdtp: DispatchProps = {\n  createDashboard: createDashboardAction,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(DashboardIndex)\n","import React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport {\n  Form,\n  Button,\n  SpinnerContainer,\n  TechnoSpinner,\n  Overlay,\n} from '@influxdata/clockface'\nimport {Controlled as ReactCodeMirror} from 'react-codemirror2'\nimport CopyButton from 'src/shared/components/CopyButton'\n\n// Actions\nimport {createTemplateFromResource} from 'src/templates/actions/thunks'\n\n// Utils\nimport {downloadTextFile} from 'src/shared/utils/download'\n\n// Types\nimport {DocumentCreate} from '@influxdata/influx'\nimport {ComponentColor, ComponentSize} from '@influxdata/clockface'\nimport {RemoteDataState, Notification} from 'src/types'\n\ninterface OwnProps {\n  onDismissOverlay: () => void\n  resource: DocumentCreate\n  resourceName: string\n  onCopyText?: (text: string, status: boolean) => Notification\n  status: RemoteDataState\n  isVisible: boolean\n}\n\ninterface DispatchProps {\n  onCreateTemplateFromResource: typeof createTemplateFromResource\n}\n\ntype Props = OwnProps & DispatchProps\n\nclass ExportOverlay extends PureComponent<Props> {\n  public static defaultProps = {\n    isVisible: true,\n  }\n\n  public render() {\n    const {isVisible, resourceName, onDismissOverlay, status} = this.props\n\n    return (\n      <Overlay visible={isVisible}>\n        <Overlay.Container maxWidth={800}>\n          <Form onSubmit={this.handleExport}>\n            <Overlay.Header\n              title={`Export ${resourceName}`}\n              onDismiss={onDismissOverlay}\n            />\n            <Overlay.Body>\n              <SpinnerContainer\n                loading={status}\n                spinnerComponent={<TechnoSpinner />}\n              >\n                {this.overlayBody}\n              </SpinnerContainer>\n            </Overlay.Body>\n            <Overlay.Footer>\n              {this.downloadButton}\n              {this.toTemplateButton}\n              {this.copyButton}\n            </Overlay.Footer>\n          </Form>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private doNothing = () => {}\n\n  private get overlayBody(): JSX.Element {\n    const options = {\n      tabIndex: 1,\n      mode: 'json',\n      readonly: true,\n      lineNumbers: true,\n      autoRefresh: true,\n      theme: 'time-machine',\n      completeSingle: false,\n    }\n    return (\n      <div className=\"export-overlay--text-area\">\n        <ReactCodeMirror\n          autoFocus={false}\n          autoCursor={true}\n          value={this.resourceText}\n          options={options}\n          onBeforeChange={this.doNothing}\n          onTouchStart={this.doNothing}\n        />\n      </div>\n    )\n  }\n\n  private get resourceText(): string {\n    return JSON.stringify(this.props.resource, null, 1)\n  }\n\n  private get copyButton(): JSX.Element {\n    return (\n      <CopyButton\n        textToCopy={this.resourceText}\n        contentName={this.props.resourceName}\n        onCopyText={this.props.onCopyText}\n        size={ComponentSize.Small}\n        color={ComponentColor.Secondary}\n      />\n    )\n  }\n\n  private get downloadButton(): JSX.Element {\n    return (\n      <Button\n        text=\"Download JSON\"\n        onClick={this.handleExport}\n        color={ComponentColor.Primary}\n      />\n    )\n  }\n\n  private get toTemplateButton(): JSX.Element {\n    return (\n      <Button\n        text=\"Save as template\"\n        onClick={this.handleConvertToTemplate}\n        color={ComponentColor.Primary}\n      />\n    )\n  }\n\n  private handleExport = (): void => {\n    const {resource, resourceName, onDismissOverlay} = this.props\n    const name = get(resource, 'content.data.attributes.name', resourceName)\n    downloadTextFile(JSON.stringify(resource, null, 1), name, '.json')\n    onDismissOverlay()\n  }\n\n  private handleConvertToTemplate = () => {\n    const {\n      resource,\n      onDismissOverlay,\n      resourceName,\n      onCreateTemplateFromResource,\n    } = this.props\n\n    onCreateTemplateFromResource(resource, resourceName)\n    onDismissOverlay()\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onCreateTemplateFromResource: createTemplateFromResource,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(ExportOverlay)\n","import React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport ExportOverlay from 'src/shared/components/ExportOverlay'\n\n// Actions\nimport {convertToTemplate as convertToTemplateAction} from 'src/dashboards/actions/thunks'\nimport {clearExportTemplate as clearExportTemplateAction} from 'src/templates/actions/thunks'\n\n// Types\nimport {DocumentCreate} from '@influxdata/influx'\nimport {AppState} from 'src/types'\nimport {RemoteDataState} from 'src/types'\n\nimport {\n  dashboardCopySuccess,\n  dashboardCopyFailed,\n} from 'src/shared/copy/notifications'\n\ninterface OwnProps {\n  params: {dashboardID: string}\n}\n\ninterface DispatchProps {\n  convertToTemplate: typeof convertToTemplateAction\n  clearExportTemplate: typeof clearExportTemplateAction\n}\n\ninterface StateProps {\n  dashboardTemplate: DocumentCreate\n  status: RemoteDataState\n}\n\ntype Props = OwnProps & StateProps & DispatchProps & WithRouterProps\n\nclass DashboardExportOverlay extends PureComponent<Props> {\n  public componentDidMount() {\n    const {\n      params: {dashboardID},\n      convertToTemplate,\n    } = this.props\n\n    convertToTemplate(dashboardID)\n  }\n\n  public render() {\n    const {status, dashboardTemplate} = this.props\n\n    const notes = (_text, success) => {\n      if (success) {\n        return dashboardCopySuccess()\n      }\n\n      return dashboardCopyFailed()\n    }\n\n    return (\n      <ExportOverlay\n        resourceName=\"Dashboard\"\n        resource={dashboardTemplate}\n        onDismissOverlay={this.onDismiss}\n        onCopyText={notes}\n        status={status}\n      />\n    )\n  }\n\n  private onDismiss = () => {\n    const {router, clearExportTemplate} = this.props\n\n    router.goBack()\n    clearExportTemplate()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  dashboardTemplate: state.resources.templates.exportTemplate.item,\n  status: state.resources.templates.exportTemplate.status,\n})\n\nconst mdtp: DispatchProps = {\n  convertToTemplate: convertToTemplateAction,\n  clearExportTemplate: clearExportTemplateAction,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(DashboardExportOverlay))\n","import React, {PureComponent} from 'react'\nimport classnames from 'classnames'\nimport {\n  Button,\n  ComponentColor,\n  ComponentSize,\n  ButtonType,\n} from '@influxdata/clockface'\n\ninterface Props {\n  fileTypesToAccept?: string\n  containerClass?: string\n  handleSubmit: (uploadContent: string) => void\n  submitText: string\n  submitOnDrop: boolean\n  submitOnUpload: boolean\n  compact: boolean\n  onCancel?: () => void\n  className?: string\n}\n\ninterface State {\n  inputContent: string\n  uploadContent: string | ArrayBuffer\n  fileName: string\n  dragClass: string\n}\n\nlet dragCounter = 0\nclass DragAndDrop extends PureComponent<Props, State> {\n  public static defaultProps = {\n    submitText: 'Write this File',\n    submitOnDrop: false,\n    submitOnUpload: false,\n    compact: false,\n    className: '',\n  }\n\n  private fileInput: HTMLInputElement\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      inputContent: null,\n      uploadContent: '',\n      fileName: '',\n      dragClass: 'drag-none',\n    }\n  }\n\n  public componentDidMount() {\n    window.addEventListener('dragover', this.handleWindowDragOver)\n    window.addEventListener('drop', this.handleFileDrop)\n    window.addEventListener('dragenter', this.handleDragEnter)\n    window.addEventListener('dragleave', this.handleDragLeave)\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('dragover', this.handleWindowDragOver)\n    window.removeEventListener('drop', this.handleFileDrop)\n    window.removeEventListener('dragenter', this.handleDragEnter)\n    window.removeEventListener('dragleave', this.handleDragLeave)\n  }\n\n  public render() {\n    return (\n      <div className={this.containerClass}>\n        <div className={this.dragAreaClass} onClick={this.handleFileOpen}>\n          {this.dragAreaHeader}\n          <div className={this.infoClass} />\n          <input\n            type=\"file\"\n            ref={r => (this.fileInput = r)}\n            className=\"drag-and-drop--input\"\n            accept={this.fileTypesToAccept}\n            onChange={this.handleFileClick}\n          />\n          {this.buttons}\n        </div>\n      </div>\n    )\n  }\n\n  private handleWindowDragOver = (event: DragEvent) => {\n    event.preventDefault()\n  }\n\n  private get fileTypesToAccept(): string {\n    const {fileTypesToAccept} = this.props\n\n    if (!fileTypesToAccept) {\n      return '*'\n    }\n\n    return fileTypesToAccept\n  }\n\n  private get containerClass(): string {\n    const {dragClass} = this.state\n    const {compact, className} = this.props\n\n    return classnames('drag-and-drop', {\n      compact,\n      [dragClass]: true,\n      [className]: className,\n    })\n  }\n\n  private get infoClass(): string {\n    const {uploadContent} = this.state\n\n    return classnames('drag-and-drop--graphic', {success: uploadContent})\n  }\n\n  private get dragAreaClass(): string {\n    const {uploadContent} = this.state\n\n    return classnames('drag-and-drop--form', {active: !uploadContent})\n  }\n\n  private get dragAreaHeader(): JSX.Element {\n    const {uploadContent, fileName} = this.state\n\n    if (uploadContent) {\n      return <div className=\"drag-and-drop--header selected\">{fileName}</div>\n    }\n\n    return (\n      <div className=\"drag-and-drop--header empty\">\n        Drop a file here or click to upload\n      </div>\n    )\n  }\n\n  private get buttons(): JSX.Element | null {\n    const {uploadContent} = this.state\n    const {submitText, submitOnDrop} = this.props\n\n    if (!uploadContent) {\n      return null\n    }\n\n    if (submitOnDrop) {\n      return (\n        <span className=\"drag-and-drop--buttons\">\n          <Button\n            color={ComponentColor.Default}\n            text=\"Cancel\"\n            size={ComponentSize.Medium}\n            type={ButtonType.Button}\n            onClick={this.handleCancelFile}\n          />\n        </span>\n      )\n    }\n\n    return (\n      <span className=\"drag-and-drop--buttons\">\n        <Button\n          color={ComponentColor.Primary}\n          text={submitText}\n          size={ComponentSize.Medium}\n          type={ButtonType.Submit}\n          onClick={this.handleSubmit}\n        />\n        <Button\n          color={ComponentColor.Default}\n          text=\"Cancel\"\n          size={ComponentSize.Medium}\n          type={ButtonType.Submit}\n          onClick={this.handleCancelFile}\n        />\n      </span>\n    )\n  }\n\n  private handleSubmit = () => {\n    const {handleSubmit} = this.props\n    const {uploadContent} = this.state\n\n    handleSubmit(uploadContent as string)\n  }\n\n  private handleFileClick = (e: any): void => {\n    const file = e.currentTarget.files[0]\n\n    if (!file) {\n      return\n    }\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    const reader = new FileReader()\n    reader.readAsText(file)\n    reader.onload = () => {\n      this.setState(\n        {\n          uploadContent: reader.result,\n          fileName: file.name,\n        },\n        () => this.submitOnUpload()\n      )\n    }\n  }\n\n  private handleFileDrop = (e: any): void => {\n    const file = e.dataTransfer.files[0]\n    this.setState({\n      dragClass: 'drag-none',\n    })\n\n    if (!file) {\n      return\n    }\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    const reader = new FileReader()\n    reader.readAsText(file)\n    reader.onload = () => {\n      this.setState(\n        {\n          uploadContent: reader.result,\n          fileName: file.name,\n        },\n        () => this.submitOnDrop()\n      )\n    }\n  }\n\n  private submitOnDrop() {\n    const {submitOnDrop} = this.props\n    if (submitOnDrop) {\n      this.handleSubmit()\n    }\n  }\n\n  private submitOnUpload() {\n    const {submitOnUpload} = this.props\n    if (submitOnUpload) {\n      this.handleSubmit()\n    }\n  }\n\n  private handleFileOpen = (): void => {\n    const {uploadContent} = this.state\n    if (uploadContent === '') {\n      this.fileInput.click()\n    }\n  }\n\n  private handleCancelFile = (): void => {\n    const {onCancel} = this.props\n    this.setState({uploadContent: ''})\n    this.fileInput.value = ''\n    if (onCancel) {\n      onCancel()\n    }\n  }\n\n  private handleDragEnter = (e: DragEvent): void => {\n    dragCounter += 1\n    e.preventDefault()\n    this.setState({dragClass: 'drag-over'})\n  }\n\n  private handleDragLeave = (e: DragEvent): void => {\n    dragCounter -= 1\n    e.preventDefault()\n    if (dragCounter === 0) {\n      this.setState({dragClass: 'drag-none'})\n    }\n  }\n}\n\nexport default DragAndDrop\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {\n  Form,\n  SelectGroup,\n  Button,\n  TextArea,\n  Overlay,\n} from '@influxdata/clockface'\nimport DragAndDrop from 'src/shared/components/DragAndDrop'\n\n// Types\nimport {\n  ButtonType,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\nenum ImportOption {\n  Upload = 'upload',\n  Paste = 'paste',\n}\n\ninterface OwnProps {\n  onDismissOverlay: () => void\n  resourceName: string\n  onSubmit: (importString: string, orgID: string) => void\n  isVisible?: boolean\n  status?: ComponentStatus\n  updateStatus?: (status: ComponentStatus) => void\n}\n\ninterface State {\n  selectedImportOption: ImportOption\n  importContent: string\n}\n\ntype Props = OwnProps & WithRouterProps\n\nclass ImportOverlay extends PureComponent<Props, State> {\n  public static defaultProps: {isVisible: boolean} = {\n    isVisible: true,\n  }\n\n  public state: State = {\n    selectedImportOption: ImportOption.Upload,\n    importContent: '',\n  }\n\n  public render() {\n    const {isVisible, resourceName} = this.props\n    const {selectedImportOption} = this.state\n\n    return (\n      <Overlay visible={isVisible}>\n        <Overlay.Container maxWidth={800}>\n          <Form onSubmit={this.submit}>\n            <Overlay.Header\n              title={`Import ${resourceName}`}\n              onDismiss={this.onDismiss}\n            />\n            <Overlay.Body>\n              <div className=\"import--options\">\n                <SelectGroup>\n                  <SelectGroup.Option\n                    name=\"import-mode\"\n                    id={ImportOption.Upload}\n                    active={selectedImportOption === ImportOption.Upload}\n                    value={ImportOption.Upload}\n                    onClick={this.handleSetImportOption}\n                    titleText=\"Upload\"\n                  >\n                    Upload File\n                  </SelectGroup.Option>\n                  <SelectGroup.Option\n                    name=\"import-mode\"\n                    id={ImportOption.Paste}\n                    active={selectedImportOption === ImportOption.Paste}\n                    value={ImportOption.Paste}\n                    onClick={this.handleSetImportOption}\n                    titleText=\"Paste\"\n                  >\n                    Paste JSON\n                  </SelectGroup.Option>\n                </SelectGroup>\n              </div>\n              {this.importBody}\n            </Overlay.Body>\n            <Overlay.Footer>{this.submitButton}</Overlay.Footer>\n          </Form>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private get importBody(): JSX.Element {\n    const {selectedImportOption, importContent} = this.state\n    const {status = ComponentStatus.Default} = this.props\n\n    if (selectedImportOption === ImportOption.Upload) {\n      return (\n        <DragAndDrop\n          submitText=\"Upload\"\n          handleSubmit={this.handleSetImportContent}\n          submitOnDrop={true}\n          submitOnUpload={true}\n          onCancel={this.clearImportContent}\n        />\n      )\n    }\n    if (selectedImportOption === ImportOption.Paste) {\n      return (\n        <TextArea\n          status={status}\n          value={importContent}\n          onChange={this.handleChangeTextArea}\n          testID=\"import-overlay--textarea\"\n        />\n      )\n    }\n  }\n\n  private handleChangeTextArea = (\n    e: ChangeEvent<HTMLTextAreaElement>\n  ): void => {\n    const {updateStatus = () => {}} = this.props\n    const importContent = e.target.value\n    this.handleSetImportContent(importContent)\n    updateStatus(ComponentStatus.Default)\n  }\n\n  private get submitButton(): JSX.Element {\n    const {resourceName} = this.props\n    const {selectedImportOption, importContent} = this.state\n    const isEnabled =\n      selectedImportOption === ImportOption.Paste ||\n      (selectedImportOption === ImportOption.Upload && importContent)\n    const status = isEnabled\n      ? ComponentStatus.Default\n      : ComponentStatus.Disabled\n\n    return (\n      <Button\n        text={`Import JSON as ${resourceName}`}\n        color={ComponentColor.Primary}\n        status={status}\n        type={ButtonType.Submit}\n      />\n    )\n  }\n\n  private submit = () => {\n    const {importContent} = this.state\n    const {\n      onSubmit,\n      params: {orgID},\n    } = this.props\n\n    onSubmit(importContent, orgID)\n    this.clearImportContent()\n  }\n\n  private clearImportContent = () => {\n    this.setState((state, props) => {\n      const {status = ComponentStatus.Default} = props\n      return status === ComponentStatus.Error ? {...state} : {importContent: ''}\n    })\n  }\n\n  private onDismiss = () => {\n    const {onDismissOverlay} = this.props\n    this.clearImportContent()\n    onDismissOverlay()\n  }\n\n  private handleSetImportOption = (selectedImportOption: ImportOption) => {\n    this.clearImportContent()\n    this.setState({selectedImportOption})\n  }\n\n  private handleSetImportContent = (importContent: string) => {\n    this.setState({importContent})\n  }\n}\n\nexport default withRouter<OwnProps>(ImportOverlay)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {isEmpty} from 'lodash'\nimport {connect} from 'react-redux'\n\n// Components\nimport ImportOverlay from 'src/shared/components/ImportOverlay'\n\n// Copy\nimport {invalidJSON} from 'src/shared/copy/notifications'\n\n// Actions\nimport {\n  getDashboards,\n  createDashboardFromTemplate as createDashboardFromTemplateAction,\n} from 'src/dashboards/actions/thunks'\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\n\n// Types\nimport {ComponentStatus} from '@influxdata/clockface'\n\n// Utils\nimport jsonlint from 'jsonlint-mod'\n\ninterface State {\n  status: ComponentStatus\n}\n\ninterface DispatchProps {\n  createDashboardFromTemplate: typeof createDashboardFromTemplateAction\n  notify: typeof notifyAction\n  populateDashboards: typeof getDashboards\n}\n\ninterface OwnProps extends WithRouterProps {\n  params: {orgID: string}\n}\n\ntype Props = OwnProps & DispatchProps\n\nclass DashboardImportOverlay extends PureComponent<Props> {\n  public state: State = {\n    status: ComponentStatus.Default,\n  }\n\n  public render() {\n    return (\n      <ImportOverlay\n        isVisible={true}\n        onDismissOverlay={this.onDismiss}\n        resourceName=\"Dashboard\"\n        onSubmit={this.handleImportDashboard}\n        status={this.state.status}\n        updateStatus={this.updateOverlayStatus}\n      />\n    )\n  }\n\n  private updateOverlayStatus = (status: ComponentStatus) =>\n    this.setState(() => ({status}))\n\n  private handleImportDashboard = (uploadContent: string) => {\n    const {createDashboardFromTemplate, notify, populateDashboards} = this.props\n\n    let template\n    this.updateOverlayStatus(ComponentStatus.Default)\n    try {\n      template = jsonlint.parse(uploadContent)\n    } catch (error) {\n      this.updateOverlayStatus(ComponentStatus.Error)\n      notify(invalidJSON(error.message))\n      return\n    }\n\n    if (isEmpty(template)) {\n      this.onDismiss()\n    }\n\n    createDashboardFromTemplate(template)\n    populateDashboards()\n    this.onDismiss()\n  }\n\n  private onDismiss = (): void => {\n    const {router} = this.props\n    router.goBack()\n  }\n}\n\nconst mdtp: DispatchProps = {\n  notify: notifyAction,\n  populateDashboards: getDashboards,\n  createDashboardFromTemplate: createDashboardFromTemplateAction,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(withRouter(DashboardImportOverlay))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {\n  Panel,\n  EmptyState,\n  ComponentSize,\n  Grid,\n  Columns,\n  DapperScrollbars,\n} from '@influxdata/clockface'\nimport {TemplateSummary, Template} from 'src/types'\n\ninterface Props {\n  selectedTemplateSummary: TemplateSummary\n  selectedTemplate: Template\n  variables: string[]\n  cells: string[]\n}\n\nclass TemplateBrowserDetails extends PureComponent<Props> {\n  public render() {\n    return (\n      <DapperScrollbars\n        className=\"import-template-overlay--details\"\n        autoSize={false}\n      >\n        <Panel\n          testID=\"template-panel\"\n          className=\"import-template-overlay--panel\"\n        >\n          <Panel.Body size={ComponentSize.Medium}>\n            {this.panelContents}\n          </Panel.Body>\n        </Panel>\n      </DapperScrollbars>\n    )\n  }\n\n  private get panelContents(): JSX.Element {\n    const {selectedTemplateSummary} = this.props\n\n    if (!selectedTemplateSummary) {\n      return (\n        <EmptyState size={ComponentSize.Medium}>\n          <EmptyState.Text>Select a Template from the left</EmptyState.Text>\n        </EmptyState>\n      )\n    }\n\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column widthSM={Columns.Twelve}>\n            {this.templateName}\n            {this.templateDescription}\n          </Grid.Column>\n          {this.props.variables && (\n            <Grid.Column widthSM={Columns.Six}>\n              <h5 className=\"import-template-overlay--heading\">Variables</h5>\n              {this.variablesList}\n            </Grid.Column>\n          )}\n          {this.props.cells && (\n            <Grid.Column widthSM={Columns.Six}>\n              <h5 className=\"import-template-overlay--heading\">Cells</h5>\n              {this.cellsList}\n            </Grid.Column>\n          )}\n        </Grid.Row>\n      </Grid>\n    )\n  }\n\n  private get variablesList(): JSX.Element | JSX.Element[] {\n    const {variables} = this.props\n\n    if (!variables.length) {\n      return (\n        <p className=\"import-template-overlay--included missing\">\n          No included variables\n        </p>\n      )\n    }\n\n    return variables.map((variable, i) => (\n      <p\n        className=\"import-templates-overlay--included\"\n        key={`${i} ${variable}`}\n      >\n        {variable}\n      </p>\n    ))\n  }\n\n  private get cellsList(): JSX.Element | JSX.Element[] {\n    const {cells} = this.props\n\n    if (!cells.length) {\n      return (\n        <p className=\"import-template-overlay--included missing\">\n          No included cells\n        </p>\n      )\n    }\n\n    return cells.map((cell, i) => (\n      <p className=\"import-templates-overlay--included\" key={`${i} ${cell}`}>\n        {cell}\n      </p>\n    ))\n  }\n\n  private get templateDescription(): JSX.Element {\n    const {selectedTemplateSummary} = this.props\n    const description = _.get(selectedTemplateSummary, 'meta.description')\n\n    if (description) {\n      return (\n        <p className=\"import-template-overlay--description\">{description}</p>\n      )\n    }\n\n    return (\n      <p className=\"import-template-overlay--description missing\">\n        No description\n      </p>\n    )\n  }\n\n  private get templateName(): JSX.Element {\n    const {selectedTemplateSummary} = this.props\n    const name = _.get(selectedTemplateSummary, 'meta.name')\n\n    const templateName = name || 'Untitled'\n    const className = name\n      ? 'import-template-overlay--name'\n      : 'import-template-overlay--name missing'\n\n    return <h3 className={className}>{templateName}</h3>\n  }\n}\n\nexport default TemplateBrowserDetails\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport classnames from 'classnames'\nimport {TemplateSummary} from 'src/types'\n\n// Components\nimport {Icon, IconFont} from '@influxdata/clockface'\n\ninterface Props {\n  onClick: (template: TemplateSummary) => void\n  template: TemplateSummary\n  label: string\n  selected: boolean\n  testID: string\n}\n\nclass TemplateBrowser extends PureComponent<Props> {\n  public render() {\n    const {testID, label} = this.props\n\n    return (\n      <div\n        className={this.className}\n        data-testid={testID}\n        onClick={this.handleClick}\n      >\n        <Icon\n          glyph={IconFont.Cube}\n          className=\"import-template-overlay--list-icon\"\n        />\n        <span className=\"import-template-overlay--list-label\">{label}</span>\n      </div>\n    )\n  }\n\n  private get className(): string {\n    const {selected} = this.props\n\n    return classnames('import-template-overlay--template', {active: selected})\n  }\n\n  private handleClick = (): void => {\n    const {onClick, template} = this.props\n\n    onClick(template)\n  }\n}\n\nexport default TemplateBrowser\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {get, orderBy} from 'lodash'\n\n// Components\nimport {DapperScrollbars} from '@influxdata/clockface'\nimport {TemplateSummary} from 'src/types'\nimport TemplateBrowserListItem from 'src/templates/components/createFromTemplateOverlay/TemplateBrowserListItem'\n\ninterface Props {\n  templates: TemplateSummary[]\n  selectedTemplateSummary: TemplateSummary\n  onSelectTemplate: (selectedTemplateSummary: TemplateSummary) => void\n}\n\nclass TemplateBrowser extends PureComponent<Props> {\n  public render() {\n    const {selectedTemplateSummary, templates, onSelectTemplate} = this.props\n\n    return (\n      <DapperScrollbars\n        className=\"import-template-overlay--templates\"\n        autoSize={false}\n        noScrollX={true}\n      >\n        {orderBy(templates, [({meta: {name}}) => name.toLocaleLowerCase()]).map(\n          t => (\n            <TemplateBrowserListItem\n              key={t.id}\n              template={t}\n              label={t.meta.name}\n              onClick={onSelectTemplate}\n              testID={`template--${t.meta.name}`}\n              selected={get(selectedTemplateSummary, 'id', '') === t.id}\n            />\n          )\n        )}\n      </DapperScrollbars>\n    )\n  }\n}\n\nexport default TemplateBrowser\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {TemplateSummary, Template} from 'src/types'\nimport TemplateBrowserDetails from 'src/templates/components/createFromTemplateOverlay/TemplateBrowserDetails'\nimport TemplateBrowserList from 'src/templates/components/createFromTemplateOverlay/TemplateBrowserList'\n\ninterface Props {\n  templates: TemplateSummary[]\n  selectedTemplateSummary: TemplateSummary\n  selectedTemplate: Template\n  variables?: string[]\n  cells?: string[]\n  onSelectTemplate: (selectedTemplateSummary: TemplateSummary) => void\n}\n\nclass TemplateBrowser extends PureComponent<Props> {\n  public render() {\n    const {\n      selectedTemplateSummary,\n      cells,\n      variables,\n      selectedTemplate,\n      templates,\n      onSelectTemplate,\n    } = this.props\n\n    return (\n      <div className=\"import-template-overlay\">\n        <TemplateBrowserList\n          templates={templates}\n          onSelectTemplate={onSelectTemplate}\n          selectedTemplateSummary={selectedTemplateSummary}\n        />\n        <TemplateBrowserDetails\n          cells={cells}\n          variables={variables}\n          selectedTemplateSummary={selectedTemplateSummary}\n          selectedTemplate={selectedTemplate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default TemplateBrowser\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  EmptyState,\n  ComponentSize,\n  Button,\n  IconFont,\n} from '@influxdata/clockface'\n\n// Types\nimport {AppState, Organization} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  org: Organization\n}\n\ntype Props = StateProps & WithRouterProps\n\nclass TemplateBrowserEmpty extends PureComponent<Props> {\n  public render() {\n    return (\n      <div className=\"import-template-overlay--empty\">\n        <EmptyState size={ComponentSize.Large}>\n          <EmptyState.Text>\n            Looks like you don't have any <b>Templates</b> yet, why not import\n            one?\n          </EmptyState.Text>\n          <Button\n            size={ComponentSize.Medium}\n            text=\"Go to Templates Settings\"\n            icon={IconFont.CogThick}\n            onClick={this.handleButtonClick}\n          />\n        </EmptyState>\n      </div>\n    )\n  }\n\n  private handleButtonClick = (): void => {\n    const {router, org} = this.props\n\n    router.push(`/orgs/${org.id}/settings/templates`)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  org: getOrg(state),\n})\n\nexport default connect<StateProps, {}>(\n  mstp,\n  null\n)(withRouter(TemplateBrowserEmpty))\n","// Types\nimport {AppState, ResourceType} from 'src/types'\n\nexport const getAll = (state: AppState, resource: ResourceType) => {\n  const {resources} = state\n  const allIDs: string[] = resources[resource].allIDs\n  const byID = resources[resource].byID\n  return allIDs.map(id => byID[id])\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport {sortBy} from 'lodash'\n\n// Components\nimport {\n  Button,\n  ComponentColor,\n  ComponentStatus,\n  Overlay,\n} from '@influxdata/clockface'\nimport TemplateBrowser from 'src/templates/components/createFromTemplateOverlay/TemplateBrowser'\nimport TemplateBrowserEmpty from 'src/templates/components/createFromTemplateOverlay/TemplateBrowserEmpty'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Actions\nimport {createDashboardFromTemplate as createDashboardFromTemplateAction} from 'src/dashboards/actions/thunks'\nimport {getTemplateByID} from 'src/templates/actions/thunks'\n\n// Constants\nimport {influxdbTemplateList} from 'src/templates/constants/defaultTemplates'\n\n// Types\nimport {\n  TemplateSummary,\n  Template,\n  TemplateType,\n  DashboardTemplateIncluded,\n  AppState,\n  RemoteDataState,\n  DashboardTemplate,\n  ResourceType,\n} from 'src/types'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors/getAll'\n\ninterface StateProps {\n  templates: TemplateSummary[]\n  templateStatus: RemoteDataState\n}\n\ninterface DispatchProps {\n  createDashboardFromTemplate: typeof createDashboardFromTemplateAction\n}\n\ninterface State {\n  selectedTemplateSummary: TemplateSummary\n  selectedTemplate: Template\n  variables: string[]\n  cells: string[]\n}\n\ntype Props = DispatchProps & StateProps\n\nclass DashboardImportFromTemplateOverlay extends PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedTemplateSummary: null,\n      selectedTemplate: null,\n      variables: [],\n      cells: [],\n    }\n  }\n\n  render() {\n    return (\n      <GetResources resources={[ResourceType.Templates]}>\n        <Overlay visible={true}>\n          <Overlay.Container maxWidth={900}>\n            <Overlay.Header\n              title=\"Create Dashboard from a Template\"\n              onDismiss={this.onDismiss}\n            />\n            <Overlay.Body>{this.overlayBody}</Overlay.Body>\n            <Overlay.Footer>\n              <Button\n                text=\"Cancel\"\n                onClick={this.onDismiss}\n                key=\"cancel-button\"\n              />\n              <Button\n                text=\"Create Dashboard\"\n                onClick={this.onSubmit}\n                key=\"submit-button\"\n                testID=\"create-dashboard-button\"\n                color={ComponentColor.Success}\n                status={this.submitStatus}\n              />\n            </Overlay.Footer>\n          </Overlay.Container>\n        </Overlay>\n      </GetResources>\n    )\n  }\n\n  private get overlayBody(): JSX.Element {\n    const {\n      selectedTemplateSummary,\n      cells,\n      variables,\n      selectedTemplate,\n    } = this.state\n    const {templates} = this.props\n\n    if (!templates.length) {\n      return <TemplateBrowserEmpty />\n    }\n\n    return (\n      <TemplateBrowser\n        templates={templates}\n        cells={cells}\n        variables={variables}\n        selectedTemplate={selectedTemplate}\n        selectedTemplateSummary={selectedTemplateSummary}\n        onSelectTemplate={this.handleSelectTemplate}\n      />\n    )\n  }\n\n  private get submitStatus(): ComponentStatus {\n    const {selectedTemplate} = this.state\n\n    return selectedTemplate ? ComponentStatus.Default : ComponentStatus.Disabled\n  }\n\n  private getVariablesForTemplate(template: Template): string[] {\n    const variables = []\n    const included = template.content.included as DashboardTemplateIncluded[]\n    included.forEach(data => {\n      if (data.type === TemplateType.Variable) {\n        variables.push(data.attributes.name)\n      }\n    })\n\n    return variables\n  }\n\n  private getCellsForTemplate(template: Template): string[] {\n    const cells = []\n    const included = template.content.included as DashboardTemplateIncluded[]\n    included.forEach(data => {\n      if (data.type === TemplateType.View) {\n        cells.push(data.attributes.name)\n      }\n    })\n\n    return cells\n  }\n\n  private handleSelectTemplate = async (\n    selectedTemplateSummary: TemplateSummary\n  ): Promise<void> => {\n    const {id} = selectedTemplateSummary\n    let selectedTemplate\n\n    if (!id.includes('influxdb-template')) {\n      selectedTemplate = await getTemplateByID(id)\n    } else {\n      selectedTemplate = selectedTemplateSummary\n    }\n\n    this.setState({\n      selectedTemplateSummary,\n      selectedTemplate,\n      variables: this.getVariablesForTemplate(selectedTemplate),\n      cells: this.getCellsForTemplate(selectedTemplate),\n    })\n  }\n\n  private onDismiss = () => {\n    const {router} = this.props\n    router.goBack()\n  }\n\n  private onSubmit = () => {\n    const {createDashboardFromTemplate} = this.props\n    const dashboardTemplate = this.state.selectedTemplate as DashboardTemplate\n\n    createDashboardFromTemplate(dashboardTemplate)\n    this.onDismiss()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    resources: {\n      templates: {status},\n    },\n  } = state\n  const items = getAll(state, ResourceType.Templates)\n  const filteredTemplates = items.filter(\n    t => !t.meta.type || t.meta.type === TemplateType.Dashboard\n  )\n\n  const templates = sortBy(filteredTemplates, item =>\n    item.meta.name.toLocaleLowerCase()\n  )\n\n  return {\n    templates: [...templates, ...(influxdbTemplateList as any)],\n    templateStatus: status,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  createDashboardFromTemplate: createDashboardFromTemplateAction,\n}\n\nexport default connect<StateProps>(\n  mstp,\n  mdtp\n)(withRouter(DashboardImportFromTemplateOverlay))\n","import _ from 'lodash'\nimport Papa from 'papaparse'\n\ninterface MapResult {\n  values: {[key: string]: string}\n  errors: string[]\n}\n\nexport const csvToMap = (csv: string): MapResult => {\n  let errors = []\n  const trimmed = _.trimEnd(csv, '\\n')\n  const parsedTVS = Papa.parse(trimmed)\n  const templateValuesData: string[][] = _.get(parsedTVS, 'data', [[]])\n\n  if (templateValuesData.length === 0) {\n    return {values: {}, errors}\n  }\n\n  const keys = new Set<string>()\n  const values = {}\n\n  for (const arr of templateValuesData) {\n    if (arr.length === 2 || (arr.length === 3 && arr[2] === '')) {\n      const key = trimAndRemoveQuotes(arr[0])\n      const value = trimAndRemoveQuotes(arr[1])\n\n      if (!keys.has(key) && key !== '') {\n        values[key] = value\n        keys.add(key)\n      }\n    } else {\n      errors = [...errors, arr[0]]\n    }\n  }\n\n  return {values, errors}\n}\n\nexport const trimAndRemoveQuotes = (elt: string): string => {\n  const trimmed = elt.trim()\n  const dequoted = trimmed.replace(/(^\")|(\"$)/g, '')\n\n  return dequoted\n}\n\nexport const mapToCSV = (values: {[key: string]: string}): string =>\n  Object.entries(values)\n    .map(([key, value]) => `${key},\"${value}\"`)\n    .join('\\n')\n","export const pluralize = (collection: any): string =>\n  Object.keys(collection).length === 1 ? '' : 's'\n","import React, {PureComponent, ChangeEvent} from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\n\n// Component\nimport {\n  Grid,\n  Form,\n  TextArea,\n  Dropdown,\n  Columns,\n  Icon,\n  IconFont,\n} from '@influxdata/clockface'\n\n// Utils\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {csvToMap, mapToCSV} from 'src/variables/utils/mapBuilder'\nimport {pluralize} from 'src/shared/utils/pluralize'\n\n// Actions\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\n\n// Constants\nimport {invalidMapType} from 'src/shared/copy/notifications'\n\ntype Values = {[key: string]: string}\ninterface OwnProps {\n  values: Values\n  onChange: (update: {values: Values; errors: string[]}) => void\n  onSelectDefault: (selectedKey: string) => void\n  selected?: string[]\n}\n\ninterface DispatchProps {\n  notify: typeof notifyAction\n}\n\ntype Props = DispatchProps & OwnProps\n\ninterface State {\n  templateValuesString: string\n}\n\n@ErrorHandling\nclass MapVariableBuilder extends PureComponent<Props, State> {\n  state: State = {\n    templateValuesString: mapToCSV(this.props.values),\n  }\n\n  public render() {\n    const {onSelectDefault} = this.props\n    const {templateValuesString} = this.state\n    const {entries} = this\n\n    return (\n      <Form.Element label=\"Comma Separated Values\">\n        <Grid.Row>\n          <Grid.Column>\n            <TextArea\n              value={templateValuesString}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n            />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column widthXS={Columns.Six}>\n            <p>\n              Mapping Contains <strong>{entries.length}</strong> key-value pair\n              {pluralize(entries)}\n            </p>\n          </Grid.Column>\n          <Grid.Column widthXS={Columns.Six}>\n            <Form.Element label=\"Select A Default\">\n              <Dropdown\n                button={(active, onClick) => (\n                  <Dropdown.Button active={active} onClick={onClick}>\n                    {this.defaultID}\n                  </Dropdown.Button>\n                )}\n                menu={onCollapse => (\n                  <Dropdown.Menu onCollapse={onCollapse}>\n                    {entries.map(v => (\n                      <Dropdown.Item\n                        key={v.key}\n                        id={v.key}\n                        value={v.key}\n                        onClick={onSelectDefault}\n                        selected={v.key === this.defaultID}\n                      >\n                        <strong>{v.key}</strong>{' '}\n                        <Icon glyph={IconFont.CaretRight} /> {v.value}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                )}\n              />\n            </Form.Element>\n          </Grid.Column>\n        </Grid.Row>\n      </Form.Element>\n    )\n  }\n\n  private get defaultID(): string {\n    const {selected} = this.props\n    const {entries} = this\n    const firstEntry = _.get(entries, '0.key', 'Enter values above')\n\n    return _.get(selected, '0', firstEntry)\n  }\n\n  private get entries(): {key: string; value: string}[] {\n    const {values} = this.props\n    if (!values) {\n      return []\n    }\n\n    return Object.entries(values).map(([key, value]) => ({\n      key,\n      value,\n    }))\n  }\n\n  private handleBlur = (): void => {\n    const {onChange} = this.props\n    const {templateValuesString} = this.state\n\n    const update = this.constructValuesFromString(templateValuesString)\n\n    onChange(update)\n  }\n\n  private handleChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    const templateValuesString = e.target.value\n    this.setState({templateValuesString})\n  }\n\n  private constructValuesFromString(templateValuesString: string) {\n    const {notify} = this.props\n\n    const {errors, values} = csvToMap(templateValuesString)\n\n    if (errors.length > 0) {\n      notify(invalidMapType())\n    }\n\n    return {values, errors}\n  }\n}\n\nconst mdtp: DispatchProps = {\n  notify: notifyAction,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(MapVariableBuilder)\n","import React, {PureComponent, ChangeEvent} from 'react'\nimport Papa from 'papaparse'\nimport _ from 'lodash'\n\n// Component\nimport {\n  Grid,\n  Form,\n  TextArea,\n  SelectDropdown,\n  Columns,\n} from '@influxdata/clockface'\n\n// Utils\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {trimAndRemoveQuotes} from 'src/variables/utils/mapBuilder'\nimport {pluralize} from 'src/shared/utils/pluralize'\n\ninterface Props {\n  values: string[]\n  onChange: (values: string[]) => void\n  onSelectDefault: (selectedKey: string) => void\n  selected?: string[]\n}\n\ninterface State {\n  csv: string\n}\n\n@ErrorHandling\nexport default class CSVTemplateBuilder extends PureComponent<Props, State> {\n  state: State = {\n    csv: this.props.values.map(value => `\"${value}\"`).join(',\\n '),\n  }\n\n  public render() {\n    const {onSelectDefault, values} = this.props\n    const {csv} = this.state\n\n    return (\n      <Form.Element label=\"Comma Separated Values\">\n        <Grid.Row>\n          <Grid.Column>\n            <TextArea\n              value={csv}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n            />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column widthXS={Columns.Six}>\n            <p>\n              CSV contains <strong>{values.length}</strong> value\n              {pluralize(values)}\n            </p>\n          </Grid.Column>\n          <Grid.Column widthXS={Columns.Six}>\n            <Form.Element label=\"Select A Default\">\n              <SelectDropdown\n                options={values}\n                selectedOption={this.defaultID}\n                onSelect={onSelectDefault}\n              />\n            </Form.Element>\n          </Grid.Column>\n        </Grid.Row>\n      </Form.Element>\n    )\n  }\n\n  private get defaultID(): string {\n    const {selected, values} = this.props\n    const firstEntry = _.get(values, '0', 'Enter values above')\n\n    return _.get(selected, '0', firstEntry)\n  }\n\n  private handleBlur = (): void => {\n    const {onChange} = this.props\n    const {csv} = this.state\n\n    const update = this.getUniqueValuesFromCSV(csv)\n\n    onChange(update)\n  }\n\n  private handleChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    const csv = e.target.value\n    this.setState({csv})\n  }\n\n  private getUniqueValuesFromCSV(csv: string): string[] {\n    const parsedTVS = Papa.parse(csv)\n    const templateValuesData: string[][] = _.get(parsedTVS, 'data', [[]])\n\n    const valueSet: Set<string> = new Set()\n    for (const row of templateValuesData) {\n      for (const value of row) {\n        const trimmedValue = trimAndRemoveQuotes(value)\n\n        if (trimmedValue !== '') {\n          valueSet.add(trimmedValue)\n        }\n      }\n    }\n\n    return [...valueSet]\n  }\n}\n","import React, {PureComponent} from 'react'\n\n// Components\nimport MapVariableBuilder from 'src/variables/components/MapVariableBuilder'\nimport CSVVariableBuilder from 'src/variables/components/CSVVariableBuilder'\nimport {Form, Grid} from '@influxdata/clockface'\n\nimport FluxEditor from 'src/shared/components/FluxMonacoEditor'\n\n// Types\nimport {KeyValueMap, VariableProperties} from 'src/types'\n\ninterface Props {\n  args: VariableProperties\n  onChange: (update: {args: VariableProperties; isValid: boolean}) => void\n  onSelectMapDefault: (selectedKey: string) => void\n  selected: string[]\n}\n\nclass VariableArgumentsEditor extends PureComponent<Props> {\n  render() {\n    const {args, onSelectMapDefault, selected} = this.props\n    switch (args.type) {\n      case 'query':\n        return (\n          <Form.Element label=\"Script\">\n            <Grid.Column>\n              <div className=\"overlay-flux-editor\">\n                <FluxEditor\n                  script={args.values.query}\n                  onChangeScript={this.handleChangeQuery}\n                />\n              </div>\n            </Grid.Column>\n          </Form.Element>\n        )\n      case 'map':\n        return (\n          <MapVariableBuilder\n            onChange={this.handleChangeMap}\n            values={args.values}\n            onSelectDefault={onSelectMapDefault}\n            selected={selected}\n          />\n        )\n      case 'constant':\n        return (\n          <CSVVariableBuilder\n            onChange={this.handleChangeCSV}\n            values={args.values}\n            onSelectDefault={onSelectMapDefault}\n            selected={selected}\n          />\n        )\n    }\n  }\n\n  private handleChangeCSV = (values: string[]) => {\n    const {onChange} = this.props\n\n    const updatedArgs = {type: 'constant' as 'constant', values}\n    const isValid = values.length > 0\n\n    onChange({args: updatedArgs, isValid})\n  }\n\n  private handleChangeQuery = (query: string) => {\n    const {onChange} = this.props\n\n    const values = {language: 'flux' as 'flux', query}\n    const updatedArgs = {type: 'query' as 'query', values}\n\n    const isValid = !query.match(/^\\s*$/)\n\n    onChange({args: updatedArgs, isValid})\n  }\n\n  private handleChangeMap = (update: {\n    values: KeyValueMap\n    errors: string[]\n  }) => {\n    const {onChange} = this.props\n\n    const updatedArgs = {type: 'map' as 'map', values: update.values}\n\n    const isValid =\n      update.errors.length === 0 && Object.keys(update.values).length > 0\n\n    onChange({args: updatedArgs, isValid})\n  }\n}\n\nexport default VariableArgumentsEditor\n","import {Variable} from 'src/types'\nimport {\n  TIME_RANGE_START,\n  TIME_RANGE_STOP,\n  WINDOW_PERIOD,\n} from 'src/variables/constants'\n\nconst reservedVarNames = [TIME_RANGE_START, TIME_RANGE_STOP, WINDOW_PERIOD]\n\nexport const validateVariableName = (\n  varName: string,\n  variables: Variable[]\n): {error: string | null} => {\n  if ((varName || '').match(/^\\s*$/)) {\n    return {error: 'Variable name cannot be empty'}\n  }\n\n  const lowerName = varName.toLocaleLowerCase()\n\n  const reservedMatch = reservedVarNames.find(\n    r => r.toLocaleLowerCase() === lowerName\n  )\n\n  if (!!reservedMatch) {\n    return {\n      error: `Variable name is reserved: ${reservedMatch}`,\n    }\n  }\n\n  const matchingName = variables.find(\n    v => v.name.toLocaleLowerCase() === lowerName\n  )\n\n  if (!!matchingName) {\n    return {\n      error: `Variable name must be unique`,\n    }\n  }\n\n  return {error: null}\n}\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Components\nimport {\n  Form,\n  Input,\n  Button,\n  Grid,\n  Columns,\n  Dropdown,\n} from '@influxdata/clockface'\nimport VariableArgumentsEditor from 'src/variables/components/VariableArgumentsEditor'\n\n// Utils\nimport {validateVariableName} from 'src/variables/utils/validation'\n\n// Constants\nimport {variableItemTypes} from 'src/variables/constants'\n\n// Types\nimport {Props} from 'src/variables/components/VariableFormContext'\nimport {\n  ButtonType,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\nimport {VariableArguments, VariableArgumentType} from 'src/types'\n\ninterface State {\n  isNameValid: boolean\n  hasValidArgs: boolean\n  firstRun: boolean\n  selected: string[]\n}\n\nexport default class VariableForm extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isNameValid: false,\n      hasValidArgs: false,\n      firstRun: true,\n      selected: null,\n    }\n  }\n\n  public render() {\n    const {name, variableType, onHideOverlay} = this.props\n    const {selected} = this.state\n\n    return (\n      <Form onSubmit={this.handleSubmit} testID=\"variable-form--root\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthXS={Columns.Six}>\n              <div className=\"overlay-flux-editor--spacing\">\n                <Form.ValidationElement\n                  label=\"Name\"\n                  value={name}\n                  required={true}\n                  validationFunc={this.handleNameValidation}\n                >\n                  {status => (\n                    <Input\n                      placeholder=\"Give your variable a name\"\n                      name=\"name\"\n                      autoFocus={true}\n                      value={name}\n                      onChange={this.handleChangeInput}\n                      status={status}\n                    />\n                  )}\n                </Form.ValidationElement>\n              </div>\n            </Grid.Column>\n            <Grid.Column widthXS={Columns.Six}>\n              <Form.Element label=\"Type\" required={true}>\n                <Dropdown\n                  button={(active, onClick) => (\n                    <Dropdown.Button\n                      active={active}\n                      onClick={onClick}\n                      testID=\"variable-form--dropdown-button\"\n                    >\n                      {this.typeDropdownLabel}\n                    </Dropdown.Button>\n                  )}\n                  menu={onCollapse => (\n                    <Dropdown.Menu onCollapse={onCollapse}>\n                      {variableItemTypes.map(v => (\n                        <Dropdown.Item\n                          key={v.type}\n                          id={v.type}\n                          testID={`variable-form--dropdown-${v.type}`}\n                          value={v.type}\n                          onClick={this.handleChangeType}\n                          selected={v.type === variableType}\n                        >\n                          {v.label}\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  )}\n                />\n              </Form.Element>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <VariableArgumentsEditor\n                onChange={this.handleChangeArgs}\n                onSelectMapDefault={this.handleSelectMapDefault}\n                selected={selected}\n                args={this.activeVariable}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Form.Footer>\n                <Button\n                  text=\"Cancel\"\n                  color={ComponentColor.Danger}\n                  onClick={onHideOverlay}\n                />\n                <Button\n                  text=\"Create\"\n                  type={ButtonType.Submit}\n                  color={ComponentColor.Primary}\n                  status={\n                    this.isFormValid\n                      ? ComponentStatus.Default\n                      : ComponentStatus.Disabled\n                  }\n                />\n              </Form.Footer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form>\n    )\n  }\n\n  private get typeDropdownLabel(): string {\n    const {variableType} = this.props\n\n    return variableItemTypes.find(variable => variable.type === variableType)\n      .label\n  }\n\n  private get isFormValid(): boolean {\n    const {isNameValid} = this.state\n\n    return this.validArgs && isNameValid\n  }\n\n  private get activeVariable(): VariableArguments {\n    const {initialScript, variableType, query, map, constant} = this.props\n    const {firstRun} = this.state\n\n    switch (variableType) {\n      case 'query': {\n        const _query = query\n        if (firstRun && !_query.values.query.length) {\n          _query.values.query = initialScript || ''\n        }\n        return _query\n      }\n      case 'map':\n        return map\n      case 'constant':\n        return constant\n    }\n\n    return query\n  }\n\n  private get validArgs(): boolean {\n    const {variableType, query, map, constant} = this.props\n\n    switch (variableType) {\n      case 'query':\n        return !!query.values.query\n      case 'constant':\n        return constant.values.length !== 0\n      case 'map':\n        return Object.keys(map.values).length !== 0\n      default:\n        return false\n    }\n  }\n\n  private handleSubmit = (): void => {\n    const {name, onCreateVariable, onHideOverlay} = this.props\n    const {selected} = this.state\n\n    onCreateVariable({\n      selected,\n      name,\n      arguments: this.activeVariable,\n    })\n\n    onHideOverlay()\n  }\n\n  private handleChangeType = (selectedType: string) => {\n    const {variableType, onTypeUpdate} = this.props\n    const {isNameValid} = this.state\n    const defaults = {selected: null, hasValidArgs: false, isNameValid}\n\n    if (variableType === selectedType) {\n      return\n    }\n\n    this.setState(defaults)\n\n    onTypeUpdate(selectedType as VariableArgumentType)\n  }\n\n  private handleSelectMapDefault = (selected: string) => {\n    this.setState({selected: [selected]})\n  }\n\n  private handleChangeArgs = ({\n    args,\n    isValid,\n  }: {\n    args: VariableArguments\n    isValid: boolean\n  }) => {\n    const {onQueryUpdate, onMapUpdate, onConstantUpdate} = this.props\n\n    switch (args.type) {\n      case 'query':\n        onQueryUpdate(args)\n        break\n      case 'map':\n        onMapUpdate(args)\n        break\n      case 'constant':\n        onConstantUpdate(args)\n        break\n    }\n\n    this.setState({hasValidArgs: isValid})\n  }\n\n  private handleNameValidation = (name: string) => {\n    const {variables} = this.props\n    const {error} = validateVariableName(name, variables)\n\n    this.setState({isNameValid: !error})\n\n    return error\n  }\n\n  private handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const {value} = e.target\n\n    this.props.onNameUpdate(value)\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Utils\nimport {\n  extractVariablesList,\n  extractVariableEditorName,\n  extractVariableEditorType,\n  extractVariableEditorQuery,\n  extractVariableEditorMap,\n  extractVariableEditorConstant,\n} from 'src/variables/selectors'\n\n// Actions\nimport {\n  updateName,\n  updateType,\n  updateQuery,\n  updateMap,\n  updateConstant,\n  clearEditor,\n} from 'src/variables/actions/creators'\nimport {createVariable} from 'src/variables/actions/thunks'\n\n// Component\nimport VariableForm from 'src/variables/components/VariableForm'\n\n// Types\nimport {\n  AppState,\n  VariableArgumentType,\n  QueryArguments,\n  CSVArguments,\n  MapArguments,\n  Variable,\n} from 'src/types'\n\ninterface ComponentProps {\n  onHideOverlay?: () => void\n  initialScript?: string\n}\n\ninterface DispatchProps {\n  onCreateVariable: (\n    variable: Pick<Variable, 'name' | 'arguments' | 'selected'>\n  ) => void\n  onNameUpdate: typeof updateName\n  onTypeUpdate: typeof updateType\n  onQueryUpdate: typeof updateQuery\n  onMapUpdate: typeof updateMap\n  onConstantUpdate: typeof updateConstant\n  onEditorClose: typeof clearEditor\n}\n\ninterface StateProps {\n  variables: Variable[]\n  name: string\n  variableType: VariableArgumentType\n  query: QueryArguments\n  map: MapArguments\n  constant: CSVArguments\n}\n\ntype Props = ComponentProps & DispatchProps & StateProps\n\nclass VariableFormContext extends PureComponent<Props> {\n  render() {\n    const props = {\n      ...this.props,\n      onHideOverlay: this.handleHideOverlay,\n    }\n\n    return <VariableForm {...props} />\n  }\n\n  private handleHideOverlay = () => {\n    const {onHideOverlay, onEditorClose} = this.props\n\n    onEditorClose()\n    onHideOverlay()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const variables = extractVariablesList(state),\n    name = extractVariableEditorName(state),\n    variableType = extractVariableEditorType(state),\n    query = extractVariableEditorQuery(state),\n    map = extractVariableEditorMap(state),\n    constant = extractVariableEditorConstant(state)\n\n  return {\n    variables,\n    name,\n    variableType,\n    query,\n    map,\n    constant,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onNameUpdate: updateName,\n  onTypeUpdate: updateType,\n  onQueryUpdate: updateQuery,\n  onMapUpdate: updateMap,\n  onConstantUpdate: updateConstant,\n  onEditorClose: clearEditor,\n  onCreateVariable: createVariable,\n}\n\nexport {Props}\nexport {VariableFormContext}\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(VariableFormContext)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport VariableFormContext from 'src/variables/components/VariableFormContext'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Types\nimport {ResourceType} from 'src/types'\n\ntype Props = WithRouterProps\n\nclass CreateVariableOverlay extends PureComponent<Props> {\n  public render() {\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={1000}>\n          <Overlay.Header\n            title=\"Create Variable\"\n            onDismiss={this.handleHideOverlay}\n          />\n          <Overlay.Body>\n            <GetResources resources={[ResourceType.Variables]}>\n              <VariableFormContext onHideOverlay={this.handleHideOverlay} />\n            </GetResources>\n          </Overlay.Body>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private handleHideOverlay = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/settings/variables`)\n  }\n}\n\nexport {CreateVariableOverlay}\nexport default withRouter<{}>(CreateVariableOverlay)\n","import React, {PureComponent} from 'react'\n\ninterface Props {\n  onMinimize: () => void\n  onMaximize: () => void\n  buttons: JSX.Element[]\n  name?: string\n}\n\nclass DivisionHeader extends PureComponent<Props> {\n  public render() {\n    return (\n      <div className=\"threesizer--header\">\n        {this.renderName}\n        <div className=\"threesizer--header-controls\">\n          {this.props.buttons.map(b => b)}\n        </div>\n      </div>\n    )\n  }\n\n  private get renderName(): JSX.Element {\n    const {name} = this.props\n\n    if (!name) {\n      return\n    }\n\n    return <div className=\"threesizer--header-name\">{name}</div>\n  }\n}\n\nexport default DivisionHeader\n","import React, {\n  CSSProperties,\n  PureComponent,\n  ReactElement,\n  MouseEvent,\n} from 'react'\nimport classnames from 'classnames'\nimport calculateSize from 'calculate-size'\n\nimport DivisionHeader from 'src/shared/components/threesizer/DivisionHeader'\nimport {\n  HANDLE_VERTICAL,\n  HANDLE_HORIZONTAL,\n  MIN_HANDLE_PIXELS,\n} from 'src/shared/constants/index'\n\nconst NOOP = () => {}\n\ninterface Props {\n  handlePixels: number\n  id: string\n  size: number\n  name: string\n  offset: number\n  draggable: boolean\n  orientation: string\n  handleDisplay: string\n  style: CSSProperties\n  activeHandleID: string\n  headerOrientation: string\n  render: (visibility: string, pixels: number) => ReactElement<any>\n  onHandleStartDrag: (id: string, e: MouseEvent<HTMLElement>) => void\n  onDoubleClick: (id: string) => void\n  onMaximize: (id: string) => void\n  onMinimize: (id: string) => void\n  headerButtons: JSX.Element[]\n}\n\nclass Division extends PureComponent<Props> {\n  public static defaultProps = {\n    name: '',\n    handleDisplay: 'visible',\n    style: {},\n    headerButtons: [],\n  }\n\n  private collapseThreshold: number = 0\n  private divisionRef: React.RefObject<HTMLDivElement>\n  private divisionPixels: number = 0\n\n  constructor(props) {\n    super(props)\n    this.divisionRef = React.createRef<HTMLDivElement>()\n  }\n\n  public componentDidMount() {\n    const {name} = this.props\n    this.calcDivisionPixels()\n\n    if (!name) {\n      return 0\n    }\n\n    const {width} = calculateSize(name, {\n      font: '\"Roboto\", Helvetica, Arial, Tahoma, Verdana, sans-serif',\n      fontSize: '16px',\n      fontWeight: '500',\n    })\n    const NAME_OFFSET = 96\n\n    this.collapseThreshold = width + NAME_OFFSET\n  }\n\n  public componentDidUpdate() {\n    this.calcDivisionPixels()\n  }\n\n  public render() {\n    const {render} = this.props\n\n    return (\n      <div\n        className={this.containerClass}\n        style={this.containerStyle}\n        ref={this.divisionRef}\n      >\n        {this.renderDragHandle}\n        <div className={this.contentsClass} style={this.contentStyle}>\n          {this.renderHeader}\n          <div className=\"threesizer--body\">\n            {render(this.visibility, this.divisionPixels)}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  private get renderHeader(): JSX.Element {\n    const {name, headerButtons, orientation} = this.props\n\n    if (!name) {\n      return null\n    }\n\n    if (orientation === HANDLE_VERTICAL) {\n      return (\n        <DivisionHeader\n          buttons={headerButtons}\n          onMinimize={this.handleMinimize}\n          onMaximize={this.handleMaximize}\n        />\n      )\n    }\n  }\n\n  private get visibility(): string {\n    if (this.props.size === 0) {\n      return 'hidden'\n    }\n\n    return 'visible'\n  }\n\n  private get title(): string {\n    return 'Drag to resize.\\nDouble click to expand.'\n  }\n\n  private get contentStyle(): CSSProperties {\n    if (this.props.orientation === HANDLE_HORIZONTAL) {\n      return {\n        height: `calc(100% - ${this.handlePixels}px)`,\n      }\n    }\n\n    return {\n      width: `calc(100% - ${this.handlePixels}px)`,\n    }\n  }\n\n  private get renderDragHandle(): JSX.Element {\n    const {draggable} = this.props\n\n    return (\n      <div\n        style={this.handleStyle}\n        title={this.title}\n        draggable={draggable}\n        onDragStart={this.drag}\n        className={this.handleClass}\n        onDoubleClick={this.handleDoubleClick}\n      >\n        {this.renderDragHandleContents}\n      </div>\n    )\n  }\n\n  private get renderDragHandleContents(): JSX.Element {\n    const {name, handlePixels, orientation, headerButtons} = this.props\n\n    if (!name) {\n      return\n    }\n\n    if (\n      orientation === HANDLE_HORIZONTAL &&\n      handlePixels >= MIN_HANDLE_PIXELS\n    ) {\n      return (\n        <DivisionHeader\n          buttons={headerButtons}\n          onMinimize={this.handleMinimize}\n          onMaximize={this.handleMaximize}\n          name={name}\n        />\n      )\n    }\n\n    if (handlePixels >= MIN_HANDLE_PIXELS) {\n      return <div className={this.titleClass}>{name}</div>\n    }\n  }\n\n  private get handleStyle(): CSSProperties {\n    const {handleDisplay: display, orientation, handlePixels} = this.props\n\n    if (orientation === HANDLE_HORIZONTAL) {\n      return {\n        display,\n        height: `${handlePixels}px`,\n      }\n    }\n\n    return {\n      display,\n      width: `${handlePixels}px`,\n    }\n  }\n\n  private get containerStyle(): CSSProperties {\n    const {style, orientation} = this.props\n    if (orientation === HANDLE_HORIZONTAL) {\n      return {\n        ...style,\n        height: this.size,\n      }\n    }\n\n    return {\n      ...style,\n      width: this.size,\n    }\n  }\n\n  private get size(): string {\n    const {size, offset} = this.props\n    return `calc((100% - ${offset}px) * ${size} + ${this.handlePixels}px)`\n  }\n\n  private get handlePixels(): number {\n    if (this.props.handleDisplay === 'none') {\n      return 0\n    }\n\n    return this.props.handlePixels\n  }\n\n  private get containerClass(): string {\n    const {orientation} = this.props\n    const isAnyHandleBeingDragged = !!this.props.activeHandleID\n    return classnames('threesizer--division', {\n      dragging: isAnyHandleBeingDragged,\n      vertical: orientation === HANDLE_VERTICAL,\n      horizontal: orientation === HANDLE_HORIZONTAL,\n    })\n  }\n\n  private get handleClass(): string {\n    const {draggable, orientation, name} = this.props\n\n    const collapsed = orientation === HANDLE_VERTICAL && this.isTitleObscured\n\n    return classnames('threesizer--handle', {\n      'threesizer--collapsed': collapsed,\n      disabled: !draggable,\n      dragging: this.isDragging,\n      vertical: orientation === HANDLE_VERTICAL,\n      horizontal: orientation === HANDLE_HORIZONTAL,\n      named: name,\n    })\n  }\n\n  private get contentsClass(): string {\n    const {headerOrientation, size} = this.props\n    return classnames(`threesizer--contents ${headerOrientation}`, {\n      'no-shadows': !size,\n    })\n  }\n\n  private get titleClass(): string {\n    const {orientation} = this.props\n\n    const collapsed = orientation === HANDLE_VERTICAL && this.isTitleObscured\n\n    return classnames('threesizer--title', {\n      'threesizer--collapsed': collapsed,\n      vertical: orientation === HANDLE_VERTICAL,\n      horizontal: orientation === HANDLE_HORIZONTAL,\n    })\n  }\n\n  private get isTitleObscured(): boolean {\n    if (this.props.size === 0) {\n      return true\n    }\n\n    if (!this.divisionRef.current || this.props.size >= 0.33) {\n      return false\n    }\n\n    const {width} = this.divisionRef.current.getBoundingClientRect()\n\n    return width <= this.collapseThreshold\n  }\n\n  private get isDragging(): boolean {\n    const {id, activeHandleID} = this.props\n    return id === activeHandleID\n  }\n\n  private drag = e => {\n    const {draggable, id} = this.props\n\n    if (!draggable) {\n      return NOOP\n    }\n\n    this.props.onHandleStartDrag(id, e)\n  }\n\n  private handleDoubleClick = (): void => {\n    const {onDoubleClick, id} = this.props\n\n    onDoubleClick(id)\n  }\n\n  private handleMinimize = (): void => {\n    const {id, onMinimize} = this.props\n    onMinimize(id)\n  }\n\n  private handleMaximize = (): void => {\n    const {id, onMaximize} = this.props\n    onMaximize(id)\n  }\n\n  private calcDivisionPixels = (): void => {\n    const {orientation} = this.props\n\n    const {clientWidth, clientHeight} = this.divisionRef.current\n\n    let divisionPixels = clientWidth\n    if (orientation === HANDLE_HORIZONTAL) {\n      divisionPixels = clientHeight\n    }\n\n    this.divisionPixels = divisionPixels\n  }\n}\n\nexport default Division\n","import React, {Component, ReactElement, MouseEvent, CSSProperties} from 'react'\nimport classnames from 'classnames'\nimport uuid from 'uuid'\nimport _ from 'lodash'\n\nimport Division from 'src/shared/components/threesizer/Division'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\nimport {\n  HANDLE_NONE,\n  HANDLE_PIXELS,\n  HANDLE_HORIZONTAL,\n  HANDLE_VERTICAL,\n  MIN_SIZE,\n  MAX_SIZE,\n} from 'src/shared/constants/'\n\nconst initialDragEvent = {\n  percentX: 0,\n  percentY: 0,\n  mouseX: null,\n  mouseY: null,\n}\n\ninterface State {\n  activeHandleID: string\n  divisions: DivisionState[]\n  dragDirection: string\n  dragEvent: any\n}\n\nexport interface DivisionProps {\n  name?: string\n  handleDisplay?: string\n  handlePixels?: number\n  style?: CSSProperties\n  size?: number\n  headerButtons?: JSX.Element[]\n  headerOrientation?: string\n  render: (visibility: string, pixels: number) => ReactElement<any>\n}\n\ninterface DivisionState extends DivisionProps {\n  id: string\n  size: number\n}\n\ninterface Props {\n  divisions: DivisionProps[]\n  orientation: string\n  containerClass: string\n}\n\n@ErrorHandling\nclass Threesizer extends Component<Props, State> {\n  public static defaultProps = {\n    orientation: HANDLE_HORIZONTAL,\n    containerClass: '',\n  }\n\n  private containerRef: HTMLElement\n  private percentChangeX: number = 0\n  private percentChangeY: number = 0\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeHandleID: null,\n      divisions: this.initialDivisions,\n      dragEvent: initialDragEvent,\n      dragDirection: '',\n    }\n  }\n\n  public componentDidMount() {\n    document.addEventListener('mouseup', this.handleStopDrag)\n    document.addEventListener('mouseleave', this.handleStopDrag)\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('mouseup', this.handleStopDrag)\n    document.removeEventListener('mouseleave', this.handleStopDrag)\n  }\n\n  public componentDidUpdate(__, prevState) {\n    const {dragEvent} = this.state\n    const {orientation} = this.props\n\n    if (_.isEqual(dragEvent, prevState.dragEvent)) {\n      return\n    }\n\n    this.percentChangeX = this.pixelsToPercentX(\n      prevState.dragEvent.mouseX,\n      dragEvent.mouseX\n    )\n\n    this.percentChangeY = this.pixelsToPercentY(\n      prevState.dragEvent.mouseY,\n      dragEvent.mouseY\n    )\n\n    const {percentX, percentY} = dragEvent\n    const {dragEvent: prevDrag} = prevState\n\n    if (orientation === HANDLE_VERTICAL) {\n      const left = percentX < prevDrag.percentX\n\n      if (left) {\n        return this.move.left()\n      }\n\n      return this.move.right()\n    }\n\n    const up = percentY < prevDrag.percentY\n\n    if (up) {\n      return this.move.up()\n    }\n\n    return this.move.down()\n  }\n\n  public render() {\n    const {activeHandleID, divisions} = this.state\n    const {orientation} = this.props\n\n    return (\n      <div\n        className={this.className}\n        onMouseUp={this.handleStopDrag}\n        onMouseMove={this.handleDrag}\n        ref={r => (this.containerRef = r)}\n      >\n        {divisions.map((d, i) => {\n          const headerOrientation = _.get(d, 'headerOrientation', orientation)\n\n          return (\n            <Division\n              key={d.id}\n              id={d.id}\n              name={d.name}\n              size={d.size}\n              style={d.style}\n              offset={this.offset}\n              draggable={i > 0}\n              orientation={orientation}\n              handlePixels={d.handlePixels}\n              handleDisplay={d.handleDisplay}\n              activeHandleID={activeHandleID}\n              onMaximize={this.handleMaximize}\n              onMinimize={this.handleMinimize}\n              headerOrientation={headerOrientation}\n              onDoubleClick={this.handleDoubleClick}\n              render={this.props.divisions[i].render}\n              onHandleStartDrag={this.handleStartDrag}\n              headerButtons={this.props.divisions[i].headerButtons}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n\n  private get offset(): number {\n    const handlesPixelCount = this.state.divisions.reduce((acc, d) => {\n      if (d.handleDisplay === HANDLE_NONE) {\n        return acc\n      }\n\n      return acc + d.handlePixels\n    }, 0)\n\n    return handlesPixelCount\n  }\n\n  private get className(): string {\n    const {orientation, containerClass} = this.props\n    const {activeHandleID} = this.state\n\n    return classnames(`threesizer ${containerClass}`, {\n      dragging: activeHandleID,\n      horizontal: orientation === HANDLE_HORIZONTAL,\n      vertical: orientation === HANDLE_VERTICAL,\n    })\n  }\n\n  private get initialDivisions() {\n    const {divisions} = this.props\n\n    const size = 1 / divisions.length\n    return divisions.map(d => ({\n      ...d,\n      id: uuid.v4(),\n      size: d.size || size,\n      handlePixels: d.handlePixels || HANDLE_PIXELS,\n    }))\n  }\n\n  private handleDoubleClick = (id: string): void => {\n    const clickedDiv = this.state.divisions.find(d => d.id === id)\n\n    if (!clickedDiv) {\n      return\n    }\n\n    const isMaxed = clickedDiv.size === 1\n\n    if (isMaxed) {\n      return this.equalize()\n    }\n\n    const divisions = this.state.divisions.map(d => {\n      if (d.id !== id) {\n        return {...d, size: 0}\n      }\n\n      return {...d, size: 1}\n    })\n\n    this.setState({divisions})\n  }\n\n  private handleMaximize = (id: string): void => {\n    const maxDiv = this.state.divisions.find(d => d.id === id)\n\n    if (!maxDiv) {\n      return\n    }\n\n    const divisions = this.state.divisions.map(d => {\n      if (d.id !== id) {\n        return {...d, size: 0}\n      }\n\n      return {...d, size: 1}\n    })\n\n    this.setState({divisions})\n  }\n\n  private handleMinimize = (id: string): void => {\n    const minDiv = this.state.divisions.find(d => d.id === id)\n    const numDivisions = this.state.divisions.length\n\n    if (!minDiv) {\n      return\n    }\n\n    let size\n    if (numDivisions <= 1) {\n      size = 1\n    } else {\n      size = 1 / (this.state.divisions.length - 1)\n    }\n\n    const divisions = this.state.divisions.map(d => {\n      if (d.id !== id) {\n        return {...d, size}\n      }\n\n      return {...d, size: 0}\n    })\n\n    this.setState({divisions})\n  }\n\n  private equalize = () => {\n    const denominator = this.state.divisions.length\n    const divisions = this.state.divisions.map(d => {\n      return {...d, size: 1 / denominator}\n    })\n\n    this.setState({divisions})\n  }\n\n  private handleStartDrag = (activeHandleID, e: MouseEvent<HTMLElement>) => {\n    const dragEvent = this.mousePosWithinContainer(e)\n    this.setState({activeHandleID, dragEvent})\n  }\n\n  private handleStopDrag = () => {\n    this.setState({activeHandleID: '', dragEvent: initialDragEvent})\n  }\n\n  private mousePosWithinContainer = (e: MouseEvent<HTMLElement>) => {\n    const {pageY, pageX} = e\n    const {top, left, width, height} = this.containerRef.getBoundingClientRect()\n\n    const mouseX = pageX - left\n    const mouseY = pageY - top\n\n    const percentX = mouseX / width\n    const percentY = mouseY / height\n\n    return {\n      mouseX,\n      mouseY,\n      percentX,\n      percentY,\n    }\n  }\n\n  private pixelsToPercentX = (startValue, endValue) => {\n    if (!startValue || !endValue) {\n      return 0\n    }\n\n    const delta = Math.abs(startValue - endValue)\n    const {width} = this.containerRef.getBoundingClientRect()\n\n    return delta / width\n  }\n\n  private pixelsToPercentY = (startValue, endValue) => {\n    if (!startValue || !endValue) {\n      return 0\n    }\n\n    const delta = startValue - endValue\n    const {height} = this.containerRef.getBoundingClientRect()\n\n    return Math.abs(delta / height)\n  }\n\n  private handleDrag = (e: MouseEvent<HTMLElement>) => {\n    const {activeHandleID} = this.state\n    if (!activeHandleID) {\n      return\n    }\n\n    const dragEvent = this.mousePosWithinContainer(e)\n    this.setState({dragEvent})\n  }\n\n  private get move() {\n    const {activeHandleID} = this.state\n\n    const activePosition = _.findIndex(\n      this.state.divisions,\n      d => d.id === activeHandleID\n    )\n\n    return {\n      up: this.up(activePosition),\n      down: this.down(activePosition),\n      left: this.left(activePosition),\n      right: this.right(activePosition),\n    }\n  }\n\n  private up = activePosition => () => {\n    const divisions = this.state.divisions.map((d, i) => {\n      if (!activePosition) {\n        return d\n      }\n\n      const first = i === 0\n      const before = i === activePosition - 1\n      const current = i === activePosition\n\n      if (first && !before) {\n        const second = this.state.divisions[1]\n        if (second && second.size === 0) {\n          return {...d, size: this.shorter(d.size)}\n        }\n\n        return {...d}\n      }\n\n      if (before) {\n        return {...d, size: this.shorter(d.size)}\n      }\n\n      if (current) {\n        return {...d, size: this.taller(d.size)}\n      }\n\n      return {...d}\n    })\n\n    this.setState({divisions})\n  }\n\n  private left = activePosition => () => {\n    const divisions = this.state.divisions.map((d, i) => {\n      if (!activePosition) {\n        return d\n      }\n\n      const first = i === 0\n      const before = i === activePosition - 1\n      const active = i === activePosition\n\n      if (first && !before) {\n        const second = this.state.divisions[1]\n        if (second && second.size === 0) {\n          return {...d, size: this.thinner(d.size)}\n        }\n\n        return {...d}\n      }\n\n      if (before) {\n        return {...d, size: this.thinner(d.size)}\n      }\n\n      if (active) {\n        return {...d, size: this.fatter(d.size)}\n      }\n\n      return {...d}\n    })\n\n    this.setState({divisions})\n  }\n\n  private right = activePosition => () => {\n    const divisions = this.state.divisions.map((d, i, divs) => {\n      const before = i === activePosition - 1\n      const active = i === activePosition\n      const after = i === activePosition + 1\n\n      if (before) {\n        return {...d, size: this.fatter(d.size)}\n      }\n\n      if (active) {\n        return {...d, size: this.thinner(d.size)}\n      }\n\n      if (after) {\n        const leftIndex = i - 1\n        const left = _.get(divs, leftIndex, {size: 'none'})\n\n        if (left && left.size === 0) {\n          return {...d, size: this.thinner(d.size)}\n        }\n\n        return {...d}\n      }\n\n      return {...d}\n    })\n\n    this.setState({divisions})\n  }\n\n  private down = activePosition => () => {\n    const divisions = this.state.divisions.map((d, i, divs) => {\n      const before = i === activePosition - 1\n      const current = i === activePosition\n      const after = i === activePosition + 1\n\n      if (before) {\n        return {...d, size: this.taller(d.size)}\n      }\n\n      if (current) {\n        return {...d, size: this.shorter(d.size)}\n      }\n\n      if (after) {\n        const above = divs[i - 1]\n        if (above && above.size === 0) {\n          return {...d, size: this.shorter(d.size)}\n        }\n\n        return {...d}\n      }\n\n      return {...d}\n    })\n\n    this.setState({divisions})\n  }\n\n  private taller = (size: number): number => {\n    const newSize = size + this.percentChangeY\n    return this.enforceMax(newSize)\n  }\n\n  private fatter = (size: number): number => {\n    const newSize = size + this.percentChangeX\n    return this.enforceMax(newSize)\n  }\n\n  private shorter = (size: number): number => {\n    const newSize = size - this.percentChangeY\n    return this.enforceMin(newSize)\n  }\n\n  private thinner = (size: number): number => {\n    const newSize = size - this.percentChangeX\n    return this.enforceMin(newSize)\n  }\n\n  private enforceMax = (size: number): number => {\n    return size > MAX_SIZE ? MAX_SIZE : size\n  }\n\n  private enforceMin = (size: number): number => {\n    return size < MIN_SIZE ? MIN_SIZE : size\n  }\n}\n\nexport default Threesizer\n","// Libraries\nimport {SFC, ReactElement} from 'react'\nimport {groupBy} from 'lodash'\n\n// Types\nimport {FluxToolbarFunction} from 'src/types/shared'\n\ninterface Props {\n  funcs: FluxToolbarFunction[]\n  searchTerm?: string\n  children: (funcs: {\n    [category: string]: FluxToolbarFunction[]\n  }) => JSX.Element | JSX.Element[]\n}\n\nconst TransformToolbarFunctions: SFC<Props> = props => {\n  const {searchTerm, funcs, children} = props\n\n  const filteredFunctions = funcs.filter(func =>\n    func.name.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  const groupedFunctions = groupBy(filteredFunctions, 'category')\n\n  return children(groupedFunctions) as ReactElement<any>\n}\n\nexport default TransformToolbarFunctions\n","import React, {SFC} from 'react'\n\ninterface Props {\n  description: string\n}\n\nconst TooltipDescription: SFC<Props> = ({description}) => (\n  <article className=\"flux-functions-toolbar--description\">\n    <div className=\"flux-functions-toolbar--heading\">Description</div>\n    <span>{description}</span>\n  </article>\n)\n\nexport default TooltipDescription\n","import React, {PureComponent} from 'react'\n\ninterface Args {\n  name: string\n  type: string\n  desc: string\n}\n\ninterface Props {\n  argsList?: Args[]\n}\n\nclass TooltipArguments extends PureComponent<Props> {\n  public render() {\n    return (\n      <article>\n        <div className=\"flux-functions-toolbar--heading\">Arguments</div>\n        <div className=\"flux-functions-toolbar--snippet\">{this.arguments}</div>\n      </article>\n    )\n  }\n\n  private get arguments(): JSX.Element | JSX.Element[] {\n    const {argsList} = this.props\n\n    if (argsList.length > 0) {\n      return argsList.map(a => {\n        return (\n          <div className=\"flux-functions-toolbar--arguments\" key={a.name}>\n            <span>{a.name}:</span>\n            <span>{a.type}</span>\n            <div>{a.desc}</div>\n          </div>\n        )\n      })\n    }\n\n    return <div className=\"flux-functions-toolbar--arguments\">None</div>\n  }\n}\n\nexport default TooltipArguments\n","import React, {SFC} from 'react'\n\ninterface Props {\n  example: string\n}\n\nconst TooltipExample: SFC<Props> = ({example}) => (\n  <article>\n    <div className=\"flux-functions-toolbar--heading\">Example</div>\n    <div className=\"flux-functions-toolbar--snippet\">{example}</div>\n  </article>\n)\n\nexport default TooltipExample\n","import React, {SFC} from 'react'\n\ninterface Props {\n  link: string\n}\n\nconst TooltipLink: SFC<Props> = ({link}) => (\n  <p className=\"tooltip--link\">\n    Still have questions? Check out the{' '}\n    <a target=\"_blank\" href={link}>\n      Flux Docs\n    </a>\n    .\n  </p>\n)\n\nexport default TooltipLink\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\nimport TooltipDescription from 'src/timeMachine/components/fluxFunctionsToolbar/TooltipDescription'\nimport TooltipArguments from 'src/timeMachine/components/fluxFunctionsToolbar/TooltipArguments'\nimport TooltipExample from 'src/timeMachine/components/fluxFunctionsToolbar/TooltipExample'\nimport TooltipLink from 'src/timeMachine/components/fluxFunctionsToolbar/TooltipLink'\n\n// Types\nimport {FluxToolbarFunction} from 'src/types/shared'\n\nconst MAX_HEIGHT = 400\n\ninterface Props {\n  func: FluxToolbarFunction\n}\n\nconst FunctionTooltipContents: FunctionComponent<Props> = ({\n  func: {desc, args, example, link},\n}) => {\n  return (\n    <FancyScrollbar autoHeight={true} maxHeight={MAX_HEIGHT} autoHide={false}>\n      <TooltipDescription description={desc} />\n      <TooltipArguments argsList={args} />\n      <TooltipExample example={example} />\n      <TooltipLink link={link} />\n    </FancyScrollbar>\n  )\n}\n\nexport default FunctionTooltipContents\n","// Libraries\nimport React, {FC, createRef} from 'react'\n\n// Component\nimport FunctionTooltipContents from 'src/timeMachine/components/fluxFunctionsToolbar/FunctionTooltipContents'\nimport {\n  Popover,\n  PopoverPosition,\n  PopoverInteraction,\n  Appearance,\n} from '@influxdata/clockface'\n\n// Types\nimport {FluxToolbarFunction} from 'src/types/shared'\n\ninterface Props {\n  func: FluxToolbarFunction\n  onClickFunction: (func: FluxToolbarFunction) => void\n  testID: string\n}\n\nconst defaultProps = {\n  testID: 'toolbar-function',\n}\n\nconst ToolbarFunction: FC<Props> = ({func, onClickFunction, testID}) => {\n  const functionRef = createRef<HTMLDivElement>()\n  const handleClickFunction = () => {\n    onClickFunction(func)\n  }\n  return (\n    <div\n      className=\"flux-functions-toolbar--function\"\n      ref={functionRef}\n      data-testid={testID}\n    >\n      <Popover\n        appearance={Appearance.Outline}\n        position={PopoverPosition.ToTheLeft}\n        triggerRef={functionRef}\n        showEvent={PopoverInteraction.Hover}\n        hideEvent={PopoverInteraction.Hover}\n        distanceFromTrigger={8}\n        testID=\"toolbar-popover\"\n        contents={() => <FunctionTooltipContents func={func} />}\n      />\n      <dd\n        onClick={handleClickFunction}\n        data-testid={`flux-function ${func.name}`}\n      >\n        {func.name}\n        &nbsp;\n        <span className=\"flux-functions-toolbar--helper\">Click to Add</span>\n      </dd>\n    </div>\n  )\n}\n\nToolbarFunction.defaultProps = defaultProps\n\nexport default ToolbarFunction\n","// Libraries\nimport React, {SFC} from 'react'\n\n// Components\nimport ToolbarFunction from 'src/timeMachine/components/fluxFunctionsToolbar/ToolbarFunction'\n\n// Types\nimport {FluxToolbarFunction} from 'src/types/shared'\n\ninterface Props {\n  category: string\n  funcs: FluxToolbarFunction[]\n  onClickFunction: (func: FluxToolbarFunction) => void\n}\n\nconst FunctionCategory: SFC<Props> = props => {\n  const {category, funcs, onClickFunction} = props\n\n  return (\n    <dl className=\"flux-functions-toolbar--category\">\n      <dt>{category}</dt>\n      {funcs.map(func => (\n        <ToolbarFunction\n          onClickFunction={onClickFunction}\n          key={func.name}\n          func={func}\n          testID=\"toolbar-function\"\n        />\n      ))}\n    </dl>\n  )\n}\n\nexport default FunctionCategory\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {debounce} from 'lodash'\n\n// Components\nimport {Input} from '@influxdata/clockface'\n\n// Types\nimport {InputType, IconFont} from '@influxdata/clockface'\n\ninterface Props {\n  onSearch: (s: string) => void\n  resourceName: string\n}\n\ninterface State {\n  searchTerm: string\n}\n\nconst DEBOUNCE_MS = 100\n\nclass SearchBar extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      searchTerm: '',\n    }\n\n    this.handleSearch = debounce(this.handleSearch, DEBOUNCE_MS)\n  }\n\n  public render() {\n    return (\n      <div className=\"search-bar\">\n        <Input\n          type={InputType.Text}\n          icon={IconFont.Search}\n          placeholder={`Filter ${this.props.resourceName}...`}\n          onChange={this.handleChange}\n          value={this.state.searchTerm}\n        />\n      </div>\n    )\n  }\n\n  private handleSearch = (): void => {\n    this.props.onSearch(this.state.searchTerm)\n  }\n\n  private handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    this.setState({searchTerm: e.target.value}, this.handleSearch)\n  }\n}\n\nexport default SearchBar\n","import {FluxToolbarFunction} from 'src/types/shared'\n\nexport const FROM: FluxToolbarFunction = {\n  name: 'from',\n  args: [\n    {\n      name: 'bucket',\n      desc: 'The name of the bucket to query.',\n      type: 'String',\n    },\n    {\n      name: 'bucketID',\n      desc: 'The string-encoded ID of the bucket to query.',\n      type: 'String',\n    },\n  ],\n  package: '',\n  desc:\n    'Used to retrieve data from an InfluxDB data source. It returns a stream of tables from the specified bucket. Each unique series is contained within its own table. Each record in the table represents a single point in the series.',\n  example: 'from(bucket: \"telegraf\")',\n  category: 'Inputs',\n  link:\n    'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/inputs/from/',\n}\n\nexport const RANGE: FluxToolbarFunction = {\n  name: 'range',\n  args: [\n    {\n      name: 'start',\n      desc: 'The earliest time to include in results.',\n      type: 'Duration',\n    },\n    {\n      name: 'stop',\n      desc: 'The latest time to include in results. Defaults to `now()`.',\n      type: 'Duration',\n    },\n  ],\n  package: '',\n  desc:\n    \"Filters records based on time bounds. Each input table's records are filtered to contain only records that exist within the time bounds. Each input table's group key value is modified to fit within the time bounds. Tables where all records exists outside the time bounds are filtered entirely.\",\n  example: 'range(start: -15m, stop: now())',\n  category: 'Transformations',\n  link:\n    'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/range/',\n}\n\nexport const MEAN: FluxToolbarFunction = {\n  name: 'mean',\n  args: [\n    {\n      name: 'column',\n      desc: 'The column on which to compute the mean. Defaults to `\"_value\"`',\n      type: 'String',\n    },\n  ],\n  package: '',\n  desc: 'Computes the mean or average of non-null records in the input table.',\n  example: 'mean(column: \"_value\")',\n  category: 'Aggregates',\n  link:\n    'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/mean/',\n}\n\nexport const UNION: FluxToolbarFunction = {\n  name: 'union',\n  args: [\n    {\n      name: 'tables',\n      desc:\n        'Specifies the streams to union together. There must be at least two streams.',\n      type: 'Array of Strings',\n    },\n  ],\n  package: '',\n  desc:\n    'Concatenates two or more input streams into a single output stream. The output schemas of the `union()` function is the union of all input schemas. A sort operation may be added if a specific sort order is needed.',\n  example: 'union(tables: [table1, table2])',\n  category: 'Transformations',\n  link:\n    'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/union/',\n}\n\nexport const MATH_ABS: FluxToolbarFunction = {\n  name: 'math.abs',\n  args: [\n    {\n      name: 'x',\n      desc: 'The value used in the operation.',\n      type: 'Float',\n    },\n  ],\n  package: 'math',\n  desc: 'Returns the absolute value of x.',\n  example: 'math.abs(x: r._value)',\n  category: 'Transformations',\n  link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/abs/',\n}\n\nexport const MATH_FLOOR: FluxToolbarFunction = {\n  name: 'math.floor',\n  args: [\n    {\n      name: 'x',\n      desc: 'The value used in the operation.',\n      type: 'Float',\n    },\n  ],\n  package: 'math',\n  desc: 'Returns the greatest integer value less than or equal to x.',\n  example: 'math.floor(x: r._value)',\n  category: 'Transformations',\n  link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/floor/',\n}\n\nexport const STRINGS_TITLE: FluxToolbarFunction = {\n  name: 'strings.title',\n  args: [\n    {\n      name: 'v',\n      desc: 'The string value to convert.',\n      type: 'String',\n    },\n  ],\n  package: 'strings',\n  desc: 'Converts a string to title case.',\n  example: 'strings.title(v: r._value)',\n  category: 'Transformations',\n  link:\n    'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/title/',\n}\n\nexport const STRINGS_TRIM: FluxToolbarFunction = {\n  name: 'strings.trim',\n  args: [\n    {\n      name: 'v',\n      desc: 'The string value to trim.',\n      type: 'String',\n    },\n    {\n      name: 'cutset',\n      desc:\n        'The leading and trailing characters to trim from the string value. Only characters that match exactly are trimmed.',\n      type: 'String',\n    },\n  ],\n  package: 'strings',\n  desc: 'Removes specified leading and trailing characters from a string.',\n  example: 'strings.trim(v: r._value, cutset: \"_\")',\n  category: 'Transformations',\n  link:\n    'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/trim/',\n}\n\nexport const FLUX_FUNCTIONS: FluxToolbarFunction[] = [\n  {\n    name: 'aggregateWindow',\n    args: [\n      {\n        name: 'every',\n        desc: 'The duration of windows.',\n        type: 'Duration',\n      },\n      {\n        name: 'fn',\n        desc: 'The aggregate function used in the operation.',\n        type: 'Unquoted String',\n      },\n      {\n        name: 'column',\n        desc: 'The column on which to operate. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'timeSrc',\n        desc:\n          'The \"time source\" column from which time is copied for the aggregate record. Defaults to `\"_stop\"`.',\n        type: 'String',\n      },\n      {\n        name: 'timeDst',\n        desc:\n          'The \"time destination\" column to which time is copied for the aggregate record. Defaults to `\"_time\"`.',\n        type: 'String',\n      },\n      {\n        name: 'createEmpty',\n        desc:\n          'For windows without data, this will create an empty window and fill it with a `null` aggregate value.',\n        type: 'Boolean',\n      },\n    ],\n    package: '',\n    desc: 'Applies an aggregate function to fixed windows of time.',\n    example: 'aggregateWindow(every: 1m, fn: mean)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/aggregatewindow/',\n  },\n  {\n    name: 'bigtable.from',\n    args: [\n      {\n        name: 'token',\n        desc:\n          'The Google Cloud IAM token to use to access the Cloud Bigtable database.',\n        type: 'String',\n      },\n      {\n        name: 'project',\n        desc:\n          'The project ID of the Cloud Bigtable project to retrieve data from.',\n        type: 'String',\n      },\n      {\n        name: 'instance',\n        desc:\n          'The instance ID of the Cloud Bigtable instance to retrieve data from.',\n        type: 'String',\n      },\n      {\n        name: 'table',\n        desc: 'The name of the Cloud Bigtable table to retrieve data from.',\n        type: 'String',\n      },\n    ],\n    package: 'experimental/bigtable',\n    desc: 'Retrieves data from a Google Cloud Bigtable data source.',\n    example:\n      'bigtable.from(token: \"mySuPeRseCretTokEn\", project: \"exampleProjectID\", instance: \"exampleInstanceID\", table: \"example-table\")',\n    category: 'Inputs',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/bigtable/from/',\n  },\n  {\n    name: 'bool',\n    args: [\n      {\n        name: 'v',\n        desc: 'The value to convert.',\n        type: 'String, Integer, UInteger, Float',\n      },\n    ],\n    package: '',\n    desc: 'Converts a single value to a boolean.',\n    example: 'bool(v: r._value)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/bool/',\n  },\n  {\n    name: 'bottom',\n    args: [\n      {\n        name: 'n',\n        desc: 'The number of rows to return.',\n        type: 'Integer',\n      },\n      {\n        name: 'columns',\n        desc:\n          'List of columns by which to sort. Sort precedence is determined by list order (left to right) .Default is `[\"_value\"]`',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc: 'Sorts a table by columns and keeps only the bottom n rows.',\n    example: 'bottom(n:10, columns: [\"_value\"])',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/bottom/',\n  },\n  {\n    name: 'buckets',\n    args: [],\n    package: '',\n    desc: 'Returns a list of buckets in the organization.',\n    example: 'buckets()',\n    category: 'Inputs',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/inputs/buckets/',\n  },\n  {\n    name: 'bytes',\n    args: [\n      {\n        name: 'v',\n        desc: 'The value to convert.',\n        type: 'String, Integer, UInteger, Float, Boolean',\n      },\n    ],\n    package: '',\n    desc: 'Converts a single value to bytes.',\n    example: 'bytes(t: r._value)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/bytes/',\n  },\n  {\n    name: 'chandeMomentumOscillator',\n    args: [\n      {\n        name: 'n',\n        desc: 'The period or number of points to use in the calculation.',\n        type: 'Integer',\n      },\n      {\n        name: 'columns',\n        desc: 'Columns to operate on. Defaults to `[\"_value\"]`.',\n        type: 'Array of Strings`',\n      },\n    ],\n    package: '',\n    desc:\n      'Applies the technical momentum indicator developed by Tushar Chande.',\n    example: 'chandeMomentumOscillator(n: 10)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/chandemomentumoscillator/',\n  },\n  {\n    name: 'columns',\n    args: [\n      {\n        name: 'column',\n        desc:\n          'The name of the output column in which to store the column labels.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Lists the column labels of input tables.',\n    example: 'columns(column: \"_value\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/columns/',\n  },\n  {\n    name: 'contains',\n    args: [\n      {\n        name: 'value',\n        desc: 'The value to search for.',\n        type: 'Boolean, Integer, UInteger, Float, String, Time',\n      },\n      {\n        name: 'set',\n        desc: 'The set of values in which to search.',\n        type: 'Boolean, Integer, UInteger, Float, String, Time',\n      },\n    ],\n    package: '',\n    desc: 'Tests whether a value is a member of a set.',\n    example: 'contains(value: 1, set: [1,2,3])',\n    category: 'Test',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/tests/contains/',\n  },\n  {\n    name: 'count',\n    args: [\n      {\n        name: 'column',\n        desc: 'The column on which to operate. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Outputs the number of records in the specified column.',\n    example: 'count(column: \"_value\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/count/',\n  },\n  {\n    name: 'cov',\n    args: [\n      {\n        name: 'x',\n        desc: 'One input stream used to calculate the covariance.',\n        type: 'Object',\n      },\n      {\n        name: 'y',\n        desc: 'The other input table used to calculate the covariance.',\n        type: 'Object',\n      },\n      {\n        name: 'on',\n        desc: 'The list of columns on which to join.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'pearsonr',\n        desc:\n          'Indicates whether the result should be normalized to be the Pearson R coefficient',\n        type: 'Boolean',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the covariance between two streams by first joining the streams, then performing the covariance operation.',\n    example:\n      'cov(x: table1, y: table2, on: [\"_time\", \"_field\"], pearsonr: false)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/cov/',\n  },\n  {\n    name: 'covariance',\n    args: [\n      {\n        name: 'columns',\n        desc:\n          'A list of columns on which to operate. Exactly two columns must be provided.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'pearsonr',\n        desc:\n          'Indicates whether the result should be normalized to be the Pearson R coefficient',\n        type: 'Boolean',\n      },\n      {\n        name: 'valueDst',\n        desc:\n          'The column into which the result will be placed. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Computes the covariance between two columns.',\n    example:\n      'covariance(columns: [\"column_x\", \"column_y\"], pearsonr: false, valueDst: \"_value\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/covariance/',\n  },\n  {\n    name: 'csv.from',\n    args: [\n      {\n        name: 'file',\n        desc: 'The file path of the CSV file to query.',\n        type: 'String',\n      },\n      {\n        name: 'csv',\n        desc:\n          'Raw CSV-formatted text. CSV data must be in the CSV format produced by the Flux HTTP response standard.',\n        type: 'String',\n      },\n    ],\n    package: 'csv',\n    desc: 'Retrieves data from a comma-separated value (CSV) data source.',\n    example: 'csv.from(file: \"/path/to/data-file.csv\")',\n    category: 'Inputs',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/csv/from/',\n  },\n  {\n    name: 'cumulativeSum',\n    args: [\n      {\n        name: 'columns',\n        desc:\n          'A list of columns on which to operate. Defaults to `[\"_value\"]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes a running sum for non-null records in the table. The output table schema will be the same as the input table.',\n    example: 'cumulativeSum(columns: [\"_value\"])',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/cumulativesum/',\n  },\n  {\n    name: 'date.hour',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc: 'Returns the hour of a specified time. Results range from `[0-23]`.',\n    example: 'date.hour(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/hour/',\n  },\n  {\n    name: 'date.microsecond',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the microsecond of a specified time. Results range from `[1-999999]`.',\n    example: 'date.microsecond(t: 2019-07-17T12:05:21.012934584Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/microsecond/',\n  },\n  {\n    name: 'date.millisecond',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the millisecond of a specified time. Results range from `[1-999]`.',\n    example: 'date.millisecond(t: 2019-07-17T12:05:21.012934584Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/millisecond/',\n  },\n  {\n    name: 'date.minute',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the minute of a specified time. Results range from `[0-59]`.',\n    example: 'date.minute(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/minute/',\n  },\n  {\n    name: 'date.month',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc: 'Returns the month of a specified time. Results range from `[1-12]`.',\n    example: 'date.month(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/month/',\n  },\n  {\n    name: 'date.monthDay',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the day of the month for a specified time. Results range from `[1-31]`.',\n    example: 'date.monthDay(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/monthday/',\n  },\n  {\n    name: 'date.nanosecond',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the nanosecond of a specified time. Results range from `[1-999999999]`.',\n    example: 'date.nanosecond(t: 2019-07-17T12:05:21.012934584Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/nanosecond/',\n  },\n  {\n    name: 'date.quarter',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the quarter of the year for a specified time. Results range from `[1-4]`.',\n    example: 'date.quarter(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/quarter/',\n  },\n  {\n    name: 'date.second',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the second of a specified time. Results range from `[0-59]`.',\n    example: 'date.second(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/second/',\n  },\n  {\n    name: 'date.truncate',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n      {\n        name: 'unit',\n        desc:\n          'The unit time to truncate to. Only use `1` and the unit of time to specify the `unit`. For example, `1s`, `1m`, `1h`.',\n        type: 'Duration',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Truncates the time to a specified unit. Results range from `[0-59]`.',\n    example: 'date.truncate(t: 2019-07-17T12:05:21.012Z, unit: 1s)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/truncate/',\n  },\n  {\n    name: 'date.week',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the ISO week of the year for a specified time. Results range from `[1-53]`.',\n    example: 'date.week(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/week/',\n  },\n  {\n    name: 'date.weekDay',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the day of the week for a specified time. Results range from `[0-6]`.',\n    example: 'date.weekDay(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/weekday/',\n  },\n  {\n    name: 'date.year',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc: 'Returns the year of a specified time.',\n    example: 'date.year(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/year/',\n  },\n  {\n    name: 'date.yearDay',\n    args: [\n      {\n        name: 't',\n        desc: 'The time to operate on.',\n        type: 'Time',\n      },\n    ],\n    package: 'date',\n    desc:\n      'Returns the day of the year for a specified time. Results include leap days and range from `[1-366]`.',\n    example: 'date.yearDay(t: 2019-07-17T12:05:21.012Z)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/date/yearday/',\n  },\n  {\n    name: 'derivative',\n    args: [\n      {\n        name: 'unit',\n        desc: 'The time duration used when creating the derivative.',\n        type: 'Duration',\n      },\n      {\n        name: 'nonNegative',\n        desc:\n          'Indicates if the derivative is allowed to be negative. When set to `true`, if a value is less than the previous value, it is assumed the previous value should have been a zero.',\n        type: 'Boolean',\n      },\n      {\n        name: 'columns',\n        desc:\n          'A list of columns on which to operate. Defaults to `[\"_value\"]`.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'timeColumn',\n        desc: 'The column name for the time values. Defaults to `\"_time\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the rate of change per unit of time between subsequent non-null records. The output table schema will be the same as the input table.',\n    example:\n      'derivative(unit: 1s, nonNegative: true, columns: [\"_value\"], timeColumn: \"_time\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/derivative/',\n  },\n  {\n    name: 'difference',\n    args: [\n      {\n        name: 'nonNegative',\n        desc:\n          'Indicates if the derivative is allowed to be negative. When set to `true`, if a value is less than the previous value, it is assumed the previous value should have been a zero.',\n        type: 'Boolean',\n      },\n      {\n        name: 'columns',\n        desc:\n          'The columns to use to compute the difference. Defaults to `\"_value\"`.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'keepFirst',\n        desc:\n          'Indicates the first row should be kept. If `true`, the difference will be `null`. Defaults to `false`.',\n        type: 'Boolean',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the difference between subsequent non-null records in the specified columns.',\n    example: 'difference(nonNegative: false, columns: [\"_value\"])',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/difference/',\n  },\n  {\n    name: 'distinct',\n    args: [\n      {\n        name: 'column',\n        desc: 'Column on which to track unique values.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Returns the unique values for a given column.',\n    example: 'distinct(column: \"host\")',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/distinct/',\n  },\n  {\n    name: 'doubleEMA',\n    args: [\n      {\n        name: 'n',\n        desc: 'The number of points to average.',\n        type: 'Integer',\n      },\n    ],\n    package: '',\n    desc:\n      'Calculates the exponential moving average of values in the `_value` column grouped into `n` number of points, giving more weight to recent data at double the rate of `exponentialMovingAverage()`.',\n    example: 'doubleEMA(n: 5)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/doubleema/',\n  },\n  {\n    name: 'drop',\n    args: [\n      {\n        name: 'columns',\n        desc:\n          'A list of columns to be removed from the table. Cannot be used with `fn`.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'fn',\n        desc:\n          'A function which takes a column name as a parameter and returns a boolean indicating whether or not the column should be removed from the table. Cannot be used with `columns`.',\n        type: 'Function',\n      },\n    ],\n    package: '',\n    desc:\n      'Removes specified columns from a table. Columns can be specified either through a list or a predicate function. When a dropped column is part of the group key, it will be removed from the key.',\n    example: 'drop(columns: [\"col1\", \"col2\"])',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/drop/',\n  },\n  {\n    name: 'duplicate',\n    args: [\n      {\n        name: 'column',\n        desc: 'The column name to duplicate.',\n        type: 'String',\n      },\n      {\n        name: 'as',\n        desc: 'The name assigned to the duplicate column.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Duplicates a specified column in a table.',\n    example: 'duplicate(column: \"column-name\", as: \"duplicate-name\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/duplicate/',\n  },\n  {\n    name: 'duration',\n    args: [\n      {\n        name: 'v',\n        desc: 'The value to convert.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Converts a single value to a duration.',\n    example: 'duration(v: r._value)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/duration/',\n  },\n  {\n    name: 'experimental.addDuration',\n    args: [\n      {\n        name: 'd',\n        desc: 'The duration to add.',\n        type: 'Duration',\n      },\n      {\n        name: 'to',\n        desc: 'The time to add the duration to.',\n        type: 'Time',\n      },\n    ],\n    package: 'experimental',\n    desc:\n      'Adds a duration to a time value and returns the resulting time value.',\n    example: 'experimental.addDuration(d: 12h, to: now())',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/addduration/',\n  },\n  {\n    name: 'experimental.group',\n    args: [\n      {\n        name: 'columns',\n        desc:\n          'List of columns to use in the grouping operation. Defaults to `[]`.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'mode',\n        desc:\n          'The mode used to group columns. Only the `extend` mode is available with this function.',\n        type: 'String',\n      },\n    ],\n    package: 'experimental',\n    desc: 'Introduces an extend mode to the existing `group()` function.',\n    example:\n      'experimental.group(columns: [\"host\", \"_measurement\"], mode: \"extend\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/group/',\n  },\n  {\n    name: 'experimental.objectKeys',\n    args: [\n      {\n        name: 'o',\n        desc: 'The object to return keys from.',\n        type: 'Object',\n      },\n    ],\n    package: 'experimental',\n    desc: 'Returns an array of keys in a specified object.',\n    example: 'experimental.objectKeys(o: {key1: \"value1\", key2: \"value2\"})',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/objectkeys/',\n  },\n  {\n    name: 'experimental.set',\n    args: [\n      {\n        name: 'o',\n        desc: 'An object that defines the columns and values to set.',\n        type: 'Object',\n      },\n    ],\n    package: 'experimental',\n    desc: 'Sets multiple static column values on all records.',\n    example: 'experimental.set(o: {column1: \"value1\", column2: \"value2\"})',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/set/',\n  },\n  {\n    name: 'experimental.subDuration',\n    args: [\n      {\n        name: 'd',\n        desc: 'The duration to subtract.',\n        type: 'Duration',\n      },\n      {\n        name: 'from',\n        desc: 'The time to subtract the duration from.',\n        type: 'Time',\n      },\n    ],\n    package: 'experimental',\n    desc:\n      'Subtracts a duration from a time value and returns the resulting time value.',\n    example: 'experimental.subDuration(d: 12h, from: now())',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/subduration/',\n  },\n  {\n    name: 'experimental.to',\n    args: [\n      {\n        name: 'bucket',\n        desc:\n          'The bucket to write data to. `bucket` and `bucketID` are mutually exclusive.',\n        type: 'String',\n      },\n      {\n        name: 'bucketID',\n        desc:\n          'The ID of the bucket to write data to. `bucketID` and `bucket` are mutually exclusive.',\n        type: 'String',\n      },\n      {\n        name: 'org',\n        desc:\n          'The organization name of the specified bucket. `org` and `orgID` are mutually exclusive.',\n        type: 'String',\n      },\n      {\n        name: 'orgID',\n        desc:\n          'The organization ID of the specified bucket. `orgID` and `org` are mutually exclusive.',\n        type: 'String',\n      },\n    ],\n    package: 'experimental',\n    desc:\n      'Writes data to an InfluxDB v2.0 bucket, but in a different structure than the built-in `to()` function.',\n    example: 'experimental.to(bucket: \"example-bucket\", org: \"example-org\")',\n    category: 'Outputs',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/to/',\n  },\n  {\n    name: 'elapsed',\n    args: [\n      {\n        name: 'unit',\n        desc: 'The unit time to return. Defaults to `1s`.',\n        type: 'Duration',\n      },\n      {\n        name: 'timeColumn',\n        desc:\n          'The column to use to compute the elapsed time. Defaults to `\"_time\"`.',\n        type: 'String`',\n      },\n      {\n        name: 'columnName',\n        desc: 'The column to store elapsed times. Defaults to `\"elapsed\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Returns the time between subsequent records.',\n    example: 'elapsed(unit: 1s)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/elapsed/',\n  },\n  {\n    name: 'exponentialMovingAverage',\n    args: [\n      {\n        name: 'n',\n        desc: 'The number of points to average.',\n        type: 'Integer',\n      },\n    ],\n    package: '',\n    desc:\n      'Calculates the exponential moving average of values in the `_value` column grouped into `n` number of points, giving more weight to recent data.',\n    example: 'exponentialMovingAverage(n: 5)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/exponentialmovingaverage/',\n  },\n  {\n    name: 'fill',\n    args: [\n      {\n        name: 'column',\n        desc:\n          'The column in which to replace null values. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'value',\n        desc: 'The constant value to use in place of nulls.',\n        type: 'Value type of `column`',\n      },\n      {\n        name: 'usePrevious',\n        desc:\n          'When `true`, assigns the value set in the previous non-null row.',\n        type: 'Boolean',\n      },\n    ],\n    package: '',\n    desc:\n      'Replaces all null values in an input stream and replace them with a non-null value.',\n    example: 'fill(column: \"_value\", usePrevious: true)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/fill/',\n  },\n  {\n    name: 'filter',\n    args: [\n      {\n        name: 'fn',\n        desc:\n          'A single argument function that evaluates true or false. Records are passed to the function. Those that evaluate to true are included in the output tables.',\n        type: 'Function',\n      },\n      {\n        name: 'onEmpty',\n        desc:\n          'Defines the behavior for empty tables. Potential values are `keep` and `drop`. Defaults to `drop`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Filters data based on conditions defined in the function. The output tables have the same schema as the corresponding input tables.',\n    example: 'filter(fn: (r) => r._measurement == \"cpu\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/filter/',\n  },\n  {\n    name: 'first',\n    args: [],\n    package: '',\n    desc: 'Selects the first non-null record from an input table.',\n    example: 'first()',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/first/',\n  },\n  {\n    name: 'float',\n    args: [\n      {\n        name: 'v',\n        desc: 'The value to convert.',\n        type: 'String, Integer, UInteger, Boolean',\n      },\n    ],\n    package: '',\n    desc: 'Converts a single value to a float.',\n    example: 'float(v: r._value)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/float/',\n  },\n  FROM,\n  {\n    name: 'getColumn',\n    args: [\n      {\n        name: 'column',\n        desc: 'The name of the column to extract.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Extracts a column from a table given its label. If the label is not present in the set of columns, the function errors.',\n    example: 'getColumn(column: \"_value\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/stream-table/getcolumn/',\n  },\n  {\n    name: 'getRecord',\n    args: [\n      {\n        name: 'idx',\n        desc: 'The index of the record to extract.',\n        type: 'Integer',\n      },\n    ],\n    package: '',\n    desc:\n      'Extracts a record from a table given the record’s index. If the index is out of bounds, the function errors.',\n    example: 'getRecord(idx: 0)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/stream-table/getrecord/',\n  },\n  {\n    name: 'group',\n    args: [\n      {\n        name: 'columns',\n        desc:\n          'List of columns to use in the grouping operation. Defaults to `[]`.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'mode',\n        desc:\n          'The mode used to group columns. The following options are available: by, except. Defaults to `\"by\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Groups records based on their values for specific columns. It produces tables with new group keys based on provided properties.',\n    example: 'group(columns: [\"host\", \"_measurement\"], mode:\"by\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/group/',\n  },\n  {\n    name: 'highestAverage',\n    args: [\n      {\n        name: 'n',\n        desc: 'Number of records to return.',\n        type: 'Integer',\n      },\n      {\n        name: 'column',\n        desc: 'Column by which to sort. Default is `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'groupColumns',\n        desc:\n          'The columns on which to group before performing the aggregation. Default is `[]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Returns the top `n` records from all groups using the average of each group.',\n    example: 'highestAverage(n:10, groupColumns: [\"host\"])',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/highestaverage/',\n  },\n  {\n    name: 'highestCurrent',\n    args: [\n      {\n        name: 'n',\n        desc: 'Number of records to return.',\n        type: 'Integer',\n      },\n      {\n        name: 'column',\n        desc: 'Column by which to sort. Default is `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'groupColumns',\n        desc:\n          'The columns on which to group before performing the aggregation. Default is `[]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Returns the top `n` records from all groups using the last value of each group.',\n    example: 'highestCurrent(n:10, groupColumns: [\"host\"])',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/highestcurrent/',\n  },\n  {\n    name: 'highestMax',\n    args: [\n      {\n        name: 'n',\n        desc: 'Number of records to return.',\n        type: 'Integer',\n      },\n      {\n        name: 'column',\n        desc: 'Column by which to sort. Default is `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'groupColumns',\n        desc:\n          'The columns on which to group before performing the aggregation. Default is `[]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Returns the top `n` records from all groups using the maximum of each group.',\n    example: 'highestMax(n:10, groupColumns: [\"host\"])',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/highestmax/',\n  },\n  {\n    name: 'histogram',\n    args: [\n      {\n        name: 'column',\n        desc:\n          'The name of a column containing input data values. The column type must be float. Defaults to `\"_value\"`.',\n        type: 'Strings',\n      },\n      {\n        name: 'upperBoundColumn',\n        desc:\n          'The name of the column in which to store the histogram\\'s upper bounds. Defaults to `\"le\"`.',\n        type: 'String',\n      },\n      {\n        name: 'countColumn',\n        desc:\n          'The name of the column in which to store the histogram counts. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'bins',\n        desc:\n          'A list of upper bounds to use when computing the histogram frequencies. Each element in the array should contain a float value that represents the maximum value for a bin.',\n        type: 'Array of Floats',\n      },\n      {\n        name: 'normalize',\n        desc:\n          'When `true`, will convert the counts into frequency values between 0 and 1. Defaults to `false`.',\n        type: 'Boolean',\n      },\n    ],\n    package: '',\n    desc:\n      'Approximates the cumulative distribution function of a dataset by counting data frequencies for a list of buckets.',\n    example:\n      'histogram(column: \"_value\", upperBoundColumn: \"le\", countColumn: \"_value\", bins: [50.0, 75.0, 90.0], normalize: false)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/histogram/',\n  },\n  {\n    name: 'histogramQuantile',\n    args: [\n      {\n        name: 'quantile',\n        desc:\n          'A value between 0 and 1 indicating the desired quantile to compute.',\n        type: 'Float',\n      },\n      {\n        name: 'countColumn',\n        desc:\n          'The name of the column in which to store the histogram counts. The count column type must be float. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'upperBoundColumn',\n        desc:\n          'The name of the column in which to store the histogram\\'s upper bounds. The count column type must be float. Defaults to `\"le\"`.',\n        type: 'String',\n      },\n      {\n        name: 'valueColumn',\n        desc:\n          'The name of the output column which will contain the computed quantile. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'minValue',\n        desc:\n          'The assumed minimum value of the dataset. When the quantile falls below the lowest upper bound, interpolation is performed between `minValue` and the lowest upper bound. When `minValue` is equal to negative infinity, the lowest upper bound is used. Defaults to `0`.',\n        type: 'Float',\n      },\n    ],\n    package: '',\n    desc:\n      'Approximates a quantile given a histogram that approximates the cumulative distribution of the dataset.',\n    example:\n      'histogramQuantile(quantile: 0.5, countColumn: \"_value\", upperBoundColumn: \"le\", valueColumn: \"_value\", minValue: 0.0)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/histogramquantile/',\n  },\n  {\n    name: 'holtWinters',\n    args: [\n      {\n        name: 'n',\n        desc: 'Number of values to predict.',\n        type: 'Integer',\n      },\n      {\n        name: 'seasonality',\n        desc: 'Number of points in a season. Defaults to `0`.',\n        type: 'Integer',\n      },\n      {\n        name: 'interval',\n        desc: 'The interval between two data points.',\n        type: 'Duration',\n      },\n      {\n        name: 'withFit',\n        desc:\n          'Returns \"fitted\" data points in results when `withFit` is set to `true`. Defaults to `false`.',\n        type: 'Boolean',\n      },\n      {\n        name: 'timeColumn',\n        desc: 'The time column to use. Defaults to `\"_time\"`.',\n        type: 'String',\n      },\n      {\n        name: 'column',\n        desc: 'The column to operate on. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Applies the Holt-Winters forecasting method to input tables. The Holt-Winters method predicts `n` seasonally-adjusted values for the specified `column` at the specified `interval`.',\n    example: 'holtWinters(n: 10, interval: 1d)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/holtwinters/',\n  },\n  {\n    name: 'hourSelection',\n    args: [\n      {\n        name: 'start',\n        desc:\n          'The first hour of the hour range (inclusive). Hours range from `[0-23]`',\n        type: 'Integer',\n      },\n      {\n        name: 'stop',\n        desc:\n          'The last hour of the hour range (inclusive). Hours range from `[0-23]`.',\n        type: 'Integer`',\n      },\n      {\n        name: 'timeColumn',\n        desc: 'The column that contains the time value. Default is `\"_time\"`.',\n        type: 'String`',\n      },\n    ],\n    package: '',\n    desc:\n      'Retains all rows with time values in a specified hour range. Hours are specified in military time.',\n    example: 'hourSelection(start: 9, stop: 17)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/hourselection/',\n  },\n  {\n    name: 'http.get',\n    args: [\n      {\n        name: 'url',\n        desc: 'The URL to send the GET request to.',\n        type: 'String',\n      },\n      {\n        name: 'headers',\n        desc: 'Headers to include with the GET request.',\n        type: 'Object',\n      },\n      {\n        name: 'timeout',\n        desc: 'Timeout for the GET request. Default is `30s`.',\n        type: 'Duration',\n      },\n    ],\n    package: 'experimental/http',\n    desc:\n      'Submits an HTTP GET request to the specified URL and returns the HTTP status code, response body, and response headers.',\n    example:\n      'http.get(url: \"https://v2.docs.influxdata.com/v2.0/\", headers: {foo: \"bar\"})',\n    category: 'Miscellaneous',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/http/get/',\n  },\n  {\n    name: 'http.post',\n    args: [\n      {\n        name: 'url',\n        desc: 'The URL to POST to.',\n        type: 'String',\n      },\n      {\n        name: 'headers',\n        desc: 'Headers to include with the POST request.',\n        type: 'Object',\n      },\n      {\n        name: 'data',\n        desc: 'The data body to include with the POST request.',\n        type: 'Bytes',\n      },\n    ],\n    package: 'http',\n    desc:\n      'Submits an HTTP POST request to the specified URL with headers and data and returns the HTTP status code.',\n    example:\n      'http.post(url: \"http://localhost:9999/\", headers: {x:\"a\", y:\"b\"}, data: bytes(v: \"body\"))',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/http/post/',\n  },\n  {\n    name: 'increase',\n    args: [\n      {\n        name: 'columns',\n        desc:\n          'List of columns to use in the operation. Defaults to `[\"_value\"]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the total non-negative difference between values in a table.',\n    example: 'increase(columns: [\"_value\"])',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/increase/',\n  },\n  {\n    name: 'int',\n    args: [\n      {\n        name: 'v',\n        desc: 'The value to convert.',\n        type: 'String, Integer, UInteger, Float, Boolean',\n      },\n    ],\n    package: '',\n    desc: 'Converts a single value to a integer.',\n    example: 'int(v: r._value)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/int/',\n  },\n  {\n    name: 'integral',\n    args: [\n      {\n        name: 'unit',\n        desc: 'The time duration used when computing the integral.',\n        type: 'Duration',\n      },\n      {\n        name: 'column',\n        desc: 'The column on which to operate. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the area under the curve per unit of time of subsequent non-null records. The curve is defined using `_time` as the domain and record values as the range.',\n    example: 'integral(unit: 10s, column: \"_value\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/integral/',\n  },\n  {\n    name: 'join',\n    args: [\n      {\n        name: 'tables',\n        desc: 'The map of streams to be joined.',\n        type: 'Object',\n      },\n      {\n        name: 'on',\n        desc: 'The list of columns on which to join.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'method',\n        desc:\n          'The method used to join. Possible values are: `inner`, `cross`, `left`, `right`, or `full`. Defaults to `\"inner\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Merges two or more input streams, whose values are equal on a set of common columns, into a single output stream. The resulting schema is the union of the input schemas. The resulting group key is the union of the input group keys.',\n    example:\n      'join(tables: {key1: table1, key2: table2}, on: [\"_time\", \"_field\"], method: \"inner\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/join/',\n  },\n  {\n    name: 'json.encode',\n    args: [\n      {\n        name: 'v',\n        desc: 'The value to encode.',\n        type: 'Boolean, Duration, Float, Integer, String, Time, UInteger',\n      },\n    ],\n    package: 'json',\n    desc: 'Converts a value into JSON bytes.',\n    example: 'json.encode(v: r._value)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/json/encode/',\n  },\n  {\n    name: 'kaufmansAMA',\n    args: [\n      {\n        name: 'n',\n        desc: 'The period or number of points to use in the calculation.',\n        type: 'Integer',\n      },\n      {\n        name: 'column',\n        desc: 'The column to operate on. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Calculates Kaufman’s Adaptive Moving Average (KAMA) using values in an input table.',\n    example: 'kaufmansAMA(n: 5)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/kaufmansama/',\n  },\n  {\n    name: 'kaufmansER',\n    args: [\n      {\n        name: 'n',\n        desc: 'The period or number of points to use in the calculation.',\n        type: 'Integer',\n      },\n    ],\n    package: '',\n    desc:\n      'Calculates the Kaufman’s Efficiency Ratio (KER) using values in an input table.',\n    example: 'kaufmansER(n: 5)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/kaufmanser/',\n  },\n  {\n    name: 'keep',\n    args: [\n      {\n        name: 'columns',\n        desc:\n          'Columns that should be included in the resulting table. Cannot be used with `fn`.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'fn',\n        desc:\n          'A predicate function which takes a column name as a parameter and returns a boolean indicating whether or not the column should be removed from the table. Cannot be used with `columns`.',\n        type: 'Function',\n      },\n    ],\n    package: '',\n    desc:\n      'Returns a table containing only the specified columns, ignoring all others. Only columns in the group key that are also specified in the `keep()` function will be kept in the resulting group key. It is the inverse of `drop`.',\n    example: 'keep(columns: [\"col1\", \"col2\"])',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/keep/',\n  },\n  {\n    name: 'keys',\n    args: [\n      {\n        name: 'column',\n        desc:\n          'Column is the name of the output column to store the group key labels. Defaults to `_value`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      \"Outputs the group key of input tables. For each input table, it outputs a table with the same group key columns, plus a _value column containing the labels of the input table's group key.\",\n    example: 'keys(column: \"_value\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/keys/',\n  },\n  {\n    name: 'keyValues',\n    args: [\n      {\n        name: 'keyColumns',\n        desc:\n          'A list of columns from which values are extracted. All columns indicated must be of the same type.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'fn',\n        desc:\n          'Function used to identify a set of columns. All columns indicated must be of the same type.',\n        type: 'Function',\n      },\n    ],\n    package: '',\n    desc:\n      \"Returns a table with the input table's group key plus two columns, `_key` and `_value`, that correspond to unique column + value pairs from the input table.\",\n    example: 'keyValues(keyColumns: [\"usage_idle\", \"usage_user\"])',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/keyvalues/',\n  },\n  {\n    name: 'last',\n    args: [],\n    package: '',\n    desc: 'Selects the last non-null record from an input table.',\n    example: 'last()',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/last/',\n  },\n  {\n    name: 'limit',\n    args: [\n      {\n        name: 'n',\n        desc: 'The maximum number of records to output.',\n        type: 'Integer',\n      },\n      {\n        name: 'offset',\n        desc:\n          'The number of records to skip at the beginning of a table before limiting to `n`. Defaults to `0`.',\n        type: 'Integer',\n      },\n    ],\n    package: '',\n    desc:\n      'Limits each output table to the first `n` records, excluding the offset.',\n    example: 'limit(n:10, offset: 0)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/limit/',\n  },\n  {\n    name: 'linearBins',\n    args: [\n      {\n        name: 'start',\n        desc: 'The first value in the returned list.',\n        type: 'Float',\n      },\n      {\n        name: 'width',\n        desc: 'The distance between subsequent bin values.',\n        type: 'Float',\n      },\n      {\n        name: 'count',\n        desc: 'The number of bins to create.',\n        type: 'Integer',\n      },\n      {\n        name: 'infinity',\n        desc:\n          'When `true`, adds an additional bin with a value of positive infinity. Defaults to `true`.',\n        type: 'Boolean',\n      },\n    ],\n    package: '',\n    desc: 'Generates a list of linearly separated floats.',\n    example: 'linearBins(start: 0.0, width: 5.0, count: 20, infinity: true)',\n    category: 'Miscellaneous',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/misc/linearbins/',\n  },\n  {\n    name: 'logarithmicBins',\n    args: [\n      {\n        name: 'start',\n        desc: 'The first value in the returned list.',\n        type: 'Float',\n      },\n      {\n        name: 'factor',\n        desc: 'The multiplier applied to each subsequent bin.',\n        type: 'Float',\n      },\n      {\n        name: 'count',\n        desc: 'The number of bins to create.',\n        type: 'Integer',\n      },\n      {\n        name: 'infinity',\n        desc:\n          'When `true`, adds an additional bin with a value of positive infinity. Defaults to `true`.',\n        type: 'Boolean',\n      },\n    ],\n    package: '',\n    desc: 'Generates a list of exponentially separated floats.',\n    example:\n      'logarithmicBins(start: 1.0, factor: 2.0, count: 10, infinity: true)',\n    category: 'Miscellaneous',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/misc/logarithmicbins/',\n  },\n  {\n    name: 'lowestAverage',\n    args: [\n      {\n        name: 'n',\n        desc: 'Number of records to return.',\n        type: 'Integer',\n      },\n      {\n        name: 'column',\n        desc: 'Column by which to sort. Default is `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'groupColumns',\n        desc:\n          'The columns on which to group before performing the aggregation. Default is `[]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Returns the bottom `n` records from all groups using the average of each group.',\n    example: 'lowestAverage(n:10, groupColumns: [\"host\"])',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/lowestaverage/',\n  },\n  {\n    name: 'lowestCurrent',\n    args: [\n      {\n        name: 'n',\n        desc: 'Number of records to return.',\n        type: 'Integer',\n      },\n      {\n        name: 'column',\n        desc: 'Column by which to sort. Default is `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'groupColumns',\n        desc:\n          'The columns on which to group before performing the aggregation. Default is `[]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Returns the bottom `n` records from all groups using the last value of each group.',\n    example: 'lowestCurrent(n:10, groupColumns: [\"host\"])',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/lowestcurrent/',\n  },\n  {\n    name: 'lowestMin',\n    args: [\n      {\n        name: 'n',\n        desc: 'Number of records to return.',\n        type: 'Integer',\n      },\n      {\n        name: 'column',\n        desc: 'Column by which to sort. Default is `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'groupColumns',\n        desc:\n          'The columns on which to group before performing the aggregation. Default is `[]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Returns the bottom `n` records from all groups using the maximum of each group.',\n    example: 'lowestMin(n:10, groupColumns: [\"host\"])',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/lowestmin/',\n  },\n  {\n    name: 'map',\n    args: [\n      {\n        name: 'fn',\n        desc:\n          'A single argument function that to apply to each record. The return value must be an object.',\n        type: 'Function',\n      },\n    ],\n    package: '',\n    desc: 'Applies a function to each record in the input tables.',\n    example: 'map(fn: (r) => ({ r with _value: r._value * r._value }))',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/map/',\n  },\n  MATH_ABS,\n  {\n    name: 'math.acos',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the arccosine of x in radians.',\n    example: 'math.acos(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/acos/',\n  },\n  {\n    name: 'math.acosh',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation. Should be greater than 1.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the inverse hyperbolic cosine of x.',\n    example: 'math.acosh(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/acosh/',\n  },\n  {\n    name: 'math.asin',\n    args: [\n      {\n        name: 'x',\n        desc:\n          'The value used in the operation. Should be greater than -1 and less than 1.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the arcsine of x in radians.',\n    example: 'math.asin(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/asin/',\n  },\n  {\n    name: 'math.asinh',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the inverse hyperbolic sine of x.',\n    example: 'math.asinh(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/asinh/',\n  },\n  {\n    name: 'math.atan',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the arctangent of x in radians.',\n    example: 'math.atan(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/atan/',\n  },\n  {\n    name: 'math.atan2',\n    args: [\n      {\n        name: 'y',\n        desc: 'The y coordinate used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'x',\n        desc: 'The x coordinate used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc:\n      'Returns the arc tangent of y/x, using the signs of the two to determine the quadrant of the return value.',\n    example: 'math.atan2(y: r.y_coord, x: r.x_coord)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/atan2/',\n  },\n  {\n    name: 'math.atanh',\n    args: [\n      {\n        name: 'x',\n        desc:\n          'The value used in the operation. Should be greater than -1 and less than 1.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the inverse hyperbolic tangent of x.',\n    example: 'math.atanh(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/atanh/',\n  },\n  {\n    name: 'math.cbrt',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the cube root of x.',\n    example: 'math.cbrt(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/cbrt/',\n  },\n  {\n    name: 'math.ceil',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the least integer value greater than or equal to x.',\n    example: 'math.ceil(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/ceil/',\n  },\n  {\n    name: 'math.copysign',\n    args: [\n      {\n        name: 'x',\n        desc: 'The magnitude used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'y',\n        desc: 'The sign used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns a value with the magnitude of x and the sign of y.',\n    example: 'math.copysign(x: r._magnitude, r._sign)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/copysign/',\n  },\n  {\n    name: 'math.cos',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the cosine of the radian argument x.',\n    example: 'math.cos(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/cos/',\n  },\n  {\n    name: 'math.cosh',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the hyperbolic cosine of x.',\n    example: 'math.cosh(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/cosh/',\n  },\n  {\n    name: 'math.dim',\n    args: [\n      {\n        name: 'x',\n        desc: 'The X value used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'y',\n        desc: 'The Y value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the maximum of (x - y) or 0.',\n    example: 'math.dim(x: r._value1, y: r._value2)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/dim/',\n  },\n  {\n    name: 'math.erf',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the error function of x.',\n    example: 'math.erf(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/erf/',\n  },\n  {\n    name: 'math.erfc',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the complementary error function of x.',\n    example: 'math.erfc(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/erfc/',\n  },\n  {\n    name: 'math.erfcinv',\n    args: [\n      {\n        name: 'x',\n        desc:\n          'The value used in the operation. Should be greater than 0 and less than 2.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the inverse of `math.erfc()`.',\n    example: 'math.erfcinv(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/erfcinv/',\n  },\n  {\n    name: 'math.erfinv',\n    args: [\n      {\n        name: 'x',\n        desc:\n          'The value used in the operation. Should be greater than -1 and less than 1.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the inverse error function of x.',\n    example: 'math.erfinv(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/erfinv/',\n  },\n  {\n    name: 'math.exp',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the base-e exponential of x (`e**x`).',\n    example: 'math.exp(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/exp/',\n  },\n  {\n    name: 'math.exp2',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the base-2 exponential of x (`2**x`).',\n    example: 'math.exp2(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/exp2/',\n  },\n  {\n    name: 'math.expm1',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the base-e exponential of x minus 1 (`e**x - 1`).',\n    example: 'math.expm1(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/expm1/',\n  },\n  {\n    name: 'math.float64bits',\n    args: [\n      {\n        name: 'f',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc:\n      'Returns the IEEE 754 binary representation of f, with the sign bit of f and the result in the same bit position.',\n    example: 'math.float64bits(f: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/float64bits/',\n  },\n  MATH_FLOOR,\n  {\n    name: 'math.frexp',\n    args: [\n      {\n        name: 'f',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Breaks f into a normalized fraction and an integral power of two.',\n    example: 'math.frexp(f: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/frexp/',\n  },\n  {\n    name: 'math.gamma',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the Gamma function of x.',\n    example: 'math.gamma(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/gamma/',\n  },\n  {\n    name: 'math.hypot',\n    args: [\n      {\n        name: 'p',\n        desc: 'The p value used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'q',\n        desc: 'The q value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc:\n      'Returns the square root of `p*p + q*q`, taking care to avoid overflow and underflow.',\n    example: 'math.hypot(p: r.opp, p: r.adj)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/hypot/',\n  },\n  {\n    name: 'math.ilogb',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the binary exponent of x as an integer.',\n    example: 'math.ilogb(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/ilogb/',\n  },\n  {\n    name: 'math.isInf',\n    args: [\n      {\n        name: 'f',\n        desc: 'The value used in the evaluation.',\n        type: 'Float',\n      },\n      {\n        name: 'sign',\n        desc: 'The sign used in the evaluation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Reports whether f is an infinity, according to sign.',\n    example: 'math.isInf(f: r._value, sign: r.sign)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/isinf/',\n  },\n  {\n    name: 'math.isNaN',\n    args: [\n      {\n        name: 'f',\n        desc: 'The value used in the evaluation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Reports whether f is an IEEE 754 NaN value.',\n    example: 'math.isNaN(f: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/isnan/',\n  },\n  {\n    name: 'math.j0',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the order-zero Bessel function of the first kind.',\n    example: 'math.j0(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/j0/',\n  },\n  {\n    name: 'math.j1',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the order-one Bessel function of the first kind.',\n    example: 'math.j1(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/j1/',\n  },\n  {\n    name: 'math.jn',\n    args: [\n      {\n        name: 'n',\n        desc: 'The order number.',\n        type: 'Float',\n      },\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the order-n Bessel function of the first kind.',\n    example: 'math.jn(n: 2, x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/jn/',\n  },\n  {\n    name: 'math.ldexp',\n    args: [\n      {\n        name: 'frac',\n        desc: 'The fraction used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'exp',\n        desc: 'The exponent used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns `frac × 2**exp`. It is the inverse of `math.frexp()`.',\n    example: 'math.ldexp(frac: r.frac, exp: r.exp)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/ldexp/',\n  },\n  {\n    name: 'math.lgamma',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc:\n      'Returns the natural logarithm and sign (-1 or +1) of `math.gamma(x:x)`.',\n    example: 'math.lgamma(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/lgamma/',\n  },\n  {\n    name: 'math.log',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the natural logarithm of x.',\n    example: 'math.log(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/log/',\n  },\n  {\n    name: 'math.log1p',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the natural logarithm of 1 plus its argument x.',\n    example: 'math.log1p(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/log1p/',\n  },\n  {\n    name: 'math.log2',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the binary logarithm of x.',\n    example: 'math.log2(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/log2/',\n  },\n  {\n    name: 'math.logb',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the binary exponent of x.',\n    example: 'math.logb(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/logb/',\n  },\n  {\n    name: 'math.mInf',\n    args: [\n      {\n        name: 'sign',\n        desc: 'The sign value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc:\n      'Returns positive infinity if `sign >= 0`, negative infinity if `sign < 0`.',\n    example: 'math.mInf(sign: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/minf/',\n  },\n  {\n    name: 'math.mMax',\n    args: [\n      {\n        name: 'x',\n        desc: 'The X value used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'y',\n        desc: 'The Y value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the larger of x or y.',\n    example: 'math.mMax(x: r.x_value, y: r.y_value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/mmax/',\n  },\n  {\n    name: 'math.mMin',\n    args: [\n      {\n        name: 'x',\n        desc: 'The X value used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'y',\n        desc: 'The Y value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the smaller of x or y.',\n    example: 'math.mMin(x: r.x_value, y: r.y_value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/mmin/',\n  },\n  {\n    name: 'math.mod',\n    args: [\n      {\n        name: 'x',\n        desc: 'The X value used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'y',\n        desc: 'The Y value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the floating-point remainder of x/y.',\n    example: 'math.mod(x: r.x_value, y: r.y_value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/mod/',\n  },\n  {\n    name: 'math.modf',\n    args: [\n      {\n        name: 'f',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc:\n      'Returns integer and fractional floating-point numbers that sum to f. Both values have the same sign as f.',\n    example: 'math.modf(f: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/modf/',\n  },\n  {\n    name: 'math.NaN',\n    args: [],\n    package: 'math',\n    desc: 'Returns an IEEE 754 NaN value.',\n    example: 'math.NaN()',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/nan/',\n  },\n  {\n    name: 'math.nextafter',\n    args: [\n      {\n        name: 'x',\n        desc: 'The X value used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'y',\n        desc: 'The Y value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the next representable float value after x towards y.',\n    example: 'math.nextafter(x: r.x_value, y: r.y_value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/nextafter/',\n  },\n  {\n    name: 'math.pow',\n    args: [\n      {\n        name: 'x',\n        desc: 'The X value used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'y',\n        desc: 'The Y value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the base-x exponential of y, `x**y`.',\n    example: 'math.pow(x: r.x_value, y: r.y_value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/pow/',\n  },\n  {\n    name: 'math.pow10',\n    args: [\n      {\n        name: 'n',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the base-10 exponential of n, `10**n`.',\n    example: 'math.pow10(n: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/pow10/',\n  },\n  {\n    name: 'math.remainder',\n    args: [\n      {\n        name: 'x',\n        desc: 'The numerator used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'y',\n        desc: 'The denominator used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the IEEE 754 floating-point remainder of `x / y`.',\n    example: 'math.remainder(x: r.numerator, y: r.denominator)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/remainder/',\n  },\n  {\n    name: 'math.round',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the nearest integer, rounding half away from zero.',\n    example: 'math.round(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/round/',\n  },\n  {\n    name: 'math.roundtoeven',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the nearest integer, rounding ties to even.',\n    example: 'math.roundtoeven(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/roundtoeven/',\n  },\n  {\n    name: 'math.signbit',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the evaluation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Reports whether x is negative or negative zero.',\n    example: 'math.signbit(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/signbit/',\n  },\n  {\n    name: 'math.sin',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the sine of the radian argument x.',\n    example: 'math.sin(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/sin/',\n  },\n  {\n    name: 'math.sincos',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the values of `math.sin(x:x)` and `math.cos(x:x)`.',\n    example: 'math.sincos(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/sincos/',\n  },\n  {\n    name: 'math.sinh',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the hyperbolic sine of x.',\n    example: 'math.sinh(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/sinh/',\n  },\n  {\n    name: 'math.sqrt',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the square root of x.',\n    example: 'math.sqrt(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/sqrt/',\n  },\n  {\n    name: 'math.tan',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the tangent of the radian argument x.',\n    example: 'math.tan(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/tan/',\n  },\n  {\n    name: 'math.tanh',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the hyperbolic tangent of x.',\n    example: 'math.tanh(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/tanh/',\n  },\n  {\n    name: 'math.trunc',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the integer value of x.',\n    example: 'math.trunc(x: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/trunc/',\n  },\n  {\n    name: 'math.y0',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the order-zero Bessel function of the second kind.',\n    example: 'math.y0(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/y0/',\n  },\n  {\n    name: 'math.y1',\n    args: [\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the order-one Bessel function of the second kind.',\n    example: 'math.y1(x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/y1/',\n  },\n  {\n    name: 'math.yn',\n    args: [\n      {\n        name: 'n',\n        desc: 'The order number used in the operation.',\n        type: 'Float',\n      },\n      {\n        name: 'x',\n        desc: 'The value used in the operation.',\n        type: 'Float',\n      },\n    ],\n    package: 'math',\n    desc: 'Returns the order-n Bessel function of the second kind.',\n    example: 'math.yn(n: 3, x: r._value)',\n    category: 'Transformations',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/math/yn/',\n  },\n  {\n    name: 'max',\n    args: [],\n    package: '',\n    desc: 'Selects record with the highest `_value` from the input table.',\n    example: 'max()',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/max/',\n  },\n  MEAN,\n  {\n    name: 'median',\n    args: [\n      {\n        name: 'column',\n        desc: 'The column on which to compute the mean. Defaults to `\"_value\"`',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Returns the median `_value` of an input table. The `median()` function can only be used with float value types.',\n    example: 'median(column: \"_value\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/median/',\n  },\n  {\n    name: 'min',\n    args: [],\n    package: '',\n    desc: 'Selects record with the lowest `_value` from the input table.',\n    example: 'min()',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/min/',\n  },\n  {\n    name: 'mode',\n    args: [\n      {\n        name: 'column',\n        desc: 'The column to use to compute the mode. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the mode or value that occurs most often in a specified column.',\n    example: 'mode(column: \"_value\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/mode/',\n  },\n  {\n    name: 'movingAverage',\n    args: [\n      {\n        name: 'n',\n        desc: 'The frequency of time windows.',\n        type: 'Duration',\n      },\n    ],\n    package: '',\n    desc: 'Calculates the mean of values grouped into `n` number of points.',\n    example: 'movingAverage(n: 5)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/movingaverage/',\n  },\n  {\n    name: 'mqtt.to',\n    args: [\n      {\n        name: 'broker',\n        desc: 'The MQTT broker connection string.',\n        type: 'String',\n      },\n      {\n        name: 'topic',\n        desc: 'The MQTT topic to send data to.',\n        type: 'String',\n      },\n      {\n        name: 'message',\n        desc:\n          'The message or payload to send to the MQTT broker. The default payload is an output table.',\n        type: 'String',\n      },\n      {\n        name: 'qos',\n        desc:\n          'The MQTT Quality of Service (QoS) level. Values range from 0-2. Default is 0.',\n        type: 'Integer',\n      },\n      {\n        name: 'clientid',\n        desc: 'The MQTT client ID.',\n        type: 'String',\n      },\n      {\n        name: 'username',\n        desc: 'The username to send to the MQTT broker.',\n        type: 'String',\n      },\n      {\n        name: 'password',\n        desc: 'The password to send to the MQTT broker.',\n        type: 'String',\n      },\n      {\n        name: 'name',\n        desc: 'The name for the MQTT message.',\n        type: 'String',\n      },\n      {\n        name: 'timeout',\n        desc: 'The MQTT connection timeout. Default is 1s.',\n        type: 'Duration',\n      },\n      {\n        name: 'timeColumn',\n        desc:\n          'The column to use as time values in the output line protocol. Default is `\"_time\"`.',\n        type: 'String',\n      },\n      {\n        name: 'tagColumns',\n        desc:\n          'The columns to use as tag sets in the output line protocol. Default is `[]`.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'valueColumns',\n        desc:\n          'The columns to use as field values in the output line protocol. Default is `[\"_value\"]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: 'experimental/mqtt',\n    desc: 'Outputs data to an MQTT broker using MQTT protocol.',\n    example:\n      'mqtt.to(broker: \"tcp://localhost:8883\", topic: \"example-topic\", clientid: \"exampleID\", tagColumns: [\"exampleTagKey\"], valueColumns: [\"_value\"])',\n    category: 'Outputs',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/mqtt/to/',\n  },\n  {\n    name: 'pearsonr',\n    args: [\n      {\n        name: 'x',\n        desc: 'First input stream used in the operation.',\n        type: 'Object',\n      },\n      {\n        name: 'y',\n        desc: 'Second input stream used in the operation.',\n        type: 'Object',\n      },\n      {\n        name: 'on',\n        desc: 'List of columns on which to join.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the Pearson R correlation coefficient between two streams by first joining the streams, then performing the covariance operation normalized to compute R.',\n    example: 'pearsonr(x: table1, y: table2, on: [\"_time\", \"_field\"])',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/pearsonr/',\n  },\n  {\n    name: 'pivot',\n    args: [\n      {\n        name: 'rowKey',\n        desc: 'List of columns used to uniquely identify a row for the output.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'columnKey',\n        desc:\n          'List of columns used to pivot values onto each row identified by the rowKey.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'valueColumn',\n        desc:\n          'The single column that contains the value to be moved around the pivot.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Collects values stored vertically (column-wise) in a table and aligns them horizontally (row-wise) into logical sets.',\n    example:\n      'pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/pivot/',\n  },\n  {\n    name: 'prometheus.histogramQuantile',\n    args: [\n      {\n        name: 'quantile',\n        desc: 'A value between 0.0 and 1.0 indicating the desired quantile.',\n        type: 'Float',\n      },\n    ],\n    package: 'experimental/prometheus',\n    desc:\n      'Calculates quantiles on a set of values assuming the histogram data is scraped or read from a Prometheus data source.',\n    example: 'prometheus.histogramQuantile(quantile: 0.99)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/prometheus/histogramquantile/',\n  },\n  {\n    name: 'prometheus.scrape',\n    args: [\n      {\n        name: 'url',\n        desc: 'The URL to scrape Prometheus-formatted metrics from.',\n        type: 'String',\n      },\n    ],\n    package: 'experimental/prometheus',\n    desc: 'Retrieves Prometheus-formatted metrics from a specified URL.',\n    example: 'prometheus.scrape(url: \"http://localhost:9999/metrics\")',\n    category: 'Inputs',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/experimental/prometheus/scrape/',\n  },\n  {\n    name: 'quantile',\n    args: [\n      {\n        name: 'column',\n        desc:\n          'The column on which to compute the quantile. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'q',\n        desc: 'A value between 0 and 1 indicating the desired quantile.',\n        type: 'Float',\n      },\n      {\n        name: 'method',\n        desc:\n          'Defines the method of computation. The available options are: `estimate_tdigest`, `exact_mean`, or `exact_selector`.',\n        type: 'String',\n      },\n      {\n        name: 'compression',\n        desc:\n          'Indicates how many centroids to use when compressing the dataset. A larger number produces a more accurate result at the cost of increased memory requirements. Defaults to 1000.',\n        type: 'Float',\n      },\n    ],\n    package: '',\n    desc:\n      'This is both an aggregate and selector function depending on the `method` used. When using the `estimate_tdigest` or `exact_mean` methods, it outputs non-null records with values that fall within the specified quantile. When using the `exact_selector` method, it outputs the non-null record with the value that represents the specified quantile.',\n    example:\n      'quantile(column: \"_value\", q: 0.99, method: \"estimate_tdigest\", compression: 1000.0)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/quantile/',\n  },\n  RANGE,\n  {\n    name: 'reduce',\n    args: [\n      {\n        name: 'fn',\n        desc:\n          'Function to apply to each record with a reducer object. The function expects two objects: `r` and `accumulator`.',\n        type: 'Function',\n      },\n      {\n        name: 'identity',\n        desc:\n          'Defines the reducer object and provides initial values to use when creating a reducer.',\n        type: 'Object',\n      },\n    ],\n    package: '',\n    desc: 'Aggregates records in each table according to the reducer, `fn`',\n    example:\n      'reduce(fn: (r, accumulator) => ({ sum: r._value + accumulator.sum }), identity: {sum: 0.0})',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/reduce/',\n  },\n  {\n    name: 'regexp.compile',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to parse into a regular expression.',\n        type: 'String',\n      },\n    ],\n    package: 'regexp',\n    desc:\n      'Parses a string into a regular expression and returns a regexp object.',\n    example: 'regexp.compile(v: \"[a-zA-Z]\")',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/regexp/compile/',\n  },\n  {\n    name: 'regexp.findString',\n    args: [\n      {\n        name: 'r',\n        desc: 'The regular expression used to search `v`',\n        type: 'Regexp',\n      },\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n    ],\n    package: 'regexp',\n    desc: 'Returns the left-most regular expression match in a string.',\n    example: 'regexp.findString(r: /foo.?/, v: \"seafood fool\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/regexp/findstring/',\n  },\n  {\n    name: 'regexp.findStringIndex',\n    args: [\n      {\n        name: 'r',\n        desc: 'The regular expression used to search `v`',\n        type: 'Regexp',\n      },\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n    ],\n    package: 'regexp',\n    desc:\n      'Returns a two-element array of integers defining the beginning and ending indexes of the left-most regular expression match in a string.',\n    example: 'regexp.findStringIndex(r: /ab?/, v: \"tablet\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/regexp/findstringindex/',\n  },\n  {\n    name: 'regexp.getString',\n    args: [\n      {\n        name: 'r',\n        desc: 'The regular expression object to convert to a string.',\n        type: 'Regexp',\n      },\n    ],\n    package: 'regexp',\n    desc: 'Returns the source string used to compile a regular expression.',\n    example: 'regexp.getString(r: /[a-zA-Z]/)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/regexp/getstring/',\n  },\n  {\n    name: 'regexp.matchRegexpString',\n    args: [\n      {\n        name: 'r',\n        desc: 'The regular expression used to search `v`',\n        type: 'Regexp',\n      },\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n    ],\n    package: 'regexp',\n    desc: 'Tests if a string contains any match to a regular expression.',\n    example: 'regexp.matchRegexpString(r: /(go){2}/, v: \"gogogopher\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/regexp/matchregexpstring/',\n  },\n  {\n    name: 'regexp.quoteMeta',\n    args: [\n      {\n        name: 'v',\n        desc:\n          'String value containing regular expression metacharacters to escape.',\n        type: 'String',\n      },\n    ],\n    package: 'regexp',\n    desc: 'Escapes all regular expression metacharacters inside of a string.',\n    example: 'regexp.quoteMeta(v: \".+*?()|[]{}^$\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/regexp/quotemeta/',\n  },\n  {\n    name: 'regexp.replaceAllString',\n    args: [\n      {\n        name: 'r',\n        desc: 'The regular expression used to search `v`',\n        type: 'Regexp',\n      },\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The replacement for matches to `r`',\n        type: 'String',\n      },\n    ],\n    package: 'regexp',\n    desc:\n      'Replaces all regular expression matches in a string with a specified replacement.',\n    example: 'regexp.replaceAllString(r: /a(x*)b/, v: \"-ab-axxb-\", t: \"T\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/regexp/replaceallstring/',\n  },\n  {\n    name: 'regexp.splitRegexp',\n    args: [\n      {\n        name: 'r',\n        desc: 'The regular expression used to search `v`',\n        type: 'Regexp',\n      },\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 'i',\n        desc: 'The number of substrings to return.',\n        type: 'Integer',\n      },\n    ],\n    package: 'regexp',\n    desc:\n      'Splits a string into substrings separated by regular expression matches and returns an array of `i` substrings between matches.',\n    example: 'regexp.splitRegexp(r: /a*/, v: \"abaabaccadaaae\", i: 5)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/regexp/splitregexp/',\n  },\n  {\n    name: 'relativeStrengthIndex',\n    args: [\n      {\n        name: 'n',\n        desc:\n          'The number of values to use to calculate the relative strength index (RSI).',\n        type: 'Integer',\n      },\n      {\n        name: 'columns',\n        desc: 'Columns to operate on. Defaults to `[\"_value\"]`.',\n        type: 'Array of Strings`',\n      },\n    ],\n    package: '',\n    desc: 'Measures the relative speed and change of values in an input table.',\n    example: 'relativeStrengthIndex(n: 5)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/relativestrengthindex/',\n  },\n  {\n    name: 'rename',\n    args: [\n      {\n        name: 'columns',\n        desc:\n          'A map of columns to rename and their corresponding new names. Cannot be used with `fn`.',\n        type: 'Object',\n      },\n      {\n        name: 'fn',\n        desc:\n          'A function mapping between old and new column names. Cannot be used with `columns`.',\n        type: 'Function',\n      },\n    ],\n    package: '',\n    desc:\n      'Renames specified columns in a table. If a column is renamed and is part of the group key, the column name in the group key will be updated.',\n    example: 'rename(columns: {host: \"server\", _field: \"my_field\"})',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/rename/',\n  },\n  {\n    name: 'runtime.version',\n    args: [],\n    package: 'runtime',\n    desc: 'Returns the current Flux version.',\n    example: 'runtime.version()',\n    category: 'Miscellaneous',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/runtime/version/',\n  },\n  {\n    name: 'sample',\n    args: [\n      {\n        name: 'n',\n        desc: 'Sample every Nth element.',\n        type: 'Integer',\n      },\n      {\n        name: 'pos',\n        desc:\n          'The position offset from the start of results where sampling begins. `pos` must be less than `n`. If `pos` is less than 0, a random offset is used. Defaults to `-1` (random offset).',\n        type: 'Integer',\n      },\n    ],\n    package: '',\n    desc: 'Selects a subset of the records from the input table.',\n    example: 'sample(n:5, pos: -1)',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/sample/',\n  },\n  {\n    name: 'secrets.get',\n    args: [\n      {\n        name: 'key',\n        desc: 'The secret key to retrieve.',\n        type: 'String',\n      },\n    ],\n    package: 'influxdata/influxdb/secrets',\n    desc: 'Retrieves a secret from the InfluxDB secret store.',\n    example: 'secrets.get(key: \"KEY_NAME\")',\n    category: 'Miscellaneous',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/secrets/get/',\n  },\n  {\n    name: 'set',\n    args: [\n      {\n        name: 'key',\n        desc: 'The label of the column to modify or set.',\n        type: 'String',\n      },\n      {\n        name: 'value',\n        desc: 'The string value to set.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Assigns a static value to each record in the input table. The key may modify an existing column or add a new column to the tables. If the modified column is part of the group key, the output tables are regrouped as needed.',\n    example: 'set(key: \"_field\", value: \"my_field\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/set/',\n  },\n  {\n    name: 'skew',\n    args: [\n      {\n        name: 'column',\n        desc: 'The column on which to operate. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Outputs the skew of non-null records as a float.',\n    example: 'skew(column: \"_value\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/skew/',\n  },\n  {\n    name: 'sleep',\n    args: [\n      {\n        name: 'v',\n        desc: 'Defines input tables.',\n        type: 'Object',\n      },\n      {\n        name: 'duration',\n        desc: 'The length of time to delay execution.',\n        type: 'Duration',\n      },\n    ],\n    package: '',\n    desc: 'Delays execution by a specified duration.',\n    example: 'sleep(duration: 5s)',\n    category: 'Miscellaneous',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/misc/sleep/',\n  },\n  {\n    name: 'sort',\n    args: [\n      {\n        name: 'columns',\n        desc:\n          'List of columns by which to sort. Sort precedence is determined by list order (left to right). Default is `[\"_value\"]`.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'desc',\n        desc: 'Sort results in descending order. Default is `false`.',\n        type: 'Boolean',\n      },\n    ],\n    package: '',\n    desc:\n      'Orders the records within each table. One output table is produced for each input table. The output tables will have the same schema as their corresponding input tables.',\n    example: 'sort(columns: [\"_value\"], desc: false)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/sort/',\n  },\n  {\n    name: 'spread',\n    args: [\n      {\n        name: 'column',\n        desc: 'The column on which to operate. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Outputs the difference between the minimum and maximum values in the specified column. Only `uint`, `int`, and `float` column types can be used.',\n    example: 'spread(column: \"_value\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/spread/',\n  },\n  {\n    name: 'sql.from',\n    args: [\n      {\n        name: 'driverName',\n        desc: 'The driver used to connect to the SQL database.',\n        type: 'String',\n      },\n      {\n        name: 'dataSourceName',\n        desc:\n          'The connection string used to connect to the SQL database. The string’s form and structure depend on the driver.',\n        type: 'String',\n      },\n      {\n        name: 'query',\n        desc: 'The query to run against the SQL database.',\n        type: 'String',\n      },\n    ],\n    package: 'sql',\n    desc: 'Retrieves data from a SQL data source.',\n    example:\n      'sql.from(driverName: \"postgres\", dataSourceName: \"postgresql://user:password@localhost\", query:\"SELECT * FROM example_table\")',\n    category: 'Inputs',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/sql/from/',\n  },\n  {\n    name: 'sql.to',\n    args: [\n      {\n        name: 'driverName',\n        desc: 'The driver used to connect to the SQL database.',\n        type: 'String',\n      },\n      {\n        name: 'dataSourceName',\n        desc:\n          'The connection string used to connect to the SQL database. The string’s form and structure depend on the driver.',\n        type: 'String',\n      },\n      {\n        name: 'table',\n        desc: 'The destination table.',\n        type: 'String',\n      },\n      {\n        name: 'batchSize',\n        desc:\n          'The number of parameters or columns that can be queued within each call to `Exec`. Defaults to `10000`.',\n        type: 'Integer',\n      },\n    ],\n    package: 'sql',\n    desc: 'Writes data to a SQL database.',\n    example:\n      'sql.to(driverName: \"postgres\", dataSourceName: \"postgresql://user:password@localhost\", table: \"example_table\")',\n    category: 'Outputs',\n    link: 'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/sql/to/',\n  },\n  {\n    name: 'stateCount',\n    args: [\n      {\n        name: 'fn',\n        desc:\n          'A single argument function that evaluates true or false to identify the state of the record.',\n        type: 'Function',\n      },\n      {\n        name: 'column',\n        desc:\n          'The name of the column added to each record that contains the incremented state count.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the number of consecutive records in a given state and stores the increment in a new column.',\n    example: 'stateCount(fn: (r) => r._field == \"state\", column: \"stateCount\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/statecount/',\n  },\n  {\n    name: 'stateDuration',\n    args: [\n      {\n        name: 'fn',\n        desc:\n          'A single argument function that evaluates true or false to identify the state of the record.',\n        type: 'Function',\n      },\n      {\n        name: 'column',\n        desc:\n          'Name of the column added to each record that contains the incremented state duration.',\n        type: 'String',\n      },\n      {\n        name: 'unit',\n        desc: 'Unit of time in which the state duration is incremented.',\n        type: 'Duration',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the duration of a given state and stores the increment in a new column.',\n    example:\n      'stateDuration(fn: (r) => r._measurement == \"state\", column: \"stateDuration\", unit: 1s)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/stateduration/',\n  },\n  {\n    name: 'stddev',\n    args: [\n      {\n        name: 'column',\n        desc: 'The column on which to operate. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n      {\n        name: 'mode',\n        desc:\n          'The standard deviation mode (sample or population). Defaults to `\"sample\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Computes the standard deviation of non-null records in specified column.',\n    example: 'stddev(column: \"_value\", mode: \"sample\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/stddev/',\n  },\n  {\n    name: 'string',\n    args: [\n      {\n        name: 'v',\n        desc: 'The value to convert.',\n        type: 'Integer, UInteger, Float, Boolean, Duration, Time',\n      },\n    ],\n    package: '',\n    desc: 'Converts a single value to a string.',\n    example: 'string(v: r._value)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/string/',\n  },\n  {\n    name: 'strings.compare',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to compare.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The string value to compare against.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Compares the lexicographical order of two strings.',\n    example: 'strings.compare(v: \"a\", t: \"b\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/compare/',\n  },\n  {\n    name: 'strings.containsAny',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 'chars',\n        desc: 'Characters to search for.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Reports whether a specified string contains characters from another string.',\n    example: 'strings.containsAny(v: \"abc\", chars: \"and\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/containsany/',\n  },\n  {\n    name: 'strings.containsStr',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 'substr',\n        desc: 'The substring to search for.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Reports whether a string contains a specified substring.',\n    example: 'strings.containsStr(v: \"This and that\", substr: \"and\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/containsstr/',\n  },\n  {\n    name: 'strings.countStr',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 'substr',\n        desc: 'The substring count.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Counts the number of non-overlapping instances of a substring appears in a string.',\n    example: 'strings.countStr(v: \"Hello mellow fellow\", substr: \"ello\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/countstr/',\n  },\n  {\n    name: 'strings.equalFold',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to compare.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The string value to compare against.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Reports whether two UTF-8 strings are equal under Unicode case-folding.',\n    example: 'strings.equalFold(v: \"Go\", t: \"go\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/equalfold/',\n  },\n  {\n    name: 'strings.hasPrefix',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The prefix to search for.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Indicates if a string begins with a specified prefix.',\n    example: 'strings.hasPrefix(v: \"go gopher\", t: \"go\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/hasprefix/',\n  },\n  {\n    name: 'strings.hasSuffix',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The suffix to search for.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Indicates if a string ends with a specified suffix.',\n    example: 'strings.hasPrefix(v: \"gopher go\", t: \"go\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/hassuffix/',\n  },\n  {\n    name: 'strings.index',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 'substr',\n        desc: 'The substring to search for.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Returns the index of the first instance of a substring in a string. If the substring is not present, it returns `-1`.',\n    example: 'strings.index(v: \"go gopher\", substr: \"go\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/index-func/',\n  },\n  {\n    name: 'strings.indexAny',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 'chars',\n        desc: 'Characters to search for.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Returns the index of the first instance of specified characters in a string. If none of the specified characters are present, it returns -1.',\n    example: 'strings.indexAny(v: \"chicken\", chars: \"aeiouy\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/indexany/',\n  },\n  {\n    name: 'strings.isDigit',\n    args: [\n      {\n        name: 'v',\n        desc: 'The single-character string to test.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Tests if a single-character string is a digit (0-9).',\n    example: 'strings.isDigit(v: \"7\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/isdigit/',\n  },\n  {\n    name: 'strings.isLetter',\n    args: [\n      {\n        name: 'v',\n        desc: 'The single-character string to test.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Tests if a single-character string is a letter (a-z, A-Z).',\n    example: 'strings.isLetter(v: \"A\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/isletter/',\n  },\n  {\n    name: 'strings.isLower',\n    args: [\n      {\n        name: 'v',\n        desc: 'The single-character string to test.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Tests if a single-character string is lowercase.',\n    example: 'strings.isLower(v: \"a\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/islower/',\n  },\n  {\n    name: 'strings.isUpper',\n    args: [\n      {\n        name: 'v',\n        desc: 'The single-character string to test.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Tests if a single-character string is uppercase.',\n    example: 'strings.isUpper(v: \"A\")',\n    category: 'Tests',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/isupper/',\n  },\n  {\n    name: 'strings.joinStr',\n    args: [\n      {\n        name: 'arr',\n        desc: 'The array of strings to concatenate.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'v',\n        desc: 'The separator to use in the concatenated value.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Concatenates elements of a string array into a single string using a specified separator.',\n    example: 'strings.joinStr(arr: [\"a\", \"b\", \"c\"], v: \",\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/joinstr/',\n  },\n  {\n    name: 'strings.lastIndex',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 'substr',\n        desc: 'The substring to search for.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Returns the index of the last instance of a substring in a string. If the substring is not present, the function returns -1.',\n    example: 'strings.lastIndex(v: \"go gopher\", t: \"go\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/lastindex/',\n  },\n  {\n    name: 'strings.lastIndexAny',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 'chars',\n        desc: 'Characters to search for.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Returns the index of the last instance of any specified characters in a string. If none of the specified characters are present, the function returns -1.',\n    example: 'strings.lastIndexAny(v: \"chicken\", chars: \"aeiouy\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/lastindexany/',\n  },\n  {\n    name: 'strings.repeat',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to repeat.',\n        type: 'String',\n      },\n      {\n        name: 'i',\n        desc: 'The number of times to repeat `v`.',\n        type: 'Integer',\n      },\n    ],\n    package: 'strings',\n    desc: 'Returns a string consisting of `i` copies of a specified string.',\n    example: 'strings.repeat(v: \"ha\", i: 3)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/repeat/',\n  },\n  {\n    name: 'strings.replace',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The substring to replace.',\n        type: 'String',\n      },\n      {\n        name: 'u',\n        desc: 'The replacement for `i` instances of `t`.',\n        type: 'String',\n      },\n      {\n        name: 'i',\n        desc: 'The number of non-overlapping `t` matches to replace.',\n        type: 'Integer',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Replaces the first `i` non-overlapping instances of a substring with a specified replacement.',\n    example: 'strings.replace(v: \"oink oink oink\", t: \"oink\", u: \"moo\", i: 2)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/replace/',\n  },\n  {\n    name: 'strings.replaceAll',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The substring to replace.',\n        type: 'String',\n      },\n      {\n        name: 'u',\n        desc: 'The replacement for all instances of `t`.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Replaces all non-overlapping instances of a substring with a specified replacement.',\n    example: 'strings.replaceAll(v: \"oink oink oink\", t: \"oink\", u: \"moo\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/replaceall/',\n  },\n  {\n    name: 'strings.split',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to split.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The string value that acts as the separator.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Splits a string on a specified separator and returns an array of substrings.',\n    example: 'strings.split(v: \"a flux of foxes\", t: \" \")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/split/',\n  },\n  {\n    name: 'strings.splitAfter',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to split.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The string value that acts as the separator.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Splits a string after a specified separator and returns an array of substrings.',\n    example: 'strings.splitAfter(v: \"a flux of foxes\", t: \" \")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/splitafter/',\n  },\n  {\n    name: 'strings.splitAfterN',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to split.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The string value that acts as the separator.',\n        type: 'String',\n      },\n      {\n        name: 'i',\n        desc: 'The number of substrings to return.',\n        type: 'Integer',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Splits a string after a specified separator and returns an array of `i` substrings.',\n    example: 'strings.splitAfterN(v: \"a flux of foxes\", t: \" \", i: 2)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/splitaftern/',\n  },\n  {\n    name: 'strings.splitN',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to split.',\n        type: 'String',\n      },\n      {\n        name: 't',\n        desc: 'The string value that acts as the separator.',\n        type: 'String',\n      },\n      {\n        name: 'i',\n        desc: 'The number of substrings to return.',\n        type: 'Integer',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Splits a string on a specified separator and returns an array of `i` substrings.',\n    example: 'strings.splitN(v: \"a flux of foxes\", t: \" \", i: 2)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/splitn/',\n  },\n  {\n    name: 'strings.strlen',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to measure.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Returns the length of a string.',\n    example: 'strings.strlen(v: \"a flux of foxes\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/strlen/',\n  },\n  {\n    name: 'strings.substring',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to search.',\n        type: 'String',\n      },\n      {\n        name: 'start',\n        desc: 'The starting index of the substring.',\n        type: 'Integer',\n      },\n      {\n        name: 'end',\n        desc: 'The ending index of the substring.',\n        type: 'Integer',\n      },\n    ],\n    package: 'strings',\n    desc: 'Returns a substring based on start and end parameters.',\n    example: 'strings.substring(v: \"influx\", start: 0, end: 3)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/substring/',\n  },\n  STRINGS_TITLE,\n  {\n    name: 'strings.toLower',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to convert.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Converts a string to lower case.',\n    example: 'strings.toLower(v: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/tolower/',\n  },\n  {\n    name: 'strings.toTitle',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to convert.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Converts all characters in a string to title case.',\n    example: 'strings.toTitle(v: \"a flux of foxes\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/totitle/',\n  },\n  {\n    name: 'strings.toUpper',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to convert.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Converts a string to upper case.',\n    example: 'strings.toUpper(v: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/toupper/',\n  },\n  STRINGS_TRIM,\n  {\n    name: 'strings.trimLeft',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string to remove characters from.',\n        type: 'String',\n      },\n      {\n        name: 'cutset',\n        desc: 'The leading characters to remove from the string.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Removes specified leading characters from a string.',\n    example: 'strings.trimLeft(v: \".abc\", cutset: \".\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/trimleft/',\n  },\n  {\n    name: 'strings.trimPrefix',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to trim.',\n        type: 'String',\n      },\n      {\n        name: 'prefix',\n        desc: 'The prefix to remove.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Removes a prefix from a string. Strings that do not start with the prefix are returned unchanged.',\n    example: 'strings.trimPrefix(v: r._value, prefix: \"abc_\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/trimprefix/',\n  },\n  {\n    name: 'strings.trimRight',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string to remove characters from.',\n        type: 'String',\n      },\n      {\n        name: 'cutset',\n        desc: 'The trailing characters to remove from the string.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Removes specified trailing characters from a string.',\n    example: 'strings.trimRight(v: \"abc.\", cutset: \".\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/trimright/',\n  },\n  {\n    name: 'strings.trimSpace',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to trim.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc: 'Removes leading and trailing spaces from a string.',\n    example: 'strings.trimSpace(v: r._value)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/trimspace/',\n  },\n  {\n    name: 'strings.trimSuffix',\n    args: [\n      {\n        name: 'v',\n        desc: 'The string value to trim.',\n        type: 'String',\n      },\n      {\n        name: 'suffix',\n        desc: 'The suffix to remove.',\n        type: 'String',\n      },\n    ],\n    package: 'strings',\n    desc:\n      'Removes a suffix from a string. Strings that do not end with the suffix are returned unchanged.',\n    example: 'strings.trimSuffix(v: r._value, suffix: \"_123\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/strings/trimsuffix/',\n  },\n  {\n    name: 'sum',\n    args: [\n      {\n        name: 'column',\n        desc: 'The column on which to operate. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Computes the sum of non-null records in the specified column.',\n    example: 'sum(column: \"_value\")',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/sum/',\n  },\n  {\n    name: 'system.time',\n    args: [],\n    package: 'system',\n    desc: 'Returns the current system time.',\n    example: 'system.time()',\n    category: 'Miscellaneous',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/system/time/',\n  },\n  {\n    name: 'tableFind',\n    args: [\n      {\n        name: 'fn',\n        desc: 'A predicate function for matching keys in a table group key.',\n        type: 'Function',\n      },\n    ],\n    package: '',\n    desc:\n      'Extracts the first table in a stream of tables whose group key values match a predicate. If no table is found, the function errors.',\n    example: 'tableFind(fn: (key) => key._field == \"fieldName\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/stream-table/tablefind/',\n  },\n  {\n    name: 'tail',\n    args: [\n      {\n        name: 'n',\n        desc: 'The maximum number of records to output.',\n        type: 'Integer',\n      },\n      {\n        name: 'offset',\n        desc:\n          'The number of records to skip at the end of a table before limiting to `n`. Defaults to `0`.',\n        type: 'Integer',\n      },\n    ],\n    package: '',\n    desc:\n      'Limits each output table to the last `n` records, excluding the offset.',\n    example: 'tail(n: 10)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/tail/',\n  },\n  {\n    name: 'testing.assertEmpty',\n    args: [],\n    package: 'testing',\n    desc: 'Tests if an input stream is empty.',\n    example: 'testing.assertEmpty()',\n    category: 'Test',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/testing/assertempty/',\n  },\n  {\n    name: 'testing.assertEquals',\n    args: [\n      {\n        name: 'name',\n        desc: 'Unique name given to the assertion.',\n        type: 'String',\n      },\n      {\n        name: 'got',\n        desc: 'The stream containing data to test.',\n        type: 'Obscflect',\n      },\n      {\n        name: 'want',\n        desc: 'The stream that contains the expected data to test against.',\n        type: 'Object',\n      },\n    ],\n    package: 'testing',\n    desc: 'Tests whether two streams have identical data.',\n    example: 'testing.assertEquals(got: got, want: want)',\n    category: 'Test',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/testing/assertequals/',\n  },\n  {\n    name: 'testing.diff',\n    args: [\n      {\n        name: 'got',\n        desc: 'The stream containing data to test.',\n        type: 'Obscflect',\n      },\n      {\n        name: 'want',\n        desc: 'The stream that contains the expected data to test against.',\n        type: 'Object',\n      },\n    ],\n    package: 'testing',\n    desc: 'Produces a diff between two streams.',\n    example: 'testing.assertEquals(got: got, want: want)',\n    category: 'Test',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/testing/diff/',\n  },\n  {\n    name: 'time',\n    args: [\n      {\n        name: 'v',\n        desc: 'The value to convert.',\n        type: 'String, Integer, UInteger',\n      },\n    ],\n    package: '',\n    desc: 'Converts a single value to a time.',\n    example: 'time(v: r._value)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/time/',\n  },\n  {\n    name: 'timedMovingAverage',\n    args: [\n      {\n        name: 'every',\n        desc: 'The frequency of time windows.',\n        type: 'Duration',\n      },\n      {\n        name: 'period',\n        desc: 'The length of each averaged time window.',\n        type: 'Duration',\n      },\n      {\n        name: 'column',\n        desc:\n          'The column on which to compute the moving average. Defaults to `\"_value\"`',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Calculates the mean of values in a defined time range at a specified frequency.',\n    example: 'timedMovingAverage(every: 1d, period: 5d)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/timedmovingaverage/',\n  },\n  {\n    name: 'timeShift',\n    args: [\n      {\n        name: 'duration',\n        desc:\n          'The amount of time to add to each time value. May be a negative duration.',\n        type: 'String',\n      },\n      {\n        name: 'columns',\n        desc:\n          'The list of all columns to be shifted. Defaults to `[\"_start\", \"_stop\", \"_time\"]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc:\n      'Adds a fixed duration to time columns. The output table schema is the same as the input table.',\n    example: 'timeShift(duration: 10h, columns: [\"_start\", \"_stop\", \"_time\"])',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/shift/',\n  },\n  {\n    name: 'to',\n    args: [\n      {\n        name: 'bucket',\n        desc:\n          'The bucket to which data is written. Mutually exclusive with `bucketID`.',\n        type: 'String',\n      },\n      {\n        name: 'bucketID',\n        desc:\n          'The ID of the bucket to which data is written. Mutually exclusive with `bucket`.',\n        type: 'String',\n      },\n      {\n        name: 'org',\n        desc:\n          'The organization name of the specified `bucket`. Only required when writing to a remote host. Mutually exclusive with `orgID`.',\n        type: 'String',\n      },\n      {\n        name: 'orgID',\n        desc:\n          'The organization ID of the specified `bucket`. Only required when writing to a remote host. Mutually exclusive with `org`.',\n        type: 'String',\n      },\n      {\n        name: 'host',\n        desc:\n          'The remote InfluxDB host to which to write. If specified, a `token` is required.',\n        type: 'String',\n      },\n      {\n        name: 'token',\n        desc:\n          'The authorization token to use when writing to a remote host. Required when a `host` is specified.',\n        type: 'String',\n      },\n      {\n        name: 'timeColumn',\n        desc: 'The time column of the output. Default is `\"_time\"`.',\n        type: 'String',\n      },\n      {\n        name: 'tagColumns',\n        desc:\n          'The tag columns of the output. Defaults to all columns with type `string`, excluding all value columns and the `_field` column if present.',\n        type: 'Array of Strings',\n      },\n      {\n        name: 'fieldFn',\n        desc:\n          'Function that takes a record from the input table and returns an object. For each record from the input table, `fieldFn` returns an object that maps output the field key to the output value. Default is `(r) => ({ [r._field]: r._value })`',\n        type: 'Function',\n      },\n    ],\n    package: '',\n    desc: 'The `to()` function writes data to an InfluxDB v2.0 bucket.',\n    example: 'to(bucket:\"my-bucket\", org:\"my-org\")',\n    category: 'Outputs',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/outputs/to/',\n  },\n  {\n    name: 'toBool',\n    args: [],\n    package: '',\n    desc: 'Converts all values in the `_value` column to a boolean.',\n    example: 'toBool()',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/tobool',\n  },\n  {\n    name: 'toFloat',\n    args: [],\n    package: '',\n    desc: 'Converts all values in the `_value` column to a float.',\n    example: 'toFloat()',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/tofloat/',\n  },\n  {\n    name: 'toInt',\n    args: [],\n    package: '',\n    desc: 'Converts all values in the `_value` column to a integer.',\n    example: 'toInt()',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/toint/',\n  },\n  {\n    name: 'toString',\n    args: [],\n    package: '',\n    desc: 'Converts a value to a string.',\n    example: 'toString()',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/tostring/',\n  },\n  {\n    name: 'toTime',\n    args: [],\n    package: '',\n    desc: 'Converts a value to a time.',\n    example: 'toTime()',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/totime/',\n  },\n  {\n    name: 'toUInt',\n    args: [],\n    package: '',\n    desc: 'Converts a value to an unsigned integer.',\n    example: 'toUInt()',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/touint/',\n  },\n  {\n    name: 'top',\n    args: [\n      {\n        name: 'n',\n        desc: 'Number of rows to return.',\n        type: 'Integer',\n      },\n      {\n        name: 'columns',\n        desc:\n          'List of columns by which to sort. Sort precedence is determined by list order (left to right). Default is `[\"_value\"]`.',\n        type: 'Array of Strings',\n      },\n    ],\n    package: '',\n    desc: 'Sorts a table by columns and keeps only the top n rows.',\n    example: 'top(n:10, columns: [\"_value\"])',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/top/',\n  },\n  {\n    name: 'tripleEMA',\n    args: [\n      {\n        name: 'n',\n        desc: 'The number of points to average.',\n        type: 'Integer',\n      },\n    ],\n    package: '',\n    desc:\n      'Calculates the exponential moving average of values in the `_value` column grouped into `n` number of points, giving more weight to recent data at triple the rate of `exponentialMovingAverage()`.',\n    example: 'tripleEMA(n: 5)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/tripleema/',\n  },\n  {\n    name: 'tripleExponentialDerivative',\n    args: [\n      {\n        name: 'n',\n        desc: 'The number of points to use in the calculation.',\n        type: 'Integer',\n      },\n    ],\n    package: '',\n    desc:\n      'Calculates a triple exponential derivative (TRIX) of input tables using n points.',\n    example: 'tripleExponentialDerivative(n: 5)',\n    category: 'Aggregates',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/aggregates/tripleexponentialderivative/',\n  },\n  {\n    name: 'truncateTimeColumn',\n    args: [\n      {\n        name: 'unit',\n        desc: 'The unit of time to truncate to.',\n        type: 'Duration',\n      },\n    ],\n    package: '',\n    desc: 'Truncates all `_time` values to a specified unit.',\n    example: 'truncateTimeColumn(unit: 1m)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/truncatetimecolumn/',\n  },\n  {\n    name: 'uint',\n    args: [\n      {\n        name: 'v',\n        desc: 'The value to convert.',\n        type: 'String, Integer, Boolean',\n      },\n    ],\n    package: '',\n    desc: 'Converts a single value to a uinteger.',\n    example: 'uint(v: r._value)',\n    category: 'Type Conversions',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/type-conversions/uint/',\n  },\n  UNION,\n  {\n    name: 'unique',\n    args: [\n      {\n        name: 'column',\n        desc: 'The column searched for unique values. Defaults to `\"_value\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc: 'Returns all rows containing unique values in a specified column.',\n    example: 'unique(column: \"_value\")',\n    category: 'Selectors',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/selectors/unique/',\n  },\n  {\n    name: 'v1.fieldsAsCols',\n    args: [],\n    package: 'influxdata/influxdb/v1',\n    desc: 'Aligns fields within each input table that have the same timestamp.',\n    example: 'v1.fieldsAsCols()',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/influxdb-v1/fieldsascols/',\n  },\n  {\n    name: 'v1.measurementTagKeys',\n    args: [\n      {\n        name: 'bucket',\n        desc:\n          'The bucket from which to return tag keys for a specific measurement.',\n        type: 'String',\n      },\n      {\n        name: 'measurement',\n        desc: 'The measurement from which to return tag keys.',\n        type: 'String',\n      },\n    ],\n    package: 'influxdata/influxdb/v1',\n    desc: 'Returns a list of tag keys for a specific measurement.',\n    example: 'v1.measurementTagKeys(bucket: \"telegraf\", measurement: \"mem\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/influxdb-v1/measurementtagkeys/',\n  },\n  {\n    name: 'v1.measurementTagValues',\n    args: [\n      {\n        name: 'bucket',\n        desc:\n          'The bucket from which to return tag keys for a specific measurement.',\n        type: 'String',\n      },\n      {\n        name: 'measurement',\n        desc: 'The measurement from which to return tag values.',\n        type: 'String',\n      },\n      {\n        name: 'tag',\n        desc: 'The tag from which to return all unique values.',\n        type: 'String',\n      },\n    ],\n    package: 'influxdata/influxdb/v1',\n    desc: 'Returns a list of tag values for a specific measurement.',\n    example:\n      'v1.measurementTagValues(bucket: \"telegraf\", measurement: \"mem\", tag: \"host\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/influxdb-v1/measurementtagvalues/',\n  },\n  {\n    name: 'v1.measurements',\n    args: [\n      {\n        name: 'bucket',\n        desc: 'The bucket from which to list measurements.',\n        type: 'String',\n      },\n    ],\n    package: 'influxdata/influxdb/v1',\n    desc: 'Returns a list of measurements in a specific bucket.',\n    example: 'v1.measurements(bucket: \"telegraf\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/influxdb-v1/measurements/',\n  },\n  {\n    name: 'v1.tagKeys',\n    args: [\n      {\n        name: 'bucket',\n        desc: 'The bucket from which to list tag keys.',\n        type: 'String',\n      },\n      {\n        name: 'predicate',\n        desc:\n          'The predicate function that filters tag keys. Defaults to `(r) => true.`',\n        type: 'Function',\n      },\n      {\n        name: 'start',\n        desc:\n          'Specifies the oldest time to be included in the results. Defaults to `-30d`.',\n        type: 'Duration, Time',\n      },\n    ],\n    package: 'influxdata/influxdb/v1',\n    desc: 'Returns a list of tag keys for all series that match the predicate.',\n    example: 'v1.tagKeys(bucket: \"telegraf\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/influxdb-v1/tagkeys/',\n  },\n  {\n    name: 'v1.tagValues',\n    args: [\n      {\n        name: 'bucket',\n        desc: 'The bucket from which to list tag values.',\n        type: 'String',\n      },\n      {\n        name: 'tag',\n        desc: 'The tag for which to return unique values.',\n        type: 'String',\n      },\n      {\n        name: 'predicate',\n        desc:\n          'The predicate function that filters tag values. Defaults to `(r) => true.`',\n        type: 'Function',\n      },\n      {\n        name: 'start',\n        desc:\n          'Specifies the oldest time to be included in the results. Defaults to `-30d`.',\n        type: 'Duration, Time',\n      },\n    ],\n    package: 'influxdata/influxdb/v1',\n    desc: 'Returns a list of unique values for a given tag.',\n    example: 'v1.tagValues(bucket: \"telegraf\")',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/influxdb-v1/tagvalues/',\n  },\n  {\n    name: 'window',\n    args: [\n      {\n        name: 'every',\n        desc: 'Duration of time between windows. Defaults to `period` value.',\n        type: 'Duration',\n      },\n      {\n        name: 'period',\n        desc:\n          'Duration of the window. Period is the length of each interval. It can be negative, indicating the start and stop boundaries are reversed. Defaults to `every` value.',\n        type: 'Duration',\n      },\n      {\n        name: 'offset',\n        desc:\n          'The offset duration relative to the `location` offset. It can be negative, indicating that the offset goes backwards in time. The default aligns the window boundaries with `now`.',\n        type: 'Duration',\n      },\n      {\n        name: 'intervals',\n        desc:\n          'A function that returns an interval generator, a set of intervals used as windows. See docs for an example.',\n        type: 'Function',\n      },\n      {\n        name: 'timeColumn',\n        desc: 'The column containing time. Defaults to `\"_time\"`.',\n        type: 'String',\n      },\n      {\n        name: 'startColumn',\n        desc:\n          'The column containing the window start time. Defaults to `\"_start\"`.',\n        type: 'String',\n      },\n      {\n        name: 'stopColumn',\n        desc:\n          'The column containing the window stop time. Defaults to `\"_stop\"`.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Groups records based on a time value. New columns are added to uniquely identify each window. Those columns are added to the group key of the output tables. A single input record will be placed into zero or more output tables, depending on the specific windowing function.',\n    example: 'window(every: v.windowPeriod)',\n    category: 'Transformations',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/transformations/window/',\n  },\n  {\n    name: 'yield',\n    args: [\n      {\n        name: 'name',\n        desc: 'A unique name for the yielded results.',\n        type: 'String',\n      },\n    ],\n    package: '',\n    desc:\n      'Indicates the input tables received should be delivered as a result of the query. Yield outputs the input stream unmodified. A query may have multiple results, each identified by the name provided to the `yield()` function.',\n    example: 'yield(name: \"custom-name\")',\n    category: 'Outputs',\n    link:\n      'https://v2.docs.influxdata.com/v2.0/reference/flux/stdlib/built-in/outputs/yield/',\n  },\n]\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport TransformToolbarFunctions from 'src/timeMachine/components/fluxFunctionsToolbar/TransformToolbarFunctions'\nimport FunctionCategory from 'src/timeMachine/components/fluxFunctionsToolbar/FunctionCategory'\nimport SearchBar from 'src/timeMachine/components/SearchBar'\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Actions\nimport {setActiveQueryText} from 'src/timeMachine/actions'\n\n// Utils\nimport {getActiveQuery} from 'src/timeMachine/selectors'\n\n// Constants\nimport {FLUX_FUNCTIONS} from 'src/shared/constants/fluxFunctions'\n\n// Types\nimport {AppState, FluxToolbarFunction} from 'src/types'\n\ninterface OwnProps {\n  onInsertFluxFunction: (func: FluxToolbarFunction) => void\n}\n\ninterface StateProps {\n  activeQueryText: string\n}\n\ninterface DispatchProps {\n  onSetActiveQueryText: (script: string) => void\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\ninterface State {\n  searchTerm: string\n}\n\nclass FluxFunctionsToolbar extends PureComponent<Props, State> {\n  public state: State = {searchTerm: ''}\n\n  public render() {\n    const {searchTerm} = this.state\n\n    return (\n      <div className=\"flux-functions-toolbar\">\n        <SearchBar onSearch={this.handleSearch} resourceName=\"Functions\" />\n        <FancyScrollbar>\n          <div className=\"flux-functions-toolbar--list\">\n            <TransformToolbarFunctions\n              funcs={FLUX_FUNCTIONS}\n              searchTerm={searchTerm}\n            >\n              {sortedFunctions =>\n                Object.entries(sortedFunctions).map(([category, funcs]) => (\n                  <FunctionCategory\n                    key={category}\n                    category={category}\n                    funcs={funcs}\n                    onClickFunction={this.handleClickFunction}\n                  />\n                ))\n              }\n            </TransformToolbarFunctions>\n          </div>\n        </FancyScrollbar>\n      </div>\n    )\n  }\n\n  private handleSearch = (searchTerm: string): void => {\n    this.setState({searchTerm})\n  }\n\n  private handleClickFunction = (func: FluxToolbarFunction) => {\n    this.props.onInsertFluxFunction(func)\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const activeQueryText = getActiveQuery(state).text\n\n  return {activeQueryText}\n}\n\nconst mdtp = {\n  onSetActiveQueryText: setActiveQueryText,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(ErrorHandling(FluxFunctionsToolbar))\n","import {ComponentStatus} from 'src/clockface'\nimport {RemoteDataState} from 'src/types'\n\nexport const toComponentStatus = (status: RemoteDataState): ComponentStatus => {\n  if (status === RemoteDataState.NotStarted) {\n    return ComponentStatus.Disabled\n  }\n\n  if (status === RemoteDataState.Loading) {\n    return ComponentStatus.Loading\n  }\n\n  if (status === RemoteDataState.Error) {\n    return ComponentStatus.Error\n  }\n\n  return ComponentStatus.Default\n}\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport {\n  Form,\n  SelectDropdown,\n  IconFont,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\n// Actions\nimport {\n  addVariableToTimeMachine,\n  selectVariableValue,\n} from 'src/timeMachine/actions/queries'\n\n// Utils\nimport {\n  getTimeMachineValues,\n  getTimeMachineValuesStatus,\n} from 'src/variables/selectors'\nimport {toComponentStatus} from 'src/shared/utils/toComponentStatus'\n\n// Types\nimport {RemoteDataState, VariableValues} from 'src/types'\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  values?: VariableValues\n  valuesStatus: RemoteDataState\n}\n\ninterface DispatchProps {\n  onAddVariableToTimeMachine: typeof addVariableToTimeMachine\n  onSelectVariableValue: typeof selectVariableValue\n}\n\ninterface OwnProps {\n  variableID: string\n}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\nconst VariableTooltipContents: FunctionComponent<Props> = ({\n  variableID,\n  values,\n  valuesStatus,\n  onAddVariableToTimeMachine,\n  onSelectVariableValue,\n}) => {\n  const dropdownItems: string[] = get(values, 'values') || []\n\n  const handleMouseEnter = () => {\n    if (values || valuesStatus === RemoteDataState.Loading) {\n      return\n    }\n\n    onAddVariableToTimeMachine(variableID)\n  }\n\n  let selectedOption = 'None Selected'\n  let icon\n  let status = toComponentStatus(valuesStatus)\n\n  if (!values) {\n    selectedOption = 'Failed to Load'\n    icon = IconFont.AlertTriangle\n    status = ComponentStatus.Disabled\n  } else if (values.error) {\n    selectedOption = 'Failed to Load'\n    icon = IconFont.AlertTriangle\n    status = ComponentStatus.Disabled\n  } else if (!values.values.length) {\n    selectedOption = 'No Results'\n  } else {\n    selectedOption = get(values, 'selectedValue', 'None Selected')\n  }\n\n  return (\n    <div onMouseEnter={handleMouseEnter}>\n      <Form.Element label=\"Value\">\n        <SelectDropdown\n          buttonIcon={icon}\n          options={dropdownItems}\n          selectedOption={selectedOption}\n          buttonStatus={status}\n          style={{width: '200px'}}\n          onSelect={value => onSelectVariableValue(variableID, value)}\n        />\n      </Form.Element>\n    </div>\n  )\n}\n\nconst mstp = (state: AppState, ownProps: OwnProps) => {\n  const valuesStatus = getTimeMachineValuesStatus(state)\n  const values = getTimeMachineValues(state, ownProps.variableID)\n\n  return {values, valuesStatus}\n}\n\nconst mdtp = {\n  onAddVariableToTimeMachine: addVariableToTimeMachine,\n  onSelectVariableValue: selectVariableValue,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(VariableTooltipContents)\n","import React, {FunctionComponent} from 'react'\n\ninterface Props {\n  name: string\n  onClickVariable: (name: string) => void\n}\n\nconst VariableLabel: FunctionComponent<Props> = ({onClickVariable, name}) => {\n  return (\n    <div\n      className=\"variables-toolbar--label\"\n      onClick={() => {\n        onClickVariable(name)\n      }}\n    >\n      {name}\n    </div>\n  )\n}\n\nexport default VariableLabel\n","// Libraries\nimport React, {FC, useRef} from 'react'\n\n// Components\nimport VariableTooltipContents from 'src/timeMachine/components/variableToolbar/VariableTooltipContents'\nimport {\n  Popover,\n  PopoverPosition,\n  PopoverInteraction,\n  Appearance,\n} from '@influxdata/clockface'\n\n// Types\nimport {Variable} from 'src/types'\nimport VariableLabel from 'src/timeMachine/components/variableToolbar/VariableLabel'\n\ninterface Props {\n  variable: Variable\n  onClickVariable: (variableName: string) => void\n}\n\nconst VariableItem: FC<Props> = ({variable, onClickVariable}) => {\n  const trigger = useRef<HTMLDivElement>(null)\n\n  return (\n    <div className=\"variables-toolbar--item\" ref={trigger}>\n      <VariableLabel name={variable.name} onClickVariable={onClickVariable} />\n      <Popover\n        appearance={Appearance.Outline}\n        position={PopoverPosition.ToTheLeft}\n        triggerRef={trigger}\n        showEvent={PopoverInteraction.Hover}\n        hideEvent={PopoverInteraction.Hover}\n        distanceFromTrigger={8}\n        testID=\"toolbar-popover\"\n        contents={() => <VariableTooltipContents variableID={variable.id} />}\n      />\n    </div>\n  )\n}\n\nexport default VariableItem\n","// Libraries\nimport React, {useState, FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport SearchBar from 'src/timeMachine/components/SearchBar'\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\nimport VariableItem from 'src/timeMachine/components/variableToolbar/VariableItem'\n\n// Utils\nimport {extractVariablesList} from 'src/variables/selectors'\n\n// Types\nimport {AppState, Variable} from 'src/types'\n\ninterface OwnProps {\n  onClickVariable: (variableName: string) => void\n}\n\ninterface StateProps {\n  variables: Variable[]\n}\n\nconst VariableToolbar: FunctionComponent<OwnProps & StateProps> = ({\n  variables,\n  onClickVariable,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('')\n\n  return (\n    <div className=\"variable-toolbar\">\n      <SearchBar onSearch={setSearchTerm} resourceName=\"Variables\" />\n      <FancyScrollbar style={{marginBottom: '40px'}}>\n        <div className=\"variables-toolbar--list\">\n          {variables\n            .filter(v => v.name.includes(searchTerm))\n            .map(v => (\n              <VariableItem\n                variable={v}\n                key={v.id}\n                onClickVariable={onClickVariable}\n              />\n            ))}\n        </div>\n      </FancyScrollbar>\n    </div>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const variables = extractVariablesList(state)\n\n  return {variables}\n}\n\nexport default connect<StateProps>(mstp)(VariableToolbar)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\ninterface Props {\n  onSetActive: () => void\n  name: string\n  active: boolean\n  testID: string\n}\n\nexport default class ToolbarTab extends PureComponent<Props> {\n  public static defaultProps = {\n    testID: 'toolbar-tab',\n  }\n\n  public render() {\n    const {active, onSetActive, name, testID} = this.props\n    return (\n      <div\n        className={`toolbar-tab ${active ? 'active' : ''}`}\n        onClick={onSetActive}\n        title={name}\n        data-testid={testID}\n      >\n        {name}\n      </div>\n    )\n  }\n}\n","// Constants\nimport {FROM, UNION} from 'src/shared/constants/fluxFunctions'\n\nconst functionRequiresNewLine = (funcName: string): boolean => {\n  switch (funcName) {\n    case FROM.name:\n    case UNION.name: {\n      return true\n    }\n    default:\n      return false\n  }\n}\n\nexport const formatFunctionForInsert = (\n  funcName: string,\n  fluxFunction: string\n) => {\n  if (functionRequiresNewLine(funcName)) {\n    return `\\n${fluxFunction}`\n  }\n\n  return `  |> ${fluxFunction}`\n}\n\nexport const generateImport = (\n  funcPackage: string,\n  script: string\n): false | string => {\n  const importStatement = `import \"${funcPackage}\"`\n\n  if (!funcPackage || script.includes(importStatement)) {\n    return false\n  }\n\n  return importStatement\n}\n","// Libraries\nimport React, {FC, useState} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport FluxEditor from 'src/shared/components/FluxMonacoEditor'\nimport Threesizer from 'src/shared/components/threesizer/Threesizer'\nimport FluxFunctionsToolbar from 'src/timeMachine/components/fluxFunctionsToolbar/FluxFunctionsToolbar'\nimport VariableToolbar from 'src/timeMachine/components/variableToolbar/VariableToolbar'\nimport ToolbarTab from 'src/timeMachine/components/ToolbarTab'\n\n// Actions\nimport {setActiveQueryText} from 'src/timeMachine/actions'\nimport {saveAndExecuteQueries} from 'src/timeMachine/actions/queries'\n\n// Utils\nimport {getActiveQuery, getActiveTimeMachine} from 'src/timeMachine/selectors'\nimport {\n  formatFunctionForInsert,\n  generateImport,\n} from 'src/timeMachine/utils/insertFunction'\n\n// Constants\nimport {HANDLE_VERTICAL, HANDLE_NONE} from 'src/shared/constants'\n\n// Types\nimport {AppState, FluxToolbarFunction, EditorType} from 'src/types'\n\ninterface StateProps {\n  activeQueryText: string\n  activeTab: string\n}\n\ninterface DispatchProps {\n  onSetActiveQueryText: typeof setActiveQueryText\n  onSubmitQueries: typeof saveAndExecuteQueries\n}\n\ntype Props = StateProps & DispatchProps\n\nconst TimeMachineFluxEditor: FC<Props> = ({\n  activeQueryText,\n  onSubmitQueries,\n  onSetActiveQueryText,\n  activeTab,\n}) => {\n  const [displayFluxFunctions, setDisplayFluxFunctions] = useState(true)\n  const [editorInstance, setEditorInstance] = useState<EditorType>(null)\n\n  const showFluxFunctions = () => {\n    setDisplayFluxFunctions(true)\n  }\n\n  const hideFluxFunctions = () => {\n    setDisplayFluxFunctions(false)\n  }\n\n  const handleInsertVariable = (variableName: string): void => {\n    const p = editorInstance.getPosition()\n    editorInstance.executeEdits('', [\n      {\n        range: new window.monaco.Range(\n          p.lineNumber,\n          p.column,\n          p.lineNumber,\n          p.column\n        ),\n        text: `v.${variableName}`,\n      },\n    ])\n    onSetActiveQueryText(editorInstance.getValue())\n  }\n\n  const handleInsertFluxFunction = (func: FluxToolbarFunction): void => {\n    const p = editorInstance.getPosition()\n    const edits = [\n      {\n        range: new window.monaco.Range(\n          p.lineNumber,\n          p.column,\n          p.lineNumber,\n          p.column\n        ),\n        text: formatFunctionForInsert(func.name, func.example),\n      },\n    ]\n    const importStatement = generateImport(\n      func.package,\n      editorInstance.getValue()\n    )\n    if (importStatement) {\n      edits.unshift({\n        range: new window.monaco.Range(1, 1, 1, 1),\n        text: `${importStatement}\\n`,\n      })\n    }\n    editorInstance.executeEdits('', edits)\n    onSetActiveQueryText(editorInstance.getValue())\n  }\n\n  const divisions = [\n    {\n      size: 0.75,\n      handleDisplay: HANDLE_NONE,\n      render: () => {\n        return (\n          <FluxEditor\n            script={activeQueryText}\n            onChangeScript={onSetActiveQueryText}\n            onSubmitScript={onSubmitQueries}\n            setEditorInstance={setEditorInstance}\n          />\n        )\n      },\n    },\n    {\n      render: () => {\n        return (\n          <>\n            <div className=\"toolbar-tab-container\">\n              {activeTab !== 'customCheckQuery' && (\n                <ToolbarTab\n                  onSetActive={hideFluxFunctions}\n                  name=\"Variables\"\n                  active={!displayFluxFunctions}\n                />\n              )}\n              <ToolbarTab\n                onSetActive={showFluxFunctions}\n                name=\"Functions\"\n                active={displayFluxFunctions}\n                testID=\"functions-toolbar-tab\"\n              />\n            </div>\n            {displayFluxFunctions ? (\n              <FluxFunctionsToolbar\n                onInsertFluxFunction={handleInsertFluxFunction}\n              />\n            ) : (\n              <VariableToolbar onClickVariable={handleInsertVariable} />\n            )}\n          </>\n        )\n      },\n      handlePixels: 6,\n      size: 0.25,\n    },\n  ]\n\n  return (\n    <div className=\"time-machine-flux-editor\">\n      <Threesizer orientation={HANDLE_VERTICAL} divisions={divisions} />\n    </div>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const activeQueryText = getActiveQuery(state).text\n  const {activeTab} = getActiveTimeMachine(state)\n\n  return {activeQueryText, activeTab}\n}\n\nconst mdtp = {\n  onSetActiveQueryText: setActiveQueryText,\n  onSubmitQueries: saveAndExecuteQueries,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(TimeMachineFluxEditor)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport moment from 'moment'\n\n// Components\nimport {Button, ComponentStatus, IconFont} from '@influxdata/clockface'\n\n// Utils\nimport {downloadTextFile} from 'src/shared/utils/download'\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  files: string[] | null\n}\n\nclass CSVExportButton extends PureComponent<StateProps, {}> {\n  public render() {\n    return (\n      <Button\n        titleText={this.titleText}\n        text=\"CSV\"\n        icon={IconFont.Download}\n        onClick={this.handleClick}\n        status={this.buttonStatus}\n      />\n    )\n  }\n\n  private get buttonStatus(): ComponentStatus {\n    const {files} = this.props\n\n    if (files) {\n      return ComponentStatus.Default\n    }\n\n    return ComponentStatus.Disabled\n  }\n\n  private get titleText(): string {\n    const {files} = this.props\n\n    if (files) {\n      return 'Download query results as a .CSV file'\n    }\n\n    return 'Create a query in order to download results as .CSV'\n  }\n\n  private handleClick = () => {\n    const {files} = this.props\n    const csv = files.join('\\n\\n')\n    const now = moment().format('YYYY-MM-DD-HH-mm')\n    const filename = `${now} Chronograf Data`\n\n    downloadTextFile(csv, filename, '.csv', 'text/csv')\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const {\n    queryResults: {files},\n  } = getActiveTimeMachine(state)\n\n  return {files}\n}\n\nexport default connect<StateProps>(mstp)(CSVExportButton)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  Button,\n  ConfirmationButton,\n  Appearance,\n  ComponentColor,\n} from '@influxdata/clockface'\n\n// Actions\nimport {\n  editActiveQueryWithBuilder,\n  editActiveQueryAsFlux,\n} from 'src/timeMachine/actions'\n\n// Utils\nimport {getActiveQuery} from 'src/timeMachine/selectors'\nimport {\n  confirmationState,\n  ConfirmationState,\n} from 'src/timeMachine/utils/queryBuilder'\n\n// Types\nimport {AppState, DashboardQuery} from 'src/types'\n\ninterface StateProps {\n  activeQuery: DashboardQuery\n}\n\ninterface DispatchProps {\n  onEditWithBuilder: typeof editActiveQueryWithBuilder\n  onEditAsFlux: typeof editActiveQueryAsFlux\n}\n\ntype Props = StateProps & DispatchProps\n\nclass TimeMachineQueriesSwitcher extends PureComponent<Props> {\n  public render() {\n    const {onEditAsFlux, onEditWithBuilder} = this.props\n    const {editMode, text, builderConfig} = this.props.activeQuery\n    const scriptMode = editMode !== 'builder'\n\n    let button = (\n      <Button\n        text=\"Script Editor\"\n        titleText=\"Switch to Script Editor\"\n        onClick={onEditAsFlux}\n        testID=\"switch-to-script-editor\"\n      />\n    )\n\n    if (scriptMode) {\n      button = (\n        <Button\n          text=\"Query Builder\"\n          titleText=\"Switch to Query Builder\"\n          onClick={onEditWithBuilder}\n          testID=\"switch-to-query-builder\"\n        />\n      )\n    }\n\n    if (\n      scriptMode &&\n      confirmationState(text, builderConfig) === ConfirmationState.Required\n    ) {\n      button = (\n        <ConfirmationButton\n          popoverColor={ComponentColor.Danger}\n          popoverAppearance={Appearance.Outline}\n          popoverStyle={{width: '400px'}}\n          confirmationLabel=\"Switching to Query Builder mode will discard any changes you\n                have made using Flux. This cannot be recovered.\"\n          confirmationButtonText=\"Switch to Builder\"\n          text=\"Query Builder\"\n          onConfirm={onEditWithBuilder}\n          testID=\"switch-query-builder-confirm\"\n        />\n      )\n    }\n\n    return button\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const activeQuery = getActiveQuery(state)\n\n  return {activeQuery}\n}\n\nconst mdtp = {\n  onEditWithBuilder: editActiveQueryWithBuilder,\n  onEditAsFlux: editActiveQueryAsFlux,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(TimeMachineQueriesSwitcher)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {isEqual} from 'lodash'\n\n// Components\nimport AutoRefreshDropdown from 'src/shared/components/dropdown_auto_refresh/AutoRefreshDropdown'\n\n// Utils\nimport {AutoRefresher} from 'src/utils/AutoRefresher'\n\n// Actions\nimport {executeQueries} from 'src/timeMachine/actions/queries'\nimport {AutoRefreshStatus, AutoRefresh, AppState} from 'src/types'\nimport {setAutoRefresh} from 'src/timeMachine/actions'\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\ninterface DispatchProps {\n  onExecuteQueries: typeof executeQueries\n  onSetAutoRefresh: typeof setAutoRefresh\n}\n\ninterface StateProps {\n  autoRefresh: AutoRefresh\n}\n\ntype Props = StateProps & DispatchProps\n\nclass TimeMachineRefreshDropdown extends PureComponent<Props> {\n  private autoRefresher = new AutoRefresher()\n\n  public componentDidMount() {\n    const {autoRefresh} = this.props\n    if (autoRefresh.status === AutoRefreshStatus.Active) {\n      this.autoRefresher.poll(autoRefresh.interval)\n    }\n\n    this.autoRefresher.subscribe(this.executeQueries)\n  }\n\n  public componentDidUpdate(prevProps) {\n    const {autoRefresh} = this.props\n\n    if (!isEqual(autoRefresh, prevProps.autoRefresh)) {\n      if (autoRefresh.status === AutoRefreshStatus.Active) {\n        this.autoRefresher.poll(autoRefresh.interval)\n        return\n      }\n\n      this.autoRefresher.stopPolling()\n    }\n  }\n\n  public componentWillUnmount() {\n    this.autoRefresher.unsubscribe(this.executeQueries)\n    this.autoRefresher.stopPolling()\n  }\n\n  public render() {\n    const {autoRefresh} = this.props\n\n    return (\n      <AutoRefreshDropdown\n        selected={autoRefresh}\n        onChoose={this.handleChooseAutoRefresh}\n        onManualRefresh={this.executeQueries}\n      />\n    )\n  }\n\n  private handleChooseAutoRefresh = (interval: number) => {\n    const {onSetAutoRefresh, autoRefresh} = this.props\n\n    if (interval === 0) {\n      onSetAutoRefresh({\n        ...autoRefresh,\n        status: AutoRefreshStatus.Paused,\n        interval,\n      })\n      return\n    }\n\n    onSetAutoRefresh({\n      ...autoRefresh,\n      interval,\n      status: AutoRefreshStatus.Active,\n    })\n  }\n\n  private executeQueries = () => {\n    this.props.onExecuteQueries()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {autoRefresh} = getActiveTimeMachine(state)\n\n  return {autoRefresh}\n}\n\nconst mdtp: DispatchProps = {\n  onExecuteQueries: executeQueries,\n  onSetAutoRefresh: setAutoRefresh,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(TimeMachineRefreshDropdown)\n","// Libraries\nimport React, {Component, ChangeEvent, CSSProperties} from 'react'\n\n// Components\nimport {\n  Input,\n  Dropdown,\n  ComponentStatus,\n  ComponentSize,\n  DropdownMenuTheme,\n  ComponentColor,\n} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  testID: string\n  className?: string\n  searchTerm?: string\n  searchPlaceholder?: string\n  selectedOption: string\n  onSelect: (option: string) => void\n  onChangeSearchTerm?: (value: string) => void\n  buttonSize: ComponentSize\n  buttonColor: ComponentColor\n  buttonStatus: ComponentStatus\n  buttonTestID: string\n  menuTheme: DropdownMenuTheme\n  menuTestID: string\n  options: (string | number)[]\n  emptyText: string\n  style?: CSSProperties\n}\n\n@ErrorHandling\nexport default class SearchableDropdown extends Component<Props> {\n  public static defaultProps = {\n    buttonSize: ComponentSize.Small,\n    buttonColor: ComponentColor.Default,\n    buttonStatus: ComponentStatus.Default,\n    menuTheme: DropdownMenuTheme.Onyx,\n    testID: 'searchable-dropdown',\n    buttonTestID: 'searchable-dropdown--button',\n    menuTestID: 'searchable-dropdown--menu',\n  }\n\n  public render() {\n    const {\n      searchTerm,\n      searchPlaceholder,\n      buttonSize,\n      buttonColor,\n      buttonStatus,\n      buttonTestID,\n      selectedOption,\n      testID,\n      className,\n      style,\n      menuTheme,\n      menuTestID,\n    } = this.props\n\n    return (\n      <Dropdown\n        testID={testID}\n        className={className}\n        style={style}\n        button={(active, onClick) => (\n          <Dropdown.Button\n            active={active}\n            onClick={onClick}\n            testID={buttonTestID}\n            color={buttonColor}\n            size={buttonSize}\n            status={buttonStatus}\n          >\n            {selectedOption}\n          </Dropdown.Button>\n        )}\n        menu={onCollapse => (\n          <Dropdown.Menu\n            onCollapse={onCollapse}\n            theme={menuTheme}\n            testID={menuTestID}\n          >\n            <div className=\"searchable-dropdown--input-container\">\n              <Input\n                onChange={this.handleChange}\n                value={searchTerm}\n                placeholder={searchPlaceholder}\n                size={buttonSize}\n                autoFocus={true}\n              />\n            </div>\n            {this.filteredMenuOptions}\n          </Dropdown.Menu>\n        )}\n      />\n    )\n  }\n\n  private get filteredMenuOptions(): JSX.Element[] | JSX.Element {\n    const {\n      searchTerm,\n      options,\n      emptyText,\n      selectedOption,\n      onSelect,\n    } = this.props\n\n    const filteredOptions = options.filter(option =>\n      `${option}`.toLocaleLowerCase().includes(searchTerm.toLocaleLowerCase())\n    )\n\n    if (!filteredOptions.length) {\n      return <div className=\"searchable-dropdown--empty\">{emptyText}</div>\n    }\n\n    return filteredOptions.map(option => (\n      <Dropdown.Item\n        key={option}\n        value={option}\n        selected={option === selectedOption}\n        onClick={onSelect}\n        testID={`searchable-dropdown--item ${option}`}\n      >\n        {option}\n      </Dropdown.Item>\n    ))\n  }\n\n  private handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {onChangeSearchTerm} = this.props\n\n    if (onChangeSearchTerm) {\n      onChangeSearchTerm(e.target.value)\n    }\n  }\n}\n","import React, {SFC} from 'react'\n\ninterface Props {\n  text: string\n  className?: string\n}\n\nconst WaitingText: SFC<Props> = ({text, className}) => {\n  return <div className={`waiting-text ${className || ''}`}>{text}</div>\n}\n\nexport default WaitingText\n","type F = (...args: any[]) => any\n\nexport interface Debouncer {\n  call: (f: F, ms: number) => void\n  cancel: (f: F) => void\n  cancelAll: () => void\n}\n\nclass DefaultDebouncer implements Debouncer {\n  private timers\n\n  constructor() {\n    this.timers = {}\n  }\n\n  public call(f, ms) {\n    const timer = this.timers[f]\n\n    if (timer) {\n      clearTimeout(timer)\n    }\n\n    this.timers[f] = setTimeout(f, ms)\n  }\n\n  public cancel(f) {\n    const timer = this.timers[f]\n\n    if (timer) {\n      clearTimeout(timer)\n    }\n  }\n\n  public cancelAll() {\n    const timers: number[] = Object.values(this.timers)\n\n    for (const timer of timers) {\n      clearTimeout(timer)\n    }\n  }\n}\n\nexport default DefaultDebouncer\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  AlignItems,\n  ComponentSize,\n  FlexBox,\n  FlexDirection,\n  Input,\n} from '@influxdata/clockface'\nimport SearchableDropdown from 'src/shared/components/SearchableDropdown'\nimport WaitingText from 'src/shared/components/WaitingText'\nimport SelectorList from 'src/timeMachine/components/SelectorList'\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Actions\nimport {\n  removeTagSelector,\n  searchTagKeys,\n  searchTagValues,\n  selectTagKey,\n  selectTagValue,\n  setBuilderAggregateFunctionType,\n  setKeysSearchTerm,\n  setValuesSearchTerm,\n} from 'src/timeMachine/actions/queryBuilder'\n\n// Utils\nimport DefaultDebouncer from 'src/shared/utils/debouncer'\nimport {toComponentStatus} from 'src/shared/utils/toComponentStatus'\nimport {\n  getActiveQuery,\n  getActiveTagValues,\n  getActiveTimeMachine,\n  getIsInCheckOverlay,\n} from 'src/timeMachine/selectors'\n\n// Types\nimport {\n  AppState,\n  BuilderAggregateFunctionType,\n  RemoteDataState,\n} from 'src/types'\n\nconst SEARCH_DEBOUNCE_MS = 500\n\ninterface StateProps {\n  aggregateFunctionType: BuilderAggregateFunctionType\n  emptyText: string\n  keys: string[]\n  keysStatus: RemoteDataState\n  selectedKey: string\n  values: string[]\n  valuesStatus: RemoteDataState\n  selectedValues: string[]\n  valuesSearchTerm: string\n  keysSearchTerm: string\n  isInCheckOverlay: boolean\n}\n\ninterface DispatchProps {\n  onRemoveTagSelector: typeof removeTagSelector\n  onSearchKeys: typeof searchTagKeys\n  onSearchValues: typeof searchTagValues\n  onSelectTag: typeof selectTagKey\n  onSelectValue: typeof selectTagValue\n  onSetBuilderAggregateFunctionType: typeof setBuilderAggregateFunctionType\n  onSetKeysSearchTerm: typeof setKeysSearchTerm\n  onSetValuesSearchTerm: typeof setValuesSearchTerm\n}\n\ninterface OwnProps {\n  index: number\n}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\n@ErrorHandling\nclass TagSelector extends PureComponent<Props> {\n  private debouncer = new DefaultDebouncer()\n\n  private renderAggregateFunctionType(\n    aggregateFunctionType: BuilderAggregateFunctionType\n  ) {\n    if (aggregateFunctionType === 'group') {\n      return 'Group'\n    }\n    return 'Filter'\n  }\n\n  public render() {\n    return (\n      <BuilderCard>\n        {this.header}\n        {this.body}\n      </BuilderCard>\n    )\n  }\n\n  private get header() {\n    const {aggregateFunctionType, index} = this.props\n\n    return (\n      <BuilderCard.DropdownHeader\n        options={['filter', 'group']}\n        selectedOption={this.renderAggregateFunctionType(aggregateFunctionType)}\n        onDelete={index !== 0 && this.handleRemoveTagSelector}\n        onSelect={this.handleAggregateFunctionSelect}\n      />\n    )\n  }\n\n  private get body() {\n    const {\n      aggregateFunctionType,\n      index,\n      keys,\n      keysStatus,\n      selectedKey,\n      emptyText,\n      valuesSearchTerm,\n      keysSearchTerm,\n    } = this.props\n\n    if (keysStatus === RemoteDataState.NotStarted) {\n      return <BuilderCard.Empty>{emptyText}</BuilderCard.Empty>\n    }\n\n    if (keysStatus === RemoteDataState.Error) {\n      return <BuilderCard.Empty>Failed to load tag keys</BuilderCard.Empty>\n    }\n\n    if (keysStatus === RemoteDataState.Done && !keys.length) {\n      return (\n        <BuilderCard.Empty testID=\"empty-tag-keys\">\n          No tag keys found <small>in the current time range</small>\n        </BuilderCard.Empty>\n      )\n    }\n\n    return (\n      <>\n        <BuilderCard.Menu testID={`tag-selector--container ${index}`}>\n          {aggregateFunctionType !== 'group' && (\n            <FlexBox\n              direction={FlexDirection.Row}\n              alignItems={AlignItems.Center}\n              margin={ComponentSize.Small}\n            >\n              <SearchableDropdown\n                searchTerm={keysSearchTerm}\n                emptyText=\"No Tags Found\"\n                searchPlaceholder=\"Search keys...\"\n                selectedOption={selectedKey}\n                onSelect={this.handleSelectTag}\n                buttonStatus={toComponentStatus(keysStatus)}\n                onChangeSearchTerm={this.handleKeysSearch}\n                testID=\"tag-selector--dropdown\"\n                buttonTestID=\"tag-selector--dropdown-button\"\n                menuTestID=\"tag-selector--dropdown-menu\"\n                options={keys}\n              />\n              {this.selectedCounter}\n            </FlexBox>\n          )}\n          <Input\n            value={valuesSearchTerm}\n            placeholder={`Search ${selectedKey} tag values`}\n            className=\"tag-selector--search\"\n            onChange={this.handleValuesSearch}\n          />\n        </BuilderCard.Menu>\n        {this.values}\n      </>\n    )\n  }\n\n  private get values() {\n    const {selectedKey, values, valuesStatus, selectedValues} = this.props\n\n    if (valuesStatus === RemoteDataState.Error) {\n      return (\n        <BuilderCard.Empty>\n          {`Failed to load tag values for ${selectedKey}`}\n        </BuilderCard.Empty>\n      )\n    }\n\n    if (valuesStatus === RemoteDataState.Loading) {\n      return (\n        <BuilderCard.Empty>\n          <WaitingText text=\"Loading tag values\" />\n        </BuilderCard.Empty>\n      )\n    }\n\n    if (valuesStatus === RemoteDataState.Done && !values.length) {\n      return (\n        <BuilderCard.Empty>\n          No values found <small>in the current time range</small>\n        </BuilderCard.Empty>\n      )\n    }\n\n    return (\n      <SelectorList\n        items={values}\n        selectedItems={selectedValues}\n        onSelectItem={this.handleSelectValue}\n        multiSelect={!this.props.isInCheckOverlay}\n      />\n    )\n  }\n\n  private get selectedCounter(): JSX.Element {\n    const {selectedValues} = this.props\n\n    const pluralizer = selectedValues.length === 1 ? '' : 's'\n\n    if (selectedValues.length > 0) {\n      return (\n        <div\n          className=\"tag-selector--count\"\n          title={`${selectedValues.length} value${pluralizer} selected`}\n        >\n          {selectedValues.length}\n        </div>\n      )\n    }\n  }\n\n  private handleSelectTag = (tag: string): void => {\n    const {index, onSelectTag} = this.props\n\n    onSelectTag(index, tag)\n  }\n\n  private handleSelectValue = (value: string): void => {\n    const {index, onSelectValue} = this.props\n\n    onSelectValue(index, value)\n  }\n\n  private handleRemoveTagSelector = (): void => {\n    const {index, onRemoveTagSelector} = this.props\n\n    onRemoveTagSelector(index)\n  }\n\n  private handleKeysSearch = (value: string) => {\n    const {onSetKeysSearchTerm, index} = this.props\n\n    onSetKeysSearchTerm(index, value)\n    this.debouncer.call(this.emitKeysSearch, SEARCH_DEBOUNCE_MS)\n  }\n\n  private emitKeysSearch = () => {\n    const {index, onSearchKeys} = this.props\n\n    onSearchKeys(index)\n  }\n\n  private handleValuesSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    const {onSetValuesSearchTerm, index} = this.props\n    const {value} = e.target\n\n    onSetValuesSearchTerm(index, value)\n    this.debouncer.call(this.emitValuesSearch, SEARCH_DEBOUNCE_MS)\n  }\n\n  private emitValuesSearch = () => {\n    const {index, onSearchValues} = this.props\n\n    onSearchValues(index)\n  }\n\n  private handleAggregateFunctionSelect = (\n    option: BuilderAggregateFunctionType\n  ) => {\n    const {index, onSetBuilderAggregateFunctionType} = this.props\n    onSetBuilderAggregateFunctionType(option, index)\n  }\n}\n\nconst mstp = (state: AppState, ownProps: OwnProps): StateProps => {\n  const activeQueryBuilder = getActiveTimeMachine(state).queryBuilder\n\n  const {\n    keys,\n    keysSearchTerm,\n    keysStatus,\n    valuesSearchTerm,\n    valuesStatus,\n  } = activeQueryBuilder.tags[ownProps.index]\n\n  const tags = getActiveQuery(state).builderConfig.tags\n\n  let emptyText: string\n  const previousTagSelector = tags[ownProps.index - 1]\n  if (\n    ownProps.index === 0 ||\n    !previousTagSelector ||\n    !previousTagSelector.key\n  ) {\n    emptyText = ''\n  } else {\n    emptyText = `Select a ${tags[ownProps.index - 1].key} value first`\n  }\n\n  const {\n    key: selectedKey,\n    values: selectedValues,\n    aggregateFunctionType,\n  } = tags[ownProps.index]\n\n  const values = getActiveTagValues(\n    activeQueryBuilder.tags,\n    aggregateFunctionType,\n    ownProps.index\n  )\n  const isInCheckOverlay = getIsInCheckOverlay(state)\n\n  return {\n    aggregateFunctionType,\n    emptyText,\n    keys,\n    keysStatus,\n    selectedKey,\n    values,\n    valuesStatus,\n    selectedValues,\n    valuesSearchTerm,\n    keysSearchTerm,\n    isInCheckOverlay,\n  }\n}\n\nconst mdtp = {\n  onRemoveTagSelector: removeTagSelector,\n  onSearchKeys: searchTagKeys,\n  onSearchValues: searchTagValues,\n  onSelectTag: selectTagKey,\n  onSelectValue: selectTagValue,\n  onSetBuilderAggregateFunctionType: setBuilderAggregateFunctionType,\n  onSetKeysSearchTerm: setKeysSearchTerm,\n  onSetValuesSearchTerm: setValuesSearchTerm,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(TagSelector)\n","// Libraries\nimport React, {useState, useEffect, FC} from 'react'\nimport {\n  Input,\n  ComponentStatus,\n  DropdownMenu,\n  DropdownDivider,\n  DropdownItem,\n  ClickOutside,\n} from '@influxdata/clockface'\nimport {isDurationParseable} from 'src/shared/utils/duration'\n\nconst SUGGESTION_CLASS = 'duration-input--suggestion'\n\ntype Props = {\n  suggestions: string[]\n  onSubmit: (input: string) => void\n  value: string\n  placeholder?: string\n  submitInvalid?: boolean\n  showDivider?: boolean\n  testID?: string\n  validFunction?: (input: string) => boolean\n}\n\nconst DurationInput: FC<Props> = ({\n  suggestions,\n  onSubmit,\n  value,\n  placeholder,\n  submitInvalid = true,\n  showDivider = true,\n  testID = 'duration-input',\n  validFunction = _ => false,\n}) => {\n  const [isFocused, setIsFocused] = useState(false)\n\n  const [inputValue, setInputValue] = useState(value)\n\n  useEffect(() => {\n    if (value != inputValue) {\n      setInputValue(value)\n    }\n  }, [value])\n\n  const handleClickSuggestion = (suggestion: string) => {\n    setInputValue(suggestion)\n\n    onSubmit(suggestion)\n    setIsFocused(false)\n  }\n\n  const handleClickOutside = e => {\n    const didClickSuggestion =\n      e.target.classList.contains(SUGGESTION_CLASS) ||\n      e.target.parentNode.classList.contains(SUGGESTION_CLASS)\n\n    if (!didClickSuggestion) {\n      setIsFocused(false)\n    }\n  }\n\n  const isValid = (i: string): boolean =>\n    isDurationParseable(i) || validFunction(i)\n\n  const inputStatus = isValid(inputValue)\n    ? ComponentStatus.Default\n    : ComponentStatus.Error\n\n  const onChange = (i: string) => {\n    setInputValue(i)\n    if (submitInvalid || (!submitInvalid && isValid(i))) {\n      onSubmit(i)\n    }\n  }\n\n  return (\n    <div className=\"status-search-bar\">\n      <ClickOutside onClickOutside={handleClickOutside}>\n        <Input\n          placeholder={placeholder}\n          value={inputValue}\n          status={inputStatus}\n          onChange={e => onChange(e.target.value)}\n          onFocus={() => setIsFocused(true)}\n          testID={testID}\n        />\n      </ClickOutside>\n      {isFocused && (\n        <DropdownMenu\n          className=\"status-search-bar--suggestions\"\n          noScrollX={true}\n        >\n          {showDivider && <DropdownDivider text=\"Examples\" />}\n          {suggestions.map(s => (\n            <DropdownItem\n              key={s}\n              value={s}\n              className={SUGGESTION_CLASS}\n              onClick={handleClickSuggestion}\n            >\n              {s}\n            </DropdownItem>\n          ))}\n        </DropdownMenu>\n      )}\n    </div>\n  )\n}\n\nexport default DurationInput\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  Input,\n  FlexBox,\n  FlexDirection,\n  ComponentSize,\n  TextBlock,\n  InfluxColors,\n} from '@influxdata/clockface'\nimport SelectorList from 'src/timeMachine/components/SelectorList'\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\nimport DurationInput from 'src/shared/components/DurationInput'\n\n// Actions\nimport {\n  selectBuilderFunction,\n  selectAggregateWindow,\n} from 'src/timeMachine/actions/queryBuilder'\n\n// Utils\nimport {\n  getActiveQuery,\n  getIsInCheckOverlay,\n  getActiveWindowPeriod,\n} from 'src/timeMachine/selectors'\nimport {millisecondsToDuration} from 'src/shared/utils/duration'\n\n// Constants\nimport {\n  FUNCTIONS,\n  AGG_WINDOW_AUTO,\n  AGG_WINDOW_NONE,\n  DURATIONS,\n} from 'src/timeMachine/constants/queryBuilder'\n\n// Types\nimport {AppState, BuilderConfig} from 'src/types'\n\nconst FUNCTION_NAMES = FUNCTIONS.map(f => f.name)\n\ninterface StateProps {\n  autoWindowPeriod: number | null\n  aggregateWindow: BuilderConfig['aggregateWindow']\n  selectedFunctions: BuilderConfig['functions']\n  isInCheckOverlay: boolean\n}\n\ninterface DispatchProps {\n  onSelectFunction: typeof selectBuilderFunction\n  onSelectAggregateWindow: typeof selectAggregateWindow\n}\n\ntype Props = StateProps & DispatchProps\n\ninterface State {\n  searchTerm: string\n}\n\nclass FunctionSelector extends PureComponent<Props, State> {\n  public state: State = {searchTerm: ''}\n\n  public render() {\n    const {isInCheckOverlay} = this.props\n\n    const {searchTerm} = this.state\n    return (\n      <BuilderCard className=\"function-selector\" testID=\"function-selector\">\n        <BuilderCard.Header title=\"Aggregate Functions\" />\n        <BuilderCard.Menu>\n          <FlexBox\n            direction={FlexDirection.Column}\n            margin={ComponentSize.Small}\n          >\n            <FlexBox\n              direction={FlexDirection.Row}\n              margin={ComponentSize.Small}\n              stretchToFitWidth\n            >\n              <FlexBox.Child grow={2} testID=\"component-spacer--flex-child\">\n                <Input\n                  className=\"tag-selector--search\"\n                  value={searchTerm}\n                  onChange={this.handleSetSearchTerm}\n                  placeholder=\"Search functions...\"\n                />\n              </FlexBox.Child>\n            </FlexBox>\n            <FlexBox\n              direction={FlexDirection.Row}\n              margin={ComponentSize.Small}\n              stretchToFitWidth\n              testID=\"component-spacer\"\n            >\n              <TextBlock\n                textColor={InfluxColors.Sidewalk}\n                text=\"Window period:\"\n              />\n              <FlexBox.Child grow={2} testID=\"component-spacer--flex-child\">\n                <DurationInput\n                  onSubmit={this.handleSelectAggregateWindow}\n                  value={this.duration}\n                  suggestions={this.durations}\n                  submitInvalid={false}\n                  validFunction={this.windowInputValid}\n                />\n              </FlexBox.Child>\n            </FlexBox>\n          </FlexBox>\n        </BuilderCard.Menu>\n        <SelectorList\n          items={this.functions}\n          selectedItems={this.selectedFunctions}\n          onSelectItem={this.handleSelectFunction}\n          multiSelect={!isInCheckOverlay}\n        />\n      </BuilderCard>\n    )\n  }\n\n  private get autoLabel(): string {\n    const {autoWindowPeriod} = this.props\n    return autoWindowPeriod\n      ? `${AGG_WINDOW_AUTO} (${millisecondsToDuration(autoWindowPeriod)})`\n      : AGG_WINDOW_AUTO\n  }\n\n  private get duration(): string {\n    const {aggregateWindow} = this.props\n\n    if (!aggregateWindow.period || aggregateWindow.period === AGG_WINDOW_AUTO) {\n      return this.autoLabel\n    }\n\n    return aggregateWindow.period\n  }\n\n  private get durations(): string[] {\n    return this.props.isInCheckOverlay\n      ? DURATIONS\n      : [this.autoLabel, AGG_WINDOW_NONE, ...DURATIONS]\n  }\n\n  private get functions(): string[] {\n    return FUNCTION_NAMES.filter(f => f.includes(this.state.searchTerm))\n  }\n\n  private get selectedFunctions(): string[] {\n    return this.props.selectedFunctions.map(f => f.name)\n  }\n\n  private handleSetSearchTerm = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({searchTerm: e.target.value})\n  }\n\n  private handleSelectFunction = (functionName: string) => {\n    const {isInCheckOverlay, selectedFunctions, onSelectFunction} = this.props\n\n    if (isInCheckOverlay && selectedFunctions[0].name === functionName) {\n      // Disallow empty aggreegate selections in check overlay\n      return\n    }\n\n    onSelectFunction(functionName)\n  }\n\n  private handleSelectAggregateWindow = (input: string) => {\n    if (input.startsWith(AGG_WINDOW_AUTO)) {\n      this.props.onSelectAggregateWindow(AGG_WINDOW_AUTO)\n      return\n    }\n    this.props.onSelectAggregateWindow(input)\n  }\n\n  private windowInputValid = (input: string): boolean =>\n    input == 'none' || input == this.autoLabel\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {builderConfig} = getActiveQuery(state)\n  const {functions: selectedFunctions, aggregateWindow} = builderConfig\n\n  return {\n    selectedFunctions,\n    aggregateWindow,\n    autoWindowPeriod: getActiveWindowPeriod(state),\n    isInCheckOverlay: getIsInCheckOverlay(state),\n  }\n}\n\nconst mdtp = {\n  onSelectFunction: selectBuilderFunction,\n  onSelectAggregateWindow: selectAggregateWindow,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(FunctionSelector)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {SquareButton, IconFont} from '@influxdata/clockface'\n\ninterface Props {\n  collapsible: boolean\n  onClick: () => void\n}\n\nexport default class AddCardButton extends PureComponent<Props> {\n  public render() {\n    const {onClick} = this.props\n    return (\n      <SquareButton\n        className=\"query-builder--add-card-button\"\n        onClick={onClick}\n        icon={IconFont.Plus}\n      />\n    )\n  }\n}\n","// Libraries\nimport React, {FunctionComponent, useState} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\nimport WaitingText from 'src/shared/components/WaitingText'\nimport SelectorList from 'src/timeMachine/components/SelectorList'\nimport {Input} from '@influxdata/clockface'\n\n// Actions\nimport {selectBucket} from 'src/timeMachine/actions/queryBuilder'\n\n// Utils\nimport {getActiveTimeMachine, getActiveQuery} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState} from 'src/types'\nimport {RemoteDataState} from 'src/types'\n\ninterface StateProps {\n  selectedBucket: string\n  buckets: string[]\n  bucketsStatus: RemoteDataState\n}\n\ninterface DispatchProps {\n  onSelectBucket: (bucket: string, resetSelections: boolean) => void\n}\n\ntype Props = StateProps & DispatchProps\n\nconst fb = term => b => b.toLocaleLowerCase().includes(term.toLocaleLowerCase())\n\nconst BucketSelector: FunctionComponent<Props> = ({\n  selectedBucket,\n  buckets,\n  bucketsStatus,\n  onSelectBucket,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const list = buckets.filter(fb(searchTerm))\n\n  const onSelect = (bucket: string) => {\n    onSelectBucket(bucket, true)\n  }\n\n  if (bucketsStatus === RemoteDataState.Error) {\n    return <BuilderCard.Empty>Failed to load buckets</BuilderCard.Empty>\n  }\n\n  if (bucketsStatus === RemoteDataState.Loading) {\n    return (\n      <BuilderCard.Empty>\n        <WaitingText text=\"Loading buckets\" />\n      </BuilderCard.Empty>\n    )\n  }\n\n  if (bucketsStatus === RemoteDataState.Done && !buckets.length) {\n    return <BuilderCard.Empty>No buckets found</BuilderCard.Empty>\n  }\n\n  return (\n    <>\n      <BuilderCard.Menu>\n        <Input\n          value={searchTerm}\n          placeholder=\"Search for a bucket\"\n          className=\"tag-selector--search\"\n          onChange={e => setSearchTerm(e.target.value)}\n        />\n      </BuilderCard.Menu>\n      <Selector list={list} selected={selectedBucket} onSelect={onSelect} />\n    </>\n  )\n}\n\ninterface SelectorProps {\n  list: string[]\n  selected: string\n  onSelect: (bucket: string) => void\n}\n\nconst Selector: FunctionComponent<SelectorProps> = ({\n  list,\n  selected,\n  onSelect,\n}) => {\n  if (!list.length) {\n    return <BuilderCard.Empty>No buckets matched your search</BuilderCard.Empty>\n  }\n\n  return (\n    <SelectorList\n      items={list}\n      selectedItems={[selected]}\n      onSelectItem={onSelect}\n      multiSelect={false}\n    />\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const {buckets, bucketsStatus} = getActiveTimeMachine(state).queryBuilder\n  const selectedBucket =\n    getActiveQuery(state).builderConfig.buckets[0] || buckets[0]\n\n  return {selectedBucket, buckets, bucketsStatus}\n}\n\nconst mdtp = {\n  onSelectBucket: selectBucket,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(BucketSelector)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {range} from 'lodash'\n\n// Components\nimport TagSelector from 'src/timeMachine/components/TagSelector'\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\nimport FunctionSelector from 'src/timeMachine/components/FunctionSelector'\nimport AddCardButton from 'src/timeMachine/components/AddCardButton'\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\nimport BucketsSelector from 'src/timeMachine/components/queryBuilder/BucketsSelector'\n\n// Actions\nimport {loadBuckets, addTagSelector} from 'src/timeMachine/actions/queryBuilder'\n\n// Utils\nimport {getActiveQuery, getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {CheckType, AppState} from 'src/types'\nimport {RemoteDataState} from 'src/types'\n\ninterface StateProps {\n  tagFiltersLength: number\n  moreTags: boolean\n  checkType: CheckType\n}\n\ninterface DispatchProps {\n  onLoadBuckets: typeof loadBuckets\n  onAddTagSelector: () => void\n}\n\ntype Props = StateProps & DispatchProps\n\ninterface State {}\n\nclass TimeMachineQueryBuilder extends PureComponent<Props, State> {\n  public componentDidMount() {\n    this.props.onLoadBuckets()\n  }\n\n  public render() {\n    const {tagFiltersLength} = this.props\n\n    return (\n      <div className=\"query-builder\" data-testid=\"query-builder\">\n        <div className=\"query-builder--cards\">\n          <FancyScrollbar>\n            <div className=\"builder-card--list\">\n              <BuilderCard testID=\"bucket-selector\">\n                <BuilderCard.Header title=\"From\" />\n                <BucketsSelector />\n              </BuilderCard>\n              {range(tagFiltersLength).map(i => (\n                <TagSelector key={i} index={i} />\n              ))}\n              {this.addButton}\n            </div>\n          </FancyScrollbar>\n          {this.functionSelector}\n        </div>\n      </div>\n    )\n  }\n\n  private get functionSelector(): JSX.Element {\n    const {checkType} = this.props\n\n    if (checkType === 'deadman') {\n      return\n    }\n\n    return <FunctionSelector />\n  }\n\n  private get addButton(): JSX.Element {\n    const {moreTags, onAddTagSelector} = this.props\n\n    if (!moreTags) {\n      return null\n    }\n\n    return <AddCardButton onClick={onAddTagSelector} collapsible={false} />\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const tagFiltersLength = getActiveQuery(state).builderConfig.tags.length\n  const {\n    queryBuilder: {tags},\n  } = getActiveTimeMachine(state)\n\n  const {\n    alertBuilder: {type: checkType},\n  } = state\n\n  const {keys, keysStatus} = tags[tags.length - 1]\n\n  return {\n    tagFiltersLength,\n    moreTags: !(keys.length === 0 && keysStatus === RemoteDataState.Done),\n    checkType,\n  }\n}\n\nconst mdtp = {\n  onLoadBuckets: loadBuckets,\n  onAddTagSelector: addTagSelector,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(TimeMachineQueryBuilder)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  Button,\n  ComponentColor,\n  ComponentSize,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\n// Actions\nimport {saveAndExecuteQueries} from 'src/timeMachine/actions/queries'\n\n// Utils\nimport {getActiveTimeMachine, getActiveQuery} from 'src/timeMachine/selectors'\n\n// Types\nimport {RemoteDataState} from 'src/types'\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  submitButtonDisabled: boolean\n  queryStatus: RemoteDataState\n}\n\ninterface DispatchProps {\n  onSubmit: typeof saveAndExecuteQueries\n}\n\ntype Props = StateProps & DispatchProps\n\ninterface State {\n  didClick: boolean\n}\n\nclass SubmitQueryButton extends PureComponent<Props, State> {\n  public state: State = {didClick: false}\n\n  public componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.queryStatus === RemoteDataState.Loading &&\n      this.props.queryStatus === RemoteDataState.Done\n    ) {\n      this.setState({didClick: false})\n    }\n  }\n\n  public render() {\n    return (\n      <Button\n        text=\"Submit\"\n        size={ComponentSize.Small}\n        status={this.buttonStatus}\n        onClick={this.handleClick}\n        color={ComponentColor.Primary}\n        testID=\"time-machine-submit-button\"\n      />\n    )\n  }\n\n  private get buttonStatus(): ComponentStatus {\n    const {queryStatus, submitButtonDisabled} = this.props\n    const {didClick} = this.state\n\n    if (submitButtonDisabled) {\n      return ComponentStatus.Disabled\n    }\n\n    if (queryStatus === RemoteDataState.Loading && didClick) {\n      // Only show loading state for button if it was just clicked\n      return ComponentStatus.Loading\n    }\n\n    return ComponentStatus.Default\n  }\n\n  private handleClick = (): void => {\n    this.props.onSubmit()\n    this.setState({didClick: true})\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const submitButtonDisabled = getActiveQuery(state).text === ''\n  const queryStatus = getActiveTimeMachine(state).queryResults.status\n\n  return {submitButtonDisabled, queryStatus}\n}\n\nconst mdtp = {\n  onSubmit: saveAndExecuteQueries,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(SubmitQueryButton)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {SlideToggle, InputLabel, ComponentSize} from '@influxdata/clockface'\n\n// Actions\nimport {setIsViewingRawData} from 'src/timeMachine/actions'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  isViewingRawData: boolean\n}\n\ninterface DispatchProps {\n  onSetIsViewingRawData: typeof setIsViewingRawData\n}\n\ntype Props = StateProps & DispatchProps\n\nclass TimeMachineQueries extends PureComponent<Props> {\n  public render() {\n    const {isViewingRawData} = this.props\n\n    return (\n      <div className=\"view-raw-data-toggle\">\n        <InputLabel>View Raw Data</InputLabel>\n        <SlideToggle\n          active={isViewingRawData}\n          onChange={this.handleToggleIsViewingRawData}\n          size={ComponentSize.ExtraSmall}\n          testID=\"raw-data--toggle\"\n        />\n      </div>\n    )\n  }\n\n  private handleToggleIsViewingRawData = () => {\n    const {isViewingRawData, onSetIsViewingRawData} = this.props\n\n    onSetIsViewingRawData(!isViewingRawData)\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const {isViewingRawData} = getActiveTimeMachine(state)\n\n  return {isViewingRawData}\n}\n\nconst mdtp = {\n  onSetIsViewingRawData: setIsViewingRawData,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(TimeMachineQueries)\n","// Libraries\nimport React, {PureComponent, KeyboardEvent, ChangeEvent} from 'react'\n\n// Components\nimport {Input} from '@influxdata/clockface'\n\n// Types\nimport {InputType, ComponentSize} from '@influxdata/clockface'\n\ninterface Props {\n  isActive: boolean\n  isEditing: boolean\n  queryIndex: number\n  name?: string\n  onEdit: () => void\n  onCancelEdit: () => void\n  onUpdate: (newName: string) => void\n}\n\ninterface State {\n  newName?: string\n}\n\nclass TimeMachineQueryTabName extends PureComponent<Props, State> {\n  public state: State = {newName: null}\n\n  public render() {\n    const {queryIndex, name, isEditing, onCancelEdit} = this.props\n    const queryName = !!name ? name : `Query ${queryIndex + 1}`\n\n    if (isEditing) {\n      return (\n        <Input\n          type={InputType.Text}\n          value={this.state.newName || ''}\n          onChange={this.handleChange}\n          onBlur={onCancelEdit}\n          onKeyUp={this.handleEnterKey}\n          size={ComponentSize.ExtraSmall}\n          autoFocus={true}\n        />\n      )\n    }\n\n    return (\n      <div\n        className=\"query-tab--name\"\n        onDoubleClick={this.handleDoubleClick}\n        title={queryName}\n      >\n        {queryName}\n      </div>\n    )\n  }\n\n  private handleDoubleClick = () => {\n    if (this.props.isActive) {\n      this.props.onEdit()\n\n      this.setState({newName: this.props.name || ''})\n    }\n  }\n\n  private handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({newName: e.target.value})\n  }\n\n  private handleEnterKey = (e: KeyboardEvent<HTMLInputElement>) => {\n    switch (e.key) {\n      case 'Enter':\n        return this.handleUpdate()\n      case 'Escape':\n        return this.props.onCancelEdit()\n    }\n  }\n\n  private handleUpdate() {\n    const {onUpdate, onCancelEdit} = this.props\n    const {newName} = this.state\n\n    if (newName !== null) {\n      onUpdate(newName)\n      onCancelEdit()\n    }\n\n    this.setState({newName: null})\n  }\n}\n\nexport default TimeMachineQueryTabName\n","// Libraries\nimport React, {SFC} from 'react'\nimport {connect} from 'react-redux'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {RemoteDataState} from 'src/types'\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  status: RemoteDataState\n  duration: number\n}\n\nconst TimeMachineQueriesTimer: SFC<StateProps> = ({duration, status}) => {\n  const visibleClass = status === RemoteDataState.Done ? 'visible' : ''\n\n  return (\n    <div className={`queries-timer ${visibleClass}`}>\n      {`(${(duration / 1000).toFixed(2)}s)`}\n    </div>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const {status, fetchDuration} = getActiveTimeMachine(state).queryResults\n\n  return {status, duration: fetchDuration}\n}\n\nexport default connect<StateProps>(mstp)(TimeMachineQueriesTimer)\n","// Libraries\nimport React, {PureComponent, MouseEvent, RefObject, createRef} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport TimeMachineQueryTabName from 'src/timeMachine/components/QueryTabName'\nimport TimeMachineQueriesTimer from 'src/timeMachine/components/QueriesTimer'\nimport {RightClick, ComponentColor} from '@influxdata/clockface'\n\n// Actions\nimport {\n  setActiveQueryIndex,\n  removeQuery,\n  updateActiveQueryName,\n  toggleQuery,\n} from 'src/timeMachine/actions'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState} from 'src/types'\nimport {DashboardDraftQuery} from 'src/types/dashboards'\n\ninterface StateProps {\n  activeQueryIndex: number\n  queryCount: number\n}\n\ninterface DispatchProps {\n  onSetActiveQueryIndex: typeof setActiveQueryIndex\n  onRemoveQuery: typeof removeQuery\n  onUpdateActiveQueryName: typeof updateActiveQueryName\n  onToggleQuery: typeof toggleQuery\n}\n\ninterface OwnProps {\n  queryIndex: number\n  query: DashboardDraftQuery\n}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\ninterface State {\n  isEditingName: boolean\n}\n\nclass TimeMachineQueryTab extends PureComponent<Props, State> {\n  private triggerRef: RefObject<HTMLDivElement> = createRef()\n\n  public static getDerivedStateFromProps(props: Props): Partial<State> {\n    if (props.queryIndex !== props.activeQueryIndex) {\n      return {isEditingName: false}\n    }\n\n    return null\n  }\n\n  public state: State = {isEditingName: false}\n\n  public render() {\n    const {queryIndex, activeQueryIndex, query} = this.props\n    const isActive = queryIndex === activeQueryIndex\n    const activeClass = queryIndex === activeQueryIndex ? 'active' : ''\n\n    return (\n      <>\n        <div\n          className={`query-tab ${activeClass}`}\n          onClick={this.handleSetActive}\n          ref={this.triggerRef}\n        >\n          {this.showHideButton}\n          <TimeMachineQueryTabName\n            isActive={isActive}\n            name={query.name}\n            queryIndex={queryIndex}\n            isEditing={this.state.isEditingName}\n            onUpdate={this.handleUpdateName}\n            onEdit={this.handleEditName}\n            onCancelEdit={this.handleCancelEditName}\n          />\n          {this.queriesTimer}\n          {this.removeButton}\n        </div>\n        <RightClick triggerRef={this.triggerRef} color={ComponentColor.Primary}>\n          <RightClick.MenuItem\n            onClick={this.handleEditActiveQueryName}\n            testID=\"right-click--edit-tab\"\n          >\n            Edit\n          </RightClick.MenuItem>\n          <RightClick.MenuItem\n            onClick={this.handleRemove}\n            disabled={!this.isRemovable}\n            testID=\"right-click--remove-tab\"\n          >\n            Remove\n          </RightClick.MenuItem>\n        </RightClick>\n      </>\n    )\n  }\n\n  private handleEditActiveQueryName = () => {\n    this.handleSetActive()\n    this.handleEditName()\n  }\n\n  private handleUpdateName = (queryName: string) => {\n    this.props.onUpdateActiveQueryName(queryName)\n  }\n\n  private handleSetActive = (): void => {\n    const {queryIndex, activeQueryIndex, onSetActiveQueryIndex} = this.props\n\n    if (queryIndex === activeQueryIndex) {\n      return\n    }\n\n    onSetActiveQueryIndex(queryIndex)\n  }\n\n  private handleCancelEditName = () => {\n    this.setState({isEditingName: false})\n  }\n\n  private handleEditName = (): void => {\n    this.setState({isEditingName: true})\n  }\n\n  private get queriesTimer(): JSX.Element {\n    const {queryIndex, activeQueryIndex} = this.props\n\n    if (queryIndex === activeQueryIndex) {\n      return <TimeMachineQueriesTimer />\n    }\n  }\n\n  private get removeButton(): JSX.Element {\n    if (this.state.isEditingName || !this.isRemovable) {\n      return null\n    }\n\n    return (\n      <div className=\"query-tab--close\" onClick={this.handleRemove}>\n        <span className=\"icon remove\" />\n      </div>\n    )\n  }\n\n  private get showHideButton(): JSX.Element {\n    const {query} = this.props\n    if (this.state.isEditingName || !this.isRemovable) {\n      return null\n    }\n\n    const icon = query.hidden ? 'eye-closed' : 'eye-open'\n\n    return (\n      <div className=\"query-tab--hide\" onClick={this.handleToggleView}>\n        <span className={`icon ${icon}`} />\n      </div>\n    )\n  }\n\n  private get isRemovable(): boolean {\n    return this.props.queryCount > 1\n  }\n\n  private handleRemove = (): void => {\n    const {queryIndex, onRemoveQuery} = this.props\n\n    onRemoveQuery(queryIndex)\n  }\n\n  private handleToggleView = (e: MouseEvent): void => {\n    const {queryIndex, onToggleQuery} = this.props\n\n    e.stopPropagation()\n    onToggleQuery(queryIndex)\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const {activeQueryIndex, draftQueries} = getActiveTimeMachine(state)\n\n  return {activeQueryIndex, queryCount: draftQueries.length}\n}\n\nconst mdtp = {\n  onSetActiveQueryIndex: setActiveQueryIndex,\n  onRemoveQuery: removeQuery,\n  onUpdateActiveQueryName: updateActiveQueryName,\n  onToggleQuery: toggleQuery,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(TimeMachineQueryTab)\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport TimeMachineQueryTab from 'src/timeMachine/components/QueryTab'\nimport {\n  SquareButton,\n  IconFont,\n  ComponentSize,\n  ComponentColor,\n} from '@influxdata/clockface'\n\n// Actions\nimport {addQuery} from 'src/timeMachine/actions'\n\n// Utils\nimport {\n  getActiveTimeMachine,\n  getIsInCheckOverlay,\n} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState, DashboardDraftQuery} from 'src/types'\n\ninterface StateProps {\n  draftQueries: DashboardDraftQuery[]\n  isInCheckOverlay: boolean\n}\n\ninterface DispatchProps {\n  onAddQuery: () => any\n}\n\ntype Props = StateProps & DispatchProps\n\nconst QueryTabs: FC<Props> = ({draftQueries, isInCheckOverlay, onAddQuery}) => {\n  return (\n    <div className=\"time-machine-queries--tabs\">\n      {draftQueries.map((query, queryIndex) => (\n        <TimeMachineQueryTab\n          key={queryIndex}\n          queryIndex={queryIndex}\n          query={query}\n        />\n      ))}\n      {!isInCheckOverlay && (\n        <SquareButton\n          className=\"time-machine-queries--new\"\n          icon={IconFont.PlusSkinny}\n          size={ComponentSize.ExtraSmall}\n          color={ComponentColor.Default}\n          onClick={onAddQuery}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {draftQueries} = getActiveTimeMachine(state)\n  const isInCheckOverlay = getIsInCheckOverlay(state)\n\n  return {draftQueries, isInCheckOverlay}\n}\n\nconst mdtp = {\n  onAddQuery: addQuery,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(QueryTabs)\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {QuestionMarkTooltip} from '@influxdata/clockface'\n\nconst EditorShortcutsTooltip: FC = () => {\n  return (\n    <QuestionMarkTooltip\n      testID=\"editor-shortcuts\"\n      tooltipContents={\n        <div className=\"editor-shortcuts\">\n          <h5>Shortcuts</h5>\n          <dl className=\"editor-shortcuts--body\">\n            <dt>Ctl-/:</dt> <dd>Toggle comment for line or lines</dd>\n            <dt>Ctl-Enter:</dt> <dd>Submit Script</dd>\n          </dl>\n        </div>\n      }\n    />\n  )\n}\n\nexport default EditorShortcutsTooltip\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport TimeMachineFluxEditor from 'src/timeMachine/components/TimeMachineFluxEditor'\nimport CSVExportButton from 'src/shared/components/CSVExportButton'\nimport TimeMachineQueriesSwitcher from 'src/timeMachine/components/QueriesSwitcher'\nimport TimeMachineRefreshDropdown from 'src/timeMachine/components/RefreshDropdown'\nimport TimeRangeDropdown from 'src/shared/components/TimeRangeDropdown'\nimport TimeMachineQueryBuilder from 'src/timeMachine/components/QueryBuilder'\nimport SubmitQueryButton from 'src/timeMachine/components/SubmitQueryButton'\nimport RawDataToggle from 'src/timeMachine/components/RawDataToggle'\nimport QueryTabs from 'src/timeMachine/components/QueryTabs'\nimport EditorShortcutsToolTip from 'src/timeMachine/components/EditorShortcutsTooltip'\nimport {\n  ComponentSize,\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n} from '@influxdata/clockface'\n\n// Actions\nimport {setAutoRefresh} from 'src/timeMachine/actions'\nimport {setTimeRange} from 'src/timeMachine/actions'\n\n// Utils\nimport {\n  getActiveTimeMachine,\n  getIsInCheckOverlay,\n  getActiveQuery,\n} from 'src/timeMachine/selectors'\n\n// Types\nimport {\n  AppState,\n  DashboardQuery,\n  TimeRange,\n  AutoRefresh,\n  AutoRefreshStatus,\n} from 'src/types'\n\ninterface StateProps {\n  activeQuery: DashboardQuery\n  timeRange: TimeRange\n  autoRefresh: AutoRefresh\n  isInCheckOverlay: boolean\n}\n\ninterface DispatchProps {\n  onSetTimeRange: typeof setTimeRange\n  onSetAutoRefresh: typeof setAutoRefresh\n}\n\ntype Props = StateProps & DispatchProps\n\nclass TimeMachineQueries extends PureComponent<Props> {\n  public render() {\n    const {timeRange, isInCheckOverlay, activeQuery} = this.props\n\n    return (\n      <div className=\"time-machine-queries\">\n        <div className=\"time-machine-queries--controls\">\n          <QueryTabs />\n          <div className=\"time-machine-queries--buttons\">\n            <FlexBox\n              direction={FlexDirection.Row}\n              justifyContent={JustifyContent.FlexEnd}\n              margin={ComponentSize.Small}\n            >\n              {activeQuery.editMode === 'advanced' && (\n                <EditorShortcutsToolTip />\n              )}\n              <RawDataToggle />\n              {!isInCheckOverlay && (\n                <>\n                  <CSVExportButton />\n                  <TimeMachineRefreshDropdown />\n                  <TimeRangeDropdown\n                    timeRange={timeRange}\n                    onSetTimeRange={this.handleSetTimeRange}\n                  />\n                  <TimeMachineQueriesSwitcher />\n                </>\n              )}\n              <SubmitQueryButton />\n            </FlexBox>\n          </div>\n        </div>\n        <div className=\"time-machine-queries--body\">{this.queryEditor}</div>\n      </div>\n    )\n  }\n\n  private handleSetTimeRange = (timeRange: TimeRange) => {\n    const {autoRefresh, onSetAutoRefresh, onSetTimeRange} = this.props\n\n    onSetTimeRange(timeRange)\n\n    if (timeRange.type === 'custom') {\n      onSetAutoRefresh({...autoRefresh, status: AutoRefreshStatus.Disabled})\n      return\n    }\n\n    if (autoRefresh.status === AutoRefreshStatus.Disabled) {\n      if (autoRefresh.interval === 0) {\n        onSetAutoRefresh({...autoRefresh, status: AutoRefreshStatus.Paused})\n        return\n      }\n\n      onSetAutoRefresh({...autoRefresh, status: AutoRefreshStatus.Active})\n    }\n  }\n\n  private get queryEditor(): JSX.Element {\n    const {activeQuery} = this.props\n\n    if (activeQuery.editMode === 'builder') {\n      return <TimeMachineQueryBuilder />\n    } else if (activeQuery.editMode === 'advanced') {\n      return <TimeMachineFluxEditor />\n    } else {\n      return null\n    }\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const {timeRange, autoRefresh} = getActiveTimeMachine(state)\n\n  const activeQuery = getActiveQuery(state)\n\n  return {\n    timeRange,\n    activeQuery,\n    autoRefresh,\n    isInCheckOverlay: getIsInCheckOverlay(state),\n  }\n}\n\nconst mdtp = {\n  onSetTimeRange: setTimeRange,\n  onSetAutoRefresh: setAutoRefresh,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(TimeMachineQueries)\n","// Libraries\nimport React, {FC, MouseEvent} from 'react'\nimport classnames from 'classnames'\n\n// Types\nimport {ComponentColor, ComponentSize} from '@influxdata/clockface'\n\ninterface Props {\n  text: string\n  onClick: (e: MouseEvent) => void\n  color?: ComponentColor\n  size?: ComponentSize\n  testID?: string\n}\n\nconst DashedButton: FC<Props> = ({\n  text,\n  onClick,\n  color = ComponentColor.Primary,\n  size = ComponentSize.Medium,\n  testID = 'dashed-button',\n}) => {\n  const classname = classnames('dashed-button', {\n    [`dashed-button__${color}`]: color,\n    [`dashed-button__${size}`]: size,\n  })\n\n  return (\n    <button\n      className={classname}\n      onClick={onClick}\n      type=\"button\"\n      data-testid={testID}\n    >\n      {text}\n    </button>\n  )\n}\n\nexport default DashedButton\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {\n  Input,\n  Panel,\n  DismissButton,\n  TextBlock,\n  FlexBox,\n  ComponentSize,\n  FlexDirection,\n  ComponentColor,\n} from '@influxdata/clockface'\n\n// Types\nimport {CheckTagSet} from 'src/types'\n\ninterface Props {\n  index: number\n  tagSet: CheckTagSet\n  handleChangeTagRow: (i: number, tags: CheckTagSet) => void\n  handleRemoveTagRow: (i: number) => void\n}\n\nconst CheckTagRow: FC<Props> = ({\n  tagSet,\n  index,\n  handleChangeTagRow,\n  handleRemoveTagRow,\n}) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    handleChangeTagRow(index, {...tagSet, [e.target.name]: e.target.value})\n  }\n\n  return (\n    <Panel testID=\"tag-rule\" className=\"alert-builder--tag-row\">\n      <DismissButton\n        onClick={() => {\n          handleRemoveTagRow(index)\n        }}\n        color={ComponentColor.Default}\n      />\n      <Panel.Body size={ComponentSize.ExtraSmall}>\n        <FlexBox direction={FlexDirection.Row} margin={ComponentSize.Small}>\n          <FlexBox.Child grow={1}>\n            <Input\n              testID=\"tag-rule-key--input\"\n              placeholder=\"Tag\"\n              value={tagSet.key}\n              name=\"key\"\n              onChange={handleChange}\n            />\n          </FlexBox.Child>\n          <FlexBox.Child grow={0} basis={20}>\n            <TextBlock text=\"=\" />\n          </FlexBox.Child>\n          <FlexBox.Child grow={1}>\n            <Input\n              testID=\"tag-rule-key--input\"\n              placeholder=\"Value\"\n              value={tagSet.value}\n              name=\"value\"\n              onChange={handleChange}\n            />\n          </FlexBox.Child>\n        </FlexBox>\n      </Panel.Body>\n    </Panel>\n  )\n}\n\nexport default CheckTagRow\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Form, ComponentSize, ComponentColor, Grid} from '@influxdata/clockface'\nimport DashedButton from 'src/shared/components/dashed_button/DashedButton'\nimport CheckTagRow from 'src/checks/components/CheckTagRow'\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\nimport DurationInput from 'src/shared/components/DurationInput'\n\n// Actions\nimport {\n  setOffset,\n  removeTagSet,\n  selectCheckEvery,\n  editTagSetByIndex,\n} from 'src/alerting/actions/alertBuilder'\n\n// Constants\nimport {CHECK_OFFSET_OPTIONS} from 'src/alerting/constants'\nimport {DURATIONS} from 'src/timeMachine/constants/queryBuilder'\n\n// Types\nimport {AppState, CheckTagSet} from 'src/types'\n\ninterface DispatchProps {\n  onSelectCheckEvery: typeof selectCheckEvery\n  onSetOffset: typeof setOffset\n  onRemoveTagSet: typeof removeTagSet\n  onEditTagSetByIndex: typeof editTagSetByIndex\n}\n\ninterface StateProps {\n  tags: CheckTagSet[]\n  offset: string\n  every: string\n}\n\ntype Props = DispatchProps & StateProps\n\nconst EMPTY_TAG_SET = {\n  key: '',\n  value: '',\n}\n\nconst CheckMetaCard: FC<Props> = ({\n  tags,\n  offset,\n  every,\n  onSelectCheckEvery,\n  onSetOffset,\n  onRemoveTagSet,\n  onEditTagSetByIndex,\n}) => {\n  return (\n    <BuilderCard\n      testID=\"builder-meta\"\n      className=\"alert-builder--card alert-builder--meta-card\"\n    >\n      <BuilderCard.Header title=\"Properties\" />\n      <BuilderCard.Body addPadding={true} autoHideScrollbars={true}>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthSM={6}>\n              <Form.Element label=\"Schedule Every\">\n                <DurationInput\n                  value={every}\n                  suggestions={DURATIONS}\n                  onSubmit={onSelectCheckEvery}\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthSM={6}>\n              <Form.Element label=\"Offset\">\n                <DurationInput\n                  value={offset}\n                  suggestions={CHECK_OFFSET_OPTIONS}\n                  onSubmit={onSetOffset}\n                />\n              </Form.Element>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Form.Label label=\"Tags\" />\n        {tags.map((t, i) => (\n          <CheckTagRow\n            key={i}\n            index={i}\n            tagSet={t}\n            handleChangeTagRow={onEditTagSetByIndex}\n            handleRemoveTagRow={onRemoveTagSet}\n          />\n        ))}\n        <DashedButton\n          text=\"+ Tag\"\n          onClick={() => onEditTagSetByIndex(tags.length, EMPTY_TAG_SET)}\n          color={ComponentColor.Primary}\n          size={ComponentSize.Small}\n        />\n      </BuilderCard.Body>\n    </BuilderCard>\n  )\n}\n\nconst mstp = ({alertBuilder: {tags, offset, every}}: AppState): StateProps => {\n  return {\n    tags: tags || [],\n    offset,\n    every,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onSelectCheckEvery: selectCheckEvery,\n  onSetOffset: setOffset,\n  onRemoveTagSet: removeTagSet,\n  onEditTagSetByIndex: editTagSetByIndex,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(CheckMetaCard)\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  ComponentSize,\n  TextArea,\n  AutoComplete,\n  Wrap,\n} from '@influxdata/clockface'\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\n\n// Actions & Selectors\nimport {setStatusMessageTemplate} from 'src/alerting/actions/alertBuilder'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface DispatchProps {\n  onSetStatusMessageTemplate: typeof setStatusMessageTemplate\n}\n\ninterface StateProps {\n  statusMessageTemplate: string\n}\n\ntype Props = DispatchProps & StateProps\n\nconst CheckMessageCard: FC<Props> = ({\n  statusMessageTemplate,\n  onSetStatusMessageTemplate,\n}) => {\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    onSetStatusMessageTemplate(e.target.value)\n  }\n\n  return (\n    <BuilderCard\n      testID=\"builder-message\"\n      className=\"alert-builder--card alert-builder--message-card\"\n    >\n      <BuilderCard.Header title=\"Status Message Template\" />\n      <BuilderCard.Body addPadding={true} autoHideScrollbars={true}>\n        <TextArea\n          className=\"alert-builder--message-template\"\n          autoFocus={false}\n          autocomplete={AutoComplete.Off}\n          form=\"\"\n          maxLength={500}\n          minLength={5}\n          name=\"statusMessageTemplate\"\n          onChange={handleChange}\n          readOnly={false}\n          required={false}\n          size={ComponentSize.Medium}\n          spellCheck={false}\n          testID=\"status-message-textarea\"\n          value={statusMessageTemplate}\n          wrap={Wrap.Soft}\n          placeholder=\"This template what this Check will use to write status messages\"\n        />\n        <div className=\"alert-builder--message-help\">\n          <p>\n            You can use any columns from your query as well as the following:\n          </p>\n          <p>\n            <code>{'${r._check_name}'}</code> The name of this check\n          </p>\n          <p>\n            <code>{'${r._level}'}</code> Indicates the level of the check\n          </p>\n          <p>\n            <code>{'${string(v: r.numericColumn)}'}</code> Functions can be used{' '}\n            as well\n          </p>\n          <p>\n            Need help? Check out the Status Message Template{' '}\n            <a\n              href=\"https://v2.docs.influxdata.com/v2.0/monitor-alert/checks/create/#flux-only-interpolates-string-values\"\n              target=\"_blank\"\n            >\n              Documentation\n            </a>\n          </p>\n        </div>\n      </BuilderCard.Body>\n    </BuilderCard>\n  )\n}\n\nconst mstp = ({\n  alertBuilder: {statusMessageTemplate},\n}: AppState): StateProps => ({\n  statusMessageTemplate,\n})\n\nconst mdtp: DispatchProps = {\n  onSetStatusMessageTemplate: setStatusMessageTemplate,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(CheckMessageCard)\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {\n  FlexBox,\n  Panel,\n  ComponentSize,\n  PanelBody,\n  TextBlock,\n  SelectDropdown,\n  DismissButton,\n  ButtonType,\n  FlexDirection,\n  ComponentColor,\n  InfluxColors,\n} from '@influxdata/clockface'\n\n// Types\nimport {Threshold, ThresholdType} from 'src/types'\nimport {LEVEL_COLORS} from 'src/alerting/constants'\n\ninterface Props {\n  threshold: Threshold\n  removeLevel: () => void\n  changeThresholdType: (toType: ThresholdType, within?: boolean) => void\n}\n\nconst OptionSelector = (threshold: Threshold) => {\n  if (threshold.type == 'greater') {\n    return 'is above'\n  }\n  if (threshold.type == 'lesser') {\n    return 'is below'\n  }\n  if (threshold.within) {\n    return 'is inside range'\n  }\n  return 'is outside range'\n}\n\nconst ThresholdStatement: FC<Props> = ({\n  threshold,\n  children,\n  removeLevel,\n  changeThresholdType,\n}) => {\n  const dropdownOptions = {\n    ['is above']: 'greater',\n    ['is below']: 'lesser',\n    ['is inside range']: 'range',\n    ['is outside range']: 'range',\n  }\n\n  const levelColor: string = LEVEL_COLORS[threshold.level]\n  const selectedOption = OptionSelector(threshold)\n\n  const onChangeThresholdType = (option: string) => {\n    changeThresholdType(dropdownOptions[option], option === 'is inside range')\n  }\n\n  return (\n    <Panel backgroundColor={InfluxColors.Castle} testID=\"panel\">\n      <DismissButton\n        color={ComponentColor.Default}\n        onClick={removeLevel}\n        testID=\"dismiss-button\"\n        type={ButtonType.Button}\n      />\n      <PanelBody testID=\"panel--body\">\n        <FlexBox\n          direction={FlexDirection.Column}\n          margin={ComponentSize.Small}\n          testID=\"component-spacer\"\n        >\n          <FlexBox\n            direction={FlexDirection.Row}\n            margin={ComponentSize.Small}\n            stretchToFitWidth\n            testID=\"component-spacer\"\n          >\n            <TextBlock testID=\"when-value-text-block\" text=\"When value\" />\n            <FlexBox.Child grow={2} testID=\"component-spacer--flex-child\">\n              <SelectDropdown\n                options={Object.keys(dropdownOptions)}\n                selectedOption={selectedOption}\n                onSelect={onChangeThresholdType}\n                testID=\"select-option-dropdown\"\n              />\n            </FlexBox.Child>\n          </FlexBox>\n          <FlexBox\n            direction={FlexDirection.Row}\n            margin={ComponentSize.Small}\n            stretchToFitWidth\n            testID=\"component-spacer\"\n          >\n            {children}\n            <TextBlock testID=\"set-status-to-text-block\" text=\"set status to\" />\n            <TextBlock\n              backgroundColor={levelColor}\n              testID=\"threshold-level-text-block\"\n              text={threshold.level}\n            />\n          </FlexBox>\n        </FlexBox>\n      </PanelBody>\n    </Panel>\n  )\n}\n\nexport default ThresholdStatement\n","import React from 'react'\n\nexport const convertUserInputToNumOrNaN = (\n  e: React.ChangeEvent<HTMLInputElement>\n) => (e.target.value === '' ? NaN : Number(e.target.value))\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {FlexBox, Input, InputType} from '@influxdata/clockface'\nimport {GreaterThreshold, LesserThreshold} from 'src/types'\n\n// Utils\nimport {convertUserInputToNumOrNaN} from 'src/shared/utils/convertUserInput'\n\n// Types\ninterface Props {\n  threshold: GreaterThreshold | LesserThreshold\n  changeValue: (value: number) => void\n}\n\nconst ThresholdValueStatement: FC<Props> = ({threshold, changeValue}) => {\n  const onChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeValue(convertUserInputToNumOrNaN(e))\n  }\n  return (\n    <FlexBox.Child testID=\"component-spacer--flex-child\">\n      <Input\n        onChange={onChangeValue}\n        name=\"\"\n        testID=\"input-field\"\n        type={InputType.Number}\n        value={threshold.value}\n      />\n    </FlexBox.Child>\n  )\n}\n\nexport default ThresholdValueStatement\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {FlexBox, TextBlock, Input, InputType} from '@influxdata/clockface'\nimport {RangeThreshold} from 'src/types'\n\n// Utils\nimport {convertUserInputToNumOrNaN} from 'src/shared/utils/convertUserInput'\n\n// Types\ninterface Props {\n  threshold: RangeThreshold\n  changeRange: (min: number, max: number) => void\n}\n\nconst ThresholdRangeStatement: FC<Props> = ({threshold, changeRange}) => {\n  const onChangeMin = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const min = convertUserInputToNumOrNaN(e)\n\n    changeRange(min, threshold.max)\n  }\n\n  const onChangeMax = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const max = convertUserInputToNumOrNaN(e)\n    changeRange(threshold.min, max)\n  }\n\n  return (\n    <>\n      <FlexBox.Child testID=\"component-spacer--flex-child\">\n        <Input\n          onChange={onChangeMin}\n          name=\"min\"\n          testID=\"input-field\"\n          type={InputType.Number}\n          value={threshold.min}\n        />\n      </FlexBox.Child>\n      <TextBlock testID=\"text-block\" text=\"to\" />\n      <FlexBox.Child testID=\"component-spacer--flex-child\">\n        <Input\n          onChange={onChangeMax}\n          disabledTitleText=\"This input is disabled\"\n          name=\"max\"\n          testID=\"input-field\"\n          type={InputType.Number}\n          value={threshold.max}\n        />\n      </FlexBox.Child>\n    </>\n  )\n}\n\nexport default ThresholdRangeStatement\n","// Libraries\nimport React, {FC, useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport DashedButton from 'src/shared/components/dashed_button/DashedButton'\nimport ThresholdStatement from 'src/alerting/components/builder/ThresholdStatement'\nimport ThresholdValueInput from 'src/alerting/components/builder/ThresholdValueInput'\nimport ThresholdRangeInput from 'src/alerting/components/builder/ThresholdRangeInput'\n\n// Actions\nimport {useCheckYDomain} from 'src/alerting/utils/vis'\nimport {getVisTable} from 'src/timeMachine/selectors'\nimport {\n  removeThreshold,\n  updateThreshold,\n} from 'src/alerting/actions/alertBuilder'\n\n// Types\nimport {\n  AppState,\n  Threshold,\n  ThresholdType,\n  GreaterThreshold,\n  LesserThreshold,\n  RangeThreshold,\n  CheckStatusLevel,\n} from 'src/types'\nimport {ComponentSize} from '@influxdata/clockface'\nimport {Table} from '@influxdata/giraffe'\nimport {LEVEL_COMPONENT_COLORS} from 'src/alerting/constants'\n\ninterface StateProps {\n  table: Table\n}\n\ninterface DispatchProps {\n  onUpdateThreshold: typeof updateThreshold\n  onRemoveThreshold: typeof removeThreshold\n}\n\ninterface OwnProps {\n  threshold: Threshold\n  level: CheckStatusLevel\n}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\nconst defaultThreshold = {\n  type: 'greater' as 'greater',\n}\n\nconst ThresholdCondition: FC<Props> = ({\n  level,\n  table,\n  threshold,\n  onUpdateThreshold,\n  onRemoveThreshold,\n}) => {\n  const [inputs, changeInputs] = useState([\n    get(threshold, 'value') || get(threshold, 'min', 0),\n    get(threshold, 'max', 100),\n  ])\n\n  useEffect(() => {\n    changeInputs([\n      get(threshold, 'value') || get(threshold, 'min', inputs[0]),\n      get(threshold, 'max', inputs[1]),\n    ])\n  }, [threshold])\n\n  const [yDomain] = useCheckYDomain(table.getColumn('_value', 'number'), [])\n\n  const addLevel = () => {\n    const low = yDomain[0] || 0\n    const high = yDomain[1] || 40\n    const newThreshold = {\n      ...defaultThreshold,\n      value: (high - low) / 2 + low,\n      level,\n    }\n    onUpdateThreshold(newThreshold)\n  }\n\n  const removeLevel = () => {\n    onRemoveThreshold(level)\n  }\n\n  const changeValue = (value: number) => {\n    const newThreshold = {...threshold, value} as\n      | GreaterThreshold\n      | LesserThreshold\n\n    onUpdateThreshold(newThreshold)\n  }\n\n  const changeRange = (min: number, max: number) => {\n    const newThreshold = {...threshold, min, max} as RangeThreshold\n\n    onUpdateThreshold(newThreshold)\n  }\n\n  const changeThresholdType = (toType: ThresholdType, within?: boolean) => {\n    if (toType === 'greater' || toType === 'lesser') {\n      const valueThreshold = {\n        type: toType,\n        level: threshold.level,\n        value: inputs[0],\n      } as GreaterThreshold | LesserThreshold\n      onUpdateThreshold(valueThreshold)\n    }\n    if (toType === 'range') {\n      const rangeThreshold = {\n        type: toType,\n        level: threshold.level,\n        min: inputs[0],\n        max: inputs[1],\n        within,\n      } as RangeThreshold\n      onUpdateThreshold(rangeThreshold)\n    }\n  }\n\n  if (!threshold) {\n    return (\n      <DashedButton\n        text={`+ ${level}`}\n        color={LEVEL_COMPONENT_COLORS[level]}\n        size={ComponentSize.Large}\n        onClick={addLevel}\n        testID={`add-threshold-condition-${level}`}\n      />\n    )\n  }\n  return (\n    <ThresholdStatement\n      threshold={threshold}\n      removeLevel={removeLevel}\n      changeThresholdType={changeThresholdType}\n    >\n      {threshold.type === 'range' ? (\n        <ThresholdRangeInput threshold={threshold} changeRange={changeRange} />\n      ) : (\n        <ThresholdValueInput threshold={threshold} changeValue={changeValue} />\n      )}\n    </ThresholdStatement>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const giraffeResult = getVisTable(state)\n\n  return {\n    table: giraffeResult.table,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateThreshold: updateThreshold,\n  onRemoveThreshold: removeThreshold,\n}\n\nexport {ThresholdCondition}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(ThresholdCondition)\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport ThresholdCondition from 'src/alerting/components/builder/ThresholdCondition'\n\n// Types\nimport {Threshold, AppState} from 'src/types'\n\ninterface StateProps {\n  thresholds: {[k: string]: Threshold}\n}\n\nconst ThresholdConditions: FC<StateProps> = ({thresholds}) => {\n  return (\n    <>\n      <ThresholdCondition level=\"CRIT\" threshold={thresholds['CRIT']} />\n      <ThresholdCondition level=\"WARN\" threshold={thresholds['WARN']} />\n      <ThresholdCondition level=\"INFO\" threshold={thresholds['INFO']} />\n      <ThresholdCondition level=\"OK\" threshold={thresholds['OK']} />\n    </>\n  )\n}\n\nconst mstp = ({\n  alertBuilder: {thresholds: thresholdsArray},\n}: AppState): StateProps => {\n  const thresholds = {}\n  thresholdsArray.forEach(t => {\n    thresholds[t.level] = t\n  })\n  return {thresholds}\n}\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(ThresholdConditions)\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {\n  Dropdown,\n  ComponentColor,\n  InfluxColors,\n  DropdownMenuTheme,\n} from '@influxdata/clockface'\n\n// Types\nimport {CheckStatusLevel} from 'src/types'\n\ntype ColorLevel = {hex: InfluxColors; display: string; value: CheckStatusLevel}\n\nconst levels: ColorLevel[] = [\n  {display: 'CRIT', hex: InfluxColors.Fire, value: 'CRIT'},\n  {display: 'INFO', hex: InfluxColors.Ocean, value: 'INFO'},\n  {display: 'WARN', hex: InfluxColors.Thunder, value: 'WARN'},\n  {display: 'OK', hex: InfluxColors.Viridian, value: 'OK'},\n]\n\ninterface Props {\n  selectedLevel: CheckStatusLevel\n  onClickLevel: (level: CheckStatusLevel) => void\n}\n\nconst CheckLevelsDropdown: FC<Props> = ({selectedLevel, onClickLevel}) => {\n  const selected = levels.find(l => l.value === selectedLevel)\n\n  if (!selected) {\n    throw new Error('Unknown level type provided to <CheckLevelsDropdown/>')\n  }\n\n  const button = (active: boolean, onClick) => (\n    <Dropdown.Button\n      color={ComponentColor.Default}\n      active={active}\n      onClick={onClick}\n      testID=\"check-levels--dropdown--button\"\n    >\n      <div className=\"color-dropdown--item\">\n        <div\n          className=\"color-dropdown--swatch\"\n          style={{backgroundColor: selected.hex}}\n        />\n        <div className=\"color-dropdown--name\">{selected.value}</div>\n      </div>\n    </Dropdown.Button>\n  )\n\n  const items = levels.map(({value, display, hex}) => (\n    <Dropdown.Item\n      key={value}\n      id={value}\n      value={value}\n      onClick={() => onClickLevel(value)}\n      testID={`check-levels--dropdown-item ${value}`}\n    >\n      <div className=\"color-dropdown--item\">\n        <div\n          className=\"color-dropdown--swatch\"\n          style={{backgroundColor: hex}}\n        />\n        <div className=\"color-dropdown--name\">{display}</div>\n      </div>\n    </Dropdown.Item>\n  ))\n\n  const menu = (onCollapse: () => void) => (\n    <Dropdown.Menu theme={DropdownMenuTheme.Onyx} onCollapse={onCollapse}>\n      {items}\n    </Dropdown.Menu>\n  )\n\n  return (\n    <Dropdown button={button} menu={menu} testID=\"check-levels--dropdown\" />\n  )\n}\n\nexport default CheckLevelsDropdown\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  FlexBox,\n  Panel,\n  ComponentSize,\n  PanelBody,\n  TextBlock,\n  FlexDirection,\n  InfluxColors,\n} from '@influxdata/clockface'\nimport CheckLevelsDropdown from 'src/checks/components/CheckLevelsDropdown'\n\n// Actions\nimport {\n  setStaleTime,\n  setTimeSince,\n  setLevel,\n} from 'src/alerting/actions/alertBuilder'\n\n// Types\nimport {CheckStatusLevel, AppState} from 'src/types'\nimport DurationInput from 'src/shared/components/DurationInput'\nimport {CHECK_OFFSET_OPTIONS} from 'src/alerting/constants'\n\ninterface DispatchProps {\n  onSetStaleTime: typeof setStaleTime\n  onSetTimeSince: typeof setTimeSince\n  onSetLevel: typeof setLevel\n}\n\ninterface StateProps {\n  staleTime: string\n  timeSince: string\n  level: CheckStatusLevel\n}\n\ntype Props = DispatchProps & StateProps\n\nconst DeadmanConditions: FC<Props> = ({\n  staleTime,\n  timeSince,\n  level,\n  onSetStaleTime,\n  onSetTimeSince,\n  onSetLevel,\n}) => {\n  return (\n    <Panel backgroundColor={InfluxColors.Castle} testID=\"panel\">\n      <PanelBody testID=\"panel--body\">\n        <FlexBox\n          direction={FlexDirection.Column}\n          margin={ComponentSize.Small}\n          testID=\"component-spacer\"\n        >\n          <FlexBox\n            direction={FlexDirection.Row}\n            margin={ComponentSize.Small}\n            stretchToFitWidth\n            testID=\"component-spacer\"\n          >\n            <FlexBox.Child testID=\"component-spacer--flex-child\">\n              <TextBlock\n                testID=\"when-value-text-block\"\n                text=\"When values are not reporting\"\n              />\n            </FlexBox.Child>\n          </FlexBox>\n          <FlexBox\n            direction={FlexDirection.Row}\n            margin={ComponentSize.Small}\n            stretchToFitWidth\n            testID=\"component-spacer\"\n          >\n            <TextBlock testID=\"when-value-text-block\" text=\"for\" />\n            <FlexBox.Child testID=\"component-spacer--flex-child\">\n              <DurationInput\n                suggestions={CHECK_OFFSET_OPTIONS}\n                onSubmit={onSetTimeSince}\n                value={timeSince}\n                showDivider={false}\n              />\n            </FlexBox.Child>\n            <TextBlock testID=\"set-status-to-text-block\" text=\"set status to\" />\n            <FlexBox.Child testID=\"component-spacer--flex-child\">\n              <CheckLevelsDropdown\n                selectedLevel={level}\n                onClickLevel={onSetLevel}\n              />\n            </FlexBox.Child>\n          </FlexBox>\n          <FlexBox\n            direction={FlexDirection.Row}\n            margin={ComponentSize.Small}\n            stretchToFitWidth\n            testID=\"component-spacer\"\n          >\n            <TextBlock\n              testID=\"when-value-text-block\"\n              text=\"And stop checking after\"\n            />\n            <FlexBox.Child testID=\"component-spacer--flex-child\">\n              <DurationInput\n                suggestions={CHECK_OFFSET_OPTIONS}\n                onSubmit={onSetStaleTime}\n                value={staleTime}\n                showDivider={false}\n              />\n            </FlexBox.Child>\n          </FlexBox>\n        </FlexBox>\n      </PanelBody>\n    </Panel>\n  )\n}\n\nconst mstp = ({\n  alertBuilder: {staleTime, timeSince, level},\n}: AppState): StateProps => ({staleTime, timeSince, level})\n\nconst mdtp: DispatchProps = {\n  onSetStaleTime: setStaleTime,\n  onSetTimeSince: setTimeSince,\n  onSetLevel: setLevel,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(DeadmanConditions)\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  FlexBox,\n  FlexDirection,\n  AlignItems,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport ThresholdConditions from 'src/alerting/components/builder/ThresholdConditions'\nimport DeadmanConditions from 'src/alerting/components/builder/DeadmanConditions'\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\n\n// Types\nimport {CheckType, AppState} from 'src/types'\n\ninterface StateProps {\n  checkType: CheckType\n}\n\ntype Props = StateProps\n\nconst CheckConditionsCard: FC<Props> = ({checkType}) => {\n  let cardTitle: string\n  let conditionsComponent: JSX.Element\n\n  if (checkType === 'deadman') {\n    cardTitle = 'Deadman'\n    conditionsComponent = <DeadmanConditions />\n  } else if (checkType === 'threshold') {\n    cardTitle = 'Thresholds'\n    conditionsComponent = <ThresholdConditions />\n  } else {\n    throw new Error('Incorrect check type provided to <CheckConditionsCard/>')\n  }\n\n  return (\n    <BuilderCard\n      testID=\"builder-conditions\"\n      className=\"alert-builder--card alert-builder--conditions-card\"\n    >\n      <BuilderCard.Header title={cardTitle} />\n      <BuilderCard.Body addPadding={true} autoHideScrollbars={true}>\n        <FlexBox\n          direction={FlexDirection.Column}\n          alignItems={AlignItems.Stretch}\n          margin={ComponentSize.Medium}\n        >\n          {conditionsComponent}\n        </FlexBox>\n      </BuilderCard.Body>\n    </BuilderCard>\n  )\n}\n\nconst mstp = ({alertBuilder: {type}}: AppState): StateProps => {\n  return {checkType: type}\n}\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(CheckConditionsCard)\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ResourceCard} from '@influxdata/clockface'\n\n// Types\nimport {\n  NotificationRuleDraft,\n  AppState,\n  NotificationEndpoint,\n  ResourceType,\n} from 'src/types'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\ninterface OwnProps {\n  rule: NotificationRuleDraft\n}\n\ninterface StateProps {\n  endpoints: NotificationEndpoint[]\n}\n\ntype Props = OwnProps & StateProps\n\nconst MatchingRuleCard: FC<Props> = ({rule, endpoints}) => {\n  const endpoint = endpoints.find(e => e.id === rule.endpointID)\n\n  return (\n    <ResourceCard\n      key={`rule-id--${rule.id}`}\n      testID=\"rule-card\"\n      name={<ResourceCard.Name name={rule.name} />}\n      description={<ResourceCard.Description description={rule.description} />}\n      metaData={[\n        <>{`Checks every: ${rule.every}`}</>,\n        <>{`Sends notifications to: ${endpoint.name}`}</>,\n      ]}\n    />\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const endpoints = getAll<NotificationEndpoint>(\n    state,\n    ResourceType.NotificationEndpoints\n  )\n\n  return {\n    endpoints,\n  }\n}\n\nexport default connect<StateProps>(mstp)(MatchingRuleCard)\n","// Libraries\nimport React, {FC, useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {uniq} from 'lodash'\nimport {fromFlux} from '@influxdata/giraffe'\n\n// Components\nimport MatchingRuleCard from 'src/alerting/components/builder/MatchingRuleCard'\nimport {\n  SpinnerContainer,\n  TechnoSpinner,\n  FlexBox,\n  FlexDirection,\n  AlignItems,\n} from '@influxdata/clockface'\n\n// Selectors & Utils\nimport {getOrg} from 'src/organizations/selectors'\nimport {ruleToDraftRule} from 'src/notifications/rules/utils'\n\n// API\nimport {getNotificationRules as apiGetNotificationRules} from 'src/client'\n\n//Types\nimport {\n  NotificationRule,\n  AppState,\n  CheckTagSet,\n  GenRule,\n  NotificationRuleDraft,\n} from 'src/types'\nimport {EmptyState, ComponentSize, RemoteDataState} from '@influxdata/clockface'\nimport BuilderCard from 'src/timeMachine/components/builderCard/BuilderCard'\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\ninterface StateProps {\n  tags: CheckTagSet[]\n  orgID: string\n  queryResults: string[] | null\n}\n\nconst CheckMatchingRulesCard: FC<StateProps> = ({\n  orgID,\n  tags,\n  queryResults,\n}) => {\n  const getMatchingRules = async (): Promise<NotificationRule[]> => {\n    const checkTags = tags\n      .filter(t => t.key && t.value)\n      .map(t => [t.key, t.value])\n\n    const queryTags = []\n\n    if (queryResults) {\n      const joined = queryResults.join('\\n\\n')\n      const table = fromFlux(joined).table\n      const fluxGroupKeyUnion = fromFlux(joined).fluxGroupKeyUnion.filter(\n        v => v !== '_start' && v !== '_stop'\n      )\n\n      fluxGroupKeyUnion.forEach(gk => {\n        const values = uniq(table.getColumn(gk, 'string'))\n        values.forEach(v => {\n          queryTags.push([gk, v])\n        })\n      })\n    }\n\n    const tagsList = [...checkTags, ...queryTags].map(t => [\n      'tag',\n      `${t[0].trim()}:${t[1].trim()}`,\n    ])\n\n    const resp = await apiGetNotificationRules({\n      query: [['orgID', orgID], ...tagsList] as any,\n    })\n\n    if (resp.status !== 200) {\n      setMatchingRules({matchingRules: [], status: RemoteDataState.Error})\n      return\n    }\n\n    const matchingRules: NotificationRuleDraft[] = resp.data.notificationRules.map(\n      (r: GenRule) => ruleToDraftRule(r)\n    )\n\n    setMatchingRules({\n      matchingRules,\n      status: RemoteDataState.Done,\n    })\n  }\n\n  const [{matchingRules, status}, setMatchingRules] = useState<{\n    matchingRules: NotificationRuleDraft[]\n    status: RemoteDataState\n  }>({matchingRules: [], status: RemoteDataState.NotStarted})\n\n  useEffect(() => {\n    setMatchingRules({\n      matchingRules,\n      status: RemoteDataState.Loading,\n    })\n\n    getMatchingRules()\n  }, [tags, queryResults])\n\n  let contents: JSX.Element\n\n  if (\n    status === RemoteDataState.NotStarted ||\n    status === RemoteDataState.Loading\n  ) {\n    contents = (\n      <SpinnerContainer spinnerComponent={<TechnoSpinner />} loading={status} />\n    )\n  } else if (!matchingRules.length) {\n    contents = (\n      <EmptyState\n        size={ComponentSize.Small}\n        className=\"alert-builder--card__empty\"\n      >\n        <EmptyState.Text>\n          Notification Rules configured to act on tag sets matching this Alert\n          Check will show up here\n        </EmptyState.Text>\n        <EmptyState.Text>\n          Looks like no notification rules match the tag set defined in this\n          Alert Check\n        </EmptyState.Text>\n      </EmptyState>\n    )\n  } else {\n    contents = (\n      <>\n        {matchingRules.map(r => (\n          <MatchingRuleCard key={r.id} rule={r} />\n        ))}\n      </>\n    )\n  }\n\n  return (\n    <BuilderCard\n      testID=\"builder-conditions\"\n      className=\"alert-builder--card alert-builder--conditions-card\"\n    >\n      <BuilderCard.Header title=\"Matching Notification Rules\" />\n      <BuilderCard.Body addPadding={true} autoHideScrollbars={true}>\n        <FlexBox\n          direction={FlexDirection.Column}\n          alignItems={AlignItems.Stretch}\n          margin={ComponentSize.Medium}\n        >\n          {contents}\n        </FlexBox>\n      </BuilderCard.Body>\n    </BuilderCard>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    alertBuilder: {tags},\n  } = state\n  const {id: orgID} = getOrg(state)\n\n  const {\n    queryResults: {files},\n  } = getActiveTimeMachine(state)\n\n  return {tags, orgID, queryResults: files}\n}\n\nexport default connect<StateProps>(\n  mstp,\n  null\n)(CheckMatchingRulesCard)\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\nimport CheckMetaCard from 'src/checks/components/CheckMetaCard'\nimport CheckMessageCard from 'src/checks/components/CheckMessageCard'\nimport CheckConditionsCard from 'src/checks/components/CheckConditionsCard'\nimport CheckMatchingRulesCard from 'src/checks/components/CheckMatchingRulesCard'\nimport {isFlagEnabled} from 'src/shared/utils/featureFlag'\n\nconst AlertBuilder: FC = () => {\n  return (\n    <div className=\"query-builder alert-builder\" data-testid=\"query-builder\">\n      <div className=\"query-builder--cards\">\n        <FancyScrollbar>\n          <div className=\"builder-card--list alert-builder--list\">\n            <CheckMetaCard />\n            <CheckMessageCard />\n            <CheckConditionsCard />\n            {isFlagEnabled('matchingNotificationRules') && (\n              <CheckMatchingRulesCard />\n            )}\n          </div>\n        </FancyScrollbar>\n      </div>\n    </div>\n  )\n}\n\nexport default AlertBuilder\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Button} from '@influxdata/clockface'\n\n// Actions\nimport {loadCustomCheckQueryState} from 'src/timeMachine/actions'\n\ninterface DispatchProps {\n  onLoadCustomCheckQueryState: typeof loadCustomCheckQueryState\n}\n\nconst CustomizeCheckQueryButton: FC<DispatchProps> = ({\n  onLoadCustomCheckQueryState,\n}) => {\n  const switchToEditor = () => {\n    onLoadCustomCheckQueryState()\n  }\n  return (\n    <Button\n      text=\"Customize Check Query\"\n      titleText=\"Switch to Script Editor\"\n      onClick={switchToEditor}\n      testID=\"switch-to-custom-check\"\n    />\n  )\n}\n\nconst mdtp: DispatchProps = {\n  onLoadCustomCheckQueryState: loadCustomCheckQueryState,\n}\n\nexport default connect<{}, DispatchProps>(\n  null,\n  mdtp\n)(CustomizeCheckQueryButton)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {Button} from '@influxdata/clockface'\n\nconst HelpButton: FunctionComponent = () => {\n  const handleClick = () => {\n    const newTab = window.open(\n      'https://v2.docs.influxdata.com/v2.0/monitor-alert/checks/create/#configure-the-check'\n    )\n    newTab.focus()\n  }\n\n  return (\n    <Button\n      titleText=\"Learn more about alerting\"\n      text=\"Help\"\n      onClick={handleClick}\n    />\n  )\n}\n\nexport default HelpButton\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport TimeMachineAlertBuilder from 'src/alerting/components/builder/AlertBuilder'\nimport {\n  ComponentSize,\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n} from '@influxdata/clockface'\nimport CustomizeCheckQueryButton from 'src/timeMachine/components/CustomizeCheckQueryButton'\nimport HelpButton from 'src/alerting/components/builder/HelpButton'\nimport RawDataToggle from 'src/timeMachine/components/RawDataToggle'\nimport {isFlagEnabled} from 'src/shared/utils/featureFlag'\n\nconst TimeMachineAlerting: FunctionComponent = () => {\n  return (\n    <div className=\"time-machine-queries\">\n      <div className=\"time-machine-queries--controls alert-builder--controls\">\n        <div className=\"time-machine--editor-title\">Configure a Check</div>\n        <div className=\"time-machine-queries--buttons\">\n          <FlexBox\n            direction={FlexDirection.Row}\n            justifyContent={JustifyContent.FlexEnd}\n            margin={ComponentSize.Small}\n          >\n            {isFlagEnabled('customCheckQuery') && <CustomizeCheckQueryButton />}\n            <RawDataToggle />\n            <HelpButton />\n          </FlexBox>\n        </div>\n      </div>\n      <div className=\"time-machine-queries--body\">\n        <TimeMachineAlertBuilder />\n      </div>\n    </div>\n  )\n}\n\nexport default TimeMachineAlerting\n","// Libraries\nimport React, {PureComponent, CSSProperties} from 'react'\nimport _ from 'lodash'\nimport {Grid} from 'react-virtualized'\n\nconst ROW_HEIGHT = 27\nconst MIN_COLUMN_WIDTH = 150\nconst TIME_COLUMN_WIDTH = 300\n\ninterface Props {\n  data: string[][]\n  maxColumnCount: number\n  width: number\n  height: number\n  scrollLeft: number\n  scrollTop: number\n}\n\ninterface State {\n  headerRows: number[]\n}\n\nexport default class extends PureComponent<Props, State> {\n  public static getDerivedStateFromProps(nextProps: Props): Partial<State> {\n    const headerRows = _.reduce(\n      nextProps.data,\n      (acc, row, index) => {\n        if (row[0] === '#datatype') {\n          acc.push(index)\n        }\n\n        return acc\n      },\n      []\n    )\n\n    return {headerRows}\n  }\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {headerRows: []}\n  }\n\n  public render() {\n    const {maxColumnCount, width, height, scrollTop, scrollLeft} = this.props\n\n    return (\n      <Grid\n        width={width}\n        height={height}\n        cellRenderer={this.renderCell}\n        columnCount={maxColumnCount}\n        rowCount={this.rowCount}\n        rowHeight={ROW_HEIGHT}\n        columnWidth={this.columnWidth}\n        scrollLeft={scrollLeft}\n        scrollTop={scrollTop}\n        style={this.gridStyle}\n      />\n    )\n  }\n\n  private get rowCount(): number {\n    return this.props.data.length\n  }\n\n  private columnWidth = ({index}): number => {\n    const {maxColumnCount, width} = this.props\n\n    const isDateTimeColumn = _.find(this.state.headerRows, i => {\n      return (this.getCellData(i, index) || '').includes('dateTime')\n    })\n\n    if (!isDateTimeColumn) {\n      return Math.max(MIN_COLUMN_WIDTH, width / maxColumnCount)\n    }\n\n    return TIME_COLUMN_WIDTH\n  }\n\n  private get gridStyle(): CSSProperties {\n    const width = this.calculateWidth()\n    const height = ROW_HEIGHT * this.rowCount\n\n    return {width, height}\n  }\n\n  private renderCell = ({columnIndex, key, rowIndex, style}) => {\n    const datum = this.getCellData(rowIndex, columnIndex)\n\n    return (\n      <div\n        key={key}\n        style={style}\n        className=\"raw-flux-data-table--cell\"\n        title={datum}\n      >\n        <div className=\"raw-flux-data-table--cell-bg\">{datum}</div>\n      </div>\n    )\n  }\n\n  private calculateWidth(): number {\n    const {maxColumnCount} = this.props\n    return _.reduce(\n      _.range(0, maxColumnCount),\n      (acc, index) => acc + this.columnWidth({index}),\n      0\n    )\n  }\n\n  private getCellData(row, column) {\n    const {data} = this.props\n    return data[row][column]\n  }\n}\n","import Papa from 'papaparse'\n\nimport {parseChunks} from 'src/shared/parsing/flux/response'\n\nexport interface ParseFilesResult {\n  data: string[][]\n  maxColumnCount: number\n}\n\nexport const parseFiles = (responses: string[]): ParseFilesResult => {\n  const chunks = parseChunks(responses.join('\\n\\n'))\n  const parsedChunks = chunks.map(c => Papa.parse(c).data)\n  const maxColumnCount = Math.max(...parsedChunks.map(c => c[0].length))\n  const data = []\n\n  for (let i = 0; i < parsedChunks.length; i++) {\n    if (i !== 0) {\n      // Seperate each chunk by an empty line, just like in the unparsed CSV\n      data.push([])\n    }\n\n    for (let j = 0; j < parsedChunks[i].length; j++) {\n      // Danger zone! Since the contents of each chunk are potentially quite\n      // large, the contents need to be concated using a loop rather than with\n      // `concat`, a splat or similar. Otherwise we see a \"Maximum call size\n      // exceeded\" error for large CSVs\n      data.push(parsedChunks[i][j])\n    }\n  }\n\n  return {data, maxColumnCount}\n}\n","// Libraries\nimport React, {PureComponent, MouseEvent} from 'react'\nimport memoizeOne from 'memoize-one'\nimport RawFluxDataGrid from 'src/timeMachine/components/RawFluxDataGrid'\n\n// Components\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\n\n// Utils\nimport {parseFiles} from 'src/timeMachine/utils/rawFluxDataTable'\n\ninterface Props {\n  files: string[]\n  width: number\n  height: number\n}\n\ninterface State {\n  scrollLeft: number\n  scrollTop: number\n}\n\nclass RawFluxDataTable extends PureComponent<Props, State> {\n  public state = {scrollLeft: 0, scrollTop: 0}\n\n  private parseFiles = memoizeOne(parseFiles)\n\n  public render() {\n    const {width, height, files} = this.props\n    const {scrollTop, scrollLeft} = this.state\n    const {data, maxColumnCount} = this.parseFiles(files)\n\n    const tableWidth = width\n    const tableHeight = height\n\n    return (\n      <div className=\"raw-flux-data-table\" data-testid=\"raw-data-table\">\n        <FancyScrollbar\n          style={{\n            overflowY: 'hidden',\n            width: tableWidth,\n            height: tableHeight,\n          }}\n          autoHide={false}\n          scrollTop={scrollTop}\n          scrollLeft={scrollLeft}\n          setScrollTop={this.onScrollbarsScroll}\n        >\n          <RawFluxDataGrid\n            scrollTop={scrollTop}\n            scrollLeft={scrollLeft}\n            width={tableWidth}\n            height={tableHeight}\n            maxColumnCount={maxColumnCount}\n            data={data}\n            key={files[0]}\n          />\n        </FancyScrollbar>\n      </div>\n    )\n  }\n\n  private onScrollbarsScroll = (e: MouseEvent<HTMLElement>) => {\n    e.preventDefault()\n    e.stopPropagation()\n\n    const {scrollTop, scrollLeft} = e.currentTarget\n\n    this.setState({scrollLeft, scrollTop})\n  }\n}\n\nexport default RawFluxDataTable\n","// Libraries\nimport React, {SFC} from 'react'\nimport {connect} from 'react-redux'\nimport {FromFluxResult} from '@influxdata/giraffe'\nimport {AutoSizer} from 'react-virtualized'\n\n// Components\nimport EmptyQueryView, {ErrorFormat} from 'src/shared/components/EmptyQueryView'\nimport ViewSwitcher from 'src/shared/components/ViewSwitcher'\nimport RawFluxDataTable from 'src/timeMachine/components/RawFluxDataTable'\nimport ErrorBoundary from 'src/shared/components/ErrorBoundary'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\nimport {checkResultsLength} from 'src/shared/utils/vis'\nimport {\n  getVisTable,\n  getXColumnSelection,\n  getYColumnSelection,\n  getFillColumnsSelection,\n  getSymbolColumnsSelection,\n} from 'src/timeMachine/selectors'\n\n// Types\nimport {\n  RemoteDataState,\n  AppState,\n  QueryViewProperties,\n  TimeZone,\n  TimeRange,\n  StatusRow,\n  CheckType,\n  Threshold,\n} from 'src/types'\n\n// Selectors\nimport {getActiveTimeRange} from 'src/timeMachine/selectors/index'\n\ninterface StateProps {\n  timeRange: TimeRange | null\n  loading: RemoteDataState\n  errorMessage: string\n  files: string[]\n  viewProperties: QueryViewProperties\n  isInitialFetch: boolean\n  isViewingRawData: boolean\n  giraffeResult: FromFluxResult\n  xColumn: string\n  yColumn: string\n  checkType: CheckType\n  checkThresholds: Threshold[]\n  fillColumns: string[]\n  symbolColumns: string[]\n  timeZone: TimeZone\n  statuses: StatusRow[][]\n}\n\ntype Props = StateProps\n\nconst TimeMachineVis: SFC<Props> = ({\n  loading,\n  errorMessage,\n  timeRange,\n  isInitialFetch,\n  isViewingRawData,\n  files,\n  checkType,\n  checkThresholds,\n  viewProperties,\n  giraffeResult,\n  xColumn,\n  yColumn,\n  fillColumns,\n  symbolColumns,\n  timeZone,\n  statuses,\n}) => {\n  // If the current selections for `xColumn`/`yColumn`/ etc. are invalid given\n  // the current Flux response, attempt to make a valid selection instead. This\n  // fallback logic is contained within the selectors that supply each of these\n  // props. Note that in a dashboard context, we display an error instead of\n  // attempting to fall back to an valid selection.\n  const resolvedViewProperties = {\n    ...viewProperties,\n    xColumn,\n    yColumn,\n    fillColumns,\n    symbolColumns,\n  }\n\n  return (\n    <div className=\"time-machine--view\">\n      <ErrorBoundary>\n        <EmptyQueryView\n          loading={loading}\n          errorFormat={ErrorFormat.Scroll}\n          errorMessage={errorMessage}\n          isInitialFetch={isInitialFetch}\n          queries={viewProperties.queries}\n          hasResults={checkResultsLength(giraffeResult)}\n        >\n          {isViewingRawData ? (\n            <AutoSizer>\n              {({width, height}) =>\n                width &&\n                height && (\n                  <RawFluxDataTable\n                    files={files}\n                    width={width}\n                    height={height}\n                  />\n                )\n              }\n            </AutoSizer>\n          ) : (\n            <ViewSwitcher\n              giraffeResult={giraffeResult}\n              timeRange={timeRange}\n              files={files}\n              loading={loading}\n              properties={resolvedViewProperties}\n              checkType={checkType}\n              checkThresholds={checkThresholds}\n              timeZone={timeZone}\n              statuses={statuses}\n            />\n          )}\n        </EmptyQueryView>\n      </ErrorBoundary>\n    </div>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    isViewingRawData,\n    view: {properties: viewProperties},\n    queryResults: {\n      status: loading,\n      errorMessage,\n      isInitialFetch,\n      files,\n      statuses,\n    },\n    timeRange,\n  } = getActiveTimeMachine(state)\n  const {\n    alertBuilder: {type: checkType, thresholds: checkThresholds},\n  } = state\n\n  const giraffeResult = getVisTable(state)\n  const xColumn = getXColumnSelection(state)\n  const yColumn = getYColumnSelection(state)\n  const fillColumns = getFillColumnsSelection(state)\n  const symbolColumns = getSymbolColumnsSelection(state)\n\n  const timeZone = state.app.persisted.timeZone\n\n  return {\n    loading,\n    checkType,\n    checkThresholds,\n    errorMessage,\n    isInitialFetch,\n    files,\n    viewProperties,\n    isViewingRawData,\n    giraffeResult,\n    xColumn,\n    yColumn,\n    fillColumns,\n    symbolColumns,\n    timeZone,\n    timeRange: getActiveTimeRange(timeRange, viewProperties.queries),\n    statuses,\n  }\n}\n\nexport default connect<StateProps>(mstp)(TimeMachineVis)\n","// Libraries\nimport React, {SFC} from 'react'\n\n// Components\nimport {Dropdown, Form, Grid} from '@influxdata/clockface'\n\n// Utils\nimport {resolveGeom} from 'src/shared/utils/vis'\n\n// Types\nimport {XYGeom} from 'src/types'\nimport {Columns} from '@influxdata/clockface'\n\ninterface Props {\n  geom: XYGeom\n  onSetGeom: (geom: XYGeom) => void\n}\n\nconst getGeomLabel = (geom: XYGeom): string => {\n  switch (geom) {\n    case 'monotoneX':\n      return 'Smooth'\n    case 'step':\n      return 'Step'\n    default:\n    case 'line':\n      return 'Linear'\n  }\n}\n\nconst Geom: SFC<Props> = ({geom, onSetGeom}) => {\n  return (\n    <Grid.Column widthXS={Columns.Twelve}>\n      <Form.Element label=\"Interpolation\">\n        <Dropdown\n          button={(active, onClick) => (\n            <Dropdown.Button active={active} onClick={onClick}>\n              {getGeomLabel(resolveGeom(geom))}\n            </Dropdown.Button>\n          )}\n          menu={onCollapse => (\n            <Dropdown.Menu onCollapse={onCollapse}>\n              <Dropdown.Item\n                value=\"line\"\n                onClick={onSetGeom}\n                selected={geom === 'line'}\n              >\n                Linear\n              </Dropdown.Item>\n              <Dropdown.Item\n                value=\"monotoneX\"\n                onClick={onSetGeom}\n                selected={geom === 'monotoneX'}\n              >\n                Smooth\n              </Dropdown.Item>\n              <Dropdown.Item\n                value=\"step\"\n                onClick={onSetGeom}\n                selected={geom === 'step'}\n              >\n                Step\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          )}\n        />\n      </Form.Element>\n    </Grid.Column>\n  )\n}\n\nexport default Geom\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Components\nimport {Form, Input, Grid} from '@influxdata/clockface'\n\n// Types\nimport {Columns} from '@influxdata/clockface'\n\ninterface Props {\n  label: string\n  onUpdateYAxisLabel: (label: string) => void\n}\nclass YAxisTitle extends PureComponent<Props> {\n  public render() {\n    const {label} = this.props\n\n    return (\n      <Grid.Column widthXS={Columns.Twelve}>\n        <Form.Element label=\"Y Axis Label\">\n          <Input value={label} onChange={this.handleChange} />\n        </Form.Element>\n      </Grid.Column>\n    )\n  }\n\n  private handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {onUpdateYAxisLabel} = this.props\n\n    onUpdateYAxisLabel(e.target.value)\n  }\n}\n\nexport default YAxisTitle\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Components\nimport {Input, FormElement, Grid} from '@influxdata/clockface'\n\n// Types\nimport {Columns} from '@influxdata/clockface'\n\ninterface Props {\n  prefix: string\n  suffix: string\n  axisName: string\n  onUpdateAxisPrefix: (prefix: string) => void\n  onUpdateAxisSuffix: (suffix: string) => void\n}\n\nclass AxisAffixes extends PureComponent<Props> {\n  public render() {\n    const {prefix, suffix, axisName} = this.props\n\n    return (\n      <>\n        <Grid.Column widthSM={Columns.Six}>\n          <FormElement label={`${axisName.toUpperCase()} Axis Prefix`}>\n            <Input value={prefix} onChange={this.handleUpdateAxisPrefix} />\n          </FormElement>\n        </Grid.Column>\n        <Grid.Column widthSM={Columns.Six}>\n          <FormElement label={`${axisName.toUpperCase()} Axis Suffix`}>\n            <Input value={suffix} onChange={this.handleUpdateAxisSuffix} />\n          </FormElement>\n        </Grid.Column>\n      </>\n    )\n  }\n\n  private handleUpdateAxisPrefix = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {onUpdateAxisPrefix} = this.props\n    const prefix = e.target.value\n    onUpdateAxisPrefix(prefix)\n  }\n\n  private handleUpdateAxisSuffix = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {onUpdateAxisSuffix} = this.props\n    const suffix = e.target.value\n    onUpdateAxisSuffix(suffix)\n  }\n}\n\nexport default AxisAffixes\n","// Libraries\nimport React, {CSSProperties, FunctionComponent} from 'react'\n\nconst generateGradientStyle = (colors: string[]): CSSProperties => {\n  const stops = colors\n    .map((hex, i) => `${hex} ${Math.round((i / (colors.length - 1)) * 100)}%`)\n    .join(', ')\n\n  return {\n    background: `linear-gradient(to right, ${stops})`,\n  }\n}\n\ninterface Props {\n  name: string\n  colors: string[]\n}\n\nconst ColorSchemeDropdownItem: FunctionComponent<Props> = ({name, colors}) => {\n  return (\n    <div className=\"color-scheme-dropdown-item\">\n      <div\n        className=\"color-scheme-dropdown-item--swatches\"\n        style={generateGradientStyle(colors)}\n      />\n      <div className=\"color-scheme-dropdown-item--name\">{name}</div>\n    </div>\n  )\n}\n\nexport default ColorSchemeDropdownItem\n","// Libraries\nimport React, {SFC} from 'react'\n\n// Components\nimport {Dropdown, DropdownMenuTheme} from '@influxdata/clockface'\nimport ColorSchemeDropdownItem from 'src/shared/components/ColorSchemeDropdownItem'\n\n// Constants\nimport {LINE_COLOR_SCALES} from 'src/shared/constants/graphColorPalettes'\n\n// Types\nimport {Color} from 'src/types/colors'\n\ninterface Props {\n  value: Color[]\n  onChange: (colors: Color[]) => void\n}\n\ninterface Scale {\n  name: string\n  id: string\n  colors: Array<{hex: string}>\n}\n\nconst findSelectedScale = (colors: Color[]): Scale => {\n  const key = (colors: Color[]) => colors.map(color => color.hex).join(', ')\n  const needle = key(colors)\n  const selectedScale = LINE_COLOR_SCALES.find(\n    d => key(d.colors as Color[]) === needle\n  )\n\n  if (selectedScale) {\n    return selectedScale\n  } else {\n    return LINE_COLOR_SCALES[0]\n  }\n}\n\nconst ColorSchemeDropdown: SFC<Props> = ({value, onChange}) => {\n  const selectedScale = findSelectedScale(value)\n\n  return (\n    <Dropdown\n      button={(active, onClick) => (\n        <Dropdown.Button active={active} onClick={onClick}>\n          <ColorSchemeDropdownItem\n            name={selectedScale.name}\n            colors={selectedScale.colors.map(c => c.hex)}\n          />\n        </Dropdown.Button>\n      )}\n      menu={onCollapse => (\n        <Dropdown.Menu onCollapse={onCollapse} theme={DropdownMenuTheme.Onyx}>\n          {LINE_COLOR_SCALES.map(({id, name, colors}) => (\n            <Dropdown.Item\n              key={id}\n              id={id}\n              value={colors}\n              selected={selectedScale.id === id}\n              onClick={onChange}\n            >\n              <ColorSchemeDropdownItem\n                name={name}\n                colors={colors.map(c => c.hex)}\n              />\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      )}\n    />\n  )\n}\n\nexport default ColorSchemeDropdown\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Form, Grid} from '@influxdata/clockface'\nimport ColorSchemeDropdown from 'src/shared/components/ColorSchemeDropdown'\n\n// Types\nimport {Columns} from '@influxdata/clockface'\nimport {Color} from 'src/types/colors'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  colors: Color[]\n  onUpdateColors: (colors: Color[]) => void\n}\n\n@ErrorHandling\nclass LineGraphColorSelector extends PureComponent<Props> {\n  public render() {\n    const {colors, onUpdateColors} = this.props\n\n    return (\n      <Grid.Column widthXS={Columns.Twelve}>\n        <Form.Element label=\"Line Colors\">\n          <ColorSchemeDropdown value={colors} onChange={onUpdateColors} />\n        </Form.Element>\n      </Grid.Column>\n    )\n  }\n}\n\nexport default LineGraphColorSelector\n","// Libraries\nimport React, {useState, SFC, KeyboardEvent} from 'react'\n\n// Components\nimport {Form, Input, SelectGroup, Grid} from '@influxdata/clockface'\n\n// Utils\nimport {useOneWayState} from 'src/shared/utils/useOneWayState'\n\n// Types\nimport {Columns, ButtonShape} from '@influxdata/clockface'\n\ninterface MinMaxInputsProps {\n  initialMin: string\n  initialMax: string\n  onSetMinMax: (minMax: [number, number]) => void\n  onSetErrorMessage: (errorMessage: string) => void\n}\n\nconst MinMaxInputs: SFC<MinMaxInputsProps> = ({\n  initialMin,\n  initialMax,\n  onSetMinMax,\n  onSetErrorMessage,\n}) => {\n  const [minInput, setMinInput] = useOneWayState(initialMin)\n  const [maxInput, setMaxInput] = useOneWayState(initialMax)\n\n  const emitIfValid = () => {\n    const newMin = parseFloat(minInput)\n    const newMax = parseFloat(maxInput)\n\n    if (isNaN(newMin)) {\n      onSetErrorMessage('Must supply a valid minimum value')\n      return\n    }\n\n    if (isNaN(newMax)) {\n      onSetErrorMessage('Must supply a valid maximum value')\n      return\n    }\n\n    if (newMin >= newMax) {\n      onSetErrorMessage('Minium value must be less than maximum')\n      return\n    }\n\n    if (initialMin === minInput && initialMax === maxInput) {\n      // Only emit the change event if an actual change has occurred\n      return\n    }\n\n    onSetErrorMessage('')\n    onSetMinMax([newMin, newMax])\n  }\n\n  const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      emitIfValid()\n    }\n  }\n\n  return (\n    <>\n      <Grid.Column widthXS={Columns.Six}>\n        <Form.Element label=\"Min\">\n          <Input\n            value={minInput}\n            onChange={e => setMinInput(e.target.value)}\n            onBlur={emitIfValid}\n            onKeyPress={handleKeyPress}\n          />\n        </Form.Element>\n      </Grid.Column>\n      <Grid.Column widthXS={Columns.Six}>\n        <Form.Element label=\"Max\">\n          <Input\n            value={maxInput}\n            onChange={e => setMaxInput(e.target.value)}\n            onBlur={emitIfValid}\n            onKeyPress={handleKeyPress}\n          />\n        </Form.Element>\n      </Grid.Column>\n    </>\n  )\n}\n\ninterface AutoDomainInputProps {\n  domain: [number, number]\n  onSetDomain: (domain: [number, number]) => void\n  label?: string\n}\n\nconst AutoDomainInput: SFC<AutoDomainInputProps> = ({\n  domain,\n  onSetDomain,\n  label = 'Set Domain',\n}) => {\n  const [showInputs, setShowInputs] = useState(!!domain)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleChooseAuto = () => {\n    setShowInputs(false)\n    setErrorMessage('')\n    onSetDomain(null)\n  }\n\n  const handleChooseCustom = () => {\n    setShowInputs(true)\n    setErrorMessage('')\n  }\n\n  const initialMin = domain ? String(domain[0]) : ''\n  const initialMax = domain ? String(domain[1]) : ''\n\n  return (\n    <Form.Element\n      label={label}\n      errorMessage={errorMessage}\n      className=\"auto-domain-input\"\n    >\n      <Grid>\n        <Grid.Row>\n          <Grid.Column widthXS={Columns.Twelve}>\n            <SelectGroup shape={ButtonShape.StretchToFit}>\n              <SelectGroup.Option\n                name=\"auto-domain\"\n                id=\"radio_auto\"\n                titleText=\"Auto\"\n                active={!showInputs}\n                onClick={handleChooseAuto}\n                value=\"Auto\"\n              >\n                Auto\n              </SelectGroup.Option>\n              <SelectGroup.Option\n                name=\"auto-domain\"\n                id=\"radio_custom\"\n                titleText=\"Custom\"\n                active={showInputs}\n                onClick={handleChooseCustom}\n                value=\"Custom\"\n              >\n                Custom\n              </SelectGroup.Option>\n            </SelectGroup>\n          </Grid.Column>\n        </Grid.Row>\n        {showInputs && (\n          <Grid.Row className=\"auto-domain-input--custom\">\n            <MinMaxInputs\n              initialMin={initialMin}\n              initialMax={initialMax}\n              onSetMinMax={onSetDomain}\n              onSetErrorMessage={setErrorMessage}\n            />\n          </Grid.Row>\n        )}\n      </Grid>\n    </Form.Element>\n  )\n}\n\nexport default AutoDomainInput\n","import {AxisScale, Base} from 'src/types'\n\nexport const AXES_SCALE_OPTIONS = {\n  LINEAR: 'linear' as AxisScale,\n  LOG: 'log' as AxisScale,\n  BASE_2: '2' as Base,\n  BASE_10: '10' as Base,\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Form, SelectGroup, Grid} from '@influxdata/clockface'\n\n// Constants\nimport {AXES_SCALE_OPTIONS} from 'src/dashboards/constants/cellEditor'\n\n// Types\nimport {Columns, ButtonShape} from '@influxdata/clockface'\n\ninterface Props {\n  base: string\n  onUpdateYAxisBase: (base: string) => void\n}\n\nconst {BASE_2, BASE_10} = AXES_SCALE_OPTIONS\n\nclass YAxisBase extends PureComponent<Props> {\n  public render() {\n    const {base, onUpdateYAxisBase} = this.props\n\n    return (\n      <Grid.Column widthXS={Columns.Twelve}>\n        <Form.Element label=\"Y-Value Unit Prefix\">\n          <SelectGroup shape={ButtonShape.StretchToFit}>\n            <SelectGroup.Option\n              name=\"y-values-format\"\n              id=\"y-values-format-tab--raw\"\n              value=\"\"\n              active={base === ''}\n              titleText=\"Do not format values using a unit prefix\"\n              onClick={onUpdateYAxisBase}\n            >\n              None\n            </SelectGroup.Option>\n            <SelectGroup.Option\n              name=\"y-values-format\"\n              id=\"y-values-format-tab--kmb\"\n              value={BASE_10}\n              active={base === BASE_10}\n              titleText=\"Format values using an International System of Units prefix\"\n              onClick={onUpdateYAxisBase}\n            >\n              SI\n            </SelectGroup.Option>\n            <SelectGroup.Option\n              name=\"y-values-format\"\n              id=\"y-values-format-tab--kmg\"\n              value={BASE_2}\n              active={base === BASE_2}\n              titleText=\"Format values using a binary unit prefix (for formatting bits or bytes)\"\n              onClick={onUpdateYAxisBase}\n            >\n              Binary\n            </SelectGroup.Option>\n          </SelectGroup>\n        </Form.Element>\n      </Grid.Column>\n    )\n  }\n}\n\nexport default YAxisBase\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {SelectDropdown, Form, ComponentStatus} from '@influxdata/clockface'\n\ninterface Props {\n  selectedColumn: string\n  availableColumns: string[]\n  axisName: string\n  onSelectColumn: (col: string) => void\n}\n\nconst ColumnSelector: FunctionComponent<Props> = ({\n  selectedColumn,\n  onSelectColumn,\n  availableColumns,\n  axisName,\n}) => {\n  return (\n    <Form.Element label={`${axisName.toUpperCase()} Column`}>\n      <SelectDropdown\n        options={availableColumns}\n        selectedOption={selectedColumn || 'Build a query before selecting...'}\n        onSelect={onSelectColumn}\n        buttonStatus={\n          availableColumns.length == 0\n            ? ComponentStatus.Disabled\n            : ComponentStatus.Default\n        }\n      />\n    </Form.Element>\n  )\n}\n\nexport default ColumnSelector\n","// Libraries\nimport React, {FC} from 'react'\n\ninterface Props {\n  label: string\n  checked: boolean\n  onSetChecked: (checked: boolean) => void\n  testID?: string\n}\n\n// TODO: Replace this with the Clockface checkbox once available\n//\n// See https://github.com/influxdata/influxdb/issues/14125.\nconst Checkbox: FC<Props> = ({label, checked, onSetChecked, testID}) => {\n  return (\n    <label className={`fancy-checkbox ${checked ? 'checked' : ''}`}>\n      <input\n        data-testid={testID || 'checkbox'}\n        type=\"checkbox\"\n        checked={!!checked}\n        onChange={() => onSetChecked(!checked)}\n      />\n      {label}\n    </label>\n  )\n}\n\nexport default Checkbox\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {SelectDropdown} from '@influxdata/clockface'\n\n// Utils\nimport {resolveTimeFormat} from 'src/dashboards/utils/tableGraph'\n\n// Constants\nimport {FORMAT_OPTIONS} from 'src/dashboards/constants'\n\ninterface Props {\n  timeFormat: string\n  onTimeFormatChange: (format: string) => void\n}\n\nconst TimeFormatSetting: FunctionComponent<Props> = ({\n  timeFormat,\n  onTimeFormatChange,\n}) => (\n  <SelectDropdown\n    options={FORMAT_OPTIONS.map(option => option.text)}\n    selectedOption={resolveTimeFormat(timeFormat)}\n    onSelect={onTimeFormatChange}\n  />\n)\n\nexport default TimeFormatSetting\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {capitalize} from 'lodash'\n\n// Components\nimport {Grid, Form, Dropdown} from '@influxdata/clockface'\nimport Geom from 'src/timeMachine/components/view_options/Geom'\nimport YAxisTitle from 'src/timeMachine/components/view_options/YAxisTitle'\nimport AxisAffixes from 'src/timeMachine/components/view_options/AxisAffixes'\nimport ColorSelector from 'src/timeMachine/components/view_options/ColorSelector'\nimport AutoDomainInput from 'src/shared/components/AutoDomainInput'\nimport YAxisBase from 'src/timeMachine/components/view_options/YAxisBase'\nimport ColumnSelector from 'src/shared/components/ColumnSelector'\nimport Checkbox from 'src/shared/components/Checkbox'\nimport TimeFormat from 'src/timeMachine/components/view_options/TimeFormat'\n\n// Actions\nimport {\n  setColors,\n  setYAxisLabel,\n  setAxisPrefix,\n  setAxisSuffix,\n  setYAxisBounds,\n  setYAxisBase,\n  setGeom,\n  setXColumn,\n  setYColumn,\n  setShadeBelow,\n  setLinePosition,\n  setTimeFormat,\n} from 'src/timeMachine/actions'\n\n// Utils\nimport {parseBounds} from 'src/shared/utils/vis'\nimport {\n  getXColumnSelection,\n  getYColumnSelection,\n  getNumericColumns,\n  getActiveTimeMachine,\n} from 'src/timeMachine/selectors'\n\n// Types\nimport {\n  AppState,\n  XYGeom,\n  Axes,\n  Color,\n  NewView,\n  XYViewProperties,\n  ViewType,\n} from 'src/types'\nimport {LinePosition} from '@influxdata/giraffe'\n\ninterface OwnProps {\n  type: ViewType\n  axes: Axes\n  geom?: XYGeom\n  colors: Color[]\n  shadeBelow?: boolean\n  position: LinePosition\n}\n\ninterface StateProps {\n  xColumn: string\n  yColumn: string\n  numericColumns: string[]\n  timeFormat: string\n}\n\ninterface DispatchProps {\n  onUpdateYAxisLabel: typeof setYAxisLabel\n  onUpdateAxisPrefix: typeof setAxisPrefix\n  onUpdateAxisSuffix: typeof setAxisSuffix\n  onUpdateYAxisBounds: typeof setYAxisBounds\n  onUpdateYAxisBase: typeof setYAxisBase\n  onUpdateColors: typeof setColors\n  onSetShadeBelow: typeof setShadeBelow\n  onSetXColumn: typeof setXColumn\n  onSetYColumn: typeof setYColumn\n  onSetGeom: typeof setGeom\n  onSetPosition: typeof setLinePosition\n  onSetTimeFormat: typeof setTimeFormat\n}\n\ntype Props = OwnProps & DispatchProps & StateProps\n\nclass LineOptions extends PureComponent<Props> {\n  public render() {\n    const {\n      axes: {\n        y: {label, prefix, suffix, base},\n      },\n      colors,\n      geom,\n      shadeBelow,\n      position,\n      onSetPosition,\n      onUpdateColors,\n      onUpdateYAxisLabel,\n      onUpdateAxisPrefix,\n      onUpdateAxisSuffix,\n      onUpdateYAxisBase,\n      onSetShadeBelow,\n      onSetGeom,\n      onSetYColumn,\n      yColumn,\n      onSetXColumn,\n      xColumn,\n      numericColumns,\n      onSetTimeFormat,\n      timeFormat,\n    } = this.props\n\n    return (\n      <>\n        <Grid.Column>\n          <h4 className=\"view-options--header\">Customize Line Graph</h4>\n          <h5 className=\"view-options--header\">Data</h5>\n          <ColumnSelector\n            selectedColumn={xColumn}\n            onSelectColumn={onSetXColumn}\n            availableColumns={numericColumns}\n            axisName=\"x\"\n          />\n          <ColumnSelector\n            selectedColumn={yColumn}\n            onSelectColumn={onSetYColumn}\n            availableColumns={numericColumns}\n            axisName=\"y\"\n          />\n          <Form.Element label=\"Time Format\">\n            <TimeFormat\n              timeFormat={timeFormat}\n              onTimeFormatChange={onSetTimeFormat}\n            />\n          </Form.Element>\n          <h5 className=\"view-options--header\">Options</h5>\n        </Grid.Column>\n        {geom && <Geom geom={geom} onSetGeom={onSetGeom} />}\n        <ColorSelector\n          colors={colors.filter(c => c.type === 'scale')}\n          onUpdateColors={onUpdateColors}\n        />\n        <Grid.Column>\n          <Checkbox\n            label=\"Shade Area Below Lines\"\n            checked={!!shadeBelow}\n            onSetChecked={onSetShadeBelow}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <h5 className=\"view-options--header\">Y Axis</h5>\n        </Grid.Column>\n        <YAxisTitle label={label} onUpdateYAxisLabel={onUpdateYAxisLabel} />\n        <YAxisBase base={base} onUpdateYAxisBase={onUpdateYAxisBase} />\n        <AxisAffixes\n          prefix={prefix}\n          suffix={suffix}\n          axisName=\"y\"\n          onUpdateAxisPrefix={prefix => onUpdateAxisPrefix(prefix, 'y')}\n          onUpdateAxisSuffix={suffix => onUpdateAxisSuffix(suffix, 'y')}\n        />\n        <Grid.Column>\n          <AutoDomainInput\n            domain={this.yDomain}\n            onSetDomain={this.handleSetYDomain}\n            label=\"Y Axis Domain\"\n          />\n          <Form.Element label=\"Positioning\">\n            <Dropdown\n              button={(active, onClick) => (\n                <Dropdown.Button active={active} onClick={onClick}>\n                  {capitalize(position)}\n                </Dropdown.Button>\n              )}\n              menu={onCollapse => (\n                <Dropdown.Menu onCollapse={onCollapse}>\n                  <Dropdown.Item\n                    id=\"overlaid\"\n                    value=\"overlaid\"\n                    onClick={onSetPosition}\n                    selected={position === 'overlaid'}\n                  >\n                    Overlaid\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    id=\"stacked\"\n                    value=\"stacked\"\n                    onClick={onSetPosition}\n                    selected={position === 'stacked'}\n                  >\n                    Stacked\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              )}\n            />\n          </Form.Element>\n        </Grid.Column>\n      </>\n    )\n  }\n\n  private get yDomain(): [number, number] {\n    return parseBounds(this.props.axes.y.bounds)\n  }\n\n  private handleSetYDomain = (yDomain: [number, number]): void => {\n    let bounds: [string, string] | [null, null]\n\n    if (yDomain) {\n      bounds = [String(yDomain[0]), String(yDomain[1])]\n    } else {\n      bounds = [null, null]\n    }\n\n    this.props.onUpdateYAxisBounds(bounds)\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const xColumn = getXColumnSelection(state)\n  const yColumn = getYColumnSelection(state)\n  const numericColumns = getNumericColumns(state)\n  const view = getActiveTimeMachine(state).view as NewView<XYViewProperties>\n  const {timeFormat} = view.properties\n  return {xColumn, yColumn, numericColumns, timeFormat}\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateYAxisLabel: setYAxisLabel,\n  onUpdateAxisPrefix: setAxisPrefix,\n  onUpdateAxisSuffix: setAxisSuffix,\n  onUpdateYAxisBounds: setYAxisBounds,\n  onUpdateYAxisBase: setYAxisBase,\n  onSetXColumn: setXColumn,\n  onSetYColumn: setYColumn,\n  onSetShadeBelow: setShadeBelow,\n  onUpdateColors: setColors,\n  onSetGeom: setGeom,\n  onSetPosition: setLinePosition,\n  onSetTimeFormat: setTimeFormat,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(LineOptions)\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Components\nimport {\n  Form,\n  Input,\n  Grid,\n  Toggle,\n  InputToggleType,\n  InputLabel,\n  FlexBox,\n  AlignItems,\n  ComponentSize,\n} from '@influxdata/clockface'\n\n// Types\nimport {Columns} from '@influxdata/clockface'\n\ninterface Props {\n  prefix: string\n  tickPrefix: string\n  suffix: string\n  tickSuffix: string\n  type: string\n  onUpdatePrefix: (prefix: string) => void\n  onUpdateTickPrefix: (tickPrefix: string) => void\n  onUpdateSuffix: (suffix: string) => void\n  onUpdateTickSuffix: (tickSuffix: string) => void\n}\n\nclass Affixes extends PureComponent<Props> {\n  public render() {\n    const {prefix, suffix} = this.props\n\n    return (\n      <>\n        <Grid.Column widthXS={Columns.Six}>\n          <Form.Element label=\"Prefix\">\n            <Input\n              testID=\"prefix-input\"\n              value={prefix}\n              onChange={this.handleUpdatePrefix}\n              placeholder=\"%, MPH, etc.\"\n            />\n          </Form.Element>\n        </Grid.Column>\n        <Grid.Column widthXS={Columns.Six}>\n          <Form.Element label=\"Suffix\">\n            <Input\n              testID=\"suffix-input\"\n              value={suffix}\n              onChange={this.handleUpdateSuffix}\n              placeholder=\"%, MPH, etc.\"\n            />\n          </Form.Element>\n        </Grid.Column>\n        {this.optionalTicks}\n      </>\n    )\n  }\n\n  private get optionalTicks(): JSX.Element {\n    const {type, tickPrefix, tickSuffix} = this.props\n\n    if (type === 'single-stat') {\n      return null\n    } else {\n      return (\n        <>\n          <Grid.Column widthXS={Columns.Six}>\n            <FlexBox\n              alignItems={AlignItems.Center}\n              margin={ComponentSize.Small}\n              className=\"view-options--checkbox\"\n            >\n              <Toggle\n                id=\"prefixoptional\"\n                testID=\"tickprefix-input\"\n                type={InputToggleType.Checkbox}\n                value={tickPrefix}\n                onChange={this.handleUpdateTickPrefix}\n                size={ComponentSize.ExtraSmall}\n              />\n              <InputLabel active={!!tickPrefix}>Optional Prefix</InputLabel>\n            </FlexBox>\n          </Grid.Column>\n          <Grid.Column widthXS={Columns.Six}>\n            <FlexBox\n              alignItems={AlignItems.Center}\n              margin={ComponentSize.Small}\n              className=\"view-options--checkbox\"\n            >\n              <Toggle\n                id=\"suffixoptional\"\n                testID=\"ticksuffix-input\"\n                type={InputToggleType.Checkbox}\n                value={tickSuffix}\n                onChange={this.handleUpdateTickSuffix}\n                size={ComponentSize.ExtraSmall}\n              />\n              <InputLabel active={!!tickSuffix}>Optional Suffix</InputLabel>\n            </FlexBox>\n          </Grid.Column>\n        </>\n      )\n    }\n  }\n\n  private handleUpdatePrefix = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {onUpdatePrefix} = this.props\n    const prefix = e.target.value\n    onUpdatePrefix(prefix)\n  }\n\n  private handleUpdateSuffix = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {onUpdateSuffix} = this.props\n    const suffix = e.target.value\n    onUpdateSuffix(suffix)\n  }\n  private handleUpdateTickSuffix = (e: string): void => {\n    const {onUpdateTickSuffix} = this.props\n    if (e === 'false' || !!!e) {\n      onUpdateTickSuffix('true')\n    } else {\n      onUpdateTickSuffix('false')\n    }\n  }\n  private handleUpdateTickPrefix = (e: string): void => {\n    const {onUpdateTickPrefix} = this.props\n    if (e === 'false' || !!!e) {\n      onUpdateTickPrefix('true')\n    } else {\n      onUpdateTickPrefix('false')\n    }\n  }\n}\n\nexport default Affixes\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Utils\nimport {convertUserInputToNumOrNaN} from 'src/shared/utils/convertUserInput'\n\n// Components\nimport {\n  Form,\n  Grid,\n  AutoInput,\n  AutoInputMode,\n  Input,\n  InputType,\n} from '@influxdata/clockface'\n\n// Constants\nimport {MIN_DECIMAL_PLACES, MAX_DECIMAL_PLACES} from 'src/dashboards/constants'\n\n// Types\nimport {DecimalPlaces} from 'src/types'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props extends DecimalPlaces {\n  onDecimalPlacesChange: (decimalPlaces: DecimalPlaces) => void\n}\n\ninterface State {\n  mode: AutoInputMode\n  value: number\n}\n\n@ErrorHandling\nclass DecimalPlacesOption extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      mode: this.props.digits ? AutoInputMode.Custom : AutoInputMode.Auto,\n      value: this.props.digits,\n    }\n  }\n\n  public render() {\n    const {mode} = this.state\n\n    return (\n      <Grid.Column>\n        <Form.Element label=\"Decimal Places\">\n          <AutoInput\n            mode={mode}\n            onChangeMode={this.handleChangeMode}\n            inputComponent={\n              <Input\n                name=\"decimal-places\"\n                placeholder=\"Enter a number\"\n                onChange={this.handleSetValue}\n                value={this.state.value}\n                min={MIN_DECIMAL_PLACES}\n                max={MAX_DECIMAL_PLACES}\n                type={InputType.Number}\n              />\n            }\n          />\n        </Form.Element>\n      </Grid.Column>\n    )\n  }\n\n  public handleSetValue = (e: ChangeEvent<HTMLInputElement>): void => {\n    const value = convertUserInputToNumOrNaN(e)\n    const {digits, onDecimalPlacesChange} = this.props\n\n    if (value === value && value >= MIN_DECIMAL_PLACES) {\n      onDecimalPlacesChange({\n        digits: Math.min(value, MAX_DECIMAL_PLACES),\n        isEnforced: true,\n      })\n    } else {\n      onDecimalPlacesChange({digits, isEnforced: false})\n    }\n    this.setState({value})\n  }\n\n  private handleChangeMode = (mode: AutoInputMode): void => {\n    this.setState({mode})\n  }\n}\n\nexport default DecimalPlacesOption\n","// Libraries\nimport React, {FC, CSSProperties} from 'react'\nimport {capitalize} from 'lodash'\n\n// Components\nimport {\n  Dropdown,\n  ComponentStatus,\n  DropdownMenuTheme,\n} from '@influxdata/clockface'\n\n// Types\nimport {ColorLabel} from 'src/types/colors'\n\ninterface PassedProps {\n  selected: ColorLabel\n  colors: ColorLabel[]\n  onChoose: (colors: ColorLabel) => void\n}\n\ninterface DefaultProps {\n  disabled?: boolean\n  style?: CSSProperties\n}\n\ntype Props = PassedProps & DefaultProps\n\nconst ColorDropdown: FC<Props> = props => {\n  const {selected, colors, onChoose, disabled, style} = props\n\n  const status = disabled ? ComponentStatus.Disabled : ComponentStatus.Default\n\n  return (\n    <Dropdown\n      style={style}\n      button={(active, onClick) => (\n        <Dropdown.Button active={active} onClick={onClick} status={status}>\n          <div className=\"color-dropdown--item\">\n            <div\n              className=\"color-dropdown--swatch\"\n              style={{backgroundColor: selected.hex}}\n            />\n            <div className=\"color-dropdown--name\">\n              {capitalize(selected.name)}\n            </div>\n          </div>\n        </Dropdown.Button>\n      )}\n      menu={onCollapse => (\n        <Dropdown.Menu onCollapse={onCollapse} theme={DropdownMenuTheme.Onyx}>\n          {colors.map(color => (\n            <Dropdown.Item\n              id={color.name}\n              key={color.name}\n              value={color}\n              selected={color.name === selected.name}\n              onClick={onChoose}\n            >\n              <div className=\"color-dropdown--item\">\n                <div\n                  className=\"color-dropdown--swatch\"\n                  style={{backgroundColor: color.hex}}\n                />\n                <div className=\"color-dropdown--name\">\n                  {capitalize(color.name)}\n                </div>\n              </div>\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      )}\n    />\n  )\n}\n\nColorDropdown.defaultProps = {\n  disabled: false,\n  style: {flex: '0 0 120px'},\n}\n\nexport default ColorDropdown\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {\n  Input,\n  SquareButton,\n  IconFont,\n  ComponentStatus,\n  TextBlock,\n  FlexBox,\n  ComponentSize,\n  FlexDirection,\n  AlignItems,\n} from '@influxdata/clockface'\nimport ColorDropdown from 'src/shared/components/ColorDropdown'\n\n// Constants\nimport {\n  THRESHOLD_COLORS,\n  BASE_THRESHOLD_ID,\n  COLOR_TYPE_MIN,\n  COLOR_TYPE_MAX,\n} from 'src/shared/constants/thresholds'\n\ninterface Props {\n  id: string\n  type: string\n  name: string\n  value: string\n  error?: string\n  onChangeValue: (value: string) => void\n  onChangeColor: (name: string, hex: string) => void\n  onRemove: () => void\n  onBlur: () => void\n}\n\nconst ThresholdSetting: FunctionComponent<Props> = ({\n  id,\n  type,\n  name,\n  value,\n  error,\n  onChangeValue,\n  onChangeColor,\n  onRemove,\n  onBlur,\n}) => {\n  const isBaseThreshold = id === BASE_THRESHOLD_ID\n\n  let label: string = ''\n\n  if (isBaseThreshold) {\n    label = 'Base'\n  } else if (type === COLOR_TYPE_MIN) {\n    label = 'Minimum'\n  } else if (type === COLOR_TYPE_MAX) {\n    label = 'Maximum'\n  } else {\n    label = 'Value is >='\n  }\n\n  const isRemoveable =\n    !isBaseThreshold && type !== COLOR_TYPE_MIN && type !== COLOR_TYPE_MAX\n\n  const inputStatus = error ? ComponentStatus.Error : ComponentStatus.Default\n\n  const dropdownStyle = isBaseThreshold\n    ? {flex: '1 0 120px'}\n    : {flex: '0 0 120px'}\n\n  return (\n    <>\n      <FlexBox\n        direction={FlexDirection.Row}\n        alignItems={AlignItems.Center}\n        margin={ComponentSize.Small}\n        testID={id}\n      >\n        <TextBlock text={label} style={{flex: '0 0 90px'}} />\n        {!isBaseThreshold && (\n          <Input\n            style={{flex: '1 0 0'}}\n            testID={`threshold-${id}-input`}\n            className=\"threshold-setting--value\"\n            value={value}\n            status={inputStatus}\n            onChange={e => onChangeValue(e.target.value)}\n            onBlur={onBlur}\n            onKeyDown={e => {\n              if (e.key === 'Enter') {\n                onBlur()\n              }\n            }}\n          />\n        )}\n        <ColorDropdown\n          colors={THRESHOLD_COLORS}\n          selected={THRESHOLD_COLORS.find(d => d.name === name)}\n          onChoose={({name, hex}) => onChangeColor(name, hex)}\n          style={dropdownStyle}\n        />\n        {isRemoveable && (\n          <SquareButton\n            icon={IconFont.Remove}\n            onClick={onRemove}\n            style={{flex: '0 0 30px'}}\n          />\n        )}\n      </FlexBox>\n      {error && (\n        <div\n          className=\"threshold-setting--error\"\n          data-testid={`threshold-${id}-error`}\n        >\n          {error}\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default ThresholdSetting\n","import {\n  useRef,\n  useReducer,\n  useCallback,\n  Reducer,\n  ReducerState,\n  ReducerAction,\n  Dispatch,\n} from 'react'\n\n/*\n  Works like `useReducer`, except if the `defaultState` argument changes then\n  the reducer state will reset to `defaultState`.\n\n  It is assumed that the passed `reducer` function has a stable identity over\n  the lifetime of the component.\n*/\nexport const useOneWayReducer = <R extends Reducer<any, any>>(\n  reducer: R,\n  defaultState: ReducerState<R>\n): [ReducerState<R>, Dispatch<ReducerAction<R>>] => {\n  // The value of `defaultState` the last time the hook was called\n  const prevDefaultState = useRef(defaultState)\n\n  // Whether or not the next run of the reducer should be against its internal\n  // state, or against the defaultState\n  const reduceDefaultState = useRef(false)\n\n  const wrappedReducer = useCallback(\n    (state: ReducerState<R>, action: ReducerAction<R>) => {\n      if (reduceDefaultState.current) {\n        reduceDefaultState.current = false\n\n        return reducer(prevDefaultState.current, action)\n      }\n\n      return reducer(state, action)\n    },\n    []\n  )\n\n  const [reducerState, dispatch] = useReducer(wrappedReducer, defaultState)\n\n  if (defaultState !== prevDefaultState.current) {\n    reduceDefaultState.current = true\n    prevDefaultState.current = defaultState\n\n    return [defaultState, dispatch]\n  }\n\n  return [reducerState, dispatch]\n}\n","// Libraries\nimport uuid from 'uuid'\n\n// Constants\nimport {\n  THRESHOLD_COLORS,\n  DEFAULT_VALUE_MIN,\n  DEFAULT_VALUE_MAX,\n  COLOR_TYPE_THRESHOLD,\n  COLOR_TYPE_MIN,\n  COLOR_TYPE_MAX,\n  BASE_THRESHOLD_ID,\n} from 'src/shared/constants/thresholds'\n\n// Types\nimport {Color} from 'src/types'\n\n/*\n  Sort a list of thresholds for rendering.\n\n  - Base or minimum thresholds come first\n  - Max thresholds come last\n  - All other thresholds are sorted by value\n\n*/\nexport const sortThresholds = (thresholds: Color[]): Color[] => {\n  const result = [...thresholds]\n\n  result.sort((a, b) =>\n    a.id === BASE_THRESHOLD_ID ? -Infinity : a.value - b.value\n  )\n\n  return result\n}\n\n/*\n  Given a list of thresholds, return an object of error messages for any\n  invalid threshold in the list.\n\n  A threshold is invalid if:\n\n  - Its value is NaN\n  - Its value is less than the min threshold in the list\n  - Its value is more than the max threshold in the list\n\n*/\nexport const validateThresholds = (\n  thresholds: Color[]\n): {[thresholdID: string]: string} => {\n  const minThreshold = thresholds.find(({type}) => type === COLOR_TYPE_MIN)\n  const maxThreshold = thresholds.find(({type}) => type === COLOR_TYPE_MAX)\n  const errors = {}\n\n  for (const {id, value, type} of thresholds) {\n    if (isNaN(value)) {\n      errors[id] = 'Please enter a valid number'\n    } else if (\n      minThreshold &&\n      type !== COLOR_TYPE_MIN &&\n      value < minThreshold.value\n    ) {\n      errors[id] = 'Please enter a value greater than the minimum threshold'\n    } else if (\n      maxThreshold &&\n      type !== COLOR_TYPE_MAX &&\n      value > maxThreshold.value\n    ) {\n      errors[id] = 'Please enter a value less than the maximum threshold'\n    }\n  }\n\n  return errors\n}\n\n/*\n  Given a list of thresholds, produce a new threshold that is suitable for\n  adding to the list.\n*/\nexport const addThreshold = (thresholds: Color[]): Color => {\n  const values = thresholds.map(threshold => threshold.value)\n\n  let minValue = Math.min(...values)\n  let maxValue = Math.max(...values)\n\n  if (minValue === Infinity || isNaN(minValue) || minValue === maxValue) {\n    minValue = DEFAULT_VALUE_MIN\n    maxValue = DEFAULT_VALUE_MAX\n  }\n\n  const value = randomTick(minValue, maxValue)\n\n  const colorChoice =\n    THRESHOLD_COLORS[Math.floor(Math.random() * THRESHOLD_COLORS.length)]\n\n  const firstThresholdType = thresholds[0].type\n\n  const thresholdType =\n    firstThresholdType === COLOR_TYPE_MIN ||\n    firstThresholdType === COLOR_TYPE_MAX\n      ? COLOR_TYPE_THRESHOLD\n      : firstThresholdType\n\n  const threshold = {\n    ...colorChoice,\n    id: uuid.v4(),\n    type: thresholdType,\n    value,\n  }\n\n  return threshold\n}\n\n/*\n  Generate a nice random number between `min` and `max` inclusive.\n*/\nconst randomTick = (min: number, max: number): number => {\n  const domainWidth = max - min\n\n  let roundTo\n\n  if (domainWidth > 1000) {\n    roundTo = 100\n  } else if (domainWidth > 100) {\n    roundTo = 10\n  } else if (domainWidth > 50) {\n    roundTo = 5\n  } else if (domainWidth > 10) {\n    roundTo = 1\n  } else {\n    roundTo = null\n  }\n\n  let value: number\n\n  if (roundTo) {\n    value = Math.round((Math.random() * (max - min)) / roundTo) * roundTo\n  } else {\n    value = Number((Math.random() * (max - min)).toFixed(2))\n  }\n\n  return value\n}\n","// Libraries\nimport React, {useMemo, useEffect, FunctionComponent} from 'react'\nimport {cloneDeep} from 'lodash'\n\n// Components\nimport ThresholdSetting from 'src/shared/components/ThresholdSetting'\nimport {\n  Button,\n  ButtonShape,\n  IconFont,\n  FlexBox,\n  ComponentSize,\n  FlexDirection,\n  AlignItems,\n} from '@influxdata/clockface'\n\n// Utils\nimport {useOneWayReducer} from 'src/shared/utils/useOneWayReducer'\nimport {\n  sortThresholds,\n  validateThresholds,\n  addThreshold,\n} from 'src/shared/utils/thresholds'\n\n// Types\nimport {Color} from 'src/types'\n\ninterface Props {\n  thresholds: Color[]\n  onSetThresholds: (thresholds: Color[]) => void\n}\n\ninterface State {\n  thresholds: Color[]\n  inputs: {[thresholdID: string]: string}\n  errors: {[thresholdID: string]: string}\n  isValid: boolean\n  isDirty: boolean\n}\n\ntype Action =\n  | {type: 'COLOR_CHANGED'; id: string; name: string; hex: string}\n  | {type: 'VALUE_CHANGED'; id: string; value: string}\n  | {type: 'VALUE_BLURRED'; id: string}\n  | {type: 'THRESHOLD_REMOVED'; id: string}\n  | {type: 'THRESHOLD_ADDED'}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'COLOR_CHANGED': {\n      const {id, name, hex} = action\n\n      const thresholds = state.thresholds.map(threshold =>\n        threshold.id === id ? {...threshold, name, hex} : threshold\n      )\n\n      return {...state, thresholds, isDirty: true}\n    }\n\n    case 'VALUE_CHANGED': {\n      const {id, value} = action\n\n      const inputs = {...state.inputs, [id]: value}\n\n      return {...state, inputs, isDirty: true, isValid: false}\n    }\n\n    case 'VALUE_BLURRED': {\n      const thresholds = state.thresholds.map(threshold =>\n        threshold.id === action.id\n          ? {...threshold, value: parseFloat(state.inputs[action.id])}\n          : threshold\n      )\n\n      const errors = validateThresholds(thresholds)\n\n      const isValid = Object.values(errors).length === 0\n\n      return {...state, thresholds, errors, isValid}\n    }\n\n    case 'THRESHOLD_ADDED': {\n      const newThreshold = addThreshold(state.thresholds)\n\n      const thresholds = sortThresholds([...state.thresholds, newThreshold])\n\n      const inputs = {\n        ...state.inputs,\n        [newThreshold.id]: String(newThreshold.value),\n      }\n\n      return {...state, thresholds, inputs, isDirty: true}\n    }\n\n    case 'THRESHOLD_REMOVED': {\n      const thresholds = state.thresholds.filter(\n        threshold => threshold.id !== action.id\n      )\n\n      return {...state, thresholds, isDirty: true}\n    }\n\n    default:\n      const unknownAction: never = action\n      const unknownActionType = (unknownAction as any).type\n\n      throw new Error(\n        `unhandled action of type \"${unknownActionType}\" in ThresholdsSettings`\n      )\n  }\n}\n\nconst ThresholdsSettings: FunctionComponent<Props> = ({\n  thresholds,\n  onSetThresholds,\n}) => {\n  const initialState: State = useMemo(\n    () => ({\n      thresholds: sortThresholds(\n        cloneDeep(thresholds.filter(({type}) => type !== 'scale'))\n      ),\n      inputs: thresholds.reduce(\n        (acc, {id, value}) => ({...acc, [id]: String(value)}),\n        {}\n      ),\n      errors: {},\n      isDirty: false,\n      isValid: true,\n    }),\n    [thresholds]\n  )\n\n  const [state, dispatch] = useOneWayReducer(reducer, initialState)\n\n  useEffect(() => {\n    if (state.isDirty && state.isValid) {\n      onSetThresholds(state.thresholds)\n    }\n  }, [state])\n\n  return (\n    <FlexBox\n      direction={FlexDirection.Column}\n      alignItems={AlignItems.Stretch}\n      margin={ComponentSize.Medium}\n      testID=\"threshold-settings\"\n    >\n      <Button\n        shape={ButtonShape.StretchToFit}\n        icon={IconFont.Plus}\n        text=\"Add a Threshold\"\n        onClick={() => dispatch({type: 'THRESHOLD_ADDED'})}\n      />\n      {state.thresholds.map(threshold => {\n        const onChangeValue = value =>\n          dispatch({\n            type: 'VALUE_CHANGED',\n            id: threshold.id,\n            value,\n          })\n\n        const onChangeColor = (name, hex) =>\n          dispatch({\n            type: 'COLOR_CHANGED',\n            id: threshold.id,\n            name,\n            hex,\n          })\n\n        const onRemove = () =>\n          dispatch({\n            type: 'THRESHOLD_REMOVED',\n            id: threshold.id,\n          })\n\n        const onBlur = () =>\n          dispatch({\n            type: 'VALUE_BLURRED',\n            id: threshold.id,\n          })\n\n        return (\n          <ThresholdSetting\n            key={threshold.id}\n            id={threshold.id}\n            name={threshold.name}\n            type={threshold.type}\n            value={state.inputs[threshold.id]}\n            error={state.errors[threshold.id]}\n            onBlur={onBlur}\n            onRemove={onRemove}\n            onChangeValue={onChangeValue}\n            onChangeColor={onChangeColor}\n          />\n        )\n      })}\n    </FlexBox>\n  )\n}\n\nexport default ThresholdsSettings\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Grid} from '@influxdata/clockface'\nimport Affixes from 'src/timeMachine/components/view_options/Affixes'\nimport DecimalPlacesOption from 'src/timeMachine/components/view_options/DecimalPlaces'\nimport ThresholdsSettings from 'src/shared/components/ThresholdsSettings'\n\n// Actions\nimport {\n  setDecimalPlaces,\n  setPrefix,\n  setTickPrefix,\n  setSuffix,\n  setTickSuffix,\n  setColors,\n} from 'src/timeMachine/actions'\n\n// Types\nimport {ViewType} from 'src/types'\nimport {DecimalPlaces} from 'src/types/dashboards'\nimport {Color} from 'src/types/colors'\n\ninterface OwnProps {\n  type: ViewType\n  colors: Color[]\n  decimalPlaces?: DecimalPlaces\n  prefix: string\n  tickPrefix: string\n  suffix: string\n  tickSuffix: string\n}\n\ninterface DispatchProps {\n  onUpdatePrefix: (prefix: string) => void\n  onUpdateTickPrefix: (tickPrefix: string) => void\n  onUpdateSuffix: (suffix: string) => void\n  onUpdateTickSuffix: (tickSuffix: string) => void\n  onUpdateDecimalPlaces: (decimalPlaces: DecimalPlaces) => void\n  onUpdateColors: (colors: Color[]) => void\n}\n\ntype Props = OwnProps & DispatchProps\n\nclass GaugeOptions extends PureComponent<Props> {\n  public render() {\n    const {\n      prefix,\n      tickPrefix,\n      suffix,\n      tickSuffix,\n      onUpdatePrefix,\n      onUpdateTickPrefix,\n      onUpdateSuffix,\n      onUpdateTickSuffix,\n      onUpdateColors,\n    } = this.props\n\n    return (\n      <>\n        <Grid.Column>\n          <h4 className=\"view-options--header\">Customize Gauge</h4>\n        </Grid.Column>\n        <Affixes\n          prefix={prefix}\n          tickPrefix={tickPrefix}\n          suffix={suffix}\n          type=\"gauge\"\n          tickSuffix={tickSuffix}\n          onUpdatePrefix={onUpdatePrefix}\n          onUpdateTickPrefix={onUpdateTickPrefix}\n          onUpdateSuffix={onUpdateSuffix}\n          onUpdateTickSuffix={onUpdateTickSuffix}\n        />\n        {this.decimalPlaces}\n        <Grid.Column>\n          <h4 className=\"view-options--header\">Colorized Thresholds</h4>\n        </Grid.Column>\n        <Grid.Column>\n          <ThresholdsSettings\n            thresholds={this.props.colors}\n            onSetThresholds={onUpdateColors}\n          />\n        </Grid.Column>\n      </>\n    )\n  }\n\n  private get decimalPlaces(): JSX.Element {\n    const {onUpdateDecimalPlaces, decimalPlaces} = this.props\n\n    if (!decimalPlaces) {\n      return null\n    }\n\n    return (\n      <DecimalPlacesOption\n        digits={decimalPlaces.digits}\n        isEnforced={decimalPlaces.isEnforced}\n        onDecimalPlacesChange={onUpdateDecimalPlaces}\n      />\n    )\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onUpdatePrefix: setPrefix,\n  onUpdateTickPrefix: setTickPrefix,\n  onUpdateSuffix: setSuffix,\n  onUpdateTickSuffix: setTickSuffix,\n  onUpdateDecimalPlaces: setDecimalPlaces,\n  onUpdateColors: setColors,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(GaugeOptions)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport {Form, SelectGroup} from '@influxdata/clockface'\n\n// Actions\nimport {\n  setBackgroundThresholdColoring,\n  setTextThresholdColoring,\n} from 'src/timeMachine/actions'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState} from 'src/types'\nimport {ButtonShape} from '@influxdata/clockface'\nimport {Color} from 'src/types/colors'\n\nenum ThresholdColoringSetting {\n  Background = 'background',\n  Text = 'text',\n}\n\ninterface StateProps {\n  colors: Color[]\n}\n\ninterface DispatchProps {\n  onSetBackground: typeof setBackgroundThresholdColoring\n  onSetText: typeof setTextThresholdColoring\n}\n\ntype Props = StateProps & DispatchProps\n\nclass ThresholdColoring extends PureComponent<Props> {\n  public render() {\n    return (\n      <Form.Element label=\"Colorization\" style={{marginTop: '16px'}}>\n        <SelectGroup shape={ButtonShape.StretchToFit}>\n          <SelectGroup.Option\n            name=\"threshold-coloring\"\n            id={ThresholdColoringSetting.Background}\n            titleText={ThresholdColoringSetting.Background}\n            active={this.activeSetting === ThresholdColoringSetting.Background}\n            onClick={this.handleClick}\n            value={ThresholdColoringSetting.Background}\n          >\n            Background\n          </SelectGroup.Option>\n          <SelectGroup.Option\n            name=\"threshold-coloring\"\n            id={ThresholdColoringSetting.Text}\n            titleText={ThresholdColoringSetting.Text}\n            active={this.activeSetting === ThresholdColoringSetting.Text}\n            onClick={this.handleClick}\n            value={ThresholdColoringSetting.Text}\n          >\n            Text\n          </SelectGroup.Option>\n        </SelectGroup>\n      </Form.Element>\n    )\n  }\n\n  private get activeSetting(): ThresholdColoringSetting {\n    const {colors} = this.props\n    const activeSetting: ThresholdColoringSetting = get(\n      colors.filter(c => c.type !== 'scale'),\n      '0.type',\n      ThresholdColoringSetting.Text\n    )\n\n    return activeSetting\n  }\n\n  private handleClick = (setting: ThresholdColoringSetting): void => {\n    if (setting === ThresholdColoringSetting.Background) {\n      this.props.onSetBackground()\n    } else if (setting === ThresholdColoringSetting.Text) {\n      this.props.onSetText()\n    }\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const colors = getActiveTimeMachine(state).view.properties.colors as Color[]\n\n  return {colors}\n}\n\nconst mdtp = {\n  onSetBackground: setBackgroundThresholdColoring,\n  onSetText: setTextThresholdColoring,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(ThresholdColoring)\n","// Libraries\nimport React, {SFC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Grid} from '@influxdata/clockface'\nimport Affixes from 'src/timeMachine/components/view_options/Affixes'\nimport DecimalPlacesOption from 'src/timeMachine/components/view_options/DecimalPlaces'\nimport ThresholdColoring from 'src/timeMachine/components/view_options/ThresholdColoring'\nimport ThresholdsSettings from 'src/shared/components/ThresholdsSettings'\n\n// Actions\nimport {\n  setDecimalPlaces,\n  setPrefix,\n  setTickPrefix,\n  setSuffix,\n  setTickSuffix,\n  setColors,\n} from 'src/timeMachine/actions'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {\n  AppState,\n  NewView,\n  Color,\n  SingleStatViewProperties,\n  DecimalPlaces,\n} from 'src/types'\n\ninterface StateProps {\n  colors: Color[]\n  prefix: string\n  tickPrefix: string\n  suffix: string\n  tickSuffix: string\n  decimalPlaces: DecimalPlaces\n}\n\ninterface DispatchProps {\n  onSetPrefix: typeof setPrefix\n  onSetTickPrefix: typeof setTickPrefix\n  onSetSuffix: typeof setSuffix\n  onSetTickSuffix: typeof setTickSuffix\n  onSetDecimalPlaces: typeof setDecimalPlaces\n  onSetColors: typeof setColors\n}\n\ntype Props = StateProps & DispatchProps\n\nconst SingleStatOptions: SFC<Props> = props => {\n  const {\n    colors,\n    prefix,\n    tickPrefix,\n    suffix,\n    tickSuffix,\n    decimalPlaces,\n    onSetPrefix,\n    onSetTickPrefix,\n    onSetSuffix,\n    onSetTickSuffix,\n    onSetDecimalPlaces,\n    onSetColors,\n  } = props\n\n  return (\n    <>\n      <Grid.Column>\n        <h4 className=\"view-options--header\">Customize Single-Stat</h4>\n      </Grid.Column>\n      <Affixes\n        prefix={prefix}\n        tickPrefix={tickPrefix}\n        suffix={suffix}\n        type=\"single-stat\"\n        tickSuffix={tickSuffix}\n        onUpdatePrefix={onSetPrefix}\n        onUpdateTickPrefix={onSetTickPrefix}\n        onUpdateSuffix={onSetSuffix}\n        onUpdateTickSuffix={onSetTickSuffix}\n      />\n      {decimalPlaces && (\n        <DecimalPlacesOption\n          digits={decimalPlaces.digits}\n          isEnforced={decimalPlaces.isEnforced}\n          onDecimalPlacesChange={onSetDecimalPlaces}\n        />\n      )}\n      <Grid.Column>\n        <h4 className=\"view-options--header\">Colorized Thresholds</h4>\n      </Grid.Column>\n      <Grid.Column>\n        <ThresholdsSettings thresholds={colors} onSetThresholds={onSetColors} />\n      </Grid.Column>\n      <Grid.Column>\n        <ThresholdColoring />\n      </Grid.Column>\n    </>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const view = getActiveTimeMachine(state).view as NewView<\n    SingleStatViewProperties\n  >\n  const {\n    colors,\n    prefix,\n    suffix,\n    decimalPlaces,\n    tickPrefix,\n    tickSuffix,\n  } = view.properties\n\n  return {colors, prefix, suffix, decimalPlaces, tickPrefix, tickSuffix}\n}\n\nconst mdtp: DispatchProps = {\n  onSetPrefix: setPrefix,\n  onSetTickPrefix: setTickPrefix,\n  onSetSuffix: setSuffix,\n  onSetTickSuffix: setTickSuffix,\n  onSetDecimalPlaces: setDecimalPlaces,\n  onSetColors: setColors,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(SingleStatOptions)\n","// Libraries\nimport React, {Component, ChangeEvent} from 'react'\nimport {findDOMNode} from 'react-dom'\nimport {\n  DragSourceSpec,\n  DropTargetConnector,\n  DragSourceMonitor,\n  DragSource,\n  DropTarget,\n  DragSourceConnector,\n  ConnectDragSource,\n  ConnectDropTarget,\n  ConnectDragPreview,\n} from 'react-dnd'\n\n// Components\nimport {Input, Icon} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {ComponentStatus, IconFont} from '@influxdata/clockface'\nimport {FieldOption} from 'src/types'\n\n// Constants\nconst columnType = 'column'\n\ninterface Props {\n  internalName: string\n  displayName: string\n  visible: boolean\n  index: number\n  id: string\n  key: string\n  onUpdateColumn: (column: FieldOption) => void\n  isDragging?: boolean\n  connectDragSource?: ConnectDragSource\n  connectDropTarget?: ConnectDropTarget\n  connectDragPreview?: ConnectDragPreview\n  onMoveColumn: (dragIndex: number, hoverIndex: number) => void\n}\n\nconst columnSource: DragSourceSpec<Props> = {\n  beginDrag(props) {\n    return {\n      id: props.id,\n      index: props.index,\n    }\n  },\n}\n\nconst columnTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index\n    const hoverIndex = props.index\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return\n    }\n\n    // Determine rectangle on screen\n    const domNode = findDOMNode(component) as Element\n    const hoverBoundingRect = domNode.getBoundingClientRect()\n\n    // Get vertical middle\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n\n    // Determine mouse position\n    const clientOffset = monitor.getClientOffset()\n\n    // Get pixels to the top\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top\n\n    // Only perform the move when the mouse has crossed half of the items height\n    // When dragging downwards, only move when the cursor is below 50%\n    // When dragging upwards, only move when the cursor is above 50%\n\n    // Dragging downwards\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n      return\n    }\n\n    // Dragging upwards\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n      return\n    }\n    // Time to actually perform the action\n    props.onMoveColumn(dragIndex, hoverIndex)\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex\n  },\n}\n\nfunction ColumnDropTarget(dropColumnType, dropColumnTarget, dropHandler) {\n  return target =>\n    DropTarget(dropColumnType, dropColumnTarget, dropHandler)(target) as any\n}\n\nfunction ColumnDragSource(dragColumnType, dragColumnSource, dragHandler) {\n  return target =>\n    DragSource(dragColumnType, dragColumnSource, dragHandler)(target) as any\n}\n\n@ErrorHandling\n@ColumnDropTarget(columnType, columnTarget, (connect: DropTargetConnector) => ({\n  connectDropTarget: connect.dropTarget(),\n}))\n@ColumnDragSource(\n  columnType,\n  columnSource,\n  (connect: DragSourceConnector, monitor: DragSourceMonitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging(),\n  })\n)\nexport default class DraggableColumn extends Component<Props> {\n  constructor(props) {\n    super(props)\n\n    this.handleColumnRename = this.handleColumnRename.bind(this)\n    this.handleToggleVisible = this.handleToggleVisible.bind(this)\n  }\n  public render(): JSX.Element | null {\n    const {\n      internalName,\n      displayName,\n      connectDragPreview,\n      connectDropTarget,\n    } = this.props\n\n    return connectDragPreview(\n      connectDropTarget(\n        <div className={this.columnClassName}>\n          <div className={this.labelClassName}>\n            {this.dragHandle}\n            {this.visibilityToggle}\n            <div className=\"customizable-field--name\">{internalName}</div>\n          </div>\n          <Input\n            className=\"customizable-field--input\"\n            id=\"internalName\"\n            value={displayName}\n            onChange={this.handleColumnRename}\n            placeholder={`Rename ${internalName}`}\n            status={this.inputStatus}\n          />\n        </div>\n      )\n    )\n  }\n\n  private get inputStatus(): ComponentStatus {\n    const {visible} = this.props\n\n    if (visible) {\n      return ComponentStatus.Default\n    }\n\n    return ComponentStatus.Disabled\n  }\n\n  private get dragHandle(): JSX.Element {\n    const {connectDragSource} = this.props\n\n    return connectDragSource(\n      <div className=\"customizable-field--drag\">\n        <span className=\"hamburger\" />\n      </div>\n    )\n  }\n\n  private get visibilityToggle(): JSX.Element {\n    const {visible, internalName} = this.props\n\n    if (visible) {\n      return (\n        <div\n          className=\"customizable-field--visibility\"\n          onClick={this.handleToggleVisible}\n          title={`Click to HIDE ${internalName}`}\n        >\n          <Icon glyph={IconFont.EyeOpen} />\n        </div>\n      )\n    }\n\n    return (\n      <div\n        className=\"customizable-field--visibility\"\n        onClick={this.handleToggleVisible}\n        title={`Click to SHOW ${internalName}`}\n      >\n        <Icon glyph={IconFont.EyeClosed} />\n      </div>\n    )\n  }\n\n  private get labelClassName(): string {\n    const {visible} = this.props\n\n    if (visible) {\n      return 'customizable-field--label'\n    }\n\n    return 'customizable-field--label__hidden'\n  }\n\n  private get columnClassName(): string {\n    const {isDragging} = this.props\n\n    if (isDragging) {\n      return 'customizable-field dragging'\n    }\n\n    return 'customizable-field'\n  }\n\n  private handleColumnRename = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {onUpdateColumn, internalName, visible} = this.props\n    onUpdateColumn({internalName, displayName: e.target.value, visible})\n  }\n\n  private handleToggleVisible = (): void => {\n    const {onUpdateColumn, internalName, displayName, visible} = this.props\n    onUpdateColumn({internalName, displayName, visible: !visible})\n  }\n}\n","// Libraries\nimport React, {Component} from 'react'\n\n// Components\nimport {Form, EmptyState, Grid} from '@influxdata/clockface'\nimport DraggableColumn from 'src/shared/components/draggable_column/DraggableColumn'\n\n// Types\nimport {FieldOption} from 'src/types/dashboards'\nimport {ComponentSize} from '@influxdata/clockface'\nimport withDragDropContext from 'src/shared/decorators/withDragDropContext'\n\ninterface Props {\n  className?: string\n  columns: FieldOption[]\n  onMoveColumn: (dragIndex: number, hoverIndex: number) => void\n  onUpdateColumn: (column: FieldOption) => void\n}\n\nclass ColumnsOptions extends Component<Props> {\n  public render() {\n    const {className} = this.props\n\n    return (\n      <Grid.Column>\n        <Form.Element label=\"Table Columns\">\n          <div className={className}>{this.draggableColumns}</div>\n        </Form.Element>\n      </Grid.Column>\n    )\n  }\n\n  private get draggableColumns(): JSX.Element | JSX.Element[] {\n    const {columns, onMoveColumn, onUpdateColumn} = this.props\n\n    if (columns.length) {\n      return columns.map((column: FieldOption, i: number) => (\n        <DraggableColumn\n          key={column.internalName}\n          index={i}\n          id={column.internalName}\n          internalName={column.internalName}\n          displayName={column.displayName}\n          visible={column.visible}\n          onUpdateColumn={onUpdateColumn}\n          onMoveColumn={onMoveColumn}\n        />\n      ))\n    }\n\n    return (\n      <Form.Box>\n        <EmptyState size={ComponentSize.Small}>\n          <EmptyState.Text>This query returned no columns</EmptyState.Text>\n        </EmptyState>\n      </Form.Box>\n    )\n  }\n}\n\nexport default withDragDropContext(ColumnsOptions)\n","// Libraries\nimport React, {SFC} from 'react'\n\n// Components\nimport {\n  Form,\n  InputLabel,\n  SlideToggle,\n  FlexBox,\n  Grid,\n} from '@influxdata/clockface'\n\n// Types\nimport {Columns, FlexDirection, ComponentSize} from '@influxdata/clockface'\n\ninterface Props {\n  fixed: boolean\n  onToggleFixFirstColumn: () => void\n}\n\nconst GraphOptionsFixFirstColumn: SFC<Props> = ({\n  fixed,\n  onToggleFixFirstColumn,\n}) => (\n  <Grid.Column widthXS={Columns.Twelve}>\n    <Form.Element label=\"First Column\">\n      <Form.Box>\n        <FlexBox direction={FlexDirection.Row} margin={ComponentSize.Small}>\n          <InputLabel>Scroll with table</InputLabel>\n          <SlideToggle\n            active={fixed}\n            onChange={onToggleFixFirstColumn}\n            size={ComponentSize.ExtraSmall}\n          />\n          <InputLabel>Fixed</InputLabel>\n        </FlexBox>\n      </Form.Box>\n    </Form.Element>\n  </Grid.Column>\n)\n\nexport default GraphOptionsFixFirstColumn\n","// Libraries\nimport _ from 'lodash'\nimport React from 'react'\n\n// Component\nimport {Form, Grid, Dropdown} from '@influxdata/clockface'\n\n// Types\nimport {FieldOption} from 'src/types/dashboards'\n\ninterface Props {\n  selected: FieldOption\n  fieldOptions: FieldOption[]\n  onChange: (fieldOption: FieldOption) => void\n}\n\nconst SortBy = ({fieldOptions, onChange, selected}: Props) => {\n  return (\n    <Grid.Column>\n      <Form.Element label=\"Default Sort Field\">\n        <Dropdown\n          className=\"dropdown-stretch\"\n          button={(active, onClick) => (\n            <Dropdown.Button active={active} onClick={onClick}>\n              {_.get(selected, 'displayName', 'Choose a sort field')}\n            </Dropdown.Button>\n          )}\n          menu={onCollapse => (\n            <Dropdown.Menu onCollapse={onCollapse}>\n              {fieldOptions\n                .filter(field => !!field.internalName)\n                .map(field => (\n                  <Dropdown.Item\n                    key={field.internalName}\n                    id={field.internalName}\n                    value={field}\n                    onClick={onChange}\n                    selected={\n                      field.internalName ===\n                      _.get(selected, 'internalName', null)\n                    }\n                  >\n                    {field.displayName}\n                  </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n          )}\n        />\n      </Form.Element>\n    </Grid.Column>\n  )\n}\n\nexport default SortBy\n","export const move = <T>(values: T[], fromIndex: number, toIndex: number) => {\n  if (fromIndex === toIndex) {\n    return values.slice()\n  }\n\n  const targetValue = values[fromIndex]\n\n  const valuesRemoved = [\n    ...values.slice(0, fromIndex),\n    ...values.slice(fromIndex + 1),\n  ]\n\n  return [\n    ...valuesRemoved.slice(0, toIndex),\n    targetValue,\n    ...valuesRemoved.slice(toIndex),\n  ]\n}\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport DecimalPlacesOption from 'src/timeMachine/components/view_options/DecimalPlaces'\nimport ColumnOptions from 'src/shared/components/columns_options/ColumnsOptions'\nimport FixFirstColumn from 'src/timeMachine/components/view_options/FixFirstColumn'\nimport TimeFormat from 'src/timeMachine/components/view_options/TimeFormat'\nimport SortBy from 'src/timeMachine/components/view_options/SortBy'\nimport {Grid, Form} from '@influxdata/clockface'\nimport ThresholdsSettings from 'src/shared/components/ThresholdsSettings'\nimport ThresholdColoring from 'src/timeMachine/components/view_options/ThresholdColoring'\n\n// Constants\n\n// Actions\nimport {\n  setDecimalPlaces,\n  setColors,\n  setFieldOptions,\n  updateFieldOption,\n  setTableOptions,\n  setTimeFormat,\n} from 'src/timeMachine/actions'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {\n  AppState,\n  NewView,\n  DecimalPlaces,\n  TableViewProperties,\n  FieldOption,\n  TableOptions as ViewTableOptions,\n  Color,\n} from 'src/types'\nimport {move} from 'src/shared/utils/move'\n\ninterface StateProps {\n  colors: Color[]\n  timeFormat: string\n  fieldOptions: FieldOption[]\n  decimalPlaces: DecimalPlaces\n  tableOptions: ViewTableOptions\n}\n\ninterface DispatchProps {\n  onSetColors: typeof setColors\n  onSetTimeFormat: typeof setTimeFormat\n  onSetFieldOptions: typeof setFieldOptions\n  onUpdateFieldOption: typeof updateFieldOption\n  onSetTableOptions: typeof setTableOptions\n  onSetDecimalPlaces: typeof setDecimalPlaces\n}\n\ntype Props = DispatchProps & StateProps\n\n@ErrorHandling\nexport class TableOptions extends Component<Props, {}> {\n  public render() {\n    const {\n      timeFormat,\n      onSetColors,\n      fieldOptions,\n      tableOptions,\n      colors,\n      decimalPlaces,\n      onSetTimeFormat,\n      onSetDecimalPlaces,\n    } = this.props\n\n    const filteredColumns = this.filterFieldOptions(fieldOptions)\n\n    const {fixFirstColumn, sortBy} = tableOptions\n\n    return (\n      <>\n        <Grid.Column>\n          <h4 className=\"view-options--header\">Customize Table</h4>\n        </Grid.Column>\n        {!!fieldOptions.length && (\n          <SortBy\n            selected={sortBy}\n            fieldOptions={fieldOptions}\n            onChange={this.handleChangeSortBy}\n          />\n        )}\n        <Grid.Column>\n          <Form.Element label=\"Time Format\">\n            <TimeFormat\n              timeFormat={timeFormat}\n              onTimeFormatChange={onSetTimeFormat}\n            />\n          </Form.Element>\n        </Grid.Column>\n        {decimalPlaces && (\n          <DecimalPlacesOption\n            digits={decimalPlaces.digits}\n            isEnforced={decimalPlaces.isEnforced}\n            onDecimalPlacesChange={onSetDecimalPlaces}\n          />\n        )}\n        <Grid.Column>\n          <h4 className=\"view-options--header\">Column Settings</h4>\n        </Grid.Column>\n        {/* TODO (watts): this currently doesn't working removing for alpha.\n          <TimeAxis\n          verticalTimeAxis={verticalTimeAxis}\n          onToggleVerticalTimeAxis={this.handleToggleVerticalTimeAxis}\n        /> */}\n        <FixFirstColumn\n          fixed={fixFirstColumn}\n          onToggleFixFirstColumn={this.handleToggleFixFirstColumn}\n        />\n        <ColumnOptions\n          columns={filteredColumns}\n          onMoveColumn={this.handleMoveColumn}\n          onUpdateColumn={this.handleUpdateColumn}\n        />\n        <Grid.Column>\n          <h4 className=\"view-options--header\">Colorized Thresholds</h4>\n        </Grid.Column>\n        <Grid.Column>\n          <ThresholdsSettings\n            thresholds={colors}\n            onSetThresholds={onSetColors}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <ThresholdColoring />\n        </Grid.Column>\n      </>\n    )\n  }\n\n  private filterFieldOptions = (fieldOptions: FieldOption[]) => {\n    return fieldOptions.filter(\n      col =>\n        col.internalName !== 'time' &&\n        col.internalName !== '' &&\n        col.internalName !== 'result' &&\n        col.internalName !== 'table'\n    )\n  }\n\n  private handleChangeSortBy = (sortBy: FieldOption) => {\n    const {tableOptions, onSetTableOptions} = this.props\n    onSetTableOptions({...tableOptions, sortBy})\n  }\n\n  private handleMoveColumn = (dragIndex: number, hoverIndex: number) => {\n    const fieldOptions = move(\n      this.filterFieldOptions(this.props.fieldOptions),\n      dragIndex,\n      hoverIndex\n    )\n    this.props.onSetFieldOptions(fieldOptions)\n  }\n\n  private handleUpdateColumn = (fieldOption: FieldOption) => {\n    this.props.onUpdateFieldOption(fieldOption)\n  }\n\n  private handleToggleFixFirstColumn = () => {\n    const {onSetTableOptions, tableOptions} = this.props\n    const fixFirstColumn = !tableOptions.fixFirstColumn\n    onSetTableOptions({...tableOptions, fixFirstColumn})\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const view = getActiveTimeMachine(state).view as NewView<TableViewProperties>\n  const {\n    colors,\n    decimalPlaces,\n    fieldOptions,\n    tableOptions,\n    timeFormat,\n  } = view.properties\n\n  return {colors, decimalPlaces, fieldOptions, tableOptions, timeFormat}\n}\n\nconst mdtp: DispatchProps = {\n  onSetDecimalPlaces: setDecimalPlaces,\n  onSetColors: setColors,\n  onSetFieldOptions: setFieldOptions,\n  onUpdateFieldOption: updateFieldOption,\n  onSetTableOptions: setTableOptions,\n  onSetTimeFormat: setTimeFormat,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(TableOptions)\n","// Libraries\nimport React, {FunctionComponent, ChangeEvent} from 'react'\n\n// Components\nimport {AutoInput, AutoInputMode, Input, InputType} from '@influxdata/clockface'\n\n// Utils\nimport {convertUserInputToNumOrNaN} from 'src/shared/utils/convertUserInput'\n\n// Actions\nimport {setBinCount} from 'src/timeMachine/actions'\n\ninterface Props {\n  binCount?: number\n  onSetBinCount: typeof setBinCount\n}\n\nconst BinCountInput: FunctionComponent<Props> = ({binCount, onSetBinCount}) => {\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const binCount = convertUserInputToNumOrNaN(e)\n\n    onSetBinCount(binCount)\n  }\n\n  const handleChangeMode = (mode: AutoInputMode): void => {\n    if (mode === AutoInputMode.Auto) {\n      onSetBinCount(null)\n    } else {\n      onSetBinCount(30)\n    }\n  }\n\n  return (\n    <AutoInput\n      mode={\n        typeof binCount === 'number' ? AutoInputMode.Custom : AutoInputMode.Auto\n      }\n      onChangeMode={handleChangeMode}\n      inputComponent={\n        <Input\n          name=\"binCount\"\n          value={binCount}\n          placeholder=\"Enter a number\"\n          type={InputType.Number}\n          min={0}\n          onChange={handleInputChange}\n        />\n      }\n    />\n  )\n}\n\nexport default BinCountInput\n","// Libraries\nimport React, {SFC} from 'react'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\n// Components\nimport {\n  Form,\n  Input,\n  Grid,\n  Dropdown,\n  MultiSelectDropdown,\n} from '@influxdata/clockface'\nimport ColorSchemeDropdown from 'src/shared/components/ColorSchemeDropdown'\nimport AutoDomainInput from 'src/shared/components/AutoDomainInput'\nimport BinCountInput from 'src/timeMachine/components/view_options/BinCountInput'\n\n// Actions\nimport {\n  setXColumn,\n  setFillColumns,\n  setBinCount,\n  setHistogramPosition,\n  setColors,\n  setXDomain,\n  setXAxisLabel,\n} from 'src/timeMachine/actions'\n\n// Utils\nimport {\n  getXColumnSelection,\n  getNumericColumns,\n  getGroupableColumns,\n  getFillColumnsSelection,\n} from 'src/timeMachine/selectors'\n\n// Types\nimport {ComponentStatus} from '@influxdata/clockface'\nimport {HistogramPosition} from '@influxdata/giraffe'\nimport {Color} from 'src/types/colors'\nimport {AppState} from 'src/types'\nimport ColumnSelector from 'src/shared/components/ColumnSelector'\n\ninterface StateProps {\n  xColumn: string\n  fillColumns: string[]\n  numericColumns: string[]\n  availableGroupColumns: string[]\n}\n\ninterface DispatchProps {\n  onSetXColumn: typeof setXColumn\n  onSetFillColumns: typeof setFillColumns\n  onSetBinCount: typeof setBinCount\n  onSetPosition: typeof setHistogramPosition\n  onSetColors: typeof setColors\n  onSetXDomain: typeof setXDomain\n  onSetXAxisLabel: typeof setXAxisLabel\n}\n\ninterface OwnProps {\n  position: HistogramPosition\n  binCount: number\n  colors: Color[]\n  xDomain: number[]\n  xAxisLabel: string\n}\n\ntype Props = OwnProps & DispatchProps & StateProps\n\nconst HistogramOptions: SFC<Props> = props => {\n  const {\n    xColumn,\n    fillColumns,\n    numericColumns,\n    availableGroupColumns,\n    position,\n    binCount,\n    colors,\n    xDomain,\n    xAxisLabel,\n    onSetXColumn,\n    onSetFillColumns,\n    onSetPosition,\n    onSetBinCount,\n    onSetColors,\n    onSetXDomain,\n    onSetXAxisLabel,\n  } = props\n\n  const groupDropdownStatus = availableGroupColumns.length\n    ? ComponentStatus.Default\n    : ComponentStatus.Disabled\n\n  const onSelectFillColumns = (option: string) => {\n    const columnExists = fillColumns.find(col => col === option)\n    let updatedColumns = fillColumns\n\n    if (columnExists) {\n      updatedColumns = fillColumns.filter(fc => fc !== option)\n    } else {\n      updatedColumns = [...fillColumns, option]\n    }\n\n    onSetFillColumns(updatedColumns)\n  }\n\n  return (\n    <Grid.Column>\n      <h4 className=\"view-options--header\">Customize Histogram</h4>\n      <h5 className=\"view-options--header\">Data</h5>\n      <ColumnSelector\n        selectedColumn={xColumn}\n        onSelectColumn={onSetXColumn}\n        availableColumns={numericColumns}\n        axisName=\"x\"\n      />\n      <Form.Element label=\"Group By\">\n        <MultiSelectDropdown\n          options={availableGroupColumns}\n          selectedOptions={fillColumns}\n          onSelect={onSelectFillColumns}\n          buttonStatus={groupDropdownStatus}\n        />\n      </Form.Element>\n      <h5 className=\"view-options--header\">Options</h5>\n      <Form.Element label=\"Color Scheme\">\n        <ColorSchemeDropdown value={colors} onChange={onSetColors} />\n      </Form.Element>\n      <Form.Element label=\"Positioning\">\n        <Dropdown\n          button={(active, onClick) => (\n            <Dropdown.Button active={active} onClick={onClick}>\n              {_.capitalize(position)}\n            </Dropdown.Button>\n          )}\n          menu={onCollapse => (\n            <Dropdown.Menu onCollapse={onCollapse}>\n              <Dropdown.Item\n                id=\"overlaid\"\n                value=\"overlaid\"\n                onClick={onSetPosition}\n                selected={position === 'overlaid'}\n              >\n                Overlaid\n              </Dropdown.Item>\n              <Dropdown.Item\n                id=\"stacked\"\n                value=\"stacked\"\n                onClick={onSetPosition}\n                selected={position === 'stacked'}\n              >\n                Stacked\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          )}\n        />\n      </Form.Element>\n      <Form.Element label=\"Bins\">\n        <BinCountInput binCount={binCount} onSetBinCount={onSetBinCount} />\n      </Form.Element>\n      <h5 className=\"view-options--header\">X Axis</h5>\n      <Form.Element label=\"X Axis Label\">\n        <Input\n          value={xAxisLabel}\n          onChange={e => onSetXAxisLabel(e.target.value)}\n        />\n      </Form.Element>\n      <AutoDomainInput\n        domain={xDomain as [number, number]}\n        onSetDomain={onSetXDomain}\n        label=\"X Axis Domain\"\n      />\n    </Grid.Column>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const numericColumns = getNumericColumns(state)\n  const availableGroupColumns = getGroupableColumns(state)\n  const xColumn = getXColumnSelection(state)\n  const fillColumns = getFillColumnsSelection(state)\n\n  return {numericColumns, availableGroupColumns, xColumn, fillColumns}\n}\n\nconst mdtp = {\n  onSetXColumn: setXColumn,\n  onSetFillColumns: setFillColumns,\n  onSetBinCount: setBinCount,\n  onSetPosition: setHistogramPosition,\n  onSetColors: setColors,\n  onSetXDomain: setXDomain,\n  onSetXAxisLabel: setXAxisLabel,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(HistogramOptions)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {Dropdown, DropdownMenuTheme} from '@influxdata/clockface'\nimport ColorSchemeDropdownItem from 'src/shared/components/ColorSchemeDropdownItem'\n\ninterface Props {\n  colorSchemes: Array<{name: string; colors: string[]}>\n  selectedColorScheme: string[]\n  onSelectColorScheme: (scheme: string[]) => void\n}\n\nconst HexColorSchemeDropdown: FunctionComponent<Props> = ({\n  colorSchemes,\n  selectedColorScheme,\n  onSelectColorScheme,\n}) => {\n  const selected = colorSchemes.find(\n    scheme =>\n      scheme.colors.length === selectedColorScheme.length &&\n      scheme.colors.every((color, i) => color === selectedColorScheme[i])\n  )\n\n  let selectedName\n  let resolvedSchemes\n\n  if (selected) {\n    selectedName = selected.name\n    resolvedSchemes = colorSchemes\n  } else {\n    selectedName = 'Custom'\n    resolvedSchemes = [\n      ...colorSchemes,\n      {name: 'Custom', colors: selectedColorScheme},\n    ]\n  }\n\n  return (\n    <Dropdown\n      className=\"color-scheme-dropdown\"\n      button={(active, onClick) => (\n        <Dropdown.Button active={active} onClick={onClick}>\n          <ColorSchemeDropdownItem\n            name={selectedName}\n            colors={selectedColorScheme}\n          />\n        </Dropdown.Button>\n      )}\n      menu={onCollapse => (\n        <Dropdown.Menu onCollapse={onCollapse} theme={DropdownMenuTheme.Onyx}>\n          {resolvedSchemes.map(({name, colors}) => (\n            <Dropdown.Item\n              key={name}\n              id={name}\n              value={colors}\n              onClick={onSelectColorScheme}\n              selected={selectedName === name}\n            >\n              <ColorSchemeDropdownItem name={name} colors={colors} />\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      )}\n    />\n  )\n}\n\nexport default HexColorSchemeDropdown\n","// Libraries\nimport React, {FunctionComponent, ChangeEvent, useState} from 'react'\nimport {connect} from 'react-redux'\nimport {VIRIDIS, MAGMA, INFERNO, PLASMA} from '@influxdata/giraffe'\nimport {\n  Form,\n  Grid,\n  Input,\n  Columns,\n  InputType,\n  ComponentStatus,\n} from '@influxdata/clockface'\nimport TimeFormat from 'src/timeMachine/components/view_options/TimeFormat'\n\n// Utils\nimport {convertUserInputToNumOrNaN} from 'src/shared/utils/convertUserInput'\n\n// Components\nimport AutoDomainInput from 'src/shared/components/AutoDomainInput'\nimport HexColorSchemeDropdown from 'src/shared/components/HexColorSchemeDropdown'\nimport ColumnSelector from 'src/shared/components/ColumnSelector'\n\n// Actions\nimport {\n  setXColumn,\n  setYColumn,\n  setBinSize,\n  setColorHexes,\n  setXDomain,\n  setYDomain,\n  setXAxisLabel,\n  setYAxisLabel,\n  setAxisPrefix,\n  setAxisSuffix,\n  setTimeFormat,\n} from 'src/timeMachine/actions'\n\n// Utils\nimport {\n  getXColumnSelection,\n  getYColumnSelection,\n  getNumericColumns,\n  getActiveTimeMachine,\n} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState, NewView, HeatmapViewProperties} from 'src/types'\n\nconst HEATMAP_COLOR_SCHEMES = [\n  {name: 'Magma', colors: MAGMA},\n  {name: 'Inferno', colors: INFERNO},\n  {name: 'Viridis', colors: VIRIDIS},\n  {name: 'Plasma', colors: PLASMA},\n]\n\ninterface StateProps {\n  xColumn: string\n  yColumn: string\n  numericColumns: string[]\n  timeFormat: string\n}\n\ninterface DispatchProps {\n  onSetXColumn: typeof setXColumn\n  onSetYColumn: typeof setYColumn\n  onSetBinSize: typeof setBinSize\n  onSetColors: typeof setColorHexes\n  onSetXDomain: typeof setXDomain\n  onSetYDomain: typeof setYDomain\n  onSetXAxisLabel: typeof setXAxisLabel\n  onSetYAxisLabel: typeof setYAxisLabel\n  onSetPrefix: typeof setAxisPrefix\n  onSetSuffix: typeof setAxisSuffix\n  onSetTimeFormat: typeof setTimeFormat\n}\n\ninterface OwnProps {\n  xDomain: number[]\n  yDomain: number[]\n  xAxisLabel: string\n  yAxisLabel: string\n  xPrefix: string\n  xSuffix: string\n  yPrefix: string\n  ySuffix: string\n  colors: string[]\n  binSize: number\n}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\nconst HeatmapOptions: FunctionComponent<Props> = props => {\n  const [binInputStatus, setBinInputStatus] = useState(ComponentStatus.Default)\n  const [binInput, setBinInput] = useState(props.binSize)\n\n  const onSetBinSize = (e: ChangeEvent<HTMLInputElement>) => {\n    const val = convertUserInputToNumOrNaN(e)\n    setBinInput(val)\n\n    if (isNaN(val) || val < 5) {\n      setBinInputStatus(ComponentStatus.Error)\n      return\n    }\n\n    setBinInputStatus(ComponentStatus.Default)\n    props.onSetBinSize(val)\n  }\n\n  return (\n    <Grid.Column>\n      <h4 className=\"view-options--header\">Customize Heatmap</h4>\n      <h5 className=\"view-options--header\">Data</h5>\n      <ColumnSelector\n        selectedColumn={props.xColumn}\n        onSelectColumn={props.onSetXColumn}\n        availableColumns={props.numericColumns}\n        axisName=\"x\"\n      />\n      <ColumnSelector\n        selectedColumn={props.yColumn}\n        onSelectColumn={props.onSetYColumn}\n        availableColumns={props.numericColumns}\n        axisName=\"y\"\n      />\n      <Form.Element label=\"Time Format\">\n        <TimeFormat\n          timeFormat={props.timeFormat}\n          onTimeFormatChange={props.onSetTimeFormat}\n        />\n      </Form.Element>\n      <h5 className=\"view-options--header\">Options</h5>\n      <Form.Element label=\"Color Scheme\">\n        <HexColorSchemeDropdown\n          colorSchemes={HEATMAP_COLOR_SCHEMES}\n          selectedColorScheme={props.colors}\n          onSelectColorScheme={props.onSetColors}\n        />\n      </Form.Element>\n      <Form.Element label=\"Bin Size\">\n        <Input\n          status={binInputStatus}\n          value={binInput}\n          type={InputType.Number}\n          onChange={onSetBinSize}\n        />\n      </Form.Element>\n      <h5 className=\"view-options--header\">X Axis</h5>\n      <Form.Element label=\"X Axis Label\">\n        <Input\n          value={props.xAxisLabel}\n          onChange={e => props.onSetXAxisLabel(e.target.value)}\n        />\n      </Form.Element>\n      <Grid.Row>\n        <Grid.Column widthSM={Columns.Six}>\n          <Form.Element label=\"X Tick Prefix\">\n            <Input\n              value={props.xPrefix}\n              onChange={e => props.onSetPrefix(e.target.value, 'x')}\n            />\n          </Form.Element>\n        </Grid.Column>\n        <Grid.Column widthSM={Columns.Six}>\n          <Form.Element label=\"X Tick Suffix\">\n            <Input\n              value={props.xSuffix}\n              onChange={e => props.onSetSuffix(e.target.value, 'x')}\n            />\n          </Form.Element>\n        </Grid.Column>\n      </Grid.Row>\n      <AutoDomainInput\n        domain={props.xDomain as [number, number]}\n        onSetDomain={props.onSetXDomain}\n        label=\"X Axis Domain\"\n      />\n      <h5 className=\"view-options--header\">Y Axis</h5>\n      <Form.Element label=\"Y Axis Label\">\n        <Input\n          value={props.yAxisLabel}\n          onChange={e => props.onSetYAxisLabel(e.target.value)}\n        />\n      </Form.Element>\n      <Grid.Row>\n        <Grid.Column widthSM={Columns.Six}>\n          <Form.Element label=\"Y Tick Prefix\">\n            <Input\n              value={props.yPrefix}\n              onChange={e => props.onSetPrefix(e.target.value, 'y')}\n            />\n          </Form.Element>\n        </Grid.Column>\n        <Grid.Column widthSM={Columns.Six}>\n          <Form.Element label=\"Y Tick Suffix\">\n            <Input\n              value={props.ySuffix}\n              onChange={e => props.onSetSuffix(e.target.value, 'y')}\n            />\n          </Form.Element>\n        </Grid.Column>\n      </Grid.Row>\n      <AutoDomainInput\n        domain={props.yDomain as [number, number]}\n        onSetDomain={props.onSetYDomain}\n        label=\"Y Axis Domain\"\n      />\n    </Grid.Column>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const xColumn = getXColumnSelection(state)\n  const yColumn = getYColumnSelection(state)\n  const numericColumns = getNumericColumns(state)\n  const view = getActiveTimeMachine(state).view as NewView<\n    HeatmapViewProperties\n  >\n  const {timeFormat} = view.properties\n  return {xColumn, yColumn, numericColumns, timeFormat}\n}\n\nconst mdtp = {\n  onSetXColumn: setXColumn,\n  onSetYColumn: setYColumn,\n  onSetBinSize: setBinSize,\n  onSetColors: setColorHexes,\n  onSetXDomain: setXDomain,\n  onSetYDomain: setYDomain,\n  onSetXAxisLabel: setXAxisLabel,\n  onSetYAxisLabel: setYAxisLabel,\n  onSetPrefix: setAxisPrefix,\n  onSetSuffix: setAxisSuffix,\n  onSetTimeFormat: setTimeFormat,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(HeatmapOptions)\n","// Libraries\nimport React, {SFC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Form, Input, Grid, MultiSelectDropdown} from '@influxdata/clockface'\nimport AxisAffixes from 'src/timeMachine/components/view_options/AxisAffixes'\nimport TimeFormat from 'src/timeMachine/components/view_options/TimeFormat'\n\n// Actions\nimport {\n  setFillColumns,\n  setSymbolColumns,\n  setYAxisLabel,\n  setXAxisLabel,\n  setAxisPrefix,\n  setAxisSuffix,\n  setColorHexes,\n  setYDomain,\n  setXColumn,\n  setYColumn,\n  setTimeFormat,\n} from 'src/timeMachine/actions'\n\n// Utils\nimport {\n  getGroupableColumns,\n  getFillColumnsSelection,\n  getSymbolColumnsSelection,\n  getXColumnSelection,\n  getYColumnSelection,\n  getNumericColumns,\n  getActiveTimeMachine,\n} from 'src/timeMachine/selectors'\n\n// Constants\nimport {GIRAFFE_COLOR_SCHEMES} from 'src/shared/constants'\n\n// Types\nimport {ComponentStatus} from '@influxdata/clockface'\nimport {AppState, NewView, ScatterViewProperties} from 'src/types'\nimport HexColorSchemeDropdown from 'src/shared/components/HexColorSchemeDropdown'\nimport AutoDomainInput from 'src/shared/components/AutoDomainInput'\nimport ColumnSelector from 'src/shared/components/ColumnSelector'\n\ninterface StateProps {\n  fillColumns: string[]\n  symbolColumns: string[]\n  availableGroupColumns: string[]\n  xColumn: string\n  yColumn: string\n  numericColumns: string[]\n  timeFormat: string\n}\n\ninterface DispatchProps {\n  onSetFillColumns: typeof setFillColumns\n  onSetSymbolColumns: typeof setSymbolColumns\n  onSetColors: typeof setColorHexes\n  onSetYAxisLabel: typeof setYAxisLabel\n  onSetXAxisLabel: typeof setXAxisLabel\n  onUpdateAxisSuffix: typeof setAxisSuffix\n  onUpdateAxisPrefix: typeof setAxisPrefix\n  onSetYDomain: typeof setYDomain\n  onSetXColumn: typeof setXColumn\n  onSetYColumn: typeof setYColumn\n  onSetTimeFormat: typeof setTimeFormat\n}\n\ninterface OwnProps {\n  xColumn: string\n  yColumn: string\n  fillColumns: string[]\n  symbolColumns: string[]\n  xDomain: number[]\n  yDomain: number[]\n  xAxisLabel: string\n  yAxisLabel: string\n  xPrefix: string\n  xSuffix: string\n  yPrefix: string\n  ySuffix: string\n  colors: string[]\n  showNoteWhenEmpty: boolean\n}\n\ntype Props = OwnProps & DispatchProps & StateProps\n\nconst ScatterOptions: SFC<Props> = props => {\n  const {\n    fillColumns,\n    symbolColumns,\n    availableGroupColumns,\n    yAxisLabel,\n    xAxisLabel,\n    onSetFillColumns,\n    onSetSymbolColumns,\n    colors,\n    onSetColors,\n    onSetYAxisLabel,\n    onSetXAxisLabel,\n    yPrefix,\n    ySuffix,\n    onUpdateAxisSuffix,\n    onUpdateAxisPrefix,\n    yDomain,\n    onSetYDomain,\n    xColumn,\n    yColumn,\n    numericColumns,\n    onSetXColumn,\n    onSetYColumn,\n    onSetTimeFormat,\n    timeFormat,\n  } = props\n\n  const groupDropdownStatus = availableGroupColumns.length\n    ? ComponentStatus.Default\n    : ComponentStatus.Disabled\n\n  const handleFillColumnSelect = (column: string): void => {\n    let updatedFillColumns\n\n    if (fillColumns.includes(column)) {\n      updatedFillColumns = fillColumns.filter(col => col !== column)\n    } else {\n      updatedFillColumns = [...fillColumns, column]\n    }\n\n    onSetFillColumns(updatedFillColumns)\n  }\n\n  const handleSymbolColumnSelect = (column: string): void => {\n    let updatedSymbolColumns\n\n    if (symbolColumns.includes(column)) {\n      updatedSymbolColumns = symbolColumns.filter(col => col !== column)\n    } else {\n      updatedSymbolColumns = [...symbolColumns, column]\n    }\n\n    onSetSymbolColumns(updatedSymbolColumns)\n  }\n\n  return (\n    <Grid.Column>\n      <h4 className=\"view-options--header\">Customize Scatter Plot</h4>\n      <h5 className=\"view-options--header\">Data</h5>\n\n      <Form.Element label=\"Symbol Column\">\n        <MultiSelectDropdown\n          options={availableGroupColumns}\n          selectedOptions={symbolColumns}\n          onSelect={handleSymbolColumnSelect}\n          buttonStatus={groupDropdownStatus}\n        />\n      </Form.Element>\n      <Form.Element label=\"Fill Column\">\n        <MultiSelectDropdown\n          options={availableGroupColumns}\n          selectedOptions={fillColumns}\n          onSelect={handleFillColumnSelect}\n          buttonStatus={groupDropdownStatus}\n        />\n      </Form.Element>\n      <ColumnSelector\n        selectedColumn={xColumn}\n        onSelectColumn={onSetXColumn}\n        availableColumns={numericColumns}\n        axisName=\"x\"\n      />\n      <ColumnSelector\n        selectedColumn={yColumn}\n        onSelectColumn={onSetYColumn}\n        availableColumns={numericColumns}\n        axisName=\"y\"\n      />\n      <Form.Element label=\"Time Format\">\n        <TimeFormat\n          timeFormat={timeFormat}\n          onTimeFormatChange={onSetTimeFormat}\n        />\n      </Form.Element>\n      <h5 className=\"view-options--header\">Options</h5>\n      <Form.Element label=\"Color Scheme\">\n        <HexColorSchemeDropdown\n          colorSchemes={GIRAFFE_COLOR_SCHEMES}\n          selectedColorScheme={colors}\n          onSelectColorScheme={onSetColors}\n        />\n      </Form.Element>\n      <h5 className=\"view-options--header\">X Axis</h5>\n      <Form.Element label=\"X Axis Label\">\n        <Input\n          value={xAxisLabel}\n          onChange={e => onSetXAxisLabel(e.target.value)}\n        />\n      </Form.Element>\n      <h5 className=\"view-options--header\">Y Axis</h5>\n      <Form.Element label=\"Y Axis Label\">\n        <Input\n          value={yAxisLabel}\n          onChange={e => onSetYAxisLabel(e.target.value)}\n        />\n      </Form.Element>\n      <Grid.Row>\n        <AxisAffixes\n          prefix={yPrefix}\n          suffix={ySuffix}\n          axisName=\"y\"\n          onUpdateAxisPrefix={prefix => onUpdateAxisPrefix(prefix, 'y')}\n          onUpdateAxisSuffix={suffix => onUpdateAxisSuffix(suffix, 'y')}\n        />\n      </Grid.Row>\n      <AutoDomainInput\n        domain={yDomain as [number, number]}\n        onSetDomain={onSetYDomain}\n        label=\"Y Axis Domain\"\n      />\n    </Grid.Column>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const availableGroupColumns = getGroupableColumns(state)\n  const fillColumns = getFillColumnsSelection(state)\n  const symbolColumns = getSymbolColumnsSelection(state)\n  const xColumn = getXColumnSelection(state)\n  const yColumn = getYColumnSelection(state)\n  const numericColumns = getNumericColumns(state)\n  const view = getActiveTimeMachine(state).view as NewView<\n    ScatterViewProperties\n  >\n  const {timeFormat} = view.properties\n\n  return {\n    availableGroupColumns,\n    fillColumns,\n    symbolColumns,\n    xColumn,\n    yColumn,\n    numericColumns,\n    timeFormat,\n  }\n}\n\nconst mdtp = {\n  onSetFillColumns: setFillColumns,\n  onSetSymbolColumns: setSymbolColumns,\n  onSetColors: setColorHexes,\n  onSetYAxisLabel: setYAxisLabel,\n  onSetXAxisLabel: setXAxisLabel,\n  onUpdateAxisPrefix: setAxisPrefix,\n  onUpdateAxisSuffix: setAxisSuffix,\n  onSetYDomain: setYDomain,\n  onSetXColumn: setXColumn,\n  onSetYColumn: setYColumn,\n  onSetTimeFormat: setTimeFormat,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(ScatterOptions)\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\nimport {Form, Grid} from '@influxdata/clockface'\n\n// Components\nimport HexColorSchemeDropdown from 'src/shared/components/HexColorSchemeDropdown'\n\n// Actions\nimport {setColorHexes} from 'src/timeMachine/actions'\n\n// Constants\nimport {GIRAFFE_COLOR_SCHEMES} from 'src/shared/constants'\n\n// Types\nimport {CheckViewProperties} from 'src/types'\n\ninterface OwnProps {\n  properties: CheckViewProperties\n}\n\ninterface DispatchProps {\n  onSetColors: typeof setColorHexes\n}\n\ntype Props = OwnProps & DispatchProps\n\nconst CheckOptions: FC<Props> = ({properties: {colors}, onSetColors}) => {\n  return (\n    <Grid.Column>\n      <Form.Element label=\"Color Scheme\">\n        <HexColorSchemeDropdown\n          colorSchemes={GIRAFFE_COLOR_SCHEMES}\n          selectedColorScheme={colors}\n          onSelectColorScheme={onSetColors}\n        />\n      </Form.Element>\n    </Grid.Column>\n  )\n}\n\nconst mdtp = {\n  onSetColors: setColorHexes,\n}\n\nexport default connect<{}, DispatchProps>(\n  null,\n  mdtp\n)(CheckOptions)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport LineOptions from 'src/timeMachine/components/view_options/LineOptions'\nimport GaugeOptions from 'src/timeMachine/components/view_options/GaugeOptions'\nimport SingleStatOptions from 'src/timeMachine/components/view_options/SingleStatOptions'\nimport TableOptions from 'src/timeMachine/components/view_options/TableOptions'\nimport HistogramOptions from 'src/timeMachine/components/view_options/HistogramOptions'\nimport HeatmapOptions from 'src/timeMachine/components/view_options/HeatmapOptions'\nimport ScatterOptions from 'src/timeMachine/components/view_options/ScatterOptions'\nimport CheckOptions from 'src/timeMachine/components/view_options/CheckOptions'\n\n// Types\nimport {View, NewView} from 'src/types'\n\ninterface Props {\n  view: View | NewView\n}\n\nclass OptionsSwitcher extends PureComponent<Props> {\n  public render() {\n    const {view} = this.props\n\n    switch (view.properties.type) {\n      case 'line-plus-single-stat':\n        return (\n          <>\n            <LineOptions {...view.properties} />\n            <SingleStatOptions />\n          </>\n        )\n      case 'xy':\n        return <LineOptions {...view.properties} />\n      case 'gauge':\n        return <GaugeOptions {...view.properties} />\n      case 'single-stat':\n        return <SingleStatOptions />\n      case 'table':\n        return <TableOptions />\n      case 'histogram':\n        return <HistogramOptions {...view.properties} />\n      case 'heatmap':\n        return <HeatmapOptions {...view.properties} />\n      case 'scatter':\n        return <ScatterOptions {...view.properties} />\n      case 'check':\n        return <CheckOptions properties={view.properties} />\n      default:\n        return <div />\n    }\n  }\n}\n\nexport default OptionsSwitcher\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Actions\nimport {setType} from 'src/timeMachine/actions'\n\n// Components\nimport OptionsSwitcher from 'src/timeMachine/components/view_options/OptionsSwitcher'\nimport {Grid, DapperScrollbars} from '@influxdata/clockface'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {View, NewView, AppState} from 'src/types'\n\ninterface DispatchProps {\n  onUpdateType: typeof setType\n}\n\ninterface StateProps {\n  view: View | NewView\n}\n\ntype Props = DispatchProps & StateProps\n\nclass ViewOptions extends PureComponent<Props> {\n  public render() {\n    return (\n      <div className=\"view-options\">\n        <DapperScrollbars\n          autoHide={false}\n          style={{width: '100%', height: '100%'}}\n        >\n          <div className=\"view-options--container\">\n            <Grid>\n              <Grid.Row>\n                <OptionsSwitcher view={this.props.view} />\n              </Grid.Row>\n            </Grid>\n          </div>\n        </DapperScrollbars>\n      </div>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {view} = getActiveTimeMachine(state)\n\n  return {view}\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateType: setType,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(ViewOptions)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  Button,\n  ComponentColor,\n  ComponentSize,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\n// Actions\nimport {executeCheckQuery} from 'src/timeMachine/actions/queries'\n\n// Utils\nimport {getActiveTimeMachine, getActiveQuery} from 'src/timeMachine/selectors'\n\n// Types\nimport {RemoteDataState} from 'src/types'\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  submitButtonDisabled: boolean\n  queryStatus: RemoteDataState\n}\n\ninterface DispatchProps {\n  onExecuteCheckQuery: typeof executeCheckQuery\n}\n\ntype Props = StateProps & DispatchProps\n\ninterface State {\n  didClick: boolean\n}\n\nclass SubmitQueryButton extends PureComponent<Props, State> {\n  public state: State = {didClick: false}\n\n  public componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.queryStatus === RemoteDataState.Loading &&\n      this.props.queryStatus === RemoteDataState.Done\n    ) {\n      this.setState({didClick: false})\n    }\n  }\n\n  public render() {\n    return (\n      <Button\n        text=\"Execute check query and view statuses\"\n        size={ComponentSize.Small}\n        status={this.buttonStatus}\n        onClick={this.handleClick}\n        color={ComponentColor.Primary}\n        testID=\"time-machine-check-query-run-button\"\n      />\n    )\n  }\n\n  private get buttonStatus(): ComponentStatus {\n    const {queryStatus, submitButtonDisabled} = this.props\n    const {didClick} = this.state\n\n    if (submitButtonDisabled) {\n      return ComponentStatus.Disabled\n    }\n\n    if (queryStatus === RemoteDataState.Loading && didClick) {\n      // Only show loading state for button if it was just clicked\n      return ComponentStatus.Loading\n    }\n\n    return ComponentStatus.Default\n  }\n\n  private handleClick = (): void => {\n    this.props.onExecuteCheckQuery()\n    this.setState({didClick: true})\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const submitButtonDisabled = getActiveQuery(state).text === ''\n  const queryStatus = getActiveTimeMachine(state).queryResults.status\n\n  return {submitButtonDisabled, queryStatus}\n}\n\nconst mdtp = {\n  onExecuteCheckQuery: executeCheckQuery,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(SubmitQueryButton)\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport TimeMachineFluxEditor from 'src/timeMachine/components/TimeMachineFluxEditor'\nimport SubmitCheckQueryButton from 'src/timeMachine/components/SubmitCheckQueryButton'\nimport RawDataToggle from 'src/timeMachine/components/RawDataToggle'\nimport QueryTabs from 'src/timeMachine/components/QueryTabs'\nimport {\n  ComponentSize,\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n} from '@influxdata/clockface'\n\nconst TimeMachineCheckQuery: FC = () => {\n  return (\n    <div className=\"time-machine-queries\">\n      <div className=\"time-machine-queries--controls\">\n        <QueryTabs />\n        <div className=\"time-machine-queries--buttons\">\n          <FlexBox\n            direction={FlexDirection.Row}\n            justifyContent={JustifyContent.FlexEnd}\n            margin={ComponentSize.Small}\n          >\n            <RawDataToggle />\n            <SubmitCheckQueryButton />\n          </FlexBox>\n        </div>\n      </div>\n      <div className=\"time-machine-queries--body\">\n        <TimeMachineFluxEditor />\n      </div>\n    </div>\n  )\n}\n\nexport default TimeMachineCheckQuery\n","// Libraries\nimport React, {useState, FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\nimport classnames from 'classnames'\n\n// Components\nimport {DraggableResizer, Orientation} from '@influxdata/clockface'\nimport TimeMachineQueries from 'src/timeMachine/components/Queries'\nimport TimeMachineAlerting from 'src/timeMachine/components/TimeMachineAlerting'\nimport TimeMachineVis from 'src/timeMachine/components/Vis'\nimport ViewOptions from 'src/timeMachine/components/view_options/ViewOptions'\nimport TimeMachineCheckQuery from 'src/timeMachine/components/TimeMachineCheckQuery'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState, TimeMachineTab} from 'src/types'\n\nconst INITIAL_RESIZER_HANDLE = 0.5\n\ninterface StateProps {\n  activeTab: TimeMachineTab\n  isViewingVisOptions: boolean\n}\n\nconst TimeMachine: FunctionComponent<StateProps> = ({\n  activeTab,\n  isViewingVisOptions,\n}) => {\n  const [dragPosition, setDragPosition] = useState([INITIAL_RESIZER_HANDLE])\n\n  const containerClassName = classnames('time-machine', {\n    'time-machine--split': isViewingVisOptions,\n  })\n\n  let bottomContents: JSX.Element = null\n\n  if (activeTab === 'alerting') {\n    bottomContents = <TimeMachineAlerting />\n  } else if (activeTab === 'queries') {\n    bottomContents = <TimeMachineQueries />\n  } else if (activeTab === 'customCheckQuery') {\n    bottomContents = <TimeMachineCheckQuery />\n  }\n\n  return (\n    <>\n      <div className={containerClassName}>\n        <DraggableResizer\n          handleOrientation={Orientation.Horizontal}\n          handlePositions={dragPosition}\n          onChangePositions={setDragPosition}\n        >\n          <DraggableResizer.Panel>\n            <div className=\"time-machine--top\">\n              <TimeMachineVis />\n            </div>\n          </DraggableResizer.Panel>\n          <DraggableResizer.Panel>\n            <div\n              className=\"time-machine--bottom\"\n              data-testid=\"time-machine--bottom\"\n            >\n              <div className=\"time-machine--bottom-contents\">\n                {bottomContents}\n              </div>\n            </div>\n          </DraggableResizer.Panel>\n        </DraggableResizer>\n      </div>\n      {isViewingVisOptions && <ViewOptions />}\n    </>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const {activeTab, isViewingVisOptions} = getActiveTimeMachine(state)\n\n  return {activeTab, isViewingVisOptions}\n}\n\nexport default connect<StateProps>(mstp)(TimeMachine)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport TimeMachine from 'src/timeMachine/components/TimeMachine'\nimport LimitChecker from 'src/cloud/components/LimitChecker'\nimport RateLimitAlert from 'src/cloud/components/RateLimitAlert'\n\n// Actions\nimport {setActiveTimeMachine} from 'src/timeMachine/actions'\n\n// Utils\nimport {HoverTimeProvider} from 'src/dashboards/utils/hoverTime'\nimport {queryBuilderFetcher} from 'src/timeMachine/apis/QueryBuilderFetcher'\n\ninterface DispatchProps {\n  onSetActiveTimeMachine: typeof setActiveTimeMachine\n}\n\ntype Props = DispatchProps\nclass DataExplorer extends PureComponent<Props, {}> {\n  constructor(props: Props) {\n    super(props)\n\n    props.onSetActiveTimeMachine('de')\n    queryBuilderFetcher.clearCache()\n  }\n\n  public render() {\n    return (\n      <LimitChecker>\n        <RateLimitAlert />\n        <div className=\"data-explorer\">\n          <HoverTimeProvider>\n            <TimeMachine />\n          </HoverTimeProvider>\n        </div>\n      </LimitChecker>\n    )\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onSetActiveTimeMachine: setActiveTimeMachine,\n}\n\nexport default connect<{}, DispatchProps, {}>(\n  null,\n  mdtp\n)(DataExplorer)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {IconFont, Button, ComponentColor} from '@influxdata/clockface'\n\nclass SaveAsButton extends PureComponent<WithRouterProps, {}> {\n  public render() {\n    return (\n      <>\n        <Button\n          icon={IconFont.Export}\n          text=\"Save As\"\n          onClick={this.handleShowOverlay}\n          color={ComponentColor.Primary}\n          titleText=\"Save your query as a Dashboard Cell or a Task\"\n          testID=\"save-query-as\"\n        />\n      </>\n    )\n  }\n\n  private handleShowOverlay = () => {\n    const {\n      location: {pathname},\n    } = this.props\n\n    this.props.router.push(`${pathname}/save`)\n  }\n}\n\nexport default withRouter<{}, {}>(SaveAsButton)\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {SquareButton, IconFont, ComponentColor} from '@influxdata/clockface'\n\n// Actions\nimport {toggleVisOptions} from 'src/timeMachine/actions'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  isViewingVisOptions: boolean\n}\n\ninterface DispatchProps {\n  onToggleVisOptions: typeof toggleVisOptions\n}\n\ntype Props = StateProps & DispatchProps\n\nexport const VisOptionsButton: FC<Props> = ({\n  isViewingVisOptions,\n  onToggleVisOptions,\n}) => {\n  const color = isViewingVisOptions\n    ? ComponentColor.Primary\n    : ComponentColor.Default\n\n  return (\n    <SquareButton\n      color={color}\n      icon={IconFont.CogThick}\n      onClick={onToggleVisOptions}\n      testID=\"cog-cell--button\"\n    />\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {isViewingVisOptions} = getActiveTimeMachine(state)\n\n  return {isViewingVisOptions}\n}\n\nconst mdtp: DispatchProps = {\n  onToggleVisOptions: toggleVisOptions,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(VisOptionsButton)\n","import {ViewType} from 'src/types'\n\ninterface VisType {\n  type: ViewType\n  name: string\n}\n\nexport const VIS_TYPES: VisType[] = [\n  {\n    type: 'xy',\n    name: 'Graph',\n  },\n  {\n    type: 'line-plus-single-stat',\n    name: 'Graph + Single Stat',\n  },\n  {\n    type: 'heatmap',\n    name: 'Heatmap',\n  },\n  {\n    type: 'histogram',\n    name: 'Histogram',\n  },\n  {\n    type: 'single-stat',\n    name: 'Single Stat',\n  },\n  {\n    type: 'gauge',\n    name: 'Gauge',\n  },\n  {\n    type: 'table',\n    name: 'Table',\n  },\n  {\n    type: 'scatter',\n    name: 'Scatter',\n  },\n]\n","import React from 'react'\n\nimport {ViewType} from 'src/types'\nimport {VIS_TYPES} from './index'\n\nconst GRAPHIC_SVGS = {\n  heatmap: (\n    <div className=\"vis-graphic\" data-testid=\"vis-graphic--heatmap\">\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        version=\"1.1\"\n        id=\"Histogram\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 150 150\"\n        preserveAspectRatio=\"none meet\"\n      >\n        <g id=\"r\">\n          <polygon\n            className=\"vis-graphic--fill vis-graphic--fill-b\"\n            points=\"127.5,127.5 127.5,112.5 112.5,112.5 112.5,127.5 97.5,127.5 97.5,142.5 112.5,142.5 127.5,142.5 \n\t\t142.5,142.5 142.5,127.5 \t\"\n          />\n          <polygon\n            className=\"vis-graphic--fill vis-graphic--fill-b\"\n            points=\"67.5,127.5 52.5,127.5 52.5,112.5 37.5,112.5 37.5,97.5 22.5,97.5 22.5,112.5 22.5,127.5 7.5,127.5 \n\t\t7.5,142.5 22.5,142.5 37.5,142.5 52.5,142.5 67.5,142.5 82.5,142.5 82.5,127.5 82.5,112.5 67.5,112.5 \t\"\n          />\n        </g>\n        <g id=\"rl\">\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-b\"\n              d=\"M126,114v13.5v1.5h1.5H141v12h-13.5h-15H99v-12h13.5h1.5v-1.5V114H126 M127.5,112.5h-15v15h-15v15h15h15h15\n\t\t\tv-15h-15V112.5L127.5,112.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-b\"\n              d=\"M36,99v13.5v1.5h1.5H51v13.5v1.5h1.5h15H69v-1.5V114h12v13.5V141H67.5h-15h-15h-15H9v-12h13.5H24v-1.5v-15V99\n\t\t\tH36 M37.5,97.5h-15v15v15h-15v15h15h15h15h15h15v-15v-15h-15v15h-15v-15h-15V97.5L37.5,97.5z\"\n            />\n          </g>\n        </g>\n        <g id=\"g\">\n          <polygon\n            className=\"vis-graphic--fill vis-graphic--fill-c\"\n            points=\"97.5,97.5 97.5,82.5 82.5,82.5 82.5,97.5 67.5,97.5 52.5,97.5 37.5,97.5 37.5,112.5 52.5,112.5 \n\t\t52.5,127.5 67.5,127.5 67.5,112.5 82.5,112.5 82.5,127.5 82.5,142.5 97.5,142.5 97.5,127.5 112.5,127.5 112.5,112.5 97.5,112.5 \t\n\t\t\"\n          />\n          <polygon\n            className=\"vis-graphic--fill vis-graphic--fill-c\"\n            points=\"127.5,82.5 127.5,97.5 112.5,97.5 112.5,112.5 127.5,112.5 127.5,127.5 142.5,127.5 142.5,112.5 \n\t\t142.5,97.5 142.5,82.5 \t\"\n          />\n          <polygon\n            className=\"vis-graphic--fill vis-graphic--fill-c\"\n            points=\"37.5,67.5 22.5,67.5 22.5,82.5 7.5,82.5 7.5,97.5 7.5,112.5 7.5,127.5 22.5,127.5 22.5,112.5 \n\t\t22.5,97.5 37.5,97.5 37.5,82.5 \t\"\n          />\n        </g>\n        <g id=\"gl\">\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-c\"\n              d=\"M96,84v13.5v15v1.5h1.5H111v12H97.5H96v1.5V141H84v-13.5v-15V111h-1.5h-15H66v1.5V126H54v-13.5V111h-1.5H39\n\t\t\tV99h13.5h15h15H84v-1.5V84H96 M97.5,82.5h-15v15h-15h-15h-15v15h15v15h15v-15h15v15v15h15v-15h15v-15h-15v-15V82.5L97.5,82.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-c\"\n              d=\"M141,84v13.5v15V126h-12v-13.5V111h-1.5H114V99h13.5h1.5v-1.5V84H141 M142.5,82.5h-15v15h-15v15h15v15h15v-15\n\t\t\tv-15V82.5L142.5,82.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-c\"\n              d=\"M36,69v13.5V96H22.5H21v1.5v15V126H9v-13.5v-15V84h13.5H24v-1.5V69H36 M37.5,67.5h-15v15h-15v15v15v15h15v-15\n\t\t\tv-15h15v-15V67.5L37.5,67.5z\"\n            />\n          </g>\n        </g>\n        <g id=\"b\">\n          <rect\n            x=\"67.5\"\n            y=\"82.5\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"15\"\n            height=\"15\"\n          />\n          <polygon\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            points=\"52.5,67.5 37.5,67.5 37.5,82.5 37.5,97.5 52.5,97.5 52.5,82.5 67.5,82.5 67.5,67.5 \t\"\n          />\n          <rect\n            x=\"127.5\"\n            y=\"67.5\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"15\"\n            height=\"15\"\n          />\n          <polygon\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            points=\"22.5,52.5 7.5,52.5 7.5,67.5 22.5,67.5 37.5,67.5 37.5,52.5 \t\"\n          />\n          <rect\n            x=\"67.5\"\n            y=\"52.5\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"15\"\n            height=\"15\"\n          />\n          <polygon\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            points=\"112.5,67.5 97.5,67.5 82.5,67.5 82.5,82.5 97.5,82.5 97.5,97.5 97.5,112.5 112.5,112.5 112.5,97.5 \n\t\t127.5,97.5 127.5,82.5 112.5,82.5 \t\"\n          />\n          <rect\n            x=\"82.5\"\n            y=\"37.5\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"15\"\n            height=\"15\"\n          />\n          <rect\n            x=\"112.5\"\n            y=\"52.5\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"15\"\n            height=\"15\"\n          />\n          <rect\n            x=\"37.5\"\n            y=\"37.5\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"15\"\n            height=\"15\"\n          />\n          <rect\n            x=\"127.5\"\n            y=\"37.5\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"15\"\n            height=\"15\"\n          />\n          <rect\n            x=\"22.5\"\n            y=\"22.5\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"15\"\n            height=\"15\"\n          />\n          <rect\n            x=\"67.5\"\n            y=\"7.5\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"15\"\n            height=\"15\"\n          />\n        </g>\n        <g id=\"bl\">\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M81,84v12H69V84H81 M82.5,82.5h-15v15h15V82.5L82.5,82.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M66,69v12H52.5H51v1.5V96H39V82.5V69h13.5H66 M67.5,67.5h-15h-15v15v15h15v-15h15V67.5L67.5,67.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M141,69v12h-12V69H141 M142.5,67.5h-15v15h15V67.5L142.5,67.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M36,54v12H22.5H9V54h13.5H36 M37.5,52.5h-15h-15v15h15h15V52.5L37.5,52.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M81,54v12H69V54H81 M82.5,52.5h-15v15h15V52.5L82.5,52.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M111,69v13.5V84h1.5H126v12h-13.5H111v1.5V111H99V97.5v-15V81h-1.5H84V69h13.5H111 M112.5,67.5h-15h-15v15h15\n\t\t\tv15v15h15v-15h15v-15h-15V67.5L112.5,67.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M96,39v12H84V39H96 M97.5,37.5h-15v15h15V37.5L97.5,37.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M126,54v12h-12V54H126 M127.5,52.5h-15v15h15V52.5L127.5,52.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M51,39v12H39V39H51 M52.5,37.5h-15v15h15V37.5L52.5,37.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M141,39v12h-12V39H141 M142.5,37.5h-15v15h15V37.5L142.5,37.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M36,24v12H24V24H36 M37.5,22.5h-15v15h15V22.5L37.5,22.5z\"\n            />\n          </g>\n          <g>\n            <path\n              className=\"vis-graphic--fill vis-graphic--fill-a\"\n              d=\"M81,9v12H69V9H81 M82.5,7.5h-15v15h15V7.5L82.5,7.5z\"\n            />\n          </g>\n        </g>\n      </svg>\n    </div>\n  ),\n  histogram: (\n    <div className=\"vis-graphic\" data-testid=\"vis-graphic--histogram\">\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        version=\"1.1\"\n        id=\"Histogram\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 150 150\"\n        preserveAspectRatio=\"none meet\"\n      >\n        <g>\n          <rect\n            x=\"122\"\n            y=\"51\"\n            className=\"vis-graphic--fill vis-graphic--fill-c\"\n            width=\"26\"\n            height=\"24\"\n          />\n          <rect\n            x=\"122\"\n            y=\"113\"\n            className=\"vis-graphic--fill vis-graphic--fill-b\"\n            width=\"26\"\n            height=\"13\"\n          />\n          <rect\n            x=\"122\"\n            y=\"79\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"26\"\n            height=\"30\"\n          />\n          <rect\n            x=\"92\"\n            y=\"74\"\n            className=\"vis-graphic--fill vis-graphic--fill-b\"\n            width=\"26\"\n            height=\"52\"\n          />\n          <rect\n            x=\"92\"\n            y=\"49\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"26\"\n            height=\"21\"\n          />\n          <rect\n            x=\"62\"\n            y=\"94\"\n            className=\"vis-graphic--fill vis-graphic--fill-b\"\n            width=\"26\"\n            height=\"32\"\n          />\n          <rect\n            x=\"62\"\n            y=\"59\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"26\"\n            height=\"31\"\n          />\n          <rect\n            x=\"62\"\n            y=\"24\"\n            className=\"vis-graphic--fill vis-graphic--fill-c\"\n            width=\"26\"\n            height=\"31\"\n          />\n          <rect\n            x=\"32\"\n            y=\"116\"\n            className=\"vis-graphic--fill vis-graphic--fill-b\"\n            width=\"26\"\n            height=\"10\"\n          />\n          <rect\n            x=\"32\"\n            y=\"80\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"26\"\n            height=\"32\"\n          />\n          <rect\n            x=\"2\"\n            y=\"110\"\n            className=\"vis-graphic--fill vis-graphic--fill-b\"\n            width=\"26\"\n            height=\"16\"\n          />\n          <rect\n            x=\"2\"\n            y=\"90\"\n            className=\"vis-graphic--fill vis-graphic--fill-a\"\n            width=\"26\"\n            height=\"16\"\n          />\n          <rect\n            x=\"32\"\n            y=\"64\"\n            className=\"vis-graphic--fill vis-graphic--fill-c\"\n            width=\"26\"\n            height=\"12\"\n          />\n          <rect\n            x=\"92\"\n            y=\"35\"\n            className=\"vis-graphic--fill vis-graphic--fill-c\"\n            width=\"26\"\n            height=\"10\"\n          />\n          <rect\n            x=\"2\"\n            y=\"81\"\n            className=\"vis-graphic--fill vis-graphic--fill-c\"\n            width=\"26\"\n            height=\"5\"\n          />\n        </g>\n        <g>\n          <rect\n            x=\"122\"\n            y=\"51\"\n            className=\"vis-graphic--line vis-graphic--line-c\"\n            width=\"26\"\n            height=\"24\"\n          />\n          <rect\n            x=\"122\"\n            y=\"113\"\n            className=\"vis-graphic--line vis-graphic--line-b\"\n            width=\"26\"\n            height=\"13\"\n          />\n          <rect\n            x=\"122\"\n            y=\"79\"\n            className=\"vis-graphic--line vis-graphic--line-a\"\n            width=\"26\"\n            height=\"30\"\n          />\n          <rect\n            x=\"92\"\n            y=\"74\"\n            className=\"vis-graphic--line vis-graphic--line-b\"\n            width=\"26\"\n            height=\"52\"\n          />\n          <rect\n            x=\"92\"\n            y=\"49\"\n            className=\"vis-graphic--line vis-graphic--line-a\"\n            width=\"26\"\n            height=\"21\"\n          />\n          <rect\n            x=\"62\"\n            y=\"94\"\n            className=\"vis-graphic--line vis-graphic--line-b\"\n            width=\"26\"\n            height=\"32\"\n          />\n          <rect\n            x=\"62\"\n            y=\"59\"\n            className=\"vis-graphic--line vis-graphic--line-a\"\n            width=\"26\"\n            height=\"31\"\n          />\n          <rect\n            x=\"62\"\n            y=\"24\"\n            className=\"vis-graphic--line vis-graphic--line-c\"\n            width=\"26\"\n            height=\"31\"\n          />\n          <rect\n            x=\"32\"\n            y=\"116\"\n            className=\"vis-graphic--line vis-graphic--line-b\"\n            width=\"26\"\n            height=\"10\"\n          />\n          <rect\n            x=\"32\"\n            y=\"80\"\n            className=\"vis-graphic--line vis-graphic--line-a\"\n            width=\"26\"\n            height=\"32\"\n          />\n          <rect\n            x=\"2\"\n            y=\"110\"\n            className=\"vis-graphic--line vis-graphic--line-b\"\n            width=\"26\"\n            height=\"16\"\n          />\n          <rect\n            x=\"2\"\n            y=\"90\"\n            className=\"vis-graphic--line vis-graphic--line-a\"\n            width=\"26\"\n            height=\"16\"\n          />\n          <rect\n            x=\"32\"\n            y=\"64\"\n            className=\"vis-graphic--line vis-graphic--line-c\"\n            width=\"26\"\n            height=\"12\"\n          />\n          <rect\n            x=\"92\"\n            y=\"35\"\n            className=\"vis-graphic--line vis-graphic--line-c\"\n            width=\"26\"\n            height=\"10\"\n          />\n          <rect\n            x=\"2\"\n            y=\"81\"\n            className=\"vis-graphic--line vis-graphic--line-c\"\n            width=\"26\"\n            height=\"5\"\n          />\n        </g>\n      </svg>\n    </div>\n  ),\n  xy: (\n    <div className=\"vis-graphic\" data-testid=\"vis-graphic--xy\">\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        version=\"1.1\"\n        id=\"Line\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 150 150\"\n        preserveAspectRatio=\"none meet\"\n      >\n        <polygon\n          className=\"vis-graphic--fill vis-graphic--fill-a\"\n          points=\"148,40 111.5,47.2 75,25 38.5,90.8 2,111.8 2,125 148,125 \t\"\n        />\n        <polyline\n          className=\"vis-graphic--line vis-graphic--line-a\"\n          points=\"2,111.8 38.5,90.8 75,25 111.5,47.2 148,40 \t\"\n        />\n        <polygon\n          className=\"vis-graphic--fill vis-graphic--fill-b\"\n          points=\"148,88.2 111.5,95.5 75,61.7 38.5,49.3 2,90.8 2,125 148,125 \t\"\n        />\n        <polyline\n          className=\"vis-graphic--line vis-graphic--line-b\"\n          points=\"2,90.8 38.5,49.3 75,61.7 111.5,95.5 148,88.2 \t\"\n        />\n        <polygon\n          className=\"vis-graphic--fill vis-graphic--fill-c\"\n          points=\"148,96 111.5,106.3 75,85.7 38.5,116.5 2,115 2,125 148,125 \t\"\n        />\n        <polyline\n          className=\"vis-graphic--line vis-graphic--line-c\"\n          points=\"2,115 38.5,116.5 75,85.7 111.5,106.3 148,96 \t\"\n        />\n      </svg>\n    </div>\n  ),\n  'single-stat': (\n    <div className=\"vis-graphic\" data-testid=\"vis-graphic--single-stat\">\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        version=\"1.1\"\n        id=\"SingleStat\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 150 150\"\n        preserveAspectRatio=\"none meet\"\n      >\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M35.6,80.4h4.9v1.1h-4.9v7.8h-1.1v-7.8H20.7v-0.6l13.6-20.1h1.3V80.4z M22.4,80.4h12.1V62.1l-1.6,2.7 L22.4,80.4z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M58.6,75.1c-0.7,1.5-1.8,2.7-3.2,3.6c-1.5,0.9-3.1,1.4-4.9,1.4c-1.6,0-3-0.4-4.2-1.3s-2.2-2-2.9-3.5 c-0.7-1.5-1.1-3.1-1.1-4.8c0-1.9,0.4-3.6,1.1-5.1c0.7-1.6,1.7-2.8,3-3.7c1.3-0.9,2.7-1.3,4.3-1.3c2.9,0,5.2,1,6.7,2.9 c1.5,1.9,2.3,4.7,2.3,8.3v3.3c0,4.8-1.1,8.5-3.2,11c-2.1,2.5-5.3,3.8-9.4,3.9H46l0-1.1h0.8c3.8,0,6.7-1.2,8.7-3.5 C57.6,82.8,58.6,79.5,58.6,75.1z M50.4,79c1.9,0,3.6-0.6,5.1-1.7s2.5-2.6,3-4.5v-1.2c0-3.3-0.7-5.8-2-7.5c-1.4-1.7-3.3-2.6-5.8-2.6 c-1.4,0-2.7,0.4-3.8,1.2s-2,1.9-2.6,3.3c-0.6,1.4-0.9,2.9-0.9,4.5c0,1.5,0.3,3,0.9,4.3c0.6,1.3,1.5,2.4,2.5,3.1 C47.8,78.7,49.1,79,50.4,79z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M81.3,89.2h-17v-1.1L74,77c1.6-1.9,2.8-3.5,3.5-5c0.8-1.4,1.2-2.8,1.2-4c0-2.1-0.6-3.7-1.8-4.9 c-1.2-1.2-2.9-1.7-5.1-1.7c-1.3,0-2.5,0.3-3.6,1c-1.1,0.6-2,1.5-2.6,2.6c-0.6,1.1-0.9,2.4-0.9,3.8h-1.1c0-1.5,0.4-2.9,1.1-4.2 c0.7-1.3,1.7-2.3,2.9-3.1s2.6-1.1,4.2-1.1c2.5,0,4.5,0.7,5.9,2c1.4,1.3,2.1,3.2,2.1,5.6c0,2.2-1.2,4.9-3.7,7.9l-1.8,2.2l-8.6,10 h15.6V89.2z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M85.3,88.3c0-0.3,0.1-0.6,0.3-0.8c0.2-0.2,0.5-0.3,0.8-0.3c0.3,0,0.6,0.1,0.8,0.3s0.3,0.5,0.3,0.8 c0,0.3-0.1,0.6-0.3,0.8s-0.5,0.3-0.8,0.3c-0.3,0-0.6-0.1-0.8-0.3C85.4,88.8,85.3,88.6,85.3,88.3z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M92.7,74.3L94,60.8h13.9v1.1H95l-1.2,11.4c0.7-0.6,1.6-1,2.7-1.4s2.2-0.5,3.3-0.5c2.6,0,4.6,0.8,6.1,2.4 c1.5,1.6,2.3,3.8,2.3,6.4c0,3.1-0.7,5.4-2.1,7c-1.4,1.6-3.4,2.4-5.9,2.4c-2.4,0-4.4-0.7-5.9-2.1c-1.5-1.4-2.3-3.3-2.5-5.8h1.1 c0.2,2.2,0.9,3.9,2.2,5.1c1.2,1.2,3,1.7,5.2,1.7c2.3,0,4.1-0.7,5.2-2.1c1.1-1.4,1.7-3.5,1.7-6.2c0-2.4-0.7-4.3-2-5.7 c-1.3-1.4-3.1-2.1-5.3-2.1c-1.4,0-2.6,0.2-3.6,0.5c-1,0.4-1.9,0.9-2.7,1.7L92.7,74.3z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M113.8,74.3l1.3-13.6H129v1.1h-12.9l-1.2,11.4c0.7-0.6,1.6-1,2.7-1.4s2.2-0.5,3.3-0.5c2.6,0,4.6,0.8,6.1,2.4 c1.5,1.6,2.3,3.8,2.3,6.4c0,3.1-0.7,5.4-2.1,7c-1.4,1.6-3.4,2.4-5.9,2.4c-2.4,0-4.4-0.7-5.9-2.1c-1.5-1.4-2.3-3.3-2.5-5.8h1.1 c0.2,2.2,0.9,3.9,2.2,5.1c1.2,1.2,3,1.7,5.2,1.7c2.3,0,4.1-0.7,5.2-2.1c1.1-1.4,1.7-3.5,1.7-6.2c0-2.4-0.7-4.3-2-5.7 c-1.3-1.4-3.1-2.1-5.3-2.1c-1.4,0-2.6,0.2-3.6,0.5c-1,0.4-1.9,0.9-2.7,1.7L113.8,74.3z\"\n        />\n      </svg>\n    </div>\n  ),\n  'line-plus-single-stat': (\n    <div\n      className=\"vis-graphic\"\n      data-testid=\"vis-graphic--line-plus-single-stat\"\n    >\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        version=\"1.1\"\n        id=\"LineAndSingleStat\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 150 150\"\n        preserveAspectRatio=\"none meet\"\n      >\n        <g>\n          <polygon\n            className=\"vis-graphic--fill vis-graphic--fill-c\"\n            points=\"148,88.2 111.5,95.5 75,25 38.5,54.7 2,66.7 2,125 148,125\"\n          />\n          <polyline\n            className=\"vis-graphic--line vis-graphic--line-c\"\n            points=\"2,66.7 38.5,54.7 75,25 111.5,95.5 148,88.2\"\n          />\n        </g>\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M35.6,80.4h4.9v1.1h-4.9v7.8h-1.1v-7.8H20.7v-0.6l13.6-20.1h1.3V80.4z M22.4,80.4h12.1V62.1l-1.6,2.7 L22.4,80.4z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M58.6,75.1c-0.7,1.5-1.8,2.7-3.2,3.6c-1.5,0.9-3.1,1.4-4.9,1.4c-1.6,0-3-0.4-4.2-1.3s-2.2-2-2.9-3.5 c-0.7-1.5-1.1-3.1-1.1-4.8c0-1.9,0.4-3.6,1.1-5.1c0.7-1.6,1.7-2.8,3-3.7c1.3-0.9,2.7-1.3,4.3-1.3c2.9,0,5.2,1,6.7,2.9 c1.5,1.9,2.3,4.7,2.3,8.3v3.3c0,4.8-1.1,8.5-3.2,11c-2.1,2.5-5.3,3.8-9.4,3.9H46l0-1.1h0.8c3.8,0,6.7-1.2,8.7-3.5 C57.6,82.8,58.6,79.5,58.6,75.1z M50.4,79c1.9,0,3.6-0.6,5.1-1.7s2.5-2.6,3-4.5v-1.2c0-3.3-0.7-5.8-2-7.5c-1.4-1.7-3.3-2.6-5.8-2.6 c-1.4,0-2.7,0.4-3.8,1.2s-2,1.9-2.6,3.3c-0.6,1.4-0.9,2.9-0.9,4.5c0,1.5,0.3,3,0.9,4.3c0.6,1.3,1.5,2.4,2.5,3.1 C47.8,78.7,49.1,79,50.4,79z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M81.3,89.2h-17v-1.1L74,77c1.6-1.9,2.8-3.5,3.5-5c0.8-1.4,1.2-2.8,1.2-4c0-2.1-0.6-3.7-1.8-4.9 c-1.2-1.2-2.9-1.7-5.1-1.7c-1.3,0-2.5,0.3-3.6,1c-1.1,0.6-2,1.5-2.6,2.6c-0.6,1.1-0.9,2.4-0.9,3.8h-1.1c0-1.5,0.4-2.9,1.1-4.2 c0.7-1.3,1.7-2.3,2.9-3.1s2.6-1.1,4.2-1.1c2.5,0,4.5,0.7,5.9,2c1.4,1.3,2.1,3.2,2.1,5.6c0,2.2-1.2,4.9-3.7,7.9l-1.8,2.2l-8.6,10 h15.6V89.2z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M85.3,88.3c0-0.3,0.1-0.6,0.3-0.8c0.2-0.2,0.5-0.3,0.8-0.3c0.3,0,0.6,0.1,0.8,0.3s0.3,0.5,0.3,0.8 c0,0.3-0.1,0.6-0.3,0.8s-0.5,0.3-0.8,0.3c-0.3,0-0.6-0.1-0.8-0.3C85.4,88.8,85.3,88.6,85.3,88.3z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M92.7,74.3L94,60.8h13.9v1.1H95l-1.2,11.4c0.7-0.6,1.6-1,2.7-1.4s2.2-0.5,3.3-0.5c2.6,0,4.6,0.8,6.1,2.4 c1.5,1.6,2.3,3.8,2.3,6.4c0,3.1-0.7,5.4-2.1,7c-1.4,1.6-3.4,2.4-5.9,2.4c-2.4,0-4.4-0.7-5.9-2.1c-1.5-1.4-2.3-3.3-2.5-5.8h1.1 c0.2,2.2,0.9,3.9,2.2,5.1c1.2,1.2,3,1.7,5.2,1.7c2.3,0,4.1-0.7,5.2-2.1c1.1-1.4,1.7-3.5,1.7-6.2c0-2.4-0.7-4.3-2-5.7 c-1.3-1.4-3.1-2.1-5.3-2.1c-1.4,0-2.6,0.2-3.6,0.5c-1,0.4-1.9,0.9-2.7,1.7L92.7,74.3z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M113.8,74.3l1.3-13.6H129v1.1h-12.9l-1.2,11.4c0.7-0.6,1.6-1,2.7-1.4s2.2-0.5,3.3-0.5c2.6,0,4.6,0.8,6.1,2.4 c1.5,1.6,2.3,3.8,2.3,6.4c0,3.1-0.7,5.4-2.1,7c-1.4,1.6-3.4,2.4-5.9,2.4c-2.4,0-4.4-0.7-5.9-2.1c-1.5-1.4-2.3-3.3-2.5-5.8h1.1 c0.2,2.2,0.9,3.9,2.2,5.1c1.2,1.2,3,1.7,5.2,1.7c2.3,0,4.1-0.7,5.2-2.1c1.1-1.4,1.7-3.5,1.7-6.2c0-2.4-0.7-4.3-2-5.7 c-1.3-1.4-3.1-2.1-5.3-2.1c-1.4,0-2.6,0.2-3.6,0.5c-1,0.4-1.9,0.9-2.7,1.7L113.8,74.3z\"\n        />\n      </svg>\n    </div>\n  ),\n  gauge: (\n    <div className=\"vis-graphic\" data-testid=\"vis-graphic--gauge\">\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        version=\"1.1\"\n        id=\"Bar\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 150 150\"\n        preserveAspectRatio=\"none meet\"\n      >\n        <g>\n          <path\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            d=\"M110.9,110.9c19.9-19.9,19.9-52,0-71.9s-52-19.9-71.9,0s-19.9,52,0,71.9\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"39.1\"\n            y1=\"110.9\"\n            x2=\"35\"\n            y2=\"115\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"110.9\"\n            y1=\"110.9\"\n            x2=\"115\"\n            y2=\"115\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"122\"\n            y1=\"94.5\"\n            x2=\"127.2\"\n            y2=\"96.6\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"125.8\"\n            y1=\"75\"\n            x2=\"131.5\"\n            y2=\"75\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"122\"\n            y1=\"55.5\"\n            x2=\"127.2\"\n            y2=\"53.4\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"110.9\"\n            y1=\"39.1\"\n            x2=\"115\"\n            y2=\"35\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"94.5\"\n            y1=\"28\"\n            x2=\"96.6\"\n            y2=\"22.8\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"75\"\n            y1=\"24.2\"\n            x2=\"75\"\n            y2=\"18.5\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"55.5\"\n            y1=\"28\"\n            x2=\"53.4\"\n            y2=\"22.8\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"39.1\"\n            y1=\"39.1\"\n            x2=\"35\"\n            y2=\"35\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"28\"\n            y1=\"55.5\"\n            x2=\"22.8\"\n            y2=\"53.4\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"24.2\"\n            y1=\"75\"\n            x2=\"18.5\"\n            y2=\"75\"\n          />\n          <line\n            className=\"vis-graphic--line vis-graphic--line-d\"\n            x1=\"28\"\n            y1=\"94.5\"\n            x2=\"22.8\"\n            y2=\"96.6\"\n          />\n        </g>\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-d\"\n          d=\"M78.6,73.4L75,56.3l-3.6,17.1c-0.2,0.5-0.3,1-0.3,1.6c0,2.2,1.8,3.9,3.9,3.9s3.9-1.8,3.9-3.9C78.9,74.4,78.8,73.9,78.6,73.4z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-a\"\n          d=\"M58.9,58.9c8.9-8.9,23.4-8.9,32.3,0l17.1-17.1c-18.4-18.4-48.2-18.4-66.5,0C32.5,50.9,27.9,63,27.9,75h24.2C52.2,69.2,54.4,63.3,58.9,58.9z\"\n        />\n        <path\n          className=\"vis-graphic--line vis-graphic--line-a\"\n          d=\"M58.9,58.9c8.9-8.9,23.4-8.9,32.3,0l17.1-17.1c-18.4-18.4-48.2-18.4-66.5,0C32.5,50.9,27.9,63,27.9,75h24.2C52.2,69.2,54.4,63.3,58.9,58.9z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-b\"\n          d=\"M58.9,91.1c-4.5-4.5-6.7-10.3-6.7-16.1H27.9c0,12,4.6,24.1,13.8,33.3L58.9,91.1z\"\n        />\n        <path\n          className=\"vis-graphic--line vis-graphic--line-b\"\n          d=\"M58.9,91.1c-4.5-4.5-6.7-10.3-6.7-16.1H27.9c0,12,4.6,24.1,13.8,33.3L58.9,91.1z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-c\"\n          d=\"M91.1,91.1l17.1,17.1c18.4-18.4,18.4-48.2,0-66.6L91.1,58.9C100.1,67.8,100.1,82.2,91.1,91.1z\"\n        />\n        <path\n          className=\"vis-graphic--line vis-graphic--line-c\"\n          d=\"M91.1,91.1l17.1,17.1c18.4-18.4,18.4-48.2,0-66.6L91.1,58.9C100.1,67.8,100.1,82.2,91.1,91.1z\"\n        />\n      </svg>\n    </div>\n  ),\n  table: (\n    <div className=\"vis-graphic\" data-testid=\"vis-graphic--table\">\n      <svg\n        id=\"Table\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"100%\"\n        height=\"100%\"\n        viewBox=\"0 0 150 150\"\n      >\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-c\"\n          d=\"M55.5,115H19.7c-1.7,0-3.1-1.4-3.1-3.1V61.7h38.9V115z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-b\"\n          d=\"M133.4,61.7H55.5V35h74.8c1.7,0,3.1,1.4,3.1,3.1V61.7z\"\n        />\n        <path\n          className=\"vis-graphic--fill vis-graphic--fill-a\"\n          d=\"M55.5,61.7H16.6V38.1c0-1.7,1.4-3.1,3.1-3.1h35.9V61.7z\"\n        />\n        <path\n          className=\"vis-graphic--line vis-graphic--line-c\"\n          d=\"M16.6,88.3v23.6c0,1.7,1.4,3.1,3.1,3.1h35.9V88.3H16.6z\"\n        />\n        <rect\n          className=\"vis-graphic--line vis-graphic--line-c\"\n          x=\"16.6\"\n          y=\"61.7\"\n          width=\"38.9\"\n          height=\"26.7\"\n        />\n        <path\n          className=\"vis-graphic--line vis-graphic--line-b\"\n          d=\"M94.5,35v26.7h38.9V38.1c0-1.7-1.4-3.1-3.1-3.1H94.5z\"\n        />\n        <rect\n          className=\"vis-graphic--line vis-graphic--line-b\"\n          x=\"55.5\"\n          y=\"35\"\n          width=\"38.9\"\n          height=\"26.7\"\n        />\n        <path\n          className=\"vis-graphic--line vis-graphic--line-d\"\n          d=\"M94.5,115h35.9c1.7,0,3.1-1.4,3.1-3.1V88.3H94.5V115z\"\n        />\n        <rect\n          className=\"vis-graphic--line vis-graphic--line-d\"\n          x=\"55.5\"\n          y=\"88.3\"\n          width=\"38.9\"\n          height=\"26.7\"\n        />\n        <rect\n          className=\"vis-graphic--line vis-graphic--line-d\"\n          x=\"94.5\"\n          y=\"61.7\"\n          width=\"38.9\"\n          height=\"26.7\"\n        />\n        <rect\n          className=\"vis-graphic--line vis-graphic--line-d\"\n          x=\"55.5\"\n          y=\"61.7\"\n          width=\"38.9\"\n          height=\"26.7\"\n        />\n        <path\n          className=\"vis-graphic--line vis-graphic--line-a\"\n          d=\"M55.5,35H19.7c-1.7,0-3.1,1.4-3.1,3.1v23.6h38.9V35z\"\n        />\n      </svg>\n    </div>\n  ),\n  scatter: (\n    <div className=\"vis-graphic\" data-testid=\"vis-graphic--scatter\">\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        version=\"1.1\"\n        id=\"Scatter\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 150 150\"\n        preserveAspectRatio=\"none meet\"\n      >\n        <circle\n          className=\"vis-graphic--fill vis-graphic--fill-b\"\n          cx=\"77.6\"\n          cy=\"91.1\"\n          r=\"7.5\"\n        />\n        <circle\n          className=\"vis-graphic--fill vis-graphic--fill-b\"\n          cx=\"47.5\"\n          cy=\"110.9\"\n          r=\"7.5\"\n        />\n        <circle\n          className=\"vis-graphic--fill vis-graphic--fill-b\"\n          cx=\"111.6\"\n          cy=\"46.1\"\n          r=\"7.5\"\n        />\n        <circle\n          className=\"vis-graphic--fill vis-graphic--fill-b\"\n          cx=\"17.5\"\n          cy=\"118.5\"\n          r=\"7.5\"\n        />\n        <rect\n          x=\"77.6\"\n          y=\"111\"\n          className=\"vis-graphic--fill vis-graphic--fill-c\"\n          width=\"15\"\n          height=\"15\"\n        />\n        <rect\n          x=\"108.3\"\n          y=\"83.6\"\n          className=\"vis-graphic--fill vis-graphic--fill-c\"\n          width=\"15\"\n          height=\"15\"\n        />\n        <rect\n          x=\"125\"\n          y=\"54\"\n          className=\"vis-graphic--fill vis-graphic--fill-c\"\n          width=\"15\"\n          height=\"15\"\n        />\n        <rect\n          x=\"123.2\"\n          y=\"111\"\n          className=\"vis-graphic--fill vis-graphic--fill-c\"\n          width=\"15\"\n          height=\"15\"\n        />\n        <polygon\n          className=\"vis-graphic--fill vis-graphic--fill-a\"\n          points=\"49.5,68.6 42,81.4 57,81.4 \"\n        />\n        <polygon\n          className=\"vis-graphic--fill vis-graphic--fill-a\"\n          points=\"61.1,25.7 53.6,38.6 68.6,38.6 \"\n        />\n        <polygon\n          className=\"vis-graphic--fill vis-graphic--fill-a\"\n          points=\"93.8,19.2 86.3,32.2 101.3,32.2 \"\n        />\n        <polygon\n          className=\"vis-graphic--fill vis-graphic--fill-a\"\n          points=\"78.8,47.5 71.3,60.5 86.3,60.5 \"\n        />\n      </svg>\n    </div>\n  ),\n}\n\ninterface VisGraphic {\n  type: ViewType\n  name: string\n  graphic: JSX.Element\n}\n\nexport const VIS_GRAPHICS: VisGraphic[] = VIS_TYPES.map(\n  ({type, name}): VisGraphic => {\n    return {\n      type,\n      name,\n      graphic: GRAPHIC_SVGS[type],\n    }\n  }\n)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Actions\nimport {setType} from 'src/timeMachine/actions'\n\n// Components\nimport {Dropdown, DropdownMenuTheme} from '@influxdata/clockface'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Constants\nimport {VIS_GRAPHICS} from 'src/timeMachine/constants/visGraphics'\n\n// Types\nimport {View, NewView, AppState, ViewType} from 'src/types'\nimport {ComponentStatus} from 'src/clockface'\n\ninterface DispatchProps {\n  onUpdateType: typeof setType\n}\n\ninterface StateProps {\n  view: View | NewView\n}\n\ntype Props = DispatchProps & StateProps\n\nclass ViewTypeDropdown extends PureComponent<Props> {\n  public render() {\n    return (\n      <Dropdown\n        style={{width: '215px'}}\n        className=\"view-type-dropdown\"\n        testID=\"view-type--dropdown\"\n        button={(active, onClick) => (\n          <Dropdown.Button\n            active={active}\n            onClick={onClick}\n            status={this.dropdownStatus}\n          >\n            {this.getVewTypeGraphic(this.selectedView)}\n          </Dropdown.Button>\n        )}\n        menu={onCollapse => (\n          <Dropdown.Menu onCollapse={onCollapse} theme={DropdownMenuTheme.Onyx}>\n            {this.dropdownItems}\n          </Dropdown.Menu>\n        )}\n      />\n    )\n  }\n\n  private handleChange = (viewType: ViewType): void => {\n    const {onUpdateType} = this.props\n\n    onUpdateType(viewType)\n  }\n\n  private get dropdownItems(): JSX.Element[] {\n    return VIS_GRAPHICS.map(g => (\n      <Dropdown.Item\n        key={`view-type--${g.type}`}\n        id={`${g.type}`}\n        testID={`view-type--${g.type}`}\n        value={g.type}\n        onClick={this.handleChange}\n        selected={`${g.type}` === this.selectedView}\n      >\n        {this.getVewTypeGraphic(g.type)}\n      </Dropdown.Item>\n    ))\n  }\n\n  private get dropdownStatus(): ComponentStatus {\n    const {view} = this.props\n\n    if (view.properties.type === 'check') {\n      return ComponentStatus.Disabled\n    }\n    return ComponentStatus.Valid\n  }\n\n  private get selectedView(): ViewType {\n    const {view} = this.props\n\n    if (view.properties.type === 'check') {\n      return 'xy'\n    }\n\n    return view.properties.type\n  }\n\n  private getVewTypeGraphic = (viewType: ViewType): JSX.Element => {\n    const {graphic, name} = VIS_GRAPHICS.find(\n      graphic => graphic.type === viewType\n    )\n\n    return (\n      <>\n        <div className=\"view-type-dropdown--graphic\">{graphic}</div>\n        <div className=\"view-type-dropdown--name\">{name}</div>\n      </>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {view} = getActiveTimeMachine(state)\n\n  return {view}\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateType: setType,\n}\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(ViewTypeDropdown)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Button} from '@influxdata/clockface'\nimport {FeatureFlag} from 'src/shared/utils/featureFlag'\n\nconst DeleteDataButton: FunctionComponent<WithRouterProps> = ({\n  location: {pathname},\n  router,\n}) => {\n  const onClick = () => router.push(`${pathname}/delete-data`)\n\n  return (\n    <FeatureFlag name=\"deleteWithPredicate\">\n      <Button\n        testID=\"delete-data-predicate\"\n        text=\"Delete Data\"\n        onClick={onClick}\n        titleText=\"Filter and mark data for deletion\"\n      />\n    </FeatureFlag>\n  )\n}\n\nexport default withRouter<{}>(DeleteDataButton)\n","// Libraries\nimport React, {SFC} from 'react'\n\n// Components\nimport DataExplorer from 'src/dataExplorer/components/DataExplorer'\nimport {Page} from '@influxdata/clockface'\nimport SaveAsButton from 'src/dataExplorer/components/SaveAsButton'\nimport VisOptionsButton from 'src/timeMachine/components/VisOptionsButton'\nimport ViewTypeDropdown from 'src/timeMachine/components/view_options/ViewTypeDropdown'\nimport PageTitleWithOrg from 'src/shared/components/PageTitleWithOrg'\nimport GetResources from 'src/resources/components/GetResources'\nimport TimeZoneDropdown from 'src/shared/components/TimeZoneDropdown'\nimport DeleteDataButton from 'src/dataExplorer/components/DeleteDataButton'\n\n// Types\nimport {ResourceType} from 'src/types'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\n\nconst DataExplorerPage: SFC = ({children}) => {\n  return (\n    <Page titleTag={pageTitleSuffixer(['Data Explorer'])}>\n      {children}\n      <GetResources resources={[ResourceType.Variables]}>\n        <Page.Header fullWidth={true}>\n          <Page.HeaderLeft>\n            <PageTitleWithOrg title=\"Data Explorer\" />\n          </Page.HeaderLeft>\n          <Page.HeaderRight>\n            <DeleteDataButton />\n            <TimeZoneDropdown />\n            <ViewTypeDropdown />\n            <VisOptionsButton />\n            <SaveAsButton />\n          </Page.HeaderRight>\n        </Page.Header>\n        <Page.Contents fullWidth={true} scrollable={false}>\n          <DataExplorer />\n        </Page.Contents>\n      </GetResources>\n    </Page>\n  )\n}\n\nexport default DataExplorerPage\n","import React, {PureComponent} from 'react'\n\n// utils\nimport _ from 'lodash'\n\n// components\nimport {Dropdown, DropdownItemType} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// types\nimport {Dashboard} from 'src/types'\nimport {DashboardTemplate} from 'src/dashboards/constants'\n\ninterface Props {\n  onSelect: (selectedIDs: string[], value: Dashboard) => void\n  selectedIDs: string[]\n  dashboards: Dashboard[]\n  newDashboardName: string\n}\n\n@ErrorHandling\nclass DashboardsDropdown extends PureComponent<Props> {\n  public render() {\n    return (\n      <Dropdown\n        button={(active, onClick) => (\n          <Dropdown.Button\n            active={active}\n            onClick={onClick}\n            testID=\"save-as-dashboard-cell--dropdown\"\n          >\n            {this.dropdownLabel}\n          </Dropdown.Button>\n        )}\n        menu={() => (\n          <Dropdown.Menu testID=\"save-as-dashboard-cell--dropdown-menu\">\n            {this.dropdownItems}\n          </Dropdown.Menu>\n        )}\n      />\n    )\n  }\n\n  private handleSelectDashboard = (dashboard: Dashboard): void => {\n    const {onSelect, selectedIDs} = this.props\n\n    let updatedSelection: string[]\n\n    if (selectedIDs.includes(dashboard.id)) {\n      updatedSelection = selectedIDs.filter(id => id !== dashboard.id)\n    } else {\n      updatedSelection = [...selectedIDs, dashboard.id]\n    }\n\n    onSelect(updatedSelection, dashboard)\n  }\n\n  private get dropdownLabel(): string {\n    const {dashboards, selectedIDs, newDashboardName} = this.props\n\n    if (!selectedIDs.length) {\n      return 'Choose at least 1 dashboard'\n    }\n\n    const dashboardsWithNew = [\n      ...dashboards,\n      {...DashboardTemplate, name: newDashboardName},\n    ]\n\n    return dashboardsWithNew\n      .filter(d => selectedIDs.includes(d.id))\n      .map(d => d.name)\n      .join(', ')\n  }\n\n  private get dropdownItems(): JSX.Element[] {\n    const {dashboards, selectedIDs} = this.props\n    const dashboardItems = dashboards.map(d => {\n      return (\n        <Dropdown.Item\n          id={d.id}\n          key={d.id}\n          value={d}\n          type={DropdownItemType.Checkbox}\n          onClick={this.handleSelectDashboard}\n          selected={selectedIDs.includes(d.id)}\n        >\n          {d.name}\n        </Dropdown.Item>\n      )\n    })\n\n    return [this.newDashboardItem, this.dividerItem, ...dashboardItems]\n  }\n\n  private get newDashboardItem(): JSX.Element {\n    const {selectedIDs} = this.props\n\n    return (\n      <Dropdown.Item\n        id={DashboardTemplate.id}\n        key={DashboardTemplate.id}\n        value={DashboardTemplate}\n        type={DropdownItemType.Checkbox}\n        onClick={this.handleSelectDashboard}\n        selected={selectedIDs.includes(DashboardTemplate.id)}\n        testID=\"save-as-dashboard-cell--create-new-dash\"\n      >\n        {DashboardTemplate.name}\n      </Dropdown.Item>\n    )\n  }\n\n  private get dividerItem(): JSX.Element {\n    return <Dropdown.Divider id=\"divider\" key=\"existing-dashboards\" />\n  }\n}\nexport default DashboardsDropdown\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {connect} from 'react-redux'\nimport {get, isEmpty} from 'lodash'\n\n// Selectors\nimport {getSaveableView} from 'src/timeMachine/selectors'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\n\n// Components\nimport {Form, Input, Button, Grid} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport DashboardsDropdown from 'src/dataExplorer/components/DashboardsDropdown'\n\n// Constants\nimport {cellAddFailed, cellAdded} from 'src/shared/copy/notifications'\nimport {\n  DashboardTemplate,\n  DEFAULT_DASHBOARD_NAME,\n  DEFAULT_CELL_NAME,\n} from 'src/dashboards/constants'\n\n// Actions\nimport {getDashboards} from 'src/dashboards/actions/thunks'\nimport {\n  createCellWithView,\n  createDashboardWithView,\n} from 'src/cells/actions/thunks'\nimport {notify} from 'src/shared/actions/notifications'\n\n// Types\nimport {AppState, Dashboard, View, ResourceType} from 'src/types'\nimport {\n  Columns,\n  InputType,\n  ButtonType,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\ninterface State {\n  targetDashboardIDs: string[]\n  cellName: string\n  isNameDashVisible: boolean\n  newDashboardName: string\n}\n\ninterface StateProps {\n  dashboards: Dashboard[]\n  view: View\n  orgID: string\n}\n\ninterface DispatchProps {\n  onGetDashboards: typeof getDashboards\n  onCreateCellWithView: typeof createCellWithView\n  onCreateDashboardWithView: typeof createDashboardWithView\n  notify: typeof notify\n}\n\ninterface OwnProps {\n  dismiss: () => void\n}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\n@ErrorHandling\nclass SaveAsCellForm extends PureComponent<Props, State> {\n  public state: State = {\n    targetDashboardIDs: [],\n    cellName: '',\n    isNameDashVisible: false,\n    newDashboardName: DEFAULT_DASHBOARD_NAME,\n  }\n\n  public componentDidMount() {\n    const {onGetDashboards} = this.props\n    onGetDashboards()\n  }\n\n  public render() {\n    const {dismiss, dashboards} = this.props\n    const {\n      cellName,\n      isNameDashVisible,\n      targetDashboardIDs,\n      newDashboardName,\n    } = this.state\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Element label=\"Target Dashboard(s)\">\n                <DashboardsDropdown\n                  onSelect={this.handleSelectDashboardID}\n                  selectedIDs={targetDashboardIDs}\n                  dashboards={dashboards}\n                  newDashboardName={newDashboardName}\n                />\n              </Form.Element>\n            </Grid.Column>\n            {isNameDashVisible && this.nameDashboard}\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Element label=\"Cell Name\">\n                <Input\n                  type={InputType.Text}\n                  placeholder=\"Add optional cell name\"\n                  name=\"cellName\"\n                  value={cellName}\n                  onChange={this.handleChangeCellName}\n                  testID=\"save-as-dashboard-cell--cell-name\"\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <Form.Footer>\n                <Button\n                  text=\"Cancel\"\n                  onClick={dismiss}\n                  titleText=\"Cancel save\"\n                  type={ButtonType.Button}\n                  testID=\"save-as-dashboard-cell--cancel\"\n                />\n                <Button\n                  text=\"Save as Dashboard Cell\"\n                  testID=\"save-as-dashboard-cell--submit\"\n                  color={ComponentColor.Success}\n                  type={ButtonType.Submit}\n                  onClick={this.handleSubmit}\n                  status={\n                    this.isFormValid\n                      ? ComponentStatus.Default\n                      : ComponentStatus.Disabled\n                  }\n                />\n              </Form.Footer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form>\n    )\n  }\n\n  private get nameDashboard(): JSX.Element {\n    const {newDashboardName} = this.state\n    return (\n      <Grid.Column widthXS={Columns.Twelve}>\n        <Form.Element label=\"New Dashboard Name\">\n          <Input\n            type={InputType.Text}\n            placeholder=\"Add dashboard name\"\n            name=\"dashboardName\"\n            value={newDashboardName}\n            onChange={this.handleChangeDashboardName}\n            testID=\"save-as-dashboard-cell--dashboard-name\"\n          />\n        </Form.Element>\n      </Grid.Column>\n    )\n  }\n\n  private get isFormValid(): boolean {\n    const {targetDashboardIDs} = this.state\n    return !isEmpty(targetDashboardIDs)\n  }\n\n  private handleSubmit = () => {\n    const {\n      onCreateCellWithView,\n      onCreateDashboardWithView,\n      dashboards,\n      view,\n      dismiss,\n      notify,\n      orgID,\n    } = this.props\n    const {targetDashboardIDs} = this.state\n\n    const cellName = this.state.cellName || DEFAULT_CELL_NAME\n    const newDashboardName =\n      this.state.newDashboardName || DEFAULT_DASHBOARD_NAME\n\n    const viewWithProps: View = {...view, name: cellName}\n\n    try {\n      targetDashboardIDs.forEach(dashID => {\n        let targetDashboardName = ''\n        try {\n          if (dashID === DashboardTemplate.id) {\n            targetDashboardName = newDashboardName || DEFAULT_DASHBOARD_NAME\n            onCreateDashboardWithView(orgID, newDashboardName, viewWithProps)\n          } else {\n            const selectedDashboard = dashboards.find(d => d.id === dashID)\n            targetDashboardName = selectedDashboard.name\n            onCreateCellWithView(selectedDashboard.id, viewWithProps)\n          }\n          notify(cellAdded(cellName, targetDashboardName))\n        } catch {\n          notify(cellAddFailed(cellName, targetDashboardName))\n        }\n      })\n    } finally {\n      this.resetForm()\n      dismiss()\n    }\n  }\n\n  private resetForm() {\n    this.setState({\n      targetDashboardIDs: [],\n      cellName: '',\n      isNameDashVisible: false,\n      newDashboardName: DEFAULT_DASHBOARD_NAME,\n    })\n  }\n\n  private handleSelectDashboardID = (\n    selectedIDs: string[],\n    value: Dashboard\n  ) => {\n    if (value.id === DashboardTemplate.id) {\n      this.setState({\n        isNameDashVisible: selectedIDs.includes(DashboardTemplate.id),\n      })\n    }\n    this.setState({targetDashboardIDs: selectedIDs})\n  }\n\n  private handleChangeDashboardName = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({newDashboardName: e.target.value})\n  }\n\n  private handleChangeCellName = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({cellName: e.target.value})\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const view = getSaveableView(state)\n  const org = getOrg(state)\n  const dashboards = getAll<Dashboard>(state, ResourceType.Dashboards)\n\n  return {dashboards, view, orgID: get(org, 'id', '')}\n}\n\nconst mdtp: DispatchProps = {\n  onGetDashboards: getDashboards,\n  onCreateCellWithView: createCellWithView,\n  onCreateDashboardWithView: createDashboardWithView,\n  notify,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(SaveAsCellForm)\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport TaskForm from 'src/tasks/components/TaskForm'\n\n// Actions\nimport {saveNewScript} from 'src/tasks/actions/thunks'\nimport {\n  setTaskOption,\n  clearTask,\n  setNewScript,\n} from 'src/tasks/actions/creators'\nimport {refreshTimeMachineVariableValues} from 'src/timeMachine/actions/queries'\n\n// Utils\nimport {getTimeRangeVars} from 'src/variables/utils/getTimeRangeVars'\nimport {getWindowVars} from 'src/variables/utils/getWindowVars'\nimport {formatVarsOption} from 'src/variables/utils/formatVarsOption'\nimport {\n  taskOptionsToFluxScript,\n  addDestinationToFluxScript,\n} from 'src/utils/taskOptionsToFluxScript'\nimport {getVariableAssignments} from 'src/variables/selectors'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getActiveTimeMachine, getActiveQuery} from 'src/timeMachine/selectors'\n\n// Types\nimport {\n  AppState,\n  TimeRange,\n  VariableAssignment,\n  TaskSchedule,\n  TaskOptions,\n  TaskOptionKeys,\n  DashboardDraftQuery,\n} from 'src/types'\n\ninterface OwnProps {\n  dismiss: () => void\n}\n\ninterface DispatchProps {\n  saveNewScript: typeof saveNewScript\n  setTaskOption: typeof setTaskOption\n  clearTask: typeof clearTask\n  setNewScript: typeof setNewScript\n  refreshTimeMachineVariableValues: typeof refreshTimeMachineVariableValues\n}\n\ninterface StateProps {\n  taskOptions: TaskOptions\n  activeQuery: DashboardDraftQuery\n  newScript: string\n  timeRange: TimeRange\n  userDefinedVars: VariableAssignment[]\n}\n\ntype Props = StateProps & OwnProps & DispatchProps\n\nclass SaveAsTaskForm extends PureComponent<Props & WithRouterProps> {\n  public componentDidMount() {\n    const {\n      setTaskOption,\n      setNewScript,\n      refreshTimeMachineVariableValues,\n    } = this.props\n\n    setTaskOption({\n      key: 'taskScheduleType',\n      value: TaskSchedule.interval,\n    })\n    refreshTimeMachineVariableValues()\n\n    setNewScript(this.activeScript)\n  }\n\n  public componentWillUnmount() {\n    const {clearTask} = this.props\n\n    clearTask()\n  }\n\n  public render() {\n    const {taskOptions, dismiss} = this.props\n\n    return (\n      <TaskForm\n        taskOptions={taskOptions}\n        onChangeScheduleType={this.handleChangeScheduleType}\n        onChangeInput={this.handleChangeInput}\n        onChangeToBucketName={this.handleChangeToBucketName}\n        isInOverlay={true}\n        onSubmit={this.handleSubmit}\n        canSubmit={this.isFormValid}\n        dismiss={dismiss}\n      />\n    )\n  }\n\n  private get isFormValid(): boolean {\n    const {\n      taskOptions: {name, cron, interval},\n    } = this.props\n\n    const hasSchedule = !!cron || !!interval\n\n    return hasSchedule && !!name && !!this.activeScript\n  }\n\n  private get activeScript(): string {\n    const {activeQuery} = this.props\n\n    return activeQuery.text\n  }\n\n  private handleSubmit = () => {\n    const {saveNewScript, newScript, taskOptions, timeRange} = this.props\n\n    // When a task runs, it does not have access to variables that we typically\n    // inject into the script via the front end. So any variables that are used\n    // in the script need to be embedded in the script text itself before\n    // saving it as a task\n\n    const timeRangeVars = getTimeRangeVars(timeRange)\n    const windowPeriodVars = getWindowVars(newScript, timeRangeVars)\n\n    // Don't embed variables that are not used in the script\n    const vars = [\n      ...timeRangeVars,\n      ...windowPeriodVars,\n      ...this.props.userDefinedVars,\n    ].filter(assignment => newScript.includes(assignment.id.name))\n\n    const varOption: string = formatVarsOption(vars) // option v = { ... }\n    const taskOption: string = taskOptionsToFluxScript(taskOptions) // option task = { ... }\n    const preamble = `${varOption}\\n\\n${taskOption}`\n    const script = addDestinationToFluxScript(newScript, taskOptions)\n\n    saveNewScript(script, preamble)\n  }\n\n  private handleChangeToBucketName = (bucketName: string) => {\n    const {setTaskOption} = this.props\n\n    setTaskOption({key: 'toBucketName', value: bucketName})\n  }\n\n  private handleChangeScheduleType = (taskScheduleType: TaskSchedule) => {\n    const {setTaskOption} = this.props\n\n    setTaskOption({key: 'taskScheduleType', value: taskScheduleType})\n  }\n\n  private handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const {setTaskOption} = this.props\n\n    const key = e.target.name as TaskOptionKeys\n    const value = e.target.value\n\n    setTaskOption({key, value})\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {newScript, taskOptions} = state.resources.tasks\n  const {timeRange} = getActiveTimeMachine(state)\n  const activeQuery = getActiveQuery(state)\n  const org = getOrg(state)\n  const userDefinedVars = getVariableAssignments(\n    state,\n    state.timeMachines.activeTimeMachineID\n  )\n\n  return {\n    newScript,\n    taskOptions: {...taskOptions, toOrgName: org.name},\n    timeRange,\n    activeQuery,\n    userDefinedVars,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  saveNewScript,\n  setTaskOption,\n  clearTask,\n  setNewScript,\n  refreshTimeMachineVariableValues,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(withRouter(SaveAsTaskForm))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport VariableFormContext from 'src/variables/components/VariableFormContext'\n\n// Types\nimport {AppState} from 'src/types'\nimport {getActiveQuery} from 'src/timeMachine/selectors'\n\ninterface OwnProps {\n  onHideOverlay: () => void\n}\n\ninterface StateProps {\n  initialScript?: string\n}\n\ntype Props = StateProps & OwnProps\n\nclass SaveAsVariable extends PureComponent<Props & WithRouterProps> {\n  render() {\n    const {initialScript, onHideOverlay} = this.props\n\n    return (\n      <VariableFormContext\n        initialScript={initialScript}\n        onHideOverlay={onHideOverlay}\n      />\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const activeQuery = getActiveQuery(state)\n\n  return {\n    initialScript: activeQuery.text,\n  }\n}\n\nexport default connect<StateProps, {}, OwnProps>(\n  mstp,\n  null\n)(withRouter<Props>(SaveAsVariable))\n","import React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport SaveAsCellForm from 'src/dataExplorer/components/SaveAsCellForm'\nimport SaveAsTaskForm from 'src/dataExplorer/components/SaveAsTaskForm'\nimport SaveAsVariable from 'src/dataExplorer/components/SaveAsVariable'\nimport {\n  Overlay,\n  Tabs,\n  Alignment,\n  ComponentSize,\n  Orientation,\n  InfluxColors,\n} from '@influxdata/clockface'\n\nenum SaveAsOption {\n  Dashboard = 'dashboard',\n  Task = 'task',\n  Variable = 'variable',\n}\n\ninterface State {\n  saveAsOption: SaveAsOption\n}\n\nclass SaveAsOverlay extends PureComponent<WithRouterProps, State> {\n  public state: State = {\n    saveAsOption: SaveAsOption.Dashboard,\n  }\n\n  render() {\n    const {saveAsOption} = this.state\n\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={600}>\n          <Overlay.Header\n            title=\"Save As\"\n            onDismiss={this.handleHideOverlay}\n            testID=\"save-as-overlay--header\"\n          />\n          <Overlay.Body>\n            <Tabs.Container orientation={Orientation.Horizontal}>\n              <Tabs alignment={Alignment.Center}>\n                <Tabs.Tab\n                  id={SaveAsOption.Dashboard}\n                  text=\"Dashboard Cell\"\n                  testID=\"cell-radio-button\"\n                  onClick={this.handleSetSaveAsOption}\n                  active={saveAsOption === SaveAsOption.Dashboard}\n                  backgroundColor={InfluxColors.Castle}\n                />\n                <Tabs.Tab\n                  id={SaveAsOption.Task}\n                  text=\"Task\"\n                  testID=\"task--radio-button\"\n                  onClick={this.handleSetSaveAsOption}\n                  active={saveAsOption === SaveAsOption.Task}\n                  backgroundColor={InfluxColors.Castle}\n                />\n                <Tabs.Tab\n                  id={SaveAsOption.Variable}\n                  text=\"Variable\"\n                  testID=\"variable-radio-button\"\n                  onClick={this.handleSetSaveAsOption}\n                  active={saveAsOption === SaveAsOption.Variable}\n                  backgroundColor={InfluxColors.Castle}\n                />\n              </Tabs>\n              <Tabs.TabContents\n                padding={ComponentSize.Medium}\n                backgroundColor={InfluxColors.Castle}\n              >\n                {this.saveAsForm}\n              </Tabs.TabContents>\n            </Tabs.Container>\n          </Overlay.Body>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private get saveAsForm(): JSX.Element {\n    const {saveAsOption} = this.state\n\n    if (saveAsOption === SaveAsOption.Dashboard) {\n      return <SaveAsCellForm dismiss={this.handleHideOverlay} />\n    } else if (saveAsOption === SaveAsOption.Task) {\n      return <SaveAsTaskForm dismiss={this.handleHideOverlay} />\n    } else if (saveAsOption === SaveAsOption.Variable) {\n      return <SaveAsVariable onHideOverlay={this.handleHideOverlay} />\n    }\n  }\n\n  private handleHideOverlay = () => {\n    this.props.router.goBack()\n  }\n\n  private handleSetSaveAsOption = (saveAsOption: SaveAsOption) => {\n    this.setState({saveAsOption})\n  }\n}\n\nexport default withRouter<{}, {}>(SaveAsOverlay)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\nconst supportLinks = [\n  {link: 'https://v2.docs.influxdata.com/v2.0/', title: '📜 Documentation'},\n  {link: 'https://community.influxdata.com', title: '💭 Community Forum'},\n  {\n    link:\n      'https://github.com/influxdata/influxdb/issues/new?template=feature_request.md',\n    title: '✨ Feature Requests',\n  },\n  {\n    link:\n      'https://github.com/influxdata/influxdb/issues/new?template=bug_report.md',\n    title: '🐛 Report a bug',\n  },\n]\n\nexport default class SupportLinks extends PureComponent {\n  public render() {\n    return (\n      <ul className=\"link-list\">\n        {supportLinks.map(({link, title}) => (\n          <li key={title}>\n            <a href={link} target=\"_blank\">\n              {title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n}\n","// Libraries\nimport React, {SFC} from 'react'\nimport {Link} from 'react-router'\n\n// Components\nimport {Button, ComponentSize} from '@influxdata/clockface'\nimport CloudExclude from 'src/shared/components/cloud/CloudExclude'\nimport CloudOnly from 'src/shared/components/cloud/CloudOnly'\nimport {CLOUD_URL, CLOUD_LOGOUT_PATH} from 'src/shared/constants'\n\nconst LogoutButton: SFC = () => (\n  <>\n    <CloudExclude>\n      <Link to=\"/logout\">\n        <Button text=\"Logout\" size={ComponentSize.ExtraSmall} />\n      </Link>\n    </CloudExclude>\n    <CloudOnly>\n      <a href={`${CLOUD_URL}${CLOUD_LOGOUT_PATH}`}>\n        <Button text=\"Logout\" size={ComponentSize.ExtraSmall} />\n      </a>\n    </CloudOnly>\n  </>\n)\n\nexport default LogoutButton\n","import _ from 'lodash'\nimport {Dashboard} from 'src/types'\n\ninterface Greeting {\n  text: string\n  language: string\n}\n\nconst randomGreetings: Greeting[] = [\n  {\n    text: 'Greetings',\n    language: 'English',\n  },\n  {\n    text: 'Ahoy',\n    language: 'Pirate',\n  },\n  {\n    text: 'Howdy',\n    language: 'Texas',\n  },\n  {\n    text: 'Bonjour',\n    language: 'French',\n  },\n  {\n    text: 'Hola',\n    language: 'Spanish',\n  },\n  {\n    text: 'Ciao',\n    language: 'Italian',\n  },\n  {\n    text: 'Hallo',\n    language: 'German',\n  },\n  {\n    text: 'Guten Tag',\n    language: 'German',\n  },\n  {\n    text: 'Olà',\n    language: 'Portuguese',\n  },\n  {\n    text: 'Namaste',\n    language: 'Hindi',\n  },\n  {\n    text: 'Salaam',\n    language: 'Farsi',\n  },\n  {\n    text: 'Ohayo',\n    language: 'Japanese',\n  },\n  {\n    text: 'こんにちは',\n    language: 'Japanese',\n  },\n  {\n    text: 'Merhaba',\n    language: 'Turkish',\n  },\n  {\n    text: 'Szia',\n    language: 'Hungarian',\n  },\n  {\n    text: 'Jambo',\n    language: 'Swahili',\n  },\n  {\n    text: '你好',\n    language: 'Chinese (Simplified)',\n  },\n  {\n    text: 'مرحبا',\n    language: 'Arabic',\n  },\n  {\n    text: 'Բարեւ',\n    language: 'Armenian',\n  },\n  {\n    text: 'Zdravo',\n    language: 'Croatian',\n  },\n  {\n    text: 'Привет',\n    language: 'Russian',\n  },\n  {\n    text: 'Xin chào',\n    language: 'Vietnamese',\n  },\n  {\n    text: 'สวัสดี',\n    language: 'Thai',\n  },\n  {\n    text: 'สวัสดี',\n    language: 'Thai',\n  },\n  {\n    text: 'Dzień dobry',\n    language: 'Polish',\n  },\n  {\n    text: 'Hei',\n    language: 'Finnish',\n  },\n  {\n    text: 'γεια σας',\n    language: 'Greek',\n  },\n  {\n    text: '인사말',\n    language: 'Korean',\n  },\n  {\n    text: 'Salve',\n    language: 'Latin',\n  },\n  {\n    text: 'Cyfarchion',\n    language: 'Welsh',\n  },\n  {\n    text: 'Ukubingelela',\n    language: 'Zulu',\n  },\n  {\n    text: 'Beannachtaí',\n    language: 'Irish',\n  },\n  {\n    text: '01001000 01100101 01101100 01101100 01101111',\n    language: 'Binary',\n  },\n  {\n    text: '.... . .-.. .-.. ---',\n    language: 'Morse Code',\n  },\n  {\n    text: 'nuqneH',\n    language: 'Klingon',\n  },\n  {\n    text: 'Saluton',\n    language: 'Esperanto',\n  },\n  {\n    text: 'გამარჯობა',\n    language: 'Georgian',\n  },\n]\n\nexport const generateRandomGreeting = (): Greeting => {\n  return _.sample(randomGreetings)\n}\n\nconst sortFunc = (a: Dashboard, b: Dashboard) => {\n  const firstDashboard = `${a.name || ''}`.toLowerCase()\n  const secondDashboard = `${b.name || ''}`.toLowerCase()\n  return firstDashboard.localeCompare(secondDashboard)\n}\n\nexport const getSortedDashboardNames = (dashboards: Dashboard[]) => {\n  return dashboards.sort(sortFunc)\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {Link} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport {EmptyState} from '@influxdata/clockface'\n\n// Types\nimport {Dashboard, Organization, AppState, ResourceType} from 'src/types'\nimport {ComponentSize} from '@influxdata/clockface'\nimport {getSortedDashboardNames} from 'src/me/constants'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  dashboards: Dashboard[]\n  org: Organization\n}\n\ntype Props = StateProps\n\nclass DashboardList extends PureComponent<Props> {\n  public render() {\n    const {dashboards, org} = this.props\n\n    if (this.isEmpty) {\n      return (\n        <EmptyState size={ComponentSize.ExtraSmall}>\n          <EmptyState.Text>You don't have any Dashboards</EmptyState.Text>\n        </EmptyState>\n      )\n    }\n\n    return (\n      <>\n        <ul className=\"link-list\">\n          {dashboards.map(({id, name}) => (\n            <li key={id}>\n              <Link to={`/orgs/${org.id}/dashboards/${id}`}>{name}</Link>\n            </li>\n          ))}\n        </ul>\n      </>\n    )\n  }\n\n  private get isEmpty(): boolean {\n    return !this.props.dashboards.length\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  // map names and sort via a selector\n  const dashboards = getSortedDashboardNames(\n    getAll<Dashboard>(state, ResourceType.Dashboards)\n  )\n\n  return {\n    dashboards: dashboards,\n    org: getOrg(state),\n  }\n}\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(DashboardList)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport Support from 'src/me/components/Support'\nimport LogoutButton from 'src/me/components/LogoutButton'\nimport DashboardsList from 'src/me/components/DashboardsList'\nimport GetResources from 'src/resources/components/GetResources'\nimport {\n  Panel,\n  FlexBox,\n  FlexDirection,\n  ComponentSize,\n  AlignItems,\n} from '@influxdata/clockface'\nimport VersionInfo from 'src/shared/components/VersionInfo'\n\n// Types\nimport {AppState, ResourceType} from 'src/types'\n\ninterface Props {\n  me: AppState['me']\n}\n\nclass ResourceLists extends PureComponent<Props> {\n  public render() {\n    return (\n      <FlexBox\n        direction={FlexDirection.Column}\n        alignItems={AlignItems.Stretch}\n        stretchToFitWidth={true}\n        margin={ComponentSize.Small}\n      >\n        <Panel>\n          <Panel.Header>\n            <h4>Account</h4>\n            <LogoutButton />\n          </Panel.Header>\n        </Panel>\n        <Panel>\n          <Panel.Header>\n            <h4>Dashboards</h4>\n          </Panel.Header>\n          <Panel.Body>\n            <GetResources resources={[ResourceType.Dashboards]}>\n              <DashboardsList />\n            </GetResources>\n          </Panel.Body>\n        </Panel>\n        <Panel>\n          <Panel.Header>\n            <h4>Useful Links</h4>\n          </Panel.Header>\n          <Panel.Body>\n            <Support />\n          </Panel.Body>\n          <Panel.Footer>\n            <VersionInfo />\n          </Panel.Footer>\n        </Panel>\n      </FlexBox>\n    )\n  }\n}\n\nexport default ResourceLists\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {CLOUD} from 'src/shared/constants'\n\n// Components\nimport {\n  Page,\n  FlexBox,\n  FlexDirection,\n  AlignItems,\n  ComponentSize,\n} from '@influxdata/clockface'\n\n// Constants\nimport {generateRandomGreeting} from 'src/me/constants'\n\ninterface Props {\n  userName: string\n  orgName: string\n}\n\nexport default class UserPageHeader extends PureComponent<Props> {\n  public render() {\n    return (\n      <Page.Header fullWidth={false}>\n        <Page.HeaderLeft>\n          <FlexBox\n            direction={FlexDirection.Column}\n            alignItems={AlignItems.FlexStart}\n            margin={ComponentSize.Small}\n          >\n            {this.title}\n          </FlexBox>\n        </Page.HeaderLeft>\n        <Page.HeaderRight />\n      </Page.Header>\n    )\n  }\n\n  private get title(): JSX.Element {\n    const {userName, orgName} = this.props\n\n    const {text, language} = generateRandomGreeting()\n\n    let title = ''\n\n    if (CLOUD) {\n      title = `${text}, ${userName}! Welcome to InfluxDB Cloud!`\n    } else {\n      title = `${text}, ${userName}! Welcome to ${orgName}!`\n    }\n\n    const altText = `That's how you say hello in ${language}`\n\n    return (\n      <>\n        <Page.Title title={title} />\n        <Page.SubTitle title={altText} />\n      </>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Panel} from '@influxdata/clockface'\n\nconst supportLinks = [\n  {\n    link: 'https://v2.docs.influxdata.com/v2.0/query-data/get-started/',\n    title: 'Get Started with Flux',\n  },\n  {\n    link: 'https://v2.docs.influxdata.com/v2.0/visualize-data/explore-metrics/',\n    title: 'Explore Metrics',\n  },\n  {\n    link: 'https://v2.docs.influxdata.com/v2.0/visualize-data/dashboards/',\n    title: 'Build a Dashboard',\n  },\n  {\n    link: 'https://v2.docs.influxdata.com/v2.0/process-data/write-a-task/',\n    title: 'Write a Task',\n  },\n]\n\nexport default class SupportLinks extends PureComponent {\n  public render() {\n    return (\n      <Panel>\n        <Panel.Header>\n          <h4>Some Handy Guides and Tutorials</h4>\n        </Panel.Header>\n        <Panel.Body>\n          <ul className=\"link-list tutorials\">\n            {supportLinks.map(({link, title}) => (\n              <li key={title}>\n                <a href={link} target=\"_blank\">\n                  {title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </Panel.Body>\n      </Panel>\n    )\n  }\n}\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport classnames from 'classnames'\n\ninterface Props {\n  animate: boolean\n}\n\nconst CollectorGraphic: FunctionComponent<Props> = ({animate}) => {\n  const className = classnames('getting-started--image collector-graphic', {\n    'getting-started--image__animating': animate,\n  })\n  return (\n    <div className={className}>\n      <svg\n        version=\"1.1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"322px\"\n        height=\"225px\"\n        viewBox=\"0 0 322 225\"\n      >\n        <g id=\"Bucket\">\n          <path\n            id=\"BG\"\n            className=\"collector-graphic--bg\"\n            d=\"M161,199c-14.1,0-29.2-3.8-29.8-14.4l-6.9-51.3v-0.5c0-13.1,23-15.1,36.7-15.1s36.7,2,36.7,15.1v0.5\n    l-6.9,51.3C190.2,195.2,175.1,199,161,199z\"\n          />\n          <path\n            id=\"BucketExterior\"\n            className=\"collector-graphic--bucket\"\n            d=\"M132.3,132.8c0-3.9,12.8-7.1,28.7-7.1s28.7,3.2,28.7,7.1l-6.9,51.1\n    c0,3.9-9.7,7.1-21.8,7.1c-12.1,0-21.8-3.1-21.8-7.1L132.3,132.8z\"\n          />\n          <ellipse\n            id=\"BucketHole\"\n            className=\"collector-graphic--bucket-hole\"\n            cx=\"160.8\"\n            cy=\"132.8\"\n            rx=\"25.1\"\n            ry=\"4.7\"\n          />\n        </g>\n        <g id=\"Blocks\">\n          <path\n            className=\"collector-graphic--bg\"\n            d=\"M178.2,66.5c0,1.1-0.9,2-2,2h-30.5c-1.1,0-2-0.9-2-2V36c0-1.1,0.9-2,2-2h30.5c1.1,0,2,0.9,2,2V66.5z\"\n          />\n          <path\n            className=\"collector-graphic--bg\"\n            d=\"M121.4,66.5c0,1.1-0.9,2-2,2H88.9c-1.1,0-2-0.9-2-2V36c0-1.1,0.9-2,2-2h30.5c1.1,0,2,0.9,2,2V66.5z\"\n          />\n          <path\n            className=\"collector-graphic--bg\"\n            d=\"M64.5,66.5c0,1.1-0.9,2-2,2H32c-1.1,0-2-0.9-2-2V36c0-1.1,0.9-2,2-2h30.5c1.1,0,2,0.9,2,2V66.5z\"\n          />\n          <path\n            className=\"collector-graphic--bg\"\n            d=\"M235.1,66.5c0,1.1-0.9,2-2,2h-30.5c-1.1,0-2-0.9-2-2V36c0-1.1,0.9-2,2-2h30.5c1.1,0,2,0.9,2,2V66.5z\"\n          />\n          <path\n            className=\"collector-graphic--bg\"\n            d=\"M292,66.5c0,1.1-0.9,2-2,2h-30.5c-1.1,0-2-0.9-2-2V36c0-1.1,0.9-2,2-2H290c1.1,0,2,0.9,2,2V66.5z\"\n          />\n        </g>\n        <g id=\"Lines\">\n          <path\n            id=\"LineE\"\n            className=\"collector-graphic--data data-e\"\n            d=\"M274.8,58.3c0,63-105.5,35.5-105.5,81.3\"\n          />\n          <path\n            id=\"LineD\"\n            className=\"collector-graphic--data data-d\"\n            d=\"M217.9,58.3c0,10.2-9.4,25.8-23.6,34.5s-29.5,24.4-29.5,46.7\"\n          />\n          <line\n            id=\"LineC\"\n            className=\"collector-graphic--data data-c\"\n            x1=\"161\"\n            y1=\"58.3\"\n            x2=\"161\"\n            y2=\"139.5\"\n          />\n          <path\n            id=\"LineB\"\n            className=\"collector-graphic--data data-b\"\n            d=\"M104.1,58.3c0,10.2,9.4,25.8,23.6,34.5s29.5,24.4,29.5,46.7\"\n          />\n          <path\n            id=\"LineA\"\n            className=\"collector-graphic--data data-a\"\n            d=\"M47.2,58.3c0,63,105.5,35.5,105.5,81.3\"\n          />\n        </g>\n        <g id=\"Dots\">\n          <circle\n            id=\"DotE\"\n            className=\"collector-graphic--dot dot-e\"\n            cx=\"274.8\"\n            cy=\"51.3\"\n            r=\"7\"\n          />\n          <circle\n            id=\"DotD\"\n            className=\"collector-graphic--dot dot-d\"\n            cx=\"217.9\"\n            cy=\"51.3\"\n            r=\"7\"\n          />\n          <circle\n            id=\"DotC\"\n            className=\"collector-graphic--dot dot-c\"\n            cx=\"161\"\n            cy=\"51.3\"\n            r=\"7\"\n          />\n          <circle\n            id=\"DotB\"\n            className=\"collector-graphic--dot dot-b\"\n            cx=\"104.1\"\n            cy=\"51.3\"\n            r=\"7\"\n          />\n          <circle\n            id=\"DotA\"\n            className=\"collector-graphic--dot dot-a\"\n            cx=\"47.2\"\n            cy=\"51.3\"\n            r=\"7\"\n          />\n        </g>\n        <path\n          id=\"BucketMask\"\n          className=\"collector-graphic--bucket\"\n          d=\"M176.2,126.8v2.3c5.9,0.9,9.7,2.2,9.7,3.7c0,2.6-11.2,4.7-25.1,4.7s-25.1-2.1-25.1-4.7\n  c0-1.5,3.6-2.8,9.2-3.6V127c-7.7,1.3-12.7,3.4-12.7,5.9l6.9,51.1c0,3.9,9.7,7.1,21.8,7.1s21.8-3.1,21.8-7.1l6.9-51.1\n  C189.7,130.3,184.3,128.1,176.2,126.8z\"\n        />\n        <g id=\"Cubo\" className=\"collector-graphic--cubo\">\n          <polygon\n            className=\"collector-graphic--cubo-line\"\n            points=\"166.5,150.9 155.1,150.9 149.4,160.8 155.1,170.7 166.5,170.7 172.2,160.8 \t\t\"\n          />\n          <polygon\n            className=\"collector-graphic--cubo-line\"\n            points=\"155.1,164.1 160.8,154.2 166.5,164.1 \t\t\"\n          />\n          <polyline\n            className=\"collector-graphic--cubo-line\"\n            points=\"155.1,150.9 160.8,154.2 166.5,150.9 \t\t\"\n          />\n          <polyline\n            className=\"collector-graphic--cubo-line\"\n            points=\"172.2,160.8 166.5,164.1 166.5,170.7 \t\t\"\n          />\n          <polyline\n            className=\"collector-graphic--cubo-line\"\n            points=\"155.1,170.7 155.1,164.1 149.4,160.8 \t\t\"\n          />\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nexport default CollectorGraphic\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport classnames from 'classnames'\n\ninterface Props {\n  animate: boolean\n}\n\nconst DashboardingGraphic: FunctionComponent<Props> = ({animate}) => {\n  const className = classnames('getting-started--image dashboarding-graphic', {\n    'getting-started--image__animating': animate,\n  })\n  return (\n    <div className={className}>\n      <svg\n        version=\"1.1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"322px\"\n        height=\"225px\"\n        viewBox=\"0 0 322 225\"\n      >\n        <g>\n          <path\n            id=\"Background\"\n            className=\"dashboarding-graphic--bg\"\n            d=\"M291,30.5H31c-2.2,0-4,1.8-4,4v156c0,2.2,1.8,4,4,4h260c2.2,0,4-1.8,4-4v-156\n  C295,32.3,293.2,30.5,291,30.5z\"\n          />\n          <g id=\"Cells\">\n            <path\n              className=\"dashboarding-graphic--cell\"\n              d=\"M162,41.5c0-1.7,1.3-3,3-3h55.5c1.7,0,3,1.3,3,3v23c0,1.7-1.3,3-3,3H165c-1.7,0-3-1.3-3-3V41.5z\"\n            />\n            <path\n              className=\"dashboarding-graphic--cell\"\n              d=\"M98.5,41.4c0.1-1.6,1.4-2.9,3-2.9H157c1.7,0,3,1.3,3,3v23c0,1.7-1.3,3-3,3h-55.5c-1.6,0-2.9-1.3-3-2.9\n    c0,0,0-0.1,0-0.1v-23C98.5,41.5,98.5,41.4,98.5,41.4z\"\n            />\n            <path\n              className=\"dashboarding-graphic--cell\"\n              d=\"M35,41.5c0-1.7,1.3-3,3-3h55.5c1.6,0,2.9,1.3,3,2.9c0,0,0,0.1,0,0.1v23c0,0,0,0.1,0,0.1\n    c-0.1,1.6-1.4,2.9-3,2.9H38c-1.7,0-3-1.3-3-3V41.5z\"\n            />\n            <path\n              className=\"dashboarding-graphic--cell\"\n              d=\"M35,72.5c0-1.7,1.3-3,3-3h55.5h8H157c1.7,0,3,1.3,3,3V132c0,1.7-1.3,3-3,3h-33h-8H38c-1.7,0-3-1.3-3-3V72.5z\"\n            />\n            <path\n              className=\"dashboarding-graphic--cell\"\n              d=\"M119,183.6c-0.1,1.6-1.4,2.9-3,2.9H38c-1.7,0-3-1.3-3-3V140c0-1.7,1.3-3,3-3h78c1.6,0,2.9,1.3,3,2.9\n    c0,0,0,0.1,0,0.1v43.5C119,183.5,119,183.6,119,183.6z\"\n            />\n            <path\n              className=\"dashboarding-graphic--cell\"\n              d=\"M201,183.6c-0.1,1.6-1.4,2.9-3,2.9h-74c-1.6,0-2.9-1.3-3-2.9c0,0,0-0.1,0-0.1V140c0,0,0-0.1,0-0.1\n    c0.1-1.6,1.4-2.9,3-2.9h33h8h33c1.6,0,2.9,1.3,3,2.9c0,0,0,0.1,0,0.1v43.5C201,183.5,201,183.6,201,183.6z\"\n            />\n            <path\n              className=\"dashboarding-graphic--cell\"\n              d=\"M287,183.5c0,1.7-1.3,3-3,3h-78c-1.6,0-2.9-1.3-3-2.9c0,0,0-0.1,0-0.1V140c0,0,0-0.1,0-0.1\n    c0.1-1.6,1.4-2.9,3-2.9h78c1.7,0,3,1.3,3,3V183.5z\"\n            />\n            <path\n              className=\"dashboarding-graphic--cell\"\n              d=\"M287,64.5c0,1.7-1.3,3-3,3h-55.5c-1.7,0-3-1.3-3-3v-23c0-1.7,1.3-3,3-3H284c1.7,0,3,1.3,3,3V64.5z\"\n            />\n            <path\n              id=\"Cell\"\n              className=\"dashboarding-graphic--cell\"\n              d=\"M287,132c0,1.7-1.3,3-3,3h-78h-8h-33c-1.7,0-3-1.3-3-3V72.5c0-1.7,1.3-3,3-3h0h55.5h8H284\n    c1.7,0,3,1.3,3,3V132z\"\n            />\n          </g>\n          <g id=\"Single_Stat_4392\">\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-a\"\n              d=\"M57.8,54.1H59V55h-1.2v2h-1.1v-2h-3.9v-0.6l3.8-5.9h1.2V54.1z M54.1,54.1h2.7V50l-0.1,0.2L54.1,54.1z\"\n            />\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-a\"\n              d=\"M61.5,52.2h0.8c0.5,0,0.9-0.1,1.2-0.4s0.4-0.6,0.4-1.1c0-1-0.5-1.5-1.5-1.5c-0.5,0-0.8,0.1-1.1,0.4\n    S61,50.3,61,50.7h-1.1c0-0.7,0.2-1.2,0.7-1.7s1.1-0.7,1.9-0.7c0.8,0,1.4,0.2,1.9,0.6s0.7,1,0.7,1.8c0,0.4-0.1,0.7-0.4,1.1\n    s-0.6,0.6-1,0.8c0.5,0.1,0.8,0.4,1.1,0.7s0.4,0.8,0.4,1.3c0,0.8-0.2,1.4-0.8,1.8s-1.2,0.7-2,0.7s-1.5-0.2-2-0.7s-0.8-1-0.8-1.7\n    h1.1c0,0.4,0.1,0.8,0.4,1.1s0.7,0.4,1.2,0.4c0.5,0,0.9-0.1,1.2-0.4s0.4-0.7,0.4-1.2c0-0.5-0.2-0.9-0.5-1.1s-0.7-0.4-1.3-0.4h-0.8\n    V52.2z\"\n            />\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-a\"\n              d=\"M70.9,53.2c-0.2,0.3-0.5,0.5-0.8,0.7s-0.7,0.2-1,0.2c-0.5,0-0.9-0.1-1.3-0.4s-0.6-0.6-0.8-1s-0.3-0.9-0.3-1.5\n    c0-0.6,0.1-1.1,0.3-1.5s0.5-0.8,0.9-1s0.9-0.4,1.4-0.4c0.8,0,1.5,0.3,2,0.9s0.7,1.5,0.7,2.6v0.3c0,1.7-0.3,2.9-1,3.6\n    S69.3,57,68,57h-0.2v-0.9H68c0.9,0,1.6-0.2,2.1-0.7S70.8,54.2,70.9,53.2z M69.2,53.2c0.4,0,0.7-0.1,1-0.3s0.5-0.5,0.7-0.8v-0.4\n    c0-0.7-0.2-1.3-0.5-1.7s-0.7-0.7-1.2-0.7c-0.5,0-0.9,0.2-1.1,0.5s-0.4,0.8-0.4,1.4c0,0.6,0.1,1.1,0.4,1.4S68.7,53.2,69.2,53.2z\"\n            />\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-a\"\n              d=\"M79,57h-5.6v-0.8l3-3.3c0.4-0.5,0.7-0.9,0.9-1.2s0.2-0.6,0.2-1c0-0.4-0.1-0.8-0.4-1.1s-0.6-0.4-1.1-0.4\n    c-0.5,0-1,0.2-1.3,0.5s-0.4,0.7-0.4,1.3h-1.1c0-0.8,0.3-1.4,0.8-1.9s1.2-0.7,2-0.7c0.8,0,1.4,0.2,1.9,0.6s0.7,1,0.7,1.7\n    c0,0.8-0.5,1.8-1.6,3l-2.3,2.5H79V57z\"\n            />\n          </g>\n          <g id=\"Line_Graph_A\">\n            <polyline\n              className=\"dashboarding-graphic--line line-a\"\n              points=\"40,121.8 54.4,121.8 68.8,115.5 83.1,118.6 97.5,109.8 111.9,114.2 126.2,109.8 140.6,109.8 \n    155,117.2 \t\t\"\n            />\n            <polyline\n              className=\"dashboarding-graphic--line line-b\"\n              points=\"40,118.2 54.4,118.2 68.8,104.8 83.1,74.5 97.5,99.5 111.9,92 126.2,103.8 140.6,105.5 155,109.8 \t\t\n    \"\n            />\n            <polyline\n              className=\"dashboarding-graphic--axes\"\n              points=\"40,74.5 40,130 155,130 \t\t\"\n            />\n          </g>\n          <g id=\"Single_Stat_99.5\">\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-b\"\n              d=\"M245.1,53.2c-0.2,0.3-0.5,0.5-0.8,0.7s-0.7,0.2-1,0.2c-0.5,0-0.9-0.1-1.3-0.4s-0.6-0.6-0.8-1\n    s-0.3-0.9-0.3-1.5c0-0.6,0.1-1.1,0.3-1.5s0.5-0.8,0.9-1s0.9-0.4,1.4-0.4c0.8,0,1.5,0.3,2,0.9s0.7,1.5,0.7,2.6v0.3\n    c0,1.7-0.3,2.9-1,3.6s-1.6,1.2-3,1.2H242v-0.9h0.2c0.9,0,1.6-0.2,2.1-0.7S245,54.2,245.1,53.2z M243.4,53.2c0.4,0,0.7-0.1,1-0.3\n    s0.5-0.5,0.7-0.8v-0.4c0-0.7-0.2-1.3-0.5-1.7s-0.7-0.7-1.2-0.7c-0.5,0-0.9,0.2-1.1,0.5s-0.4,0.8-0.4,1.4c0,0.6,0.1,1.1,0.4,1.4\n    S242.9,53.2,243.4,53.2z\"\n            />\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-b\"\n              d=\"M251.8,53.2c-0.2,0.3-0.5,0.5-0.8,0.7s-0.7,0.2-1,0.2c-0.5,0-0.9-0.1-1.3-0.4s-0.6-0.6-0.8-1\n    s-0.3-0.9-0.3-1.5c0-0.6,0.1-1.1,0.3-1.5s0.5-0.8,0.9-1s0.9-0.4,1.4-0.4c0.8,0,1.5,0.3,2,0.9s0.7,1.5,0.7,2.6v0.3\n    c0,1.7-0.3,2.9-1,3.6s-1.6,1.2-3,1.2h-0.2v-0.9h0.2c0.9,0,1.6-0.2,2.1-0.7S251.7,54.2,251.8,53.2z M250.1,53.2\n    c0.4,0,0.7-0.1,1-0.3s0.5-0.5,0.7-0.8v-0.4c0-0.7-0.2-1.3-0.5-1.7s-0.7-0.7-1.2-0.7c-0.5,0-0.9,0.2-1.1,0.5s-0.4,0.8-0.4,1.4\n    c0,0.6,0.1,1.1,0.4,1.4S249.7,53.2,250.1,53.2z\"\n            />\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-b\"\n              d=\"M254.5,56.4c0-0.2,0.1-0.3,0.2-0.5s0.3-0.2,0.5-0.2s0.4,0.1,0.5,0.2s0.2,0.3,0.2,0.5c0,0.2-0.1,0.3-0.2,0.5\n    s-0.3,0.2-0.5,0.2s-0.4-0.1-0.5-0.2S254.5,56.6,254.5,56.4z\"\n            />\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-b\"\n              d=\"M258,52.7l0.4-4.3h4.4v1h-3.5l-0.3,2.3c0.4-0.2,0.9-0.4,1.4-0.4c0.8,0,1.4,0.3,1.9,0.8s0.7,1.2,0.7,2.1\n    c0,0.9-0.2,1.6-0.7,2.1s-1.1,0.8-2,0.8c-0.8,0-1.4-0.2-1.8-0.6s-0.7-1-0.8-1.7h1c0.1,0.5,0.2,0.9,0.5,1.1s0.7,0.4,1.1,0.4\n    c0.5,0,0.9-0.2,1.2-0.5s0.4-0.8,0.4-1.4c0-0.6-0.2-1-0.5-1.4s-0.7-0.5-1.2-0.5c-0.5,0-0.8,0.1-1.1,0.3l-0.3,0.2L258,52.7z\"\n            />\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-b\"\n              d=\"M264.2,50.1c0-0.5,0.2-0.9,0.5-1.3s0.7-0.5,1.3-0.5c0.5,0,0.9,0.2,1.3,0.5s0.5,0.8,0.5,1.3v0.4\n    c0,0.5-0.2,0.9-0.5,1.3s-0.7,0.5-1.2,0.5c-0.5,0-0.9-0.2-1.3-0.5s-0.5-0.8-0.5-1.3V50.1z M265,50.6c0,0.3,0.1,0.6,0.3,0.8\n    s0.4,0.3,0.7,0.3c0.3,0,0.5-0.1,0.7-0.3s0.3-0.5,0.3-0.8v-0.4c0-0.3-0.1-0.6-0.3-0.8c-0.2-0.2-0.4-0.3-0.7-0.3s-0.5,0.1-0.7,0.3\n    c-0.2,0.2-0.3,0.5-0.3,0.8V50.6z M266.2,56.4l-0.6-0.4l4.2-6.7l0.6,0.4L266.2,56.4z M268.3,54.9c0-0.5,0.2-0.9,0.5-1.3\n    s0.7-0.5,1.3-0.5s0.9,0.2,1.3,0.5s0.5,0.8,0.5,1.3v0.4c0,0.5-0.2,0.9-0.5,1.3s-0.7,0.5-1.3,0.5s-0.9-0.2-1.3-0.5s-0.5-0.8-0.5-1.3\n    V54.9z M269.1,55.4c0,0.3,0.1,0.6,0.3,0.8s0.4,0.3,0.7,0.3c0.3,0,0.5-0.1,0.7-0.3s0.3-0.5,0.3-0.8v-0.4c0-0.3-0.1-0.6-0.3-0.8\n    c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3c-0.2,0.2-0.3,0.5-0.3,0.8V55.4z\"\n            />\n          </g>\n          <g id=\"Table\">\n            <rect\n              x=\"167\"\n              y=\"74.5\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"115\"\n              height=\"55.5\"\n            />\n            <rect\n              x=\"167\"\n              y=\"74.5\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"23\"\n              height=\"55.5\"\n            />\n            <rect\n              x=\"190\"\n              y=\"74.5\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"23\"\n              height=\"55.5\"\n            />\n            <rect\n              x=\"213\"\n              y=\"74.5\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"23\"\n              height=\"55.5\"\n            />\n            <rect\n              x=\"236\"\n              y=\"74.5\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"23\"\n              height=\"55.5\"\n            />\n            <rect\n              x=\"259\"\n              y=\"74.5\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"23\"\n              height=\"55.5\"\n            />\n            <rect\n              x=\"167\"\n              y=\"74.5\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"115\"\n              height=\"7.9\"\n            />\n            <rect\n              x=\"167\"\n              y=\"82.4\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"115\"\n              height=\"7.9\"\n            />\n            <rect\n              x=\"167\"\n              y=\"90.4\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"115\"\n              height=\"7.9\"\n            />\n            <rect\n              x=\"167\"\n              y=\"98.3\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"115\"\n              height=\"7.9\"\n            />\n            <rect\n              x=\"167\"\n              y=\"106.2\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"115\"\n              height=\"7.9\"\n            />\n            <rect\n              x=\"167\"\n              y=\"114.1\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"115\"\n              height=\"7.9\"\n            />\n            <rect\n              x=\"167\"\n              y=\"122.1\"\n              className=\"dashboarding-graphic--axes\"\n              width=\"115\"\n              height=\"7.9\"\n            />\n            <rect\n              id=\"Highlight_Blue\"\n              x=\"190\"\n              y=\"82.4\"\n              className=\"dashboarding-graphic--axes table-a\"\n              width=\"23\"\n              height=\"7.9\"\n            />\n            <rect\n              id=\"Highlight_Purple\"\n              x=\"236\"\n              y=\"106.2\"\n              className=\"dashboarding-graphic--axes table-b\"\n              width=\"23\"\n              height=\"7.9\"\n            />\n          </g>\n          <g id=\"Line_Graph_B\">\n            <polyline\n              className=\"dashboarding-graphic--line line-c\"\n              points=\"39.5,167.8 48.8,167.8 58.1,157 67.4,162.4 76.8,147 86.1,154.8 95.4,147 104.7,147 114,160 \t\t\"\n            />\n            <polyline\n              className=\"dashboarding-graphic--axes\"\n              points=\"39.5,142 39.5,181.5 114,181.5 \t\t\"\n            />\n          </g>\n          <g id=\"Bar_Chart_1_\">\n            <polyline\n              className=\"dashboarding-graphic--axes\"\n              points=\"126,142 126,181.5 196,181.5 \t\t\"\n            />\n            <g id=\"Bar_Chart\">\n              <rect\n                x=\"130\"\n                y=\"166.3\"\n                className=\"dashboarding-graphic--bar bar-a\"\n                width=\"6.3\"\n                height=\"15.2\"\n                transform=\"scale(1,-1) translate(0,-347.2)\"\n              />\n              <rect\n                x=\"139.1\"\n                y=\"149.3\"\n                className=\"dashboarding-graphic--bar bar-b\"\n                width=\"6.3\"\n                height=\"32.2\"\n                transform=\"scale(1,-1) translate(0,-330)\"\n              />\n              <rect\n                x=\"148.3\"\n                y=\"155.7\"\n                className=\"dashboarding-graphic--bar bar-c\"\n                width=\"6.3\"\n                height=\"25.8\"\n                transform=\"scale(1,-1) translate(0,-336.5)\"\n              />\n              <rect\n                x=\"157.4\"\n                y=\"177.5\"\n                className=\"dashboarding-graphic--bar bar-d\"\n                width=\"6.3\"\n                height=\"4\"\n                transform=\"scale(1,-1) translate(0,-358.5)\"\n              />\n              <rect\n                x=\"166.5\"\n                y=\"179.5\"\n                className=\"dashboarding-graphic--bar bar-e\"\n                width=\"6.3\"\n                height=\"2\"\n                transform=\"scale(1,-1) translate(0,-360.5)\"\n              />\n              <rect\n                x=\"175.6\"\n                y=\"173.9\"\n                className=\"dashboarding-graphic--bar bar-f\"\n                width=\"6.3\"\n                height=\"7.6\"\n                transform=\"scale(1,-1) translate(0,-355)\"\n              />\n              <rect\n                x=\"184.7\"\n                y=\"177.5\"\n                className=\"dashboarding-graphic--bar bar-g\"\n                width=\"6.3\"\n                height=\"4\"\n                transform=\"scale(1,-1) translate(0,-358.5)\"\n              />\n            </g>\n          </g>\n          <g id=\"Line_Graph_C\">\n            <polyline\n              className=\"dashboarding-graphic--line line-d\"\n              points=\"207.7,161 217.1,173.9 226.4,176.2 235.7,163.7 245,167.8 254.3,152.9 264.1,145 272.9,148 \n282.3,148 \"\n            />\n            <polyline\n              className=\"dashboarding-graphic--axes\"\n              points=\"207.7,142 207.7,181.5 282.3,181.5 \t\t\"\n            />\n          </g>\n          <g id=\"Single_Stat_4\">\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-c\"\n              d=\"M194.7,53.9h1.2v0.9h-1.2v2h-1.1v-2h-3.9v-0.6l3.8-5.9h1.2V53.9z M190.9,53.9h2.7v-4.2l-0.1,0.2L190.9,53.9z\n    \"\n            />\n          </g>\n          <g id=\"Single_Stat_ABC\">\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-d\"\n              d=\"M123.4,54.8h-3.6L119,57h-1.2l3.3-8.5h1l3.3,8.5h-1.2L123.4,54.8z M120.2,53.8h2.9l-1.5-4L120.2,53.8z\"\n            />\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-d\"\n              d=\"M126.5,57v-8.5h2.8c0.9,0,1.6,0.2,2.1,0.6s0.7,0.9,0.7,1.7c0,0.4-0.1,0.8-0.3,1.1s-0.5,0.5-0.9,0.7\n    c0.5,0.1,0.8,0.4,1.1,0.7s0.4,0.8,0.4,1.3c0,0.8-0.2,1.4-0.7,1.8s-1.2,0.7-2.1,0.7H126.5z M127.6,52.1h1.7c0.5,0,0.9-0.1,1.2-0.4\n    c0.3-0.2,0.4-0.6,0.4-1c0-0.5-0.1-0.8-0.4-1c-0.3-0.2-0.7-0.3-1.2-0.3h-1.7V52.1z M127.6,53v3.1h1.9c0.5,0,0.9-0.1,1.2-0.4\n    s0.5-0.6,0.5-1.1c0-1-0.6-1.5-1.7-1.5H127.6z\"\n            />\n            <path\n              className=\"dashboarding-graphic--single-stat single-stat-d\"\n              d=\"M140.3,54.3c-0.1,0.9-0.4,1.6-1,2.1s-1.3,0.7-2.2,0.7c-1,0-1.8-0.4-2.4-1.1s-0.9-1.7-0.9-2.9v-0.8\n    c0-0.8,0.1-1.5,0.4-2.1s0.7-1.1,1.2-1.4s1.1-0.5,1.8-0.5c0.9,0,1.6,0.3,2.2,0.8s0.9,1.2,1,2.1h-1.1c-0.1-0.7-0.3-1.2-0.6-1.5\n    s-0.8-0.5-1.4-0.5c-0.7,0-1.3,0.3-1.7,0.8c-0.4,0.5-0.6,1.3-0.6,2.3v0.8c0,0.9,0.2,1.7,0.6,2.2s0.9,0.8,1.6,0.8\n    c0.6,0,1.1-0.1,1.4-0.4s0.6-0.8,0.7-1.5H140.3z\"\n            />\n          </g>\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nexport default DashboardingGraphic\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport classnames from 'classnames'\n\ninterface Props {\n  animate: boolean\n}\n\nconst ExploreGraphic: FunctionComponent<Props> = ({animate}) => {\n  const className = classnames('getting-started--image explore-graphic', {\n    'getting-started--image__animating': animate,\n  })\n  return (\n    <div className={className}>\n      <svg\n        version=\"1.1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"322px\"\n        height=\"225px\"\n        viewBox=\"0 0 322 225\"\n      >\n        <g>\n          <path\n            id=\"Background_2_\"\n            className=\"explore-graphic--bg\"\n            d=\"M302,34.3l-8.8-15.2c-2-3.4-6-5.7-9.9-5.7h-17.6c-4,0-7.9,2.3-9.9,5.7l-7.5,13h-12.4\n\t\tl-7.5-13c-2-3.4-6-5.7-9.9-5.7h-17.6c-4,0-7.9,2.3-9.9,5.7l-7.5,13h-15c-4,0-7.9,2.3-9.9,5.7l-7.5,13h-12.4l-7.5-13\n\t\tc-2-3.4-6-5.7-9.9-5.7h-15l-7.5-13c-2-3.4-6-5.7-9.9-5.7H71.2c-4,0-7.9,2.3-9.9,5.7l-7.5,13h-15c-4,0-7.9,2.3-9.9,5.7L20,53\n\t\tc-2,3.4-2,8,0,11.5l7.5,13l-7.5,13c-2,3.4-2,8,0,11.5l7.5,13l-7.5,13c-2,3.4-2,8,0,11.5l8.8,15.2c2,3.4,6,5.7,9.9,5.7h15l7.5,13\n\t\tc2,3.4,6,5.7,9.9,5.7h17.6c4,0,7.9-2.3,9.9-5.7l7.5-13h12.4l6.2,10.7l-7.5,13c-2,3.4-2,8,0,11.5l8.8,15.2c2,3.4,6,5.7,9.9,5.7h17.6\n\t\tc4,0,7.9-2.3,9.9-5.7l7.5-13h12.4l7.5,13c2,3.4,6,5.7,9.9,5.7h17.6c4,0,7.9-2.3,9.9-5.7l8.8-15.2c2-3.4,2-8,0-11.5l-7.5-13\n\t\tl6.2-10.7h15c4,0,7.9-2.3,9.9-5.7l8.8-15.2c2-3.4,2-8,0-11.5l-7.5-13l7.5-13c2-3.4,2-8,0-11.5l-7.5-13l6.2-10.7h15\n\t\tc4,0,7.9-2.3,9.9-5.7l8.8-15.2C303.9,42.4,303.9,37.7,302,34.3z\"\n          />\n          <g id=\"Hexes\">\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M200.8,59.3h17.6c0.9,0,2.1,0.7,2.6,1.5l8.8,15.2c0.5,0.8,0.5,2.2,0,3L221,94.2c-0.5,0.8-1.6,1.5-2.6,1.5\n\t\t\th-17.6c-0.9,0-2.1-0.7-2.6-1.5L189.4,79c-0.5-0.8-0.5-2.2,0-3l8.8-15.2C198.7,59.9,199.9,59.3,200.8,59.3z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M157,57.3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5H186c0.9,0,2.1,0.7,2.6,1.5l8.8,15.2c0.5,0.8,0.5,2.2,0,3\n\t\t\tl-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5h-17.6c-0.9,0-2.1-0.7-2.6-1.5L157,60.2C156.6,59.4,156.6,58.1,157,57.3z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M103.6,40.5h17.6c0.9,0,2.1,0.7,2.6,1.5v0l8.8,15.2c0.5,0.8,0.5,2.2,0,3l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5\n\t\t\th-17.6c-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2c-0.5-0.8-0.5-2.2,0-3L101,42C101.5,41.2,102.7,40.5,103.6,40.5z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M68.6,56.8l-8.8-15.2c-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6c0.9,0,2.1,0.7,2.6,1.5\n\t\t\tl8.8,15.2c0.5,0.8,0.5,2.2,0,3l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5H71.2C70.3,58.3,69.1,57.6,68.6,56.8z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M67.7,97.7l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5H38.8c-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2c-0.5-0.8-0.5-2.2,0-3\n\t\t\tl8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6c0.9,0,2.1,0.7,2.6,1.5l8.8,15.2C68.2,95.5,68.2,96.9,67.7,97.7z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M88.8,95.7H71.2c-0.9,0-2.1-0.7-2.6-1.5L59.8,79c-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6\n\t\t\tc0.9,0,2.1,0.7,2.6,1.5l8.8,15.2c0.5,0.8,0.5,2.2,0,3l-8.8,15.2C90.9,95,89.7,95.7,88.8,95.7z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M132.6,97.7l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5h-17.6c-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2\n\t\t\tc-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6c0.9,0,2.1,0.7,2.6,1.5v0l8.8,15.2C133,95.5,133,96.9,132.6,97.7z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M153.6,95.7H136c-0.9,0-2.1-0.7-2.6-1.5L124.6,79c-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5\n\t\t\th17.6c0.9,0,2.1,0.7,2.6,1.5L165,76c0.5,0.8,0.5,2.2,0,3l-8.8,15.2C155.7,95,154.5,95.7,153.6,95.7z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M133.4,169l-8.8-15.2c-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6c0.9,0,2.1,0.7,2.6,1.5\n\t\t\tl8.8,15.2c0.5,0.8,0.5,2.2,0,3l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5H136C135.1,170.5,133.9,169.8,133.4,169z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M165,191.2l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5H136c-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2c-0.5-0.8-0.5-2.2,0-3\n\t\t\tl8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6c0.9,0,2.1,0.7,2.6,1.5l8.8,15.2C165.4,189.1,165.4,190.4,165,191.2z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M200.8,171.5h17.6c0.9,0,2.1,0.7,2.6,1.5l8.8,15.2c0.5,0.8,0.5,2.2,0,3l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5\n\t\t\th-17.6c-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2c-0.5-0.8-0.5-2.2,0-3l8.8-15.2C198.7,172.2,199.9,171.5,200.8,171.5z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M188.6,154.3l8.8,15.2c0.5,0.8,0.5,2.2,0,3l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5h-17.6c-0.9,0-2.1-0.7-2.6-1.5\n\t\t\tl-8.8-15.2c-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5H186C186.9,152.8,188.1,153.5,188.6,154.3z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M197.4,135.1l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5h-17.6c-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2\n\t\t\tc-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5H186c0.9,0,2.1,0.7,2.6,1.5l8.8,15.2C197.8,132.9,197.8,134.3,197.4,135.1\n\t\t\tz\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M229.8,116.4l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5h-17.6c-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2\n\t\t\tc-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6c0.9,0,2.1,0.7,2.6,1.5l8.8,15.2\n\t\t\tC230.2,114.2,230.2,115.6,229.8,116.4z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M253.4,79.5l8.8,15.2c0.5,0.8,0.5,2.2,0,3l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5h-17.6c-0.9,0-2.1-0.7-2.6-1.5\n\t\t\tl-8.8-15.2c-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6C251.7,78,252.9,78.6,253.4,79.5z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M262.2,60.2l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5h-17.6c-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2\n\t\t\tc-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6c0.9,0,2.1,0.7,2.6,1.5l8.8,15.2C262.7,58.1,262.7,59.4,262.2,60.2z\"\n            />\n            <path\n              className=\"explore-graphic--hex\"\n              d=\"M294.6,41.5l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5h-17.6c-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2\n\t\t\tc-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6c0.9,0,2.1,0.7,2.6,1.5l8.8,15.2C295.1,39.4,295.1,40.7,294.6,41.5z\"\n            />\n          </g>\n          <path\n            id=\"DiagnosticB\"\n            className=\"explore-graphic--diagnostic diagnostic-b\"\n            d=\"M178.4,10.4c0-1-0.8-1.9-1.9-1.9s-1.9,0.8-1.9,1.9c0,0.9,0.6,1.6,1.4,1.8v73.6\n\t\tc0,0.3,0.2,0.5,0.5,0.5s0.5-0.2,0.5-0.5V12.2C177.8,12,178.4,11.3,178.4,10.4z\"\n          />\n          <path\n            id=\"DiagnosticA\"\n            className=\"explore-graphic--diagnostic diagnostic-a\"\n            d=\"M48.1,206.3v-59.9c0-0.3-0.2-0.5-0.5-0.5s-0.5,0.2-0.5,0.5v59.9c-0.8,0.2-1.4,0.9-1.4,1.8\n\t\tc0,1,0.8,1.9,1.9,1.9s1.9-0.8,1.9-1.9C49.5,207.2,48.9,206.5,48.1,206.3z\"\n          />\n          <g className=\"explore-graphic--flows\">\n            <path\n              id=\"FlowB\"\n              className=\"explore-graphic--flow flow-b\"\n              d=\"M47.6,134.9l30,16.5c1,0.5,2.2,0.5,3.2,0l30-16.9c1-0.6,2.2-0.6,3.2,0l29.1,16.8\n\t\tc1,0.6,2.3,0.6,3.3,0l29.1-16.8c1-0.6,1.6-1.7,1.6-2.8V95.2\"\n            />\n            <path\n              id=\"FlowA\"\n              className=\"explore-graphic--flow flow-a\"\n              d=\"M47.6,134.9l30.1-19c0.9-0.6,1.5-1.6,1.5-2.8V79.4c0-1.2,0.6-2.3,1.7-2.9l29.9-16.9\n\t\tc1-0.6,2.2-0.6,3.2,0l30.9,17.8l32.3,17.8\"\n            />\n          </g>\n          <g id=\"Text\">\n            <line\n              className=\"explore-graphic--text\"\n              x1=\"52.6\"\n              y1=\"203.1\"\n              x2=\"75.2\"\n              y2=\"203.1\"\n            />\n            <line\n              className=\"explore-graphic--text\"\n              x1=\"52.6\"\n              y1=\"199.1\"\n              x2=\"79.2\"\n              y2=\"199.1\"\n            />\n            <line\n              className=\"explore-graphic--text\"\n              x1=\"52.6\"\n              y1=\"195.1\"\n              x2=\"83.5\"\n              y2=\"195.1\"\n            />\n            <line\n              className=\"explore-graphic--text\"\n              x1=\"52.6\"\n              y1=\"191.1\"\n              x2=\"69.4\"\n              y2=\"191.1\"\n            />\n            <line\n              className=\"explore-graphic--text\"\n              x1=\"171.5\"\n              y1=\"15.4\"\n              x2=\"148.9\"\n              y2=\"15.4\"\n            />\n            <line\n              className=\"explore-graphic--text\"\n              x1=\"171.5\"\n              y1=\"19.4\"\n              x2=\"155.3\"\n              y2=\"19.4\"\n            />\n            <line\n              className=\"explore-graphic--text\"\n              x1=\"171.5\"\n              y1=\"23.4\"\n              x2=\"146.3\"\n              y2=\"23.4\"\n            />\n            <line\n              className=\"explore-graphic--text\"\n              x1=\"171.5\"\n              y1=\"27.4\"\n              x2=\"159.3\"\n              y2=\"27.4\"\n            />\n            <line\n              className=\"explore-graphic--text\"\n              x1=\"155.3\"\n              y1=\"27.4\"\n              x2=\"149.2\"\n              y2=\"27.4\"\n            />\n          </g>\n          <path\n            id=\"HighlightA\"\n            className=\"explore-graphic--hex hex-a\"\n            d=\"M58.9,116.9l8.8,15.2c0.5,0.8,0.5,2.2,0,3l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5H38.8\n\t\tc-0.9,0-2.1-0.7-2.6-1.5l-8.8-15.2c-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5h17.6C57.3,115.4,58.5,116.1,58.9,116.9z\n\t\t\"\n          />\n          <path\n            id=\"HighlightB\"\n            className=\"explore-graphic--hex hex-b\"\n            d=\"M165.8,112.9L157,97.7c-0.5-0.8-0.5-2.2,0-3l8.8-15.2c0.5-0.8,1.6-1.5,2.6-1.5H186\n\t\tc0.9,0,2.1,0.7,2.6,1.5l8.8,15.2c0.5,0.8,0.5,2.2,0,3l-8.8,15.2c-0.5,0.8-1.6,1.5-2.6,1.5h-17.6\n\t\tC167.5,114.4,166.3,113.7,165.8,112.9z\"\n          />\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nexport default ExploreGraphic\n","// Libraries\nimport React, {FunctionComponent, useState} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  Panel,\n  Button,\n  Gradients,\n  InfluxColors,\n  ComponentColor,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport CollectorGraphic from 'src/me/graphics/CollectorGraphic'\nimport DashboardingGraphic from 'src/me/graphics/DashboardingGraphic'\nimport ExploreGraphic from 'src/me/graphics/ExploreGraphic'\n\n// Types\nimport {AppState} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  orgID: string\n}\n\ntype Props = WithRouterProps & StateProps\n\nconst GettingStarted: FunctionComponent<Props> = ({orgID, router}) => {\n  const [loadDataAnimating, setLoadDataAnimation] = useState<boolean>(false)\n  const handleLoadDataClick = (): void => {\n    router.push(`/orgs/${orgID}/load-data/telegrafs`)\n  }\n  const handleLoadDataMouseOver = (): void => {\n    setLoadDataAnimation(true)\n  }\n  const handleLoadDataMouseOut = (): void => {\n    setLoadDataAnimation(false)\n  }\n\n  const [dashboardingAnimating, setDashboardingAnimation] = useState<boolean>(\n    false\n  )\n  const handleDashboardsClick = (): void => {\n    router.push(`/orgs/${orgID}/dashboards`)\n  }\n  const handleDashboardsMouseOver = (): void => {\n    setDashboardingAnimation(true)\n  }\n  const handleDashboardsMouseOut = (): void => {\n    setDashboardingAnimation(false)\n  }\n\n  const [alertsAnimating, setAlertsAnimation] = useState<boolean>(false)\n  const handleAlertsClick = (): void => {\n    router.push(`/orgs/${orgID}/alerting`)\n  }\n  const handleAlertsMouseOver = (): void => {\n    setAlertsAnimation(true)\n  }\n  const handleAlertsMouseOut = (): void => {\n    setAlertsAnimation(false)\n  }\n\n  return (\n    <div className=\"getting-started\">\n      <Panel\n        className=\"getting-started--card highlighted\"\n        gradient={Gradients.PolarExpress}\n      >\n        <div className=\"getting-started--card-digit\">1</div>\n        <Panel.Body>\n          <CollectorGraphic animate={loadDataAnimating} />\n        </Panel.Body>\n        <Panel.Footer>\n          <Button\n            text=\"Load your data\"\n            color={ComponentColor.Primary}\n            size={ComponentSize.Large}\n            onClick={handleLoadDataClick}\n            onMouseOver={handleLoadDataMouseOver}\n            onMouseOut={handleLoadDataMouseOut}\n          />\n        </Panel.Footer>\n      </Panel>\n      <Panel\n        className=\"getting-started--card\"\n        backgroundColor={InfluxColors.Onyx}\n      >\n        <div className=\"getting-started--card-digit\">2</div>\n        <Panel.Body>\n          <DashboardingGraphic animate={dashboardingAnimating} />\n        </Panel.Body>\n        <Panel.Footer>\n          <Button\n            text=\"Build a dashboard\"\n            color={ComponentColor.Primary}\n            size={ComponentSize.Large}\n            onClick={handleDashboardsClick}\n            onMouseOver={handleDashboardsMouseOver}\n            onMouseOut={handleDashboardsMouseOut}\n          />\n        </Panel.Footer>\n      </Panel>\n      <Panel\n        className=\"getting-started--card\"\n        backgroundColor={InfluxColors.Onyx}\n      >\n        <div className=\"getting-started--card-digit\">3</div>\n        <Panel.Body>\n          <ExploreGraphic animate={alertsAnimating} />\n        </Panel.Body>\n        <Panel.Footer>\n          <Button\n            text=\"Set up alerting\"\n            color={ComponentColor.Primary}\n            size={ComponentSize.Large}\n            onClick={handleAlertsClick}\n            onMouseOver={handleAlertsMouseOver}\n            onMouseOut={handleAlertsMouseOut}\n          />\n        </Panel.Footer>\n      </Panel>\n    </div>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {id} = getOrg(state)\n  return {\n    orgID: id,\n  }\n}\n\nexport default withRouter<{}>(\n  connect(\n    mstp,\n    null\n  )(GettingStarted)\n)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport {\n  Panel,\n  FlexBox,\n  FlexDirection,\n  ComponentSize,\n  AlignItems,\n  Grid,\n  Columns,\n  Page,\n} from '@influxdata/clockface'\nimport Resources from 'src/me/components/Resources'\nimport Header from 'src/me/components/UserPageHeader'\nimport Docs from 'src/me/components/Docs'\nimport GettingStarted from 'src/me/components/GettingStarted'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\n\n// Types\nimport {AppState} from 'src/types'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  me: AppState['me']\n  orgName: string\n}\n\n@ErrorHandling\nexport class MePage extends PureComponent<StateProps> {\n  public render() {\n    const {me, orgName} = this.props\n\n    return (\n      <Page titleTag={pageTitleSuffixer(['Home'])}>\n        <Header userName={me.name} orgName={orgName} />\n        <Page.Contents fullWidth={false} scrollable={true}>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column widthSM={Columns.Eight} widthMD={Columns.Nine}>\n                <FlexBox\n                  direction={FlexDirection.Column}\n                  margin={ComponentSize.Small}\n                  alignItems={AlignItems.Stretch}\n                  stretchToFitWidth={true}\n                  testID=\"getting-started\"\n                >\n                  <Panel>\n                    <Panel.Header>\n                      <h4>Getting started with InfluxDB 2.0</h4>\n                    </Panel.Header>\n                    <Panel.Body>\n                      <GettingStarted />\n                    </Panel.Body>\n                  </Panel>\n                  <Docs />\n                </FlexBox>\n              </Grid.Column>\n              <Grid.Column widthSM={Columns.Four} widthMD={Columns.Three}>\n                <Resources me={me} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Page.Contents>\n      </Page>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const org = getOrg(state)\n  const {me} = state\n\n  return {me, orgName: get(org, 'name', '')}\n}\n\nexport default connect<StateProps>(\n  mstp,\n  null\n)(MePage)\n","import MePage from 'src/me/containers/MePage'\n\nexport {MePage}\n","import React, {SFC} from 'react'\n\nconst NotFound: SFC = () => (\n  <div className=\"container-fluid\">\n    <div className=\"panel\">\n      <div className=\"panel-heading text-center\">\n        <h1 className=\"deluxe\">404</h1>\n        <h4>Bummer! We couldn't find the page you were looking for</h4>\n      </div>\n    </div>\n  </div>\n)\nexport default NotFound\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\n\n// Types\nimport {RemoteDataState} from 'src/types'\n\n// Actions\nimport {getLinks} from 'src/shared/actions/links'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface PassedInProps {\n  children: React.ReactElement<any>\n}\n\ninterface ConnectDispatchProps {\n  getLinks: typeof getLinks\n}\n\ninterface State {\n  loading: RemoteDataState\n}\n\ntype Props = ConnectDispatchProps & PassedInProps\n\n@ErrorHandling\nclass GetLinks extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      loading: RemoteDataState.NotStarted,\n    }\n  }\n\n  public componentDidMount() {\n    this.props.getLinks()\n    this.setState({loading: RemoteDataState.Done})\n  }\n\n  public render() {\n    const {loading} = this.state\n\n    return (\n      <SpinnerContainer loading={loading} spinnerComponent={<TechnoSpinner />}>\n        {this.props.children && React.cloneElement(this.props.children)}\n      </SpinnerContainer>\n    )\n  }\n}\n\nconst mdtp = {\n  getLinks,\n}\n\nexport default connect<{}, ConnectDispatchProps, PassedInProps>(\n  null,\n  mdtp\n)(GetLinks)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\n\n// Types\nimport {RemoteDataState} from 'src/types'\n\n// Actions\nimport {getMe} from 'src/shared/actions/me'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface PassedInProps {\n  children: React.ReactElement<any>\n}\n\ninterface ConnectDispatchProps {\n  getMe: typeof getMe\n}\n\ninterface State {\n  loading: RemoteDataState\n}\n\ntype Props = ConnectDispatchProps & PassedInProps\n\n@ErrorHandling\nclass GetMe extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      loading: RemoteDataState.NotStarted,\n    }\n  }\n\n  public render() {\n    const {loading} = this.state\n\n    return (\n      <SpinnerContainer loading={loading} spinnerComponent={<TechnoSpinner />}>\n        {this.props.children && React.cloneElement(this.props.children)}\n      </SpinnerContainer>\n    )\n  }\n\n  public componentDidMount() {\n    this.props.getMe()\n    this.setState({loading: RemoteDataState.Done})\n  }\n}\n\nconst mdtp = {\n  getMe,\n}\n\nexport default connect<{}, ConnectDispatchProps, PassedInProps>(\n  null,\n  mdtp\n)(GetMe)\n","// Libraries\nimport React, {SFC} from 'react'\n\n// Components\nimport {AppWrapper} from '@influxdata/clockface'\nimport Notifications from 'src/shared/components/notifications/Notifications'\n\nconst App: SFC<{}> = ({children}) => (\n  <AppWrapper>\n    <Notifications />\n    {children}\n  </AppWrapper>\n)\n\nexport default App\n","import React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport ExportOverlay from 'src/shared/components/ExportOverlay'\n\n// Actions\nimport {convertToTemplate as convertToTemplateAction} from 'src/tasks/actions/thunks'\nimport {clearExportTemplate as clearExportTemplateAction} from 'src/templates/actions/thunks'\n\n// Types\nimport {AppState} from 'src/types'\nimport {DocumentCreate} from '@influxdata/influx'\nimport {RemoteDataState} from 'src/types'\n\ninterface OwnProps {\n  params: {id: string}\n}\n\ninterface DispatchProps {\n  convertToTemplate: typeof convertToTemplateAction\n  clearExportTemplate: typeof clearExportTemplateAction\n}\n\ninterface StateProps {\n  taskTemplate: DocumentCreate\n  status: RemoteDataState\n}\n\ntype Props = OwnProps & StateProps & DispatchProps & WithRouterProps\n\nclass TaskExportOverlay extends PureComponent<Props> {\n  public componentDidMount() {\n    const {\n      params: {id},\n      convertToTemplate,\n    } = this.props\n\n    convertToTemplate(id)\n  }\n\n  public render() {\n    const {taskTemplate, status} = this.props\n\n    return (\n      <ExportOverlay\n        resourceName=\"Task\"\n        resource={taskTemplate}\n        onDismissOverlay={this.onDismiss}\n        status={status}\n      />\n    )\n  }\n\n  private onDismiss = () => {\n    const {router, clearExportTemplate} = this.props\n\n    router.goBack()\n    clearExportTemplate()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  taskTemplate: state.resources.templates.exportTemplate.item,\n  status: state.resources.templates.exportTemplate.status,\n})\n\nconst mdtp: DispatchProps = {\n  convertToTemplate: convertToTemplateAction,\n  clearExportTemplate: clearExportTemplateAction,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(TaskExportOverlay))\n","import React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport ImportOverlay from 'src/shared/components/ImportOverlay'\n\n// Copy\nimport {invalidJSON} from 'src/shared/copy/notifications'\n\n// Actions\nimport {createTaskFromTemplate as createTaskFromTemplateAction} from 'src/tasks/actions/thunks'\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\n\n// Types\nimport {ComponentStatus} from '@influxdata/clockface'\n\n// Utils\nimport jsonlint from 'jsonlint-mod'\n\ninterface State {\n  status: ComponentStatus\n}\n\ninterface DispatchProps {\n  createTaskFromTemplate: typeof createTaskFromTemplateAction\n  notify: typeof notifyAction\n}\n\ntype Props = DispatchProps & WithRouterProps\n\nclass TaskImportOverlay extends PureComponent<Props> {\n  public state: State = {\n    status: ComponentStatus.Default,\n  }\n\n  public render() {\n    return (\n      <ImportOverlay\n        onDismissOverlay={this.onDismiss}\n        resourceName=\"Task\"\n        onSubmit={this.handleImportTask}\n        status={this.state.status}\n        updateStatus={this.updateOverlayStatus}\n      />\n    )\n  }\n\n  private onDismiss = () => {\n    const {router} = this.props\n\n    router.goBack()\n  }\n\n  private updateOverlayStatus = (status: ComponentStatus) =>\n    this.setState(() => ({status}))\n\n  private handleImportTask = (importString: string) => {\n    const {createTaskFromTemplate, notify} = this.props\n\n    let template\n    this.updateOverlayStatus(ComponentStatus.Default)\n    try {\n      template = jsonlint.parse(importString)\n    } catch (error) {\n      this.updateOverlayStatus(ComponentStatus.Error)\n      notify(invalidJSON(error.message))\n      return\n    }\n\n    createTaskFromTemplate(template)\n    this.onDismiss()\n  }\n}\n\nconst mdtp: DispatchProps = {\n  createTaskFromTemplate: createTaskFromTemplateAction,\n  notify: notifyAction,\n}\n\nexport default connect<{}, DispatchProps, Props>(\n  null,\n  mdtp\n)(withRouter(TaskImportOverlay))\n","// Libraries\nimport React, {PureComponent, MouseEvent} from 'react'\n\n// Components\nimport RenamablePageTitle from 'src/pageLayout/components/RenamablePageTitle'\nimport {\n  SquareButton,\n  ComponentColor,\n  ComponentSize,\n  IconFont,\n  Page,\n} from '@influxdata/clockface'\nimport VisOptionsButton from 'src/timeMachine/components/VisOptionsButton'\nimport ViewTypeDropdown from 'src/timeMachine/components/view_options/ViewTypeDropdown'\n\n// Constants\nimport {\n  DEFAULT_CELL_NAME,\n  CELL_NAME_MAX_LENGTH,\n} from 'src/dashboards/constants/index'\n\ninterface Props {\n  name: string\n  onSetName: (name: string) => void\n  onCancel: () => void\n  onSave: () => void\n}\n\nconst saveButtonClass = 'veo-header--save-cell-button'\n\nclass VEOHeader extends PureComponent<Props> {\n  public render() {\n    const {name, onSetName, onCancel, onSave} = this.props\n    return (\n      <Page.Header fullWidth={true}>\n        <Page.HeaderLeft>\n          <RenamablePageTitle\n            name={name}\n            onRename={onSetName}\n            placeholder={DEFAULT_CELL_NAME}\n            maxLength={CELL_NAME_MAX_LENGTH}\n            onClickOutside={this.handleClickOutsideTitle}\n          />\n        </Page.HeaderLeft>\n        <Page.HeaderRight>\n          <ViewTypeDropdown />\n          <VisOptionsButton />\n          <SquareButton\n            icon={IconFont.Remove}\n            onClick={onCancel}\n            size={ComponentSize.Small}\n            testID=\"cancel-cell-edit--button\"\n          />\n          <SquareButton\n            className={saveButtonClass}\n            icon={IconFont.Checkmark}\n            color={ComponentColor.Success}\n            size={ComponentSize.Small}\n            onClick={onSave}\n            testID=\"save-cell--button\"\n          />\n        </Page.HeaderRight>\n      </Page.Header>\n    )\n  }\n\n  private handleClickOutsideTitle = (e: MouseEvent<HTMLElement>) => {\n    const {onSave} = this.props\n    const target = e.target as HTMLButtonElement\n\n    if (!target.className.includes(saveButtonClass)) {\n      return\n    }\n\n    onSave()\n  }\n}\n\nexport default VEOHeader\n","// Libraries\nimport React, {FunctionComponent, useEffect} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport {Overlay, SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\nimport TimeMachine from 'src/timeMachine/components/TimeMachine'\nimport VEOHeader from 'src/dashboards/components/VEOHeader'\n\n// Actions\nimport {setName} from 'src/timeMachine/actions'\nimport {saveVEOView} from 'src/dashboards/actions/thunks'\nimport {getViewForTimeMachine} from 'src/views/actions/thunks'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState, RemoteDataState, QueryView, TimeMachineID} from 'src/types'\n\ninterface DispatchProps {\n  onSetName: typeof setName\n  onSaveView: typeof saveVEOView\n  getViewForTimeMachine: typeof getViewForTimeMachine\n}\n\ninterface StateProps {\n  view: QueryView | null\n  activeTimeMachineID: TimeMachineID\n}\n\ntype Props = DispatchProps & StateProps & WithRouterProps\n\nconst EditViewVEO: FunctionComponent<Props> = ({\n  getViewForTimeMachine,\n  activeTimeMachineID,\n  onSaveView,\n  onSetName,\n  params: {orgID, cellID, dashboardID},\n  router,\n  view,\n}) => {\n  useEffect(() => {\n    getViewForTimeMachine(dashboardID, cellID, 'veo')\n  }, [])\n\n  const handleClose = () => {\n    router.push(`/orgs/${orgID}/dashboards/${dashboardID}`)\n  }\n\n  const handleSave = () => {\n    try {\n      onSaveView(dashboardID)\n      handleClose()\n    } catch (e) {}\n  }\n\n  const viewMatchesRoute = get(view, 'id', null) === cellID\n\n  let loadingState = RemoteDataState.Loading\n  if (activeTimeMachineID === 'veo' && viewMatchesRoute) {\n    loadingState = RemoteDataState.Done\n  }\n\n  return (\n    <Overlay visible={true} className=\"veo-overlay\">\n      <div className=\"veo\">\n        <SpinnerContainer\n          spinnerComponent={<TechnoSpinner />}\n          loading={loadingState}\n        >\n          <VEOHeader\n            key={view && view.name}\n            name={view && view.name}\n            onSetName={onSetName}\n            onCancel={handleClose}\n            onSave={handleSave}\n          />\n          <div className=\"veo-contents\">\n            <TimeMachine />\n          </div>\n        </SpinnerContainer>\n      </div>\n    </Overlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {activeTimeMachineID} = state.timeMachines\n\n  const {view} = getActiveTimeMachine(state)\n\n  return {view, activeTimeMachineID}\n}\n\nconst mdtp: DispatchProps = {\n  onSetName: setName,\n  onSaveView: saveVEOView,\n  getViewForTimeMachine: getViewForTimeMachine,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(withRouter<StateProps & DispatchProps>(EditViewVEO))\n","// Libraries\nimport React, {FunctionComponent, useEffect} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport {Overlay, SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\nimport TimeMachine from 'src/timeMachine/components/TimeMachine'\nimport VEOHeader from 'src/dashboards/components/VEOHeader'\n\n// Actions\nimport {loadNewVEO} from 'src/timeMachine/actions'\nimport {setName} from 'src/timeMachine/actions'\nimport {saveVEOView} from 'src/dashboards/actions/thunks'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Types\nimport {AppState, RemoteDataState, View, TimeMachineID} from 'src/types'\n\ninterface DispatchProps {\n  onSetName: typeof setName\n  onSaveView: typeof saveVEOView\n  onLoadNewVEO: typeof loadNewVEO\n}\n\ninterface StateProps {\n  activeTimeMachineID: TimeMachineID\n  view: View\n}\n\ntype Props = DispatchProps & StateProps & WithRouterProps\n\nconst NewViewVEO: FunctionComponent<Props> = ({\n  activeTimeMachineID,\n  onLoadNewVEO,\n  onSaveView,\n  onSetName,\n  params: {orgID, dashboardID},\n  router,\n  view,\n}) => {\n  useEffect(() => {\n    onLoadNewVEO(dashboardID)\n  }, [dashboardID])\n\n  const handleClose = () => {\n    router.push(`/orgs/${orgID}/dashboards/${dashboardID}`)\n  }\n\n  const handleSave = () => {\n    try {\n      onSaveView(dashboardID)\n      handleClose()\n    } catch (e) {}\n  }\n\n  let loadingState = RemoteDataState.Loading\n  const viewIsNew = !get(view, 'id', null)\n  if (activeTimeMachineID === 'veo' && viewIsNew) {\n    loadingState = RemoteDataState.Done\n  }\n\n  return (\n    <Overlay visible={true} className=\"veo-overlay\">\n      <div className=\"veo\">\n        <SpinnerContainer\n          spinnerComponent={<TechnoSpinner />}\n          loading={loadingState}\n        >\n          <VEOHeader\n            key={view && view.name}\n            name={view && view.name}\n            onSetName={onSetName}\n            onCancel={handleClose}\n            onSave={handleSave}\n          />\n          <div className=\"veo-contents\">\n            <TimeMachine />\n          </div>\n        </SpinnerContainer>\n      </div>\n    </Overlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {activeTimeMachineID} = state.timeMachines\n  const {view} = getActiveTimeMachine(state)\n\n  return {view, activeTimeMachineID}\n}\n\nconst mdtp: DispatchProps = {\n  onSetName: setName,\n  onSaveView: saveVEOView,\n  onLoadNewVEO: loadNewVEO,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(withRouter(NewViewVEO))\n","// Libraries\nimport React, {PureComponent} from 'react'\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {StepStatus} from 'src/clockface/constants/wizard'\nimport {Button, ComponentColor, ComponentSize} from '@influxdata/clockface'\nimport {OnboardingStepProps} from 'src/onboarding/containers/OnboardingWizard'\n\n@ErrorHandling\nclass InitStep extends PureComponent<OnboardingStepProps> {\n  public render() {\n    return (\n      <div className=\"wizard--bookend-step\">\n        <div className=\"splash-logo primary\" />\n        <h3 className=\"wizard-step--title\" data-testid=\"init-step--head-main\">\n          Welcome to InfluxDB 2.0\n        </h3>\n        <h5\n          className=\"wizard-step--sub-title\"\n          data-testid=\"init-step--head-sub\"\n        >\n          Get started in just a few easy steps\n        </h5>\n        <Button\n          color={ComponentColor.Primary}\n          text=\"Get Started\"\n          size={ComponentSize.Large}\n          onClick={this.handleNext}\n          testID=\"onboarding-get-started\"\n        />\n      </div>\n    )\n  }\n\n  private handleNext = () => {\n    const {\n      onSetStepStatus,\n      currentStepIndex,\n      onIncrementCurrentStepIndex,\n    } = this.props\n    onSetStepStatus(currentStepIndex, StepStatus.Complete)\n    onIncrementCurrentStepIndex()\n  }\n}\n\nexport default InitStep\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {getDeep} from 'src/utils/wrappers'\n\n// Components\nimport {Form, Input, Grid, QuestionMarkTooltip} from '@influxdata/clockface'\nimport OnboardingButtons from 'src/onboarding/components/OnboardingButtons'\n\n// Actions\nimport {setupAdmin} from 'src/onboarding/actions'\n\n// Types\nimport {ISetupParams} from '@influxdata/influx'\nimport {\n  Columns,\n  IconFont,\n  InputType,\n  ComponentSize,\n  ComponentStatus,\n  ComponentColor,\n} from '@influxdata/clockface'\nimport {StepStatus} from 'src/clockface/constants/wizard'\nimport {OnboardingStepProps} from 'src/onboarding/containers/OnboardingWizard'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface State extends ISetupParams {\n  confirmPassword: string\n  isPassMismatched: boolean\n}\n\ninterface Props extends OnboardingStepProps {\n  onSetupAdmin: typeof setupAdmin\n}\n\n@ErrorHandling\nclass AdminStep extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    const {setupParams} = props\n\n    const username = getDeep(setupParams, 'username', '')\n    const password = getDeep(setupParams, 'password', '')\n    const confirmPassword = getDeep(setupParams, 'password', '')\n    const org = getDeep(setupParams, 'org', '')\n    const bucket = getDeep(setupParams, 'bucket', '')\n\n    this.state = {\n      username,\n      password,\n      confirmPassword,\n      org,\n      bucket,\n      isPassMismatched: false,\n    }\n  }\n\n  public render() {\n    const {\n      username,\n      password,\n      confirmPassword,\n      org,\n      bucket,\n      isPassMismatched,\n    } = this.state\n    const icon = this.InputIcon\n    const status = this.InputStatus\n    return (\n      <div className=\"onboarding-step\">\n        <Form onSubmit={this.handleNext}>\n          <div className=\"wizard-step--scroll-area\">\n            <div className=\"wizard-step--scroll-content\">\n              <h3\n                className=\"wizard-step--title\"\n                data-testid=\"admin-step--head-main\"\n              >\n                Setup Initial User\n              </h3>\n              <h5\n                className=\"wizard-step--sub-title\"\n                data-testid=\"admin-step--head-sub\"\n              >\n                You will be able to create additional Users, Buckets and\n                Organizations later\n              </h5>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column\n                    widthXS={Columns.Twelve}\n                    widthMD={Columns.Ten}\n                    offsetMD={Columns.One}\n                  >\n                    <Form.Element label=\"Username\">\n                      <Input\n                        value={username}\n                        onChange={this.handleUsername}\n                        titleText=\"Username\"\n                        size={ComponentSize.Medium}\n                        icon={icon}\n                        status={status}\n                        disabledTitleText=\"Username has been set\"\n                        autoFocus={true}\n                        testID=\"input-field--username\"\n                      />\n                    </Form.Element>\n                  </Grid.Column>\n                  <Grid.Column\n                    widthXS={Columns.Six}\n                    widthMD={Columns.Five}\n                    offsetMD={Columns.One}\n                  >\n                    <Form.Element label=\"Password\">\n                      <Input\n                        type={InputType.Password}\n                        value={password}\n                        onChange={this.handlePassword}\n                        titleText=\"Password\"\n                        size={ComponentSize.Medium}\n                        icon={icon}\n                        status={status}\n                        disabledTitleText=\"Password has been set\"\n                        testID=\"input-field--password\"\n                      />\n                    </Form.Element>\n                  </Grid.Column>\n                  <Grid.Column widthXS={Columns.Six} widthMD={Columns.Five}>\n                    <Form.Element\n                      label=\"Confirm Password\"\n                      errorMessage={\n                        isPassMismatched && 'Passwords do not match'\n                      }\n                    >\n                      <Input\n                        type={InputType.Password}\n                        value={confirmPassword}\n                        onChange={this.handleConfirmPassword}\n                        titleText=\"Confirm Password\"\n                        size={ComponentSize.Medium}\n                        icon={icon}\n                        status={this.passwordStatus}\n                        disabledTitleText=\"password has been set\"\n                        testID=\"input-field--password-chk\"\n                      />\n                    </Form.Element>\n                  </Grid.Column>\n                  <Grid.Column\n                    widthXS={Columns.Twelve}\n                    widthMD={Columns.Ten}\n                    offsetMD={Columns.One}\n                  >\n                    <Form.Element\n                      label=\"Initial Organization Name\"\n                      labelAddOn={this.orgTip}\n                      testID=\"form-elem--orgname\"\n                    >\n                      <Input\n                        value={org}\n                        onChange={this.handleOrg}\n                        titleText=\"Initial Organization Name\"\n                        size={ComponentSize.Medium}\n                        icon={icon}\n                        status={ComponentStatus.Default}\n                        placeholder=\"An organization is a workspace for a group of users.\"\n                        disabledTitleText=\"Initial organization name has been set\"\n                        testID=\"input-field--orgname\"\n                      />\n                    </Form.Element>\n                  </Grid.Column>\n                  <Grid.Column\n                    widthXS={Columns.Twelve}\n                    widthMD={Columns.Ten}\n                    offsetMD={Columns.One}\n                  >\n                    <Form.Element\n                      label=\"Initial Bucket Name\"\n                      labelAddOn={this.bucketTip}\n                      testID=\"form-elem--bucketname\"\n                    >\n                      <Input\n                        value={bucket}\n                        onChange={this.handleBucket}\n                        titleText=\"Initial Bucket Name\"\n                        size={ComponentSize.Medium}\n                        icon={icon}\n                        status={status}\n                        placeholder=\"A bucket is where your time series data is stored with a retention policy.\"\n                        disabledTitleText=\"Initial bucket name has been set\"\n                        testID=\"input-field--bucketname\"\n                      />\n                    </Form.Element>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </div>\n          </div>\n          <OnboardingButtons\n            nextButtonStatus={this.nextButtonStatus}\n            autoFocusNext={false}\n          />\n        </Form>\n      </div>\n    )\n  }\n\n  private get isAdminSet(): boolean {\n    const {stepStatuses, currentStepIndex} = this.props\n    if (stepStatuses[currentStepIndex] === StepStatus.Complete) {\n      return true\n    }\n    return false\n  }\n\n  private handleUsername = (e: ChangeEvent<HTMLInputElement>): void => {\n    const username = e.target.value\n    this.setState({username})\n  }\n\n  private handlePassword = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {confirmPassword} = this.state\n    const password = e.target.value\n    const isPassMismatched = confirmPassword && password !== confirmPassword\n    this.setState({password, isPassMismatched})\n  }\n\n  private handleConfirmPassword = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {password} = this.state\n    const confirmPassword = e.target.value\n    const isPassMismatched = confirmPassword && password !== confirmPassword\n    this.setState({confirmPassword, isPassMismatched})\n  }\n\n  private handleOrg = (e: ChangeEvent<HTMLInputElement>): void => {\n    const org = e.target.value\n    this.setState({org})\n  }\n\n  private handleBucket = (e: ChangeEvent<HTMLInputElement>): void => {\n    const bucket = e.target.value\n    this.setState({bucket})\n  }\n\n  private orgTip = (): JSX.Element => {\n    return (\n      <QuestionMarkTooltip\n        diameter={16}\n        style={{marginLeft: '8px'}}\n        color={ComponentColor.Primary}\n        testID=\"admin_org_tooltip\"\n        tooltipStyle={{width: '300px'}}\n        tooltipContents=\"An organization is a workspace for a group of users requiring access to time series data, dashboards, and other resources.\n        You can create organizations for different functional groups, teams, or projects.\"\n      />\n    )\n  }\n\n  private bucketTip = (): JSX.Element => {\n    return (\n      <QuestionMarkTooltip\n        diameter={16}\n        style={{marginLeft: '8px'}}\n        color={ComponentColor.Primary}\n        testID=\"admin_bucket_tooltip\"\n        tooltipStyle={{width: '300px'}}\n        tooltipContents=\"A bucket is where your time series data is stored with a retention policy.\"\n      />\n    )\n  }\n\n  private get nextButtonStatus(): ComponentStatus {\n    if (this.areInputsValid) {\n      return ComponentStatus.Default\n    }\n    return ComponentStatus.Disabled\n  }\n\n  private get areInputsValid(): boolean {\n    const {\n      username,\n      password,\n      org,\n      bucket,\n      confirmPassword,\n      isPassMismatched,\n    } = this.state\n\n    return (\n      username &&\n      password &&\n      confirmPassword &&\n      org &&\n      bucket &&\n      !isPassMismatched\n    )\n  }\n\n  private get passwordStatus(): ComponentStatus {\n    const {isPassMismatched} = this.state\n    if (this.isAdminSet) {\n      return ComponentStatus.Disabled\n    }\n    if (isPassMismatched) {\n      return ComponentStatus.Error\n    }\n    return ComponentStatus.Default\n  }\n\n  private get InputStatus(): ComponentStatus {\n    if (this.isAdminSet) {\n      return ComponentStatus.Disabled\n    }\n    return ComponentStatus.Default\n  }\n\n  private get InputIcon(): IconFont {\n    if (this.isAdminSet) {\n      return IconFont.Checkmark\n    }\n    return null\n  }\n\n  private handleNext = async () => {\n    const {\n      onIncrementCurrentStepIndex,\n      onSetupAdmin: onSetupAdmin,\n      onSetStepStatus,\n      currentStepIndex,\n    } = this.props\n\n    const {username, password, org, bucket} = this.state\n\n    if (this.isAdminSet) {\n      onSetStepStatus(currentStepIndex, StepStatus.Complete)\n      onIncrementCurrentStepIndex()\n      return\n    }\n\n    const setupParams = {\n      username,\n      password,\n      org,\n      bucket,\n    }\n\n    const isAdminSet = await onSetupAdmin(setupParams)\n    if (isAdminSet) {\n      onIncrementCurrentStepIndex()\n    }\n  }\n}\n\nexport default AdminStep\n","// Libraries\nimport {PureComponent} from 'react'\n\n// Types\nimport {RemoteDataState} from 'src/types'\n\ninterface Props<T> {\n  fetcher: () => Promise<T>\n  children: (resources: T, loading: RemoteDataState) => JSX.Element\n}\n\ninterface State<T> {\n  resources: T\n  loading: RemoteDataState\n}\n\nexport default class ResourceFetcher<T> extends PureComponent<\n  Props<T>,\n  State<T>\n> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      resources: null,\n      loading: RemoteDataState.NotStarted,\n    }\n  }\n\n  public async componentDidMount() {\n    const {fetcher} = this.props\n    let resources\n    try {\n      resources = await fetcher()\n    } catch (error) {\n      console.error(error)\n    }\n\n    this.setState({resources, loading: RemoteDataState.Done})\n  }\n\n  public render() {\n    const {resources, loading} = this.state\n    return this.props.children(resources, loading)\n  }\n}\n","import ResourceFetcher from 'src/shared/components/resource_fetcher/ResourceFetcher'\n\nexport default ResourceFetcher\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport _ from 'lodash'\n\n// Components\nimport {Button, ComponentColor, ComponentSize} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {Organization} from 'src/types'\n\ninterface OwnProps {\n  orgs: Organization[]\n  onExit: () => void\n}\n\ntype Props = OwnProps & WithRouterProps\n\n@ErrorHandling\nclass CompletionAdvancedButton extends PureComponent<Props> {\n  public render() {\n    return (\n      <Button\n        text=\"Advanced\"\n        color={ComponentColor.Success}\n        size={ComponentSize.Large}\n        onClick={this.handleAdvanced}\n        testID=\"button--advanced\"\n      />\n    )\n  }\n\n  private handleAdvanced = (): void => {\n    const {router, orgs, onExit} = this.props\n    const id = _.get(orgs, '0.id', null)\n    if (id) {\n      router.push(`/orgs/${id}/load-data/buckets`)\n    } else {\n      onExit()\n    }\n  }\n}\n\nexport default withRouter<OwnProps>(CompletionAdvancedButton)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport _ from 'lodash'\n\n// Components\nimport {Button, ComponentColor, ComponentSize} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {Dashboard} from 'src/types'\n\ninterface OwnProps {\n  dashboards: Dashboard[]\n  onExit: () => void\n}\n\ntype Props = OwnProps & WithRouterProps\n\n@ErrorHandling\nclass CompletionQuickStartButton extends PureComponent<Props> {\n  public render() {\n    return (\n      <Button\n        text=\"Quick Start\"\n        color={ComponentColor.Success}\n        size={ComponentSize.Large}\n        onClick={this.handleAdvanced}\n        testID=\"button--quick-start\"\n      />\n    )\n  }\n\n  private handleAdvanced = (): void => {\n    const {router, dashboards, onExit} = this.props\n    const id = _.get(dashboards, '[0].id', null)\n    if (id) {\n      router.push(`/dashboards/${id}`)\n    } else {\n      onExit()\n    }\n  }\n}\n\nexport default withRouter<OwnProps>(CompletionQuickStartButton)\n","// API\nimport {getDashboards as apiGetDashboards} from 'src/client'\n\n// Types\nimport {Dashboard, Organization} from 'src/types'\n\n// Utils\nimport {addDashboardDefaults} from 'src/schemas/dashboards'\n\n// CRUD APIs for Organizations and Organization resources\n// i.e. Organization Members, Buckets, Dashboards etc\n\nexport const getDashboards = async (\n  org?: Organization\n): Promise<Dashboard[]> => {\n  try {\n    let result\n    if (org) {\n      result = await apiGetDashboards({query: {orgID: org.id}})\n    } else {\n      result = await apiGetDashboards({})\n    }\n\n    if (result.status !== 200) {\n      throw new Error(result.data.message)\n    }\n\n    const dashboards = result.data.dashboards.map(d => addDashboardDefaults(d))\n\n    return dashboards\n  } catch (error) {\n    console.error('Could not get buckets for org', error)\n    throw error\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport ResourceFetcher from 'src/shared/components/resource_fetcher'\nimport CompletionAdvancedButton from 'src/onboarding/components/CompletionAdvancedButton'\nimport CompletionQuickStartButton from 'src/onboarding/components/CompletionQuickStartButton'\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\n\n// Constants\nimport {\n  QuickstartScraperCreationSuccess,\n  QuickstartScraperCreationError,\n  QuickstartDashboardCreationSuccess,\n  QuickstartDashboardCreationError,\n} from 'src/shared/copy/notifications'\nimport {ossMetricsTemplate} from 'src/templates/constants/defaultTemplates'\n\n// APIs\nimport {getDashboards} from 'src/organizations/apis'\nimport {client} from 'src/utils/api'\nimport {createDashboardFromTemplate as createDashboardFromTemplateAJAX} from 'src/templates/api'\nimport * as api from 'src/client'\n\n// Types\nimport {\n  Button,\n  ComponentColor,\n  ComponentSize,\n  Columns,\n  Grid,\n} from '@influxdata/clockface'\nimport {Dashboard, Organization} from 'src/types'\nimport {ScraperTargetRequest} from '@influxdata/influx'\nimport {OnboardingStepProps} from 'src/onboarding/containers/OnboardingWizard'\nimport {QUICKSTART_SCRAPER_TARGET_URL} from 'src/dataLoaders/constants/pluginConfigs'\n\ninterface Props extends OnboardingStepProps {\n  orgID: string\n  bucketID: string\n}\n\nconst getOrganizations = async () => {\n  const resp = await api.getOrgs({})\n  if (resp.status !== 200) {\n    throw new Error(resp.data.message)\n  }\n\n  return resp.data.orgs\n}\n\n@ErrorHandling\nclass CompletionStep extends PureComponent<Props> {\n  public componentDidMount() {\n    window.addEventListener('keydown', this.handleKeydown)\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeydown)\n  }\n\n  public render() {\n    const {onExit} = this.props\n\n    return (\n      <div className=\"onboarding-step\">\n        <div className=\"wizard-step--scroll-area\">\n          <FancyScrollbar autoHide={false}>\n            <div className=\"wizard-step--scroll-content\">\n              <h3 className=\"wizard-step--title\">You are ready to go!</h3>\n              <h5 className=\"wizard-step--sub-title\">\n                Your InfluxDB 2.0 has 1 organization, 1 user, and 1 bucket.\n              </h5>\n              <div className=\"splash-logo secondary\" />\n              <h3 className=\"wizard-step--title\">\n                Let’s start collecting data!\n              </h3>\n              <dl className=\"wizard-completion--options\">\n                <Grid>\n                  <Grid.Row>\n                    <Grid.Column\n                      widthXS={Columns.Twelve}\n                      widthSM={Columns.Four}\n                    >\n                      <div className=\"wizard-completion--option\">\n                        <ResourceFetcher<Dashboard[]> fetcher={getDashboards}>\n                          {dashboards => (\n                            <CompletionQuickStartButton\n                              onExit={this.handleQuickStart}\n                              dashboards={dashboards}\n                            />\n                          )}\n                        </ResourceFetcher>\n                        <dt>Timing is everything!</dt>\n                        <dd>\n                          This will set up local metric collection and allow you\n                          to explore the features of InfluxDB 2.0 quickly.\n                        </dd>\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column\n                      widthXS={Columns.Twelve}\n                      widthSM={Columns.Four}\n                    >\n                      <div className=\"wizard-completion--option\">\n                        <ResourceFetcher<Organization[]>\n                          fetcher={getOrganizations}\n                        >\n                          {orgs => (\n                            <CompletionAdvancedButton\n                              onExit={onExit}\n                              orgs={orgs}\n                            />\n                          )}\n                        </ResourceFetcher>\n                        <dt>Whoa looks like you’re an expert!</dt>\n                        <dd>\n                          This allows you to set up Telegraf, scrapers, and much\n                          more.\n                        </dd>\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column\n                      widthXS={Columns.Twelve}\n                      widthSM={Columns.Four}\n                    >\n                      <div className=\"wizard-completion--option\">\n                        <Button\n                          text=\"Configure Later\"\n                          color={ComponentColor.Success}\n                          size={ComponentSize.Large}\n                          onClick={onExit}\n                          testID=\"button--conf-later\"\n                        />\n                        <dt>I've got this...</dt>\n                        <dd>\n                          Jump into InfluxDB 2.0 and set up data collection when\n                          you’re ready.\n                        </dd>\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </dl>\n              <h5 className=\"wizard-step--sub-title\" />\n            </div>\n          </FancyScrollbar>\n        </div>\n      </div>\n    )\n  }\n\n  private handleQuickStart = async () => {\n    try {\n      await client.scrapers.create({\n        name: 'new target',\n        type: ScraperTargetRequest.TypeEnum.Prometheus,\n        url: QUICKSTART_SCRAPER_TARGET_URL,\n        bucketID: this.props.bucketID,\n        orgID: this.props.orgID,\n      })\n      this.props.notify(QuickstartScraperCreationSuccess)\n    } catch (err) {\n      this.props.notify(QuickstartScraperCreationError)\n    }\n    try {\n      await createDashboardFromTemplateAJAX(\n        ossMetricsTemplate(),\n        this.props.orgID\n      )\n      this.props.notify(QuickstartDashboardCreationSuccess)\n    } catch (err) {\n      this.props.notify(QuickstartDashboardCreationError)\n    }\n    this.props.onExit()\n  }\n\n  private handleKeydown = (e: KeyboardEvent): void => {\n    if (e.key === 'Enter') {\n      this.props.onExit()\n    }\n  }\n}\n\nexport default CompletionStep\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport InitStep from 'src/onboarding/components/InitStep'\nimport AdminStep from 'src/onboarding/components/AdminStep'\nimport CompletionStep from 'src/onboarding/components/CompletionStep'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {ISetupParams} from '@influxdata/influx'\nimport {OnboardingStepProps} from 'src/onboarding/containers/OnboardingWizard'\nimport {setupAdmin} from 'src/onboarding/actions'\n\ninterface Props {\n  onboardingStepProps: OnboardingStepProps\n  setupParams: ISetupParams\n  currentStepIndex: number\n  onSetupAdmin: typeof setupAdmin\n  orgID: string\n  bucketID: string\n}\n\n@ErrorHandling\nclass OnboardingStepSwitcher extends PureComponent<Props> {\n  public render() {\n    const {\n      currentStepIndex,\n      orgID,\n      bucketID,\n      onboardingStepProps,\n      onSetupAdmin,\n    } = this.props\n\n    switch (currentStepIndex) {\n      case 0:\n        return <InitStep {...onboardingStepProps} />\n      case 1:\n        return (\n          <AdminStep {...onboardingStepProps} onSetupAdmin={onSetupAdmin} />\n        )\n      case 2:\n        return (\n          <CompletionStep\n            {...onboardingStepProps}\n            orgID={orgID}\n            bucketID={bucketID}\n          />\n        )\n      default:\n        return <div />\n    }\n  }\n}\n\nexport default OnboardingStepSwitcher\n","// Libraries\nimport _ from 'lodash'\n\n// Constants\nimport {StepStatus} from 'src/clockface/constants/wizard'\nimport {SetupSuccess, SetupError} from 'src/shared/copy/notifications'\n\n// Actions\nimport {notify} from 'src/shared/actions/notifications'\n\n// APIs\nimport {client} from 'src/utils/api'\nimport * as api from 'src/client'\n\n// Types\nimport {AppThunk} from 'src/types'\nimport {ISetupParams} from '@influxdata/influx'\n\nexport type Action =\n  | SetSetupParams\n  | SetStepStatus\n  | SetOrganizationID\n  | SetBucketID\n\ninterface SetSetupParams {\n  type: 'SET_SETUP_PARAMS'\n  payload: {setupParams: ISetupParams}\n}\n\nexport const setSetupParams = (setupParams: ISetupParams): SetSetupParams => ({\n  type: 'SET_SETUP_PARAMS',\n  payload: {setupParams},\n})\n\ninterface SetStepStatus {\n  type: 'SET_STEP_STATUS'\n  payload: {index: number; status: StepStatus}\n}\n\nexport const setStepStatus = (\n  index: number,\n  status: StepStatus\n): SetStepStatus => ({\n  type: 'SET_STEP_STATUS',\n  payload: {\n    index,\n    status,\n  },\n})\n\ninterface SetOrganizationID {\n  type: 'SET_ORG_ID'\n  payload: {orgID: string}\n}\n\nconst setOrganizationID = (orgID: string): SetOrganizationID => ({\n  type: 'SET_ORG_ID',\n  payload: {orgID},\n})\n\ninterface SetBucketID {\n  type: 'SET_ONBOARDING_BUCKET_ID'\n  payload: {bucketID: string}\n}\n\nexport const setBucketID = (bucketID: string): SetBucketID => ({\n  type: 'SET_ONBOARDING_BUCKET_ID',\n  payload: {bucketID},\n})\n\nexport const setupAdmin = (\n  params: ISetupParams\n): AppThunk<Promise<boolean>> => async dispatch => {\n  try {\n    dispatch(setSetupParams(params))\n    const response = await client.setup.create(params)\n\n    const {id: orgID} = response.org\n    const {id: bucketID} = response.bucket\n\n    dispatch(setOrganizationID(orgID))\n    dispatch(setBucketID(bucketID))\n\n    const {username, password} = params\n\n    const resp = await api.postSignin({auth: {username, password}})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(notify(SetupSuccess))\n    dispatch(setStepStatus(1, StepStatus.Complete))\n    return true\n  } catch (err) {\n    console.error(err)\n    const message = _.get(err, 'response.data.message', '')\n    dispatch(notify(SetupError(message)))\n    dispatch(setStepStatus(1, StepStatus.Error))\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {\n  WizardFullScreen,\n  WizardProgressHeader,\n  ProgressBar,\n} from 'src/clockface'\nimport OnboardingStepSwitcher from 'src/onboarding/components/OnboardingStepSwitcher'\n\n// Actions\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\nimport {setSetupParams, setStepStatus, setupAdmin} from 'src/onboarding/actions'\n\n// Constants\nimport {StepStatus} from 'src/clockface/constants/wizard'\n\n// Types\nimport {Links} from 'src/types/links'\nimport {ISetupParams} from '@influxdata/influx'\nimport {AppState} from 'src/types'\n\nexport interface OnboardingStepProps {\n  links: Links\n  currentStepIndex: number\n  onSetCurrentStepIndex: (stepNumber: number) => void\n  onIncrementCurrentStepIndex: () => void\n  onDecrementCurrentStepIndex: () => void\n  onSetStepStatus: (index: number, status: StepStatus) => void\n  onSetSubstepIndex: (index: number, subStep: number | 'streaming') => void\n  stepStatuses: StepStatus[]\n  stepTitles: string[]\n  stepTestIds: string[]\n  setupParams: ISetupParams\n  handleSetSetupParams: (setupParams: ISetupParams) => void\n  notify: typeof notifyAction\n  onCompleteSetup: () => void\n  onExit: () => void\n}\n\ninterface OwnProps {\n  startStep?: number\n  stepStatuses?: StepStatus[]\n  onCompleteSetup: () => void\n  currentStepIndex: number\n  onIncrementCurrentStepIndex: () => void\n  onDecrementCurrentStepIndex: () => void\n  onSetCurrentStepIndex: (stepNumber: number) => void\n  onSetSubstepIndex: (stepNumber: number, substep: number | 'streaming') => void\n}\n\ninterface DispatchProps {\n  notify: typeof notifyAction\n  onSetSetupParams: typeof setSetupParams\n  onSetStepStatus: typeof setStepStatus\n  onSetupAdmin: typeof setupAdmin\n}\n\ninterface StateProps {\n  links: Links\n  stepStatuses: StepStatus[]\n  setupParams: ISetupParams\n  orgID: string\n  bucketID: string\n}\n\ntype Props = OwnProps & StateProps & DispatchProps & WithRouterProps\n\n@ErrorHandling\nclass OnboardingWizard extends PureComponent<Props> {\n  public stepTitles = ['Welcome', 'Initial User Setup', 'Complete']\n  public stepTestIds = [\n    'nav-step--welcome',\n    'nav-step--setup',\n    'nav-step--complete',\n  ]\n\n  public stepSkippable = [true, false, false]\n\n  constructor(props: Props) {\n    super(props)\n  }\n\n  public render() {\n    const {\n      currentStepIndex,\n      orgID,\n      bucketID,\n      setupParams,\n      onSetupAdmin,\n    } = this.props\n\n    return (\n      <WizardFullScreen>\n        {this.progressHeader}\n        <div className=\"wizard-contents\">\n          <div className=\"wizard-step--container\">\n            <OnboardingStepSwitcher\n              currentStepIndex={currentStepIndex}\n              onboardingStepProps={this.onboardingStepProps}\n              setupParams={setupParams}\n              onSetupAdmin={onSetupAdmin}\n              orgID={orgID}\n              bucketID={bucketID}\n            />\n          </div>\n        </div>\n      </WizardFullScreen>\n    )\n  }\n\n  private get progressHeader(): JSX.Element {\n    const {stepStatuses, currentStepIndex, onSetCurrentStepIndex} = this.props\n\n    if (currentStepIndex === 0) {\n      return <div className=\"wizard--progress-header hidden\" />\n    }\n\n    return (\n      <WizardProgressHeader>\n        <ProgressBar\n          currentStepIndex={currentStepIndex}\n          handleSetCurrentStep={onSetCurrentStepIndex}\n          stepStatuses={stepStatuses}\n          stepTitles={this.stepTitles}\n          stepTestIds={this.stepTestIds}\n          stepSkippable={this.stepSkippable}\n        />\n      </WizardProgressHeader>\n    )\n  }\n\n  private handleExit = () => {\n    const {router, onCompleteSetup} = this.props\n    onCompleteSetup()\n    router.push(`/`)\n  }\n\n  private get onboardingStepProps(): OnboardingStepProps {\n    const {\n      stepStatuses,\n      links,\n      notify,\n      onCompleteSetup,\n      setupParams,\n      currentStepIndex,\n      onSetStepStatus,\n      onSetSetupParams,\n      onSetCurrentStepIndex,\n      onSetSubstepIndex,\n      onDecrementCurrentStepIndex,\n      onIncrementCurrentStepIndex,\n    } = this.props\n\n    return {\n      stepStatuses,\n      stepTitles: this.stepTitles,\n      stepTestIds: this.stepTestIds,\n      currentStepIndex,\n      onSetCurrentStepIndex,\n      onSetSubstepIndex,\n      onIncrementCurrentStepIndex,\n      onDecrementCurrentStepIndex,\n      onSetStepStatus,\n      links,\n      setupParams,\n      handleSetSetupParams: onSetSetupParams,\n      notify,\n      onCompleteSetup,\n      onExit: this.handleExit,\n    }\n  }\n}\n\nconst mstp = ({\n  links,\n  onboarding: {stepStatuses, setupParams, orgID, bucketID},\n}: AppState): StateProps => ({\n  links,\n  stepStatuses,\n  setupParams,\n  orgID,\n  bucketID,\n})\n\nconst mdtp: DispatchProps = {\n  notify: notifyAction,\n  onSetSetupParams: setSetupParams,\n  onSetStepStatus: setStepStatus,\n  onSetupAdmin: setupAdmin,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter(OnboardingWizard))\n","// Libraries\nimport React, {ReactElement, PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// APIs\nimport {client} from 'src/utils/api'\n\n// Components\nimport {\n  Button,\n  EmptyState,\n  AppWrapper,\n  TechnoSpinner,\n  SpinnerContainer,\n} from '@influxdata/clockface'\nimport {WizardFullScreen} from 'src/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport OnboardingWizard from 'src/onboarding/containers/OnboardingWizard'\nimport Notifications from 'src/shared/components/notifications/Notifications'\n\n// Types\nimport {ComponentColor, ComponentSize} from '@influxdata/clockface'\nimport {RemoteDataState, AppState} from 'src/types'\nimport {Links} from 'src/types/links'\n\ninterface State {\n  loading: RemoteDataState\n  isSetupComplete: boolean\n}\n\ninterface PassedProps {\n  children: ReactElement<any>\n  params: {\n    stepID: string\n  }\n}\n\ninterface ConnectedStateProps {\n  links: Links\n}\n\ntype Props = PassedProps & WithRouterProps & ConnectedStateProps\n\n@ErrorHandling\nexport class OnboardingWizardPage extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      loading: RemoteDataState.NotStarted,\n      isSetupComplete: false,\n    }\n  }\n\n  public async componentDidMount() {\n    this.setState({loading: RemoteDataState.Loading})\n    try {\n      const {allowed} = await client.setup.status()\n      if (!allowed) {\n        this.setState({isSetupComplete: true})\n      }\n      this.setState({loading: RemoteDataState.Done})\n    } catch (error) {\n      console.error(error)\n      this.setState({loading: RemoteDataState.Error})\n    }\n  }\n\n  public render() {\n    const {params} = this.props\n    const {isSetupComplete} = this.state\n\n    if (isSetupComplete) {\n      return (\n        <SpinnerContainer\n          loading={this.state.loading}\n          spinnerComponent={<TechnoSpinner />}\n        >\n          <WizardFullScreen>\n            <div className=\"wizard-contents\">\n              <div className=\"wizard-step--container\">\n                <EmptyState size={ComponentSize.Large}>\n                  <EmptyState.Text>\n                    <b>Initial User</b> is already set up, nothing to see here\n                    folks!\n                  </EmptyState.Text>\n                  <Button\n                    text=\"Return to Home Page\"\n                    onClick={this.redirectToHome}\n                    color={ComponentColor.Primary}\n                  />\n                </EmptyState>\n              </div>\n            </div>\n          </WizardFullScreen>\n        </SpinnerContainer>\n      )\n    }\n\n    return (\n      <AppWrapper>\n        <SpinnerContainer\n          loading={this.state.loading}\n          spinnerComponent={<TechnoSpinner />}\n        >\n          <Notifications inPresentationMode={true} />\n          <OnboardingWizard\n            onDecrementCurrentStepIndex={this.handleDecrementStepIndex}\n            onIncrementCurrentStepIndex={this.handleIncrementStepIndex}\n            onSetCurrentStepIndex={this.setStepIndex}\n            onSetSubstepIndex={this.setSubstepIndex}\n            currentStepIndex={+params.stepID}\n            onCompleteSetup={this.handleCompleteSetup}\n          />\n        </SpinnerContainer>\n      </AppWrapper>\n    )\n  }\n\n  public handleCompleteSetup = () => {\n    this.setState({isSetupComplete: true})\n  }\n\n  private redirectToHome = () => {\n    this.props.router.push('/')\n  }\n\n  private handleDecrementStepIndex = () => {\n    const {\n      params: {stepID},\n    } = this.props\n\n    this.setStepIndex(+stepID - 1)\n  }\n\n  private handleIncrementStepIndex = () => {\n    const {\n      params: {stepID},\n    } = this.props\n\n    this.setStepIndex(+stepID + 1)\n  }\n\n  private setStepIndex = (index: number) => {\n    const {router} = this.props\n\n    router.push(`/onboarding/${index}`)\n  }\n\n  private setSubstepIndex = (index: number, subStep: number | 'streaming') => {\n    const {router} = this.props\n\n    router.push(`/onboarding/${index}/${subStep}`)\n  }\n}\n\nconst mstp = ({links}: AppState) => ({links})\n\nexport default connect<ConnectedStateProps, null, PassedProps>(\n  mstp,\n  null\n)(withRouter<Props>(OnboardingWizardPage))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport chroma from 'chroma-js'\n\n// Components\nimport {\n  Tabs,\n  Orientation,\n  ComponentSize,\n  InfluxColors,\n} from '@influxdata/clockface'\nimport {FeatureFlag} from 'src/shared/utils/featureFlag'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport CloudExclude from 'src/shared/components/cloud/CloudExclude'\n\ninterface OwnProps {\n  activeTab: string\n  orgID: string\n}\n\ntype Props = OwnProps & WithRouterProps\n\n@ErrorHandling\nclass LoadDataNavigation extends PureComponent<Props> {\n  public render() {\n    const {activeTab, orgID, router} = this.props\n\n    const handleTabClick = (id: string): void => {\n      router.push(`/orgs/${orgID}/load-data/${id}`)\n    }\n\n    const tabs = [\n      {\n        text: 'Buckets',\n        id: 'buckets',\n        cloudExclude: false,\n        featureFlag: null,\n      },\n      {\n        text: 'Telegraf',\n        id: 'telegrafs',\n        cloudExclude: false,\n        featureFlag: null,\n      },\n      {\n        text: 'Scrapers',\n        id: 'scrapers',\n        cloudExclude: true,\n        featureFlag: null,\n      },\n      {\n        text: 'Tokens',\n        id: 'tokens',\n        cloudExclude: false,\n        featureFlag: null,\n      },\n      {\n        text: 'Client Libraries',\n        id: 'client-libraries',\n        cloudExclude: false,\n        featureFlag: null,\n      },\n    ]\n\n    return (\n      <Tabs\n        orientation={Orientation.Horizontal}\n        padding={ComponentSize.Large}\n        backgroundColor={`${chroma(`${InfluxColors.Castle}`).alpha(0.1)}`}\n      >\n        {tabs.map(t => {\n          let tabElement = (\n            <Tabs.Tab\n              key={t.id}\n              text={t.text}\n              id={t.id}\n              onClick={handleTabClick}\n              active={t.id === activeTab}\n              size={ComponentSize.Large}\n              backgroundColor={InfluxColors.Castle}\n            />\n          )\n\n          if (t.cloudExclude) {\n            tabElement = <CloudExclude key={t.id}>{tabElement}</CloudExclude>\n          }\n\n          if (t.featureFlag) {\n            tabElement = (\n              <FeatureFlag key={t.id} name={t.featureFlag}>\n                {tabElement}\n              </FeatureFlag>\n            )\n          }\n          return tabElement\n        })}\n      </Tabs>\n    )\n  }\n}\n\nexport default withRouter(LoadDataNavigation)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport LoadDataNavigation from 'src/settings/components/LoadDataNavigation'\nimport {\n  Tabs,\n  Orientation,\n  ComponentSize,\n  InfluxColors,\n  Page,\n} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  activeTab: string\n  orgID: string\n}\n\n@ErrorHandling\nclass LoadDataTabbedPage extends PureComponent<Props> {\n  public render() {\n    const {activeTab, orgID, children} = this.props\n\n    return (\n      <Page.Contents fullWidth={false} scrollable={true}>\n        <Tabs.Container\n          orientation={Orientation.Horizontal}\n          className=\"tabs tabbed-page\"\n        >\n          <LoadDataNavigation activeTab={activeTab} orgID={orgID} />\n          <Tabs.TabContents\n            padding={ComponentSize.Large}\n            backgroundColor={InfluxColors.Castle}\n          >\n            {children}\n          </Tabs.TabContents>\n        </Tabs.Container>\n      </Page.Contents>\n    )\n  }\n}\n\nexport default LoadDataTabbedPage\n","import React, {Component} from 'react'\n\n// Components\nimport {Page} from '@influxdata/clockface'\nimport PageTitleWithOrg from 'src/shared/components/PageTitleWithOrg'\n\nclass LoadDataHeader extends Component {\n  public render() {\n    return (\n      <Page.Header fullWidth={false}>\n        <Page.HeaderLeft>\n          <PageTitleWithOrg title=\"Load Data\" />\n        </Page.HeaderLeft>\n        <Page.HeaderRight />\n      </Page.Header>\n    )\n  }\n}\n\nexport default LoadDataHeader\n","// Libraries\nimport React, {SFC} from 'react'\n\n// Components\nimport {FlexBox, FlexDirection, JustifyContent} from '@influxdata/clockface'\n\ninterface Props {\n  children: JSX.Element[] | JSX.Element\n  className?: string\n}\n\nconst SettingsTabbedPageHeader: SFC<Props> = ({children, className}) => (\n  <FlexBox\n    direction={FlexDirection.Row}\n    justifyContent={JustifyContent.SpaceBetween}\n    style={{marginBottom: '32px'}}\n    className={className}\n  >\n    {children}\n  </FlexBox>\n)\n\nexport default SettingsTabbedPageHeader\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Context, Alignment, ComponentSize} from 'src/clockface'\n\nimport {\n  ButtonShape,\n  ComponentColor,\n  IconFont,\n  FlexBox,\n  AlignItems,\n  FlexDirection,\n} from '@influxdata/clockface'\n\n// Types\nimport {PrettyBucket} from 'src/buckets/components/BucketCard'\n\ninterface Props {\n  bucket: PrettyBucket\n  onDeleteBucket: (bucket: PrettyBucket) => void\n}\n\nexport default class BucketContextMenu extends PureComponent<Props> {\n  public render() {\n    return (\n      <>\n        <Context align={Alignment.Center}>\n          <FlexBox\n            alignItems={AlignItems.Center}\n            direction={FlexDirection.Row}\n            margin={ComponentSize.Small}\n          >\n            {this.deleteButton}\n          </FlexBox>\n        </Context>\n      </>\n    )\n  }\n\n  private get deleteButton() {\n    const {bucket, onDeleteBucket} = this.props\n    if (bucket.type === 'user') {\n      return (\n        <Context.Menu\n          icon={IconFont.Trash}\n          color={ComponentColor.Danger}\n          shape={ButtonShape.Default}\n          text=\"Delete Bucket\"\n          testID={`context-delete-menu ${bucket.name}`}\n        >\n          <Context.Item\n            label=\"Confirm\"\n            action={onDeleteBucket}\n            value={bucket}\n            testID={`context-delete-bucket ${bucket.name}`}\n          />\n        </Context.Menu>\n      )\n    } else {\n      return null\n    }\n  }\n}\n","// Libraries\nimport React, {PureComponent, createRef, RefObject} from 'react'\n\n// Components\nimport CloudExclude from 'src/shared/components/cloud/CloudExclude'\nimport {\n  Button,\n  ButtonRef,\n  IconFont,\n  ComponentSize,\n  ComponentColor,\n  Popover,\n  Appearance,\n  PopoverPosition,\n} from '@influxdata/clockface'\n\ninterface Props {\n  onAddCollector: () => void\n  onAddLineProtocol: () => void\n  onAddScraper: () => void\n}\n\nexport default class BucketAddDataButton extends PureComponent<Props> {\n  private triggerRef: RefObject<ButtonRef> = createRef()\n\n  public render() {\n    const {onAddCollector, onAddLineProtocol, onAddScraper} = this.props\n\n    return (\n      <>\n        <Popover\n          color={ComponentColor.Secondary}\n          appearance={Appearance.Outline}\n          position={PopoverPosition.ToTheRight}\n          triggerRef={this.triggerRef}\n          distanceFromTrigger={8}\n          contents={onHide => (\n            <div className=\"bucket-add-data\" onClick={onHide}>\n              <div className=\"bucket-add-data--option\" onClick={onAddCollector}>\n                <div className=\"bucket-add-data--option-header\">\n                  Configure Telegraf Agent\n                </div>\n                <div className=\"bucket-add-data--option-desc\">\n                  Configure a Telegraf agent to push data into your bucket.\n                </div>\n              </div>\n              <div\n                className=\"bucket-add-data--option\"\n                onClick={onAddLineProtocol}\n              >\n                <div\n                  className=\"bucket-add-data--option-header\"\n                  data-testid=\"bucket-add-line-protocol\"\n                >\n                  Line Protocol\n                </div>\n                <div className=\"bucket-add-data--option-desc\">\n                  Quickly load an existing line protocol file.\n                </div>\n              </div>\n              <CloudExclude>\n                <div className=\"bucket-add-data--option\" onClick={onAddScraper}>\n                  <div className=\"bucket-add-data--option-header\">\n                    Scrape Metrics\n                  </div>\n                  <div className=\"bucket-add-data--option-desc\">\n                    Add a scrape target to pull data into your bucket.\n                  </div>\n                </div>\n              </CloudExclude>\n            </div>\n          )}\n        />\n        <Button\n          ref={this.triggerRef}\n          text=\"Add Data\"\n          testID=\"add-data--button\"\n          icon={IconFont.Plus}\n          size={ComponentSize.ExtraSmall}\n          color={ComponentColor.Secondary}\n        />\n      </>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\n// Components\nimport {\n  Button,\n  ResourceCard,\n  FlexBox,\n  FlexDirection,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport BucketContextMenu from 'src/buckets/components/BucketContextMenu'\nimport BucketAddDataButton from 'src/buckets/components/BucketAddDataButton'\nimport InlineLabels from 'src/shared/components/inlineLabels/InlineLabels'\nimport {FeatureFlag} from 'src/shared/utils/featureFlag'\n\n// Constants\nimport {isSystemBucket} from 'src/buckets/constants/index'\n\n// Types\nimport {Bucket, Label} from 'src/types'\nimport {DataLoaderType} from 'src/types/dataLoaders'\n\n// Actions\nimport {addBucketLabel, deleteBucketLabel} from 'src/buckets/actions/thunks'\n\nexport interface PrettyBucket extends Bucket {\n  ruleString: string\n}\n\ninterface DispatchProps {\n  onAddBucketLabel: typeof addBucketLabel\n  onDeleteBucketLabel: typeof deleteBucketLabel\n}\n\ninterface Props {\n  bucket: PrettyBucket\n  onEditBucket: (b: PrettyBucket) => void\n  onDeleteData: (b: PrettyBucket) => void\n  onDeleteBucket: (b: PrettyBucket) => void\n  onAddData: (b: PrettyBucket, d: DataLoaderType, l: string) => void\n  onUpdateBucket: (b: PrettyBucket) => void\n  onFilterChange: (searchTerm: string) => void\n}\n\nclass BucketRow extends PureComponent<Props & WithRouterProps & DispatchProps> {\n  public render() {\n    const {bucket, onDeleteBucket} = this.props\n    return (\n      <ResourceCard\n        testID={`bucket-card ${bucket.name}`}\n        contextMenu={\n          !isSystemBucket(bucket.name) && (\n            <BucketContextMenu\n              bucket={bucket}\n              onDeleteBucket={onDeleteBucket}\n            />\n          )\n        }\n        name={this.cardName}\n        metaData={this.cardMetaItems}\n      >\n        {this.actionButtons}\n      </ResourceCard>\n    )\n  }\n\n  private get cardName(): JSX.Element {\n    const {bucket} = this.props\n    if (bucket.type === 'user') {\n      return (\n        <ResourceCard.Name\n          testID={`bucket--card--name ${bucket.name}`}\n          onClick={this.handleNameClick}\n          name={bucket.name}\n        />\n      )\n    }\n\n    return (\n      <ResourceCard.Name\n        testID={`bucket--card--name ${bucket.name}`}\n        name={bucket.name}\n      />\n    )\n  }\n\n  private get cardMetaItems(): JSX.Element[] {\n    const {bucket} = this.props\n    if (bucket.type === 'system') {\n      return [\n        <span\n          className=\"system-bucket\"\n          key={`system-bucket-indicator-${bucket.id}`}\n        >\n          System Bucket\n        </span>,\n        <>Retention: {bucket.ruleString}</>,\n      ]\n    }\n\n    return [<>Retention: {bucket.ruleString}</>]\n  }\n\n  private get actionButtons(): JSX.Element {\n    const {bucket, onFilterChange} = this.props\n    if (bucket.type === 'user') {\n      return (\n        <FlexBox\n          direction={FlexDirection.Row}\n          margin={ComponentSize.Small}\n          style={{marginTop: '4px'}}\n        >\n          <InlineLabels\n            selectedLabelIDs={bucket.labels}\n            onFilterChange={onFilterChange}\n            onAddLabel={this.handleAddLabel}\n            onRemoveLabel={this.handleRemoveLabel}\n          />\n          <BucketAddDataButton\n            onAddCollector={this.handleAddCollector}\n            onAddLineProtocol={this.handleAddLineProtocol}\n            onAddScraper={this.handleAddScraper}\n          />\n          <Button\n            text=\"Rename\"\n            testID=\"bucket-rename\"\n            size={ComponentSize.ExtraSmall}\n            onClick={this.handleRenameBucket}\n          />\n          <FeatureFlag name=\"deleteWithPredicate\">\n            <Button\n              text=\"Delete Data By Filter\"\n              testID=\"bucket-delete-bucket\"\n              size={ComponentSize.ExtraSmall}\n              onClick={this.handleDeleteData}\n            />\n          </FeatureFlag>\n        </FlexBox>\n      )\n    }\n  }\n\n  private handleAddLabel = (label: Label) => {\n    const {bucket, onAddBucketLabel} = this.props\n\n    onAddBucketLabel(bucket.id, label)\n  }\n\n  private handleRemoveLabel = (label: Label) => {\n    const {bucket, onDeleteBucketLabel} = this.props\n\n    onDeleteBucketLabel(bucket.id, label)\n  }\n\n  private handleDeleteData = () => {\n    const {onDeleteData, bucket} = this.props\n\n    onDeleteData(bucket)\n  }\n\n  private handleRenameBucket = () => {\n    const {\n      params: {orgID},\n      bucket: {id},\n      router,\n    } = this.props\n\n    router.push(`/orgs/${orgID}/load-data/buckets/${id}/rename`)\n  }\n\n  private handleNameClick = (): void => {\n    const {\n      params: {orgID},\n      bucket: {id},\n      router,\n    } = this.props\n\n    router.push(`/orgs/${orgID}/load-data/buckets/${id}/edit`)\n  }\n\n  private handleAddCollector = (): void => {\n    const {\n      params: {orgID},\n      bucket: {id},\n    } = this.props\n\n    const link = `/orgs/${orgID}/load-data/buckets/${id}/telegrafs/new`\n    this.props.onAddData(this.props.bucket, DataLoaderType.Streaming, link)\n  }\n\n  private handleAddLineProtocol = (): void => {\n    const {\n      params: {orgID},\n      bucket: {id},\n    } = this.props\n\n    const link = `/orgs/${orgID}/load-data/buckets/${id}/line-protocols/new`\n    this.props.onAddData(this.props.bucket, DataLoaderType.LineProtocol, link)\n  }\n\n  private handleAddScraper = (): void => {\n    const {\n      params: {orgID},\n      bucket: {id},\n    } = this.props\n\n    const link = `/orgs/${orgID}/load-data/buckets/${id}/scrapers/new`\n    this.props.onAddData(this.props.bucket, DataLoaderType.Scraping, link)\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onAddBucketLabel: addBucketLabel,\n  onDeleteBucketLabel: deleteBucketLabel,\n}\n\nexport default connect<{}, DispatchProps>(\n  null,\n  mdtp\n)(withRouter<Props>(BucketRow))\n","import _ from 'lodash'\n\nexport interface Duration {\n  days: number\n  hours: number\n  minutes: number\n  seconds: number\n}\n\nconst secondsToDuration = (seconds: number): Duration => {\n  let minutes = Math.floor(seconds / 60)\n  seconds = seconds % 60\n  let hours = Math.floor(minutes / 60)\n  minutes = minutes % 60\n  const days = Math.floor(hours / 24)\n  hours = hours % 24\n\n  return {\n    days,\n    hours,\n    minutes,\n    seconds,\n  }\n}\n\nexport const ruleToString = (seconds: number): string => {\n  const duration = secondsToDuration(seconds)\n  const rpString = Object.entries(duration).reduce((acc, [k, v]) => {\n    if (!v) {\n      return acc\n    }\n\n    return `${acc} ${v} ${k}`\n  }, '')\n\n  if (!rpString) {\n    return 'forever'\n  }\n\n  return rpString\n}\n","import {Bucket} from 'src/types'\n\nimport {PrettyBucket} from 'src/buckets/components/BucketCard'\n\n// Utils\nimport {ruleToString} from 'src/utils/formatting'\n\nexport const prettyBuckets = (buckets: Bucket[]): PrettyBucket[] => {\n  return buckets.map(b => {\n    const expire = b.retentionRules.find(rule => rule.type === 'expire')\n\n    if (!expire) {\n      return {\n        ...b,\n        ruleString: 'forever',\n      }\n    }\n\n    return {\n      ...b,\n      ruleString: ruleToString(expire.everySeconds),\n    }\n  })\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport BucketCard, {PrettyBucket} from 'src/buckets/components/BucketCard'\nimport {ResourceList} from '@influxdata/clockface'\n\n// Actions\nimport {setBucketInfo} from 'src/dataLoaders/actions/steps'\n\n// Selectors\nimport {getSortedResources} from 'src/shared/utils/sort'\n\n// Types\nimport {OverlayState} from 'src/types'\nimport {DataLoaderType} from 'src/types/dataLoaders'\nimport {setDataLoadersType} from 'src/dataLoaders/actions/dataLoaders'\nimport {AppState} from 'src/types'\nimport {Sort} from '@influxdata/clockface'\nimport {SortTypes} from 'src/shared/utils/sort'\n\n// Utils\nimport {prettyBuckets} from 'src/shared/utils/prettyBucket'\n\ntype SortKey = keyof PrettyBucket | 'retentionRules[0].everySeconds'\n\ninterface OwnProps {\n  buckets: PrettyBucket[]\n  emptyState: JSX.Element\n  onUpdateBucket: (b: PrettyBucket) => void\n  onDeleteBucket: (b: PrettyBucket) => void\n  onFilterChange: (searchTerm: string) => void\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (\n    sortType: SortTypes\n  ) => (nextSort: Sort, sortKey: SortKey) => void\n}\n\ninterface DispatchProps {\n  onSetBucketInfo: typeof setBucketInfo\n  onSetDataLoadersType: typeof setDataLoadersType\n}\n\ninterface StateProps {\n  dataLoaderType: DataLoaderType\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\ninterface State {\n  bucketID: string\n  bucketOverlayState: OverlayState\n}\n\nclass BucketList extends PureComponent<Props & WithRouterProps, State> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  constructor(props) {\n    super(props)\n    const bucketID = get(this, 'props.buckets.0.id', null)\n\n    this.state = {\n      bucketID,\n      bucketOverlayState: OverlayState.Closed,\n    }\n  }\n\n  public render() {\n    const {emptyState, sortKey, sortDirection, onClickColumn} = this.props\n    return (\n      <>\n        <ResourceList>\n          <ResourceList.Header>\n            <ResourceList.Sorter\n              name=\"Name\"\n              sortKey={this.headerKeys[0]}\n              sort={sortKey === this.headerKeys[0] ? sortDirection : Sort.None}\n              onClick={onClickColumn(SortTypes.String)}\n              testID=\"name-sorter\"\n            />\n            <ResourceList.Sorter\n              name=\"Retention\"\n              sortKey={this.headerKeys[1]}\n              sort={sortKey === this.headerKeys[1] ? sortDirection : Sort.None}\n              onClick={onClickColumn(SortTypes.Float)}\n              testID=\"retention-sorter\"\n            />\n          </ResourceList.Header>\n          <ResourceList.Body emptyState={emptyState}>\n            {this.listBuckets}\n          </ResourceList.Body>\n        </ResourceList>\n      </>\n    )\n  }\n\n  private get headerKeys(): SortKey[] {\n    return ['name', 'retentionRules[0].everySeconds']\n  }\n\n  private get listBuckets(): JSX.Element[] {\n    const {\n      buckets,\n      sortKey,\n      sortDirection,\n      sortType,\n      onDeleteBucket,\n      onFilterChange,\n    } = this.props\n    const sortedBuckets = this.memGetSortedResources(\n      prettyBuckets(buckets),\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    return sortedBuckets.map(bucket => {\n      return (\n        <BucketCard\n          key={bucket.id}\n          bucket={bucket}\n          onEditBucket={this.handleStartEdit}\n          onDeleteBucket={onDeleteBucket}\n          onDeleteData={this.handleStartDeleteData}\n          onAddData={this.handleStartAddData}\n          onUpdateBucket={this.handleUpdateBucket}\n          onFilterChange={onFilterChange}\n        />\n      )\n    })\n  }\n\n  private handleStartEdit = (bucket: PrettyBucket) => {\n    const {orgID} = this.props.params\n\n    this.props.router.push(`/orgs/${orgID}/load-data/buckets/${bucket.id}/edit`)\n  }\n\n  private handleStartDeleteData = (bucket: PrettyBucket) => {\n    const {orgID} = this.props.params\n\n    this.props.router.push(\n      `/orgs/${orgID}/load-data/buckets/${bucket.id}/delete-data`\n    )\n  }\n\n  private handleStartAddData = (\n    bucket: PrettyBucket,\n    dataLoaderType: DataLoaderType,\n    link: string\n  ) => {\n    const {onSetBucketInfo, onSetDataLoadersType, router} = this.props\n    onSetBucketInfo(bucket.orgID, bucket.name, bucket.id)\n\n    this.setState({\n      bucketID: bucket.id,\n    })\n\n    onSetDataLoadersType(dataLoaderType)\n    router.push(link)\n  }\n\n  private handleUpdateBucket = (updatedBucket: PrettyBucket) => {\n    this.props.onUpdateBucket(updatedBucket)\n    this.setState({bucketOverlayState: OverlayState.Closed})\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    dataLoaderType: state.dataLoading.dataLoaders.type,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onSetBucketInfo: setBucketInfo,\n  onSetDataLoadersType: setDataLoadersType,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(BucketList))\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {Dropdown, ComponentStatus} from '@influxdata/clockface'\n\n// Utils\nimport {areDurationsEqual} from 'src/shared/utils/duration'\n\nexport interface DurationOption {\n  duration: string\n  displayText: string\n}\n\ninterface Props {\n  selectedDuration: string\n  onSelectDuration: (duration: string) => any\n  durations: DurationOption[]\n  disabled?: boolean\n}\n\nconst DurationSelector: FunctionComponent<Props> = ({\n  selectedDuration,\n  onSelectDuration,\n  durations,\n  disabled = false,\n}) => {\n  let resolvedDurations = durations\n  let selected: DurationOption = durations.find(\n    d =>\n      selectedDuration === d.duration ||\n      areDurationsEqual(selectedDuration, d.duration)\n  )\n\n  if (!selected) {\n    selected = {duration: selectedDuration, displayText: selectedDuration}\n    resolvedDurations = [selected, ...resolvedDurations]\n  }\n\n  return (\n    <Dropdown\n      testID=\"duration-selector\"\n      button={(active, onClick) => (\n        <Dropdown.Button\n          testID=\"duration-selector--button\"\n          active={active}\n          onClick={onClick}\n          status={getStatus(disabled)}\n        >\n          {selected.displayText}\n        </Dropdown.Button>\n      )}\n      menu={onCollapse => (\n        <Dropdown.Menu onCollapse={onCollapse} testID=\"duration-selector--menu\">\n          {resolvedDurations.map(({duration, displayText}) => (\n            <Dropdown.Item\n              id={duration}\n              key={duration}\n              value={duration}\n              testID={`duration-selector--${duration}`}\n              selected={duration === selectedDuration}\n              onClick={onSelectDuration}\n            >\n              {displayText}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      )}\n    />\n  )\n}\n\nconst getStatus = (disabled: boolean): ComponentStatus => {\n  if (disabled) {\n    return ComponentStatus.Disabled\n  }\n\n  return ComponentStatus.Default\n}\n\nexport default DurationSelector\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {SelectGroup, ButtonShape} from '@influxdata/clockface'\nimport DurationSelector, {\n  DurationOption,\n} from 'src/shared/components/DurationSelector'\n\n// Utils\nimport {parseDuration, durationToMilliseconds} from 'src/shared/utils/duration'\nimport {extractBucketMaxRetentionSeconds} from 'src/cloud/utils/limits'\n\n// Types\nimport {AppState} from 'src/types'\n\nexport const DEFAULT_SECONDS = 30 * 24 * 60 * 60 // 30 days\n\nexport const DURATION_OPTIONS: DurationOption[] = [\n  {duration: '1h', displayText: '1 hour'},\n  {duration: '6h', displayText: '6 hours'},\n  {duration: '12h', displayText: '12 hours'},\n  {duration: '24h', displayText: '24 hours'},\n  {duration: '48h', displayText: '48 hours'},\n  {duration: '72h', displayText: '72 hours'},\n  {duration: '7d', displayText: '7 days'},\n  {duration: '14d', displayText: '14 days'},\n  {duration: '30d', displayText: '30 days'},\n  {duration: '90d', displayText: '90 days'},\n  {duration: '1y', displayText: '1 year'},\n]\n\ninterface StateProps {\n  maxRetentionSeconds: number\n}\n\ninterface OwnProps {\n  retentionSeconds: number\n  type: 'expire'\n  onChangeRetentionRule: (seconds: number) => void\n  onChangeRuleType: (type: 'expire' | null) => void\n}\n\ntype Props = OwnProps & StateProps\n\nclass Retention extends PureComponent<Props> {\n  public render() {\n    const {retentionSeconds, maxRetentionSeconds, type} = this.props\n\n    return (\n      <>\n        <SelectGroup\n          shape={ButtonShape.StretchToFit}\n          className=\"retention--radio\"\n        >\n          <SelectGroup.Option\n            name=\"bucket-retention\"\n            id=\"never\"\n            testID=\"retention-never--button\"\n            active={type === null}\n            onClick={this.handleRadioClick}\n            value={null}\n            titleText=\"Never delete data\"\n            disabled={!!maxRetentionSeconds}\n          >\n            Never\n          </SelectGroup.Option>\n          <SelectGroup.Option\n            name=\"bucket-retention\"\n            id=\"intervals\"\n            active={type === 'expire'}\n            onClick={this.handleRadioClick}\n            value=\"expire\"\n            testID=\"retention-intervals--button\"\n            titleText=\"Delete data older than a duration\"\n          >\n            Older Than\n          </SelectGroup.Option>\n        </SelectGroup>\n        {type === 'expire' && (\n          <DurationSelector\n            selectedDuration={`${retentionSeconds}s`}\n            onSelectDuration={this.handleSelectDuration}\n            durations={this.durations}\n          />\n        )}\n      </>\n    )\n  }\n\n  private get durations() {\n    const {maxRetentionSeconds} = this.props\n\n    if (!maxRetentionSeconds) {\n      return DURATION_OPTIONS\n    }\n\n    return DURATION_OPTIONS.filter(\n      ({duration}) =>\n        durationToMilliseconds(parseDuration(duration)) <=\n        maxRetentionSeconds * 1000\n    )\n  }\n\n  private handleRadioClick = (type: 'expire' | null) => {\n    this.props.onChangeRuleType(type)\n  }\n\n  private handleSelectDuration = (durationStr: string) => {\n    const durationSeconds =\n      durationToMilliseconds(parseDuration(durationStr)) / 1000\n\n    this.props.onChangeRetentionRule(durationSeconds)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  maxRetentionSeconds: extractBucketMaxRetentionSeconds(state.cloud.limits),\n})\n\nexport default connect<StateProps, {}, OwnProps>(mstp)(Retention)\n","// Libraries\nimport React, {PureComponent, ChangeEvent, FormEvent} from 'react'\nimport moment from 'moment'\n\n// Components\nimport {Form, Input, Button, Grid} from '@influxdata/clockface'\nimport Retention from 'src/buckets/components/Retention'\n\n// Constants\nimport {MIN_RETENTION_SECONDS} from 'src/buckets/constants'\nimport {isSystemBucket} from 'src/buckets/constants/index'\n\n// Types\nimport {\n  ButtonType,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\ninterface Props {\n  name: string\n  retentionSeconds: number\n  ruleType: 'expire'\n  onSubmit: (e: FormEvent<HTMLFormElement>) => void\n  onCloseModal: () => void\n  onChangeRetentionRule: (seconds: number) => void\n  onChangeRuleType: (t: 'expire' | null) => void\n  onChangeInput: (e: ChangeEvent<HTMLInputElement>) => void\n  disableRenaming: boolean\n  buttonText: string\n}\n\nexport default class BucketOverlayForm extends PureComponent<Props> {\n  public render() {\n    const {\n      name,\n      onSubmit,\n      ruleType,\n      buttonText,\n      retentionSeconds,\n      disableRenaming,\n      onCloseModal,\n      onChangeInput,\n      onChangeRuleType,\n      onChangeRetentionRule,\n    } = this.props\n\n    const nameInputStatus = disableRenaming && ComponentStatus.Disabled\n\n    return (\n      <Form onSubmit={onSubmit}>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Form.ValidationElement\n                value={name}\n                label=\"Name\"\n                helpText={this.nameHelpText}\n                validationFunc={this.handleNameValidation}\n                required={true}\n              >\n                {status => (\n                  <Input\n                    status={nameInputStatus || status}\n                    placeholder=\"Give your bucket a name\"\n                    name=\"name\"\n                    autoFocus={true}\n                    value={name}\n                    onChange={onChangeInput}\n                  />\n                )}\n              </Form.ValidationElement>\n              <Form.Element\n                label=\"Delete Data\"\n                errorMessage={this.ruleErrorMessage}\n              >\n                <Retention\n                  type={ruleType}\n                  retentionSeconds={retentionSeconds}\n                  onChangeRuleType={onChangeRuleType}\n                  onChangeRetentionRule={onChangeRetentionRule}\n                />\n              </Form.Element>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Form.Footer>\n                <Button\n                  text=\"Cancel\"\n                  onClick={onCloseModal}\n                  type={ButtonType.Button}\n                />\n                <Button\n                  text={buttonText}\n                  color={this.submitButtonColor}\n                  status={this.submitButtonStatus}\n                  type={ButtonType.Submit}\n                />\n              </Form.Footer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form>\n    )\n  }\n\n  private handleNameValidation = (name: string): string | null => {\n    if (isSystemBucket(name)) {\n      return 'Only system bucket names can begin with _'\n    }\n\n    if (!name) {\n      return 'This bucket needs a name'\n    }\n\n    return null\n  }\n\n  private get nameHelpText(): string {\n    if (this.props.disableRenaming) {\n      return 'To rename the bucket use the RENAME button. Bucket renaming is not allowed here.'\n    }\n\n    return ''\n  }\n\n  private get submitButtonColor(): ComponentColor {\n    const {buttonText} = this.props\n\n    if (buttonText === 'Save Changes') {\n      return ComponentColor.Success\n    }\n\n    return ComponentColor.Primary\n  }\n\n  private get submitButtonStatus(): ComponentStatus {\n    const {name} = this.props\n    const nameHasErrors = this.handleNameValidation(name)\n\n    if (nameHasErrors || this.retentionIsTooShort) {\n      return ComponentStatus.Disabled\n    }\n\n    return ComponentStatus.Default\n  }\n\n  private get retentionIsTooShort(): boolean {\n    const {retentionSeconds, ruleType} = this.props\n\n    return ruleType === 'expire' && retentionSeconds < MIN_RETENTION_SECONDS\n  }\n\n  private get ruleErrorMessage(): string {\n    if (this.retentionIsTooShort) {\n      const humanDuration = moment\n        .duration(MIN_RETENTION_SECONDS, 'seconds')\n        .humanize()\n\n      return `Retention period must be at least ${humanDuration}`\n    }\n\n    return ''\n  }\n}\n","// Libraries\nimport React, {PureComponent, ChangeEvent, FormEvent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport BucketOverlayForm from 'src/buckets/components/BucketOverlayForm'\n\n// Utils\nimport {extractBucketMaxRetentionSeconds} from 'src/cloud/utils/limits'\n\n// Constants\nimport {DEFAULT_SECONDS} from 'src/buckets/components/Retention'\n\n// Types\nimport {Organization, Bucket, AppState} from 'src/types'\n\nconst DEFAULT_RULES = [\n  {type: 'expire' as 'expire', everySeconds: DEFAULT_SECONDS},\n]\n\ninterface StateProps {\n  isRetentionLimitEnforced: boolean\n}\n\ninterface OwnProps {\n  org: Organization\n  onCloseModal: () => void\n  onCreateBucket: (bucket: Partial<Bucket>) => void\n}\n\ntype Props = StateProps & OwnProps\n\ninterface State {\n  bucket: Bucket\n  ruleType: 'expire'\n}\n\nclass CreateBucketOverlay extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      bucket: {\n        name: '',\n        retentionRules: props.isRetentionLimitEnforced ? DEFAULT_RULES : [],\n      },\n      ruleType: props.isRetentionLimitEnforced ? 'expire' : null,\n    }\n  }\n\n  public render() {\n    const {onCloseModal} = this.props\n    const {bucket, ruleType} = this.state\n\n    return (\n      <Overlay.Container maxWidth={400}>\n        <Overlay.Header\n          title=\"Create Bucket\"\n          onDismiss={this.props.onCloseModal}\n        />\n        <Overlay.Body>\n          <BucketOverlayForm\n            name={bucket.name}\n            buttonText=\"Create\"\n            disableRenaming={false}\n            ruleType={ruleType}\n            onCloseModal={onCloseModal}\n            onSubmit={this.handleSubmit}\n            onChangeInput={this.handleChangeInput}\n            retentionSeconds={this.retentionSeconds}\n            onChangeRuleType={this.handleChangeRuleType}\n            onChangeRetentionRule={this.handleChangeRetentionRule}\n          />\n        </Overlay.Body>\n      </Overlay.Container>\n    )\n  }\n\n  private get retentionSeconds(): number {\n    const rule = this.state.bucket.retentionRules.find(r => r.type === 'expire')\n\n    if (!rule) {\n      return 3600\n    }\n\n    return rule.everySeconds\n  }\n\n  private handleChangeRetentionRule = (everySeconds: number): void => {\n    const bucket = {\n      ...this.state.bucket,\n      retentionRules: [{type: 'expire' as 'expire', everySeconds}],\n    }\n\n    this.setState({bucket})\n  }\n\n  private handleChangeRuleType = (ruleType: 'expire' | null) => {\n    if (ruleType === 'expire') {\n      this.setState({\n        ruleType,\n        bucket: {...this.state.bucket, retentionRules: DEFAULT_RULES},\n      })\n    } else {\n      this.setState({\n        ruleType,\n        bucket: {...this.state.bucket, retentionRules: []},\n      })\n    }\n  }\n\n  private handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault()\n    this.handleCreateBucket()\n  }\n\n  private handleCreateBucket = (): void => {\n    const {onCreateBucket, org} = this.props\n    const orgID = org.id\n    const organization = org.name\n\n    const bucket = {\n      ...this.state.bucket,\n      orgID,\n      organization,\n    }\n\n    onCreateBucket(bucket)\n  }\n\n  private handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    const key = e.target.name\n    const bucket = {...this.state.bucket, [key]: value}\n\n    this.setState({bucket})\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  isRetentionLimitEnforced: !!extractBucketMaxRetentionSeconds(\n    state.cloud.limits\n  ),\n})\n\nexport default connect<StateProps, {}, OwnProps>(mstp)(CreateBucketOverlay)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {Panel, InfluxColors} from '@influxdata/clockface'\n\nconst BucketExplainer: FunctionComponent = () => (\n  <Panel backgroundColor={InfluxColors.Smoke} style={{marginTop: '32px'}}>\n    <Panel.Header>\n      <h5>What is a Bucket?</h5>\n    </Panel.Header>\n    <Panel.Body>\n      <p>\n        A bucket is a named location where time series data is stored. All\n        buckets have a <b>Retention Policy</b>, a duration of time that each\n        data point persists.\n        <br />\n        <br />\n        Here's{' '}\n        <a\n          href=\"https://v2.docs.influxdata.com/v2.0/write-data/\"\n          target=\"_blank\"\n        >\n          how to write data\n        </a>{' '}\n        into your bucket.\n      </p>\n    </Panel.Body>\n  </Panel>\n)\n\nexport default BucketExplainer\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {isEmpty} from 'lodash'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {\n  Grid,\n  IconFont,\n  ComponentSize,\n  ComponentColor,\n  Sort,\n  Button,\n  EmptyState,\n  ComponentStatus,\n  Columns,\n  Overlay,\n} from '@influxdata/clockface'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport SettingsTabbedPageHeader from 'src/settings/components/SettingsTabbedPageHeader'\nimport FilterList from 'src/shared/components/FilterList'\nimport BucketList from 'src/buckets/components/BucketList'\nimport {PrettyBucket} from 'src/buckets/components/BucketCard'\nimport CreateBucketOverlay from 'src/buckets/components/CreateBucketOverlay'\nimport AssetLimitAlert from 'src/cloud/components/AssetLimitAlert'\nimport BucketExplainer from 'src/buckets/components/BucketExplainer'\n\n// Actions\nimport {\n  createBucket,\n  updateBucket,\n  deleteBucket,\n} from 'src/buckets/actions/thunks'\nimport {\n  checkBucketLimits as checkBucketLimitsAction,\n  LimitStatus,\n} from 'src/cloud/actions/limits'\n\n// Utils\nimport {prettyBuckets} from 'src/shared/utils/prettyBucket'\nimport {extractBucketLimits} from 'src/cloud/utils/limits'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {\n  OverlayState,\n  AppState,\n  Bucket,\n  Organization,\n  ResourceType,\n} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  org: Organization\n  buckets: Bucket[]\n  limitStatus: LimitStatus\n}\n\ninterface DispatchProps {\n  createBucket: typeof createBucket\n  updateBucket: typeof updateBucket\n  deleteBucket: typeof deleteBucket\n  checkBucketLimits: typeof checkBucketLimitsAction\n}\n\ninterface State {\n  searchTerm: string\n  overlayState: OverlayState\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ntype Props = DispatchProps & StateProps\n\ntype SortKey = keyof PrettyBucket\n\nconst FilterBuckets = FilterList<PrettyBucket>()\n\n@ErrorHandling\nclass BucketsTab extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      searchTerm: '',\n      overlayState: OverlayState.Closed,\n      sortKey: 'name',\n      sortDirection: Sort.Ascending,\n      sortType: SortTypes.String,\n    }\n  }\n\n  public componentDidMount() {\n    this.props.checkBucketLimits()\n  }\n\n  public render() {\n    const {org, buckets, limitStatus} = this.props\n    const {\n      searchTerm,\n      overlayState,\n      sortKey,\n      sortDirection,\n      sortType,\n    } = this.state\n\n    return (\n      <>\n        <AssetLimitAlert\n          resourceName=\"buckets\"\n          limitStatus={limitStatus}\n          className=\"load-data--asset-alert\"\n        />\n        <SettingsTabbedPageHeader>\n          <SearchWidget\n            placeholderText=\"Filter buckets...\"\n            searchTerm={searchTerm}\n            onSearch={this.handleFilterChange}\n          />\n          <Button\n            text=\"Create Bucket\"\n            icon={IconFont.Plus}\n            color={ComponentColor.Primary}\n            onClick={this.handleOpenModal}\n            testID=\"Create Bucket\"\n            status={this.createButtonStatus}\n            titleText={this.createButtonTitleText}\n          />\n        </SettingsTabbedPageHeader>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column\n              widthXS={Columns.Twelve}\n              widthSM={Columns.Eight}\n              widthMD={Columns.Ten}\n            >\n              <FilterBuckets\n                searchTerm={searchTerm}\n                searchKeys={['name', 'ruleString', 'labels[].name']}\n                list={prettyBuckets(buckets)}\n              >\n                {bs => (\n                  <BucketList\n                    buckets={bs}\n                    emptyState={this.emptyState}\n                    onUpdateBucket={this.handleUpdateBucket}\n                    onDeleteBucket={this.handleDeleteBucket}\n                    onFilterChange={this.handleFilterUpdate}\n                    sortKey={sortKey}\n                    sortDirection={sortDirection}\n                    sortType={sortType}\n                    onClickColumn={this.handleClickColumn}\n                  />\n                )}\n              </FilterBuckets>\n            </Grid.Column>\n            <Grid.Column\n              widthXS={Columns.Twelve}\n              widthSM={Columns.Four}\n              widthMD={Columns.Two}\n            >\n              <BucketExplainer />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Overlay visible={overlayState === OverlayState.Open}>\n          <CreateBucketOverlay\n            org={org}\n            onCloseModal={this.handleCloseModal}\n            onCreateBucket={this.handleCreateBucket}\n          />\n        </Overlay>\n      </>\n    )\n  }\n\n  private handleClickColumn = (sortType: SortTypes) => (\n    nextSort: Sort,\n    sortKey: SortKey\n  ) => {\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private handleUpdateBucket = (updatedBucket: PrettyBucket) => {\n    this.props.updateBucket(updatedBucket)\n  }\n\n  private handleDeleteBucket = ({id, name}: PrettyBucket) => {\n    this.props.deleteBucket(id, name)\n  }\n\n  private handleCreateBucket = (bucket: Bucket) => {\n    this.props.createBucket(bucket)\n    this.handleCloseModal()\n  }\n\n  private handleOpenModal = (): void => {\n    this.setState({overlayState: OverlayState.Open})\n  }\n\n  private handleCloseModal = (): void => {\n    this.setState({overlayState: OverlayState.Closed})\n  }\n\n  private handleFilterChange = (searchTerm: string): void => {\n    this.handleFilterUpdate(searchTerm)\n  }\n\n  private handleFilterUpdate = (searchTerm: string): void => {\n    this.setState({searchTerm})\n  }\n\n  private get createButtonStatus(): ComponentStatus {\n    if (this.props.limitStatus === LimitStatus.EXCEEDED) {\n      return ComponentStatus.Disabled\n    }\n    return ComponentStatus.Default\n  }\n\n  private get createButtonTitleText(): string {\n    if (this.props.limitStatus === LimitStatus.EXCEEDED) {\n      return 'This account has the maximum number of buckets allowed'\n    }\n    return 'Create a bucket'\n  }\n\n  private get emptyState(): JSX.Element {\n    const {searchTerm} = this.state\n\n    if (isEmpty(searchTerm)) {\n      return (\n        <EmptyState size={ComponentSize.Large}>\n          <EmptyState.Text>\n            Looks like there aren't any <b>Buckets</b>, why not create one?\n          </EmptyState.Text>\n          <Button\n            text=\"Create Bucket\"\n            icon={IconFont.Plus}\n            color={ComponentColor.Primary}\n            onClick={this.handleOpenModal}\n          />\n        </EmptyState>\n      )\n    }\n\n    return (\n      <EmptyState size={ComponentSize.Large}>\n        <EmptyState.Text>No Buckets match your query</EmptyState.Text>\n      </EmptyState>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  org: getOrg(state),\n  buckets: getAll<Bucket>(state, ResourceType.Buckets),\n  limitStatus: extractBucketLimits(state.cloud.limits),\n})\n\nconst mdtp = {\n  createBucket,\n  updateBucket,\n  deleteBucket,\n  checkBucketLimits: checkBucketLimitsAction,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(BucketsTab)\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport LoadDataTabbedPage from 'src/settings/components/LoadDataTabbedPage'\nimport LoadDataHeader from 'src/settings/components/LoadDataHeader'\nimport BucketsTab from 'src/buckets/components/BucketsTab'\nimport GetResources from 'src/resources/components/GetResources'\nimport GetAssetLimits from 'src/cloud/components/GetAssetLimits'\nimport LimitChecker from 'src/cloud/components/LimitChecker'\nimport RateLimitAlert from 'src/cloud/components/RateLimitAlert'\nimport {\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n  Page,\n} from '@influxdata/clockface'\n\n// Utils\nimport {extractRateLimitResources} from 'src/cloud/utils/limits'\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\ninterface StateProps {\n  org: Organization\n  limitedResources: string[]\n}\n\n@ErrorHandling\nclass BucketsIndex extends Component<StateProps> {\n  public render() {\n    const {org, children} = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Buckets', 'Load Data'])}>\n          <LimitChecker>\n            <LoadDataHeader />\n            <FlexBox\n              direction={FlexDirection.Row}\n              justifyContent={JustifyContent.Center}\n            >\n              {this.isCardinalityExceeded && (\n                <RateLimitAlert className=\"load-data--rate-alert\" />\n              )}\n            </FlexBox>\n            <LoadDataTabbedPage activeTab=\"buckets\" orgID={org.id}>\n              <GetResources\n                resources={[\n                  ResourceType.Buckets,\n                  ResourceType.Labels,\n                  ResourceType.Telegrafs,\n                ]}\n              >\n                <GetAssetLimits>\n                  <BucketsTab />\n                </GetAssetLimits>\n              </GetResources>\n            </LoadDataTabbedPage>\n          </LimitChecker>\n        </Page>\n        {children}\n      </>\n    )\n  }\n\n  private get isCardinalityExceeded(): boolean {\n    const {limitedResources} = this.props\n\n    return limitedResources.includes('cardinality')\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const {\n    cloud: {limits},\n  } = state\n  const org = getOrg(state)\n  const limitedResources = extractRateLimitResources(limits)\n\n  return {org, limitedResources}\n}\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(BucketsIndex)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport chroma from 'chroma-js'\n\n// Components\nimport {\n  Tabs,\n  Orientation,\n  ComponentSize,\n  InfluxColors,\n} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport CloudExclude from 'src/shared/components/cloud/CloudExclude'\n\ninterface OwnProps {\n  activeTab: string\n  orgID: string\n}\n\ntype Props = OwnProps & WithRouterProps\n\n@ErrorHandling\nclass SettingsNavigation extends PureComponent<Props> {\n  public render() {\n    const {activeTab, orgID, router} = this.props\n\n    const handleTabClick = (id: string): void => {\n      router.push(`/orgs/${orgID}/settings/${id}`)\n    }\n\n    const tabs = [\n      {\n        text: 'Members',\n        id: 'members',\n        cloudExclude: true,\n      },\n      {\n        text: 'Variables',\n        id: 'variables',\n        cloudExclude: false,\n      },\n      {\n        text: 'Templates',\n        id: 'templates',\n        cloudExclude: false,\n      },\n      {\n        text: 'Labels',\n        id: 'labels',\n        cloudExclude: false,\n      },\n      {\n        text: 'Org Profile',\n        id: 'profile',\n        cloudExclude: false,\n      },\n    ]\n\n    return (\n      <Tabs\n        orientation={Orientation.Horizontal}\n        padding={ComponentSize.Large}\n        backgroundColor={`${chroma(`${InfluxColors.Castle}`).alpha(0.1)}`}\n      >\n        {tabs.map(t => {\n          if (t.cloudExclude) {\n            return (\n              <CloudExclude key={t.id}>\n                <Tabs.Tab\n                  text={t.text}\n                  id={t.id}\n                  onClick={handleTabClick}\n                  active={t.id === activeTab}\n                  size={ComponentSize.Large}\n                  backgroundColor={InfluxColors.Castle}\n                />\n              </CloudExclude>\n            )\n          }\n          return (\n            <Tabs.Tab\n              key={t.id}\n              text={t.text}\n              id={t.id}\n              onClick={handleTabClick}\n              active={t.id === activeTab}\n              size={ComponentSize.Large}\n              backgroundColor={InfluxColors.Castle}\n            />\n          )\n        })}\n      </Tabs>\n    )\n  }\n}\n\nexport default withRouter(SettingsNavigation)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport SettingsNavigation from 'src/settings/components/SettingsNavigation'\nimport {\n  Tabs,\n  Orientation,\n  ComponentSize,\n  InfluxColors,\n  Page,\n} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  activeTab: string\n  orgID: string\n}\n\n@ErrorHandling\nclass SettingsTabbedPage extends PureComponent<Props> {\n  public render() {\n    const {activeTab, orgID, children} = this.props\n\n    return (\n      <Page.Contents fullWidth={false} scrollable={true}>\n        <Tabs.Container\n          orientation={Orientation.Horizontal}\n          className=\"tabs tabbed-page\"\n        >\n          <SettingsNavigation activeTab={activeTab} orgID={orgID} />\n          <Tabs.TabContents\n            padding={ComponentSize.Large}\n            backgroundColor={InfluxColors.Castle}\n          >\n            {children}\n          </Tabs.TabContents>\n        </Tabs.Container>\n      </Page.Contents>\n    )\n  }\n}\n\nexport default SettingsTabbedPage\n","import React, {Component} from 'react'\n\n// Components\nimport {Page} from '@influxdata/clockface'\nimport PageTitleWithOrg from 'src/shared/components/PageTitleWithOrg'\n\nclass SettingsHeader extends Component {\n  public render() {\n    return (\n      <Page.Header fullWidth={false}>\n        <Page.HeaderLeft>\n          <PageTitleWithOrg title=\"Settings\" />\n        </Page.HeaderLeft>\n        <Page.HeaderRight />\n      </Page.Header>\n    )\n  }\n}\n\nexport default SettingsHeader\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {\n  EmptyState,\n  IconFont,\n  ComponentColor,\n  Button,\n} from '@influxdata/clockface'\n\n// Types\nimport {ComponentSize} from '@influxdata/clockface'\n\ninterface Props {\n  searchTerm: string\n  onImport: () => void\n}\n\nconst EmptyTemplatesList: FunctionComponent<Props> = ({\n  searchTerm,\n  onImport,\n}) => {\n  if (searchTerm === '') {\n    return (\n      <EmptyState size={ComponentSize.Large}>\n        <EmptyState.Text>\n          Looks like you don't have any <b>Templates</b>, why not create one?\n        </EmptyState.Text>\n        <Button\n          text=\"Import Template\"\n          icon={IconFont.Plus}\n          color={ComponentColor.Primary}\n          onClick={onImport}\n        />\n      </EmptyState>\n    )\n  }\n\n  return (\n    <EmptyState size={ComponentSize.Large}>\n      <EmptyState.Text>No Templates match your search term</EmptyState.Text>\n    </EmptyState>\n  )\n}\n\nexport default EmptyTemplatesList\n","import * as defaultTemplates from 'src/templates/constants/defaultTemplates'\n\nconst DEFAULT_TEMPLATE_NAME = 'Untitled Template'\n\nexport {defaultTemplates, DEFAULT_TEMPLATE_NAME}\n","// Libraries\nimport React, {PureComponent, MouseEvent} from 'react'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {\n  Button,\n  ComponentSize,\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n} from '@influxdata/clockface'\n\n// Components\nimport {Context} from 'src/clockface'\nimport {ResourceCard, IconFont} from '@influxdata/clockface'\nimport InlineLabels from 'src/shared/components/inlineLabels/InlineLabels'\n\n// Actions\nimport {\n  deleteTemplate,\n  cloneTemplate,\n  updateTemplate,\n  createResourceFromTemplate,\n  removeTemplateLabelsAsync,\n  addTemplateLabelsAsync,\n} from 'src/templates/actions/thunks'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {ComponentColor} from '@influxdata/clockface'\nimport {AppState, Organization, Label, TemplateSummary} from 'src/types'\n\n// Constants\nimport {DEFAULT_TEMPLATE_NAME} from 'src/templates/constants'\n\ninterface OwnProps {\n  template: TemplateSummary\n  onFilterChange: (searchTerm: string) => void\n}\n\ninterface DispatchProps {\n  onDelete: typeof deleteTemplate\n  onClone: typeof cloneTemplate\n  onUpdate: typeof updateTemplate\n  onCreateFromTemplate: typeof createResourceFromTemplate\n  onAddTemplateLabels: typeof addTemplateLabelsAsync\n  onRemoveTemplateLabels: typeof removeTemplateLabelsAsync\n}\n\ninterface StateProps {\n  org: Organization\n}\n\ntype Props = DispatchProps & OwnProps & StateProps\n\nclass TemplateCard extends PureComponent<Props & WithRouterProps> {\n  public render() {\n    const {template, onFilterChange} = this.props\n\n    return (\n      <ResourceCard\n        testID=\"template-card\"\n        contextMenu={this.contextMenu}\n        name={\n          <ResourceCard.EditableName\n            onClick={this.handleNameClick}\n            onUpdate={this.handleUpdateTemplateName}\n            name={template.meta.name}\n            noNameString={DEFAULT_TEMPLATE_NAME}\n            testID=\"template-card--name\"\n            buttonTestID=\"template-card--name-button\"\n            inputTestID=\"template-card--input\"\n          />\n        }\n        description={this.description}\n        labels={\n          <InlineLabels\n            selectedLabelIDs={template.labels}\n            onFilterChange={onFilterChange}\n            onAddLabel={this.handleAddLabel}\n            onRemoveLabel={this.handleRemoveLabel}\n          />\n        }\n        metaData={[this.templateType]}\n      />\n    )\n  }\n\n  private handleUpdateTemplateName = (name: string) => {\n    const {template} = this.props\n\n    this.props.onUpdate(template.id, {\n      ...template,\n      meta: {...template.meta, name},\n    })\n  }\n\n  private handleUpdateTemplateDescription = (description: string) => {\n    const {template} = this.props\n\n    this.props.onUpdate(template.id, {\n      ...template,\n      meta: {...template.meta, description},\n    })\n  }\n\n  private get description(): JSX.Element {\n    const {template} = this.props\n    const description = get(template, 'meta.description', '')\n    const name = get(template, 'meta.name', '')\n\n    return (\n      <ResourceCard.EditableDescription\n        onUpdate={this.handleUpdateTemplateDescription}\n        description={description}\n        placeholder={`Describe ${name} Template`}\n      />\n    )\n  }\n\n  private get templateType(): JSX.Element {\n    const {template} = this.props\n\n    return (\n      <div className=\"resource-list--meta-item\">\n        {get(template, 'meta.type', '')}\n      </div>\n    )\n  }\n\n  private get contextMenu(): JSX.Element {\n    const {\n      template: {id},\n      onDelete,\n    } = this.props\n    return (\n      <FlexBox\n        margin={ComponentSize.Medium}\n        direction={FlexDirection.Row}\n        justifyContent={JustifyContent.FlexEnd}\n      >\n        <Button\n          text=\"Create\"\n          color={ComponentColor.Primary}\n          size={ComponentSize.ExtraSmall}\n          onClick={this.handleCreate}\n        />\n        <Context>\n          <Context.Menu\n            icon={IconFont.Duplicate}\n            color={ComponentColor.Secondary}\n          >\n            <Context.Item label=\"Clone\" action={this.handleClone} value={id} />\n          </Context.Menu>\n          <Context.Menu\n            icon={IconFont.Trash}\n            color={ComponentColor.Danger}\n            testID=\"context-delete-menu\"\n          >\n            <Context.Item\n              label=\"Delete\"\n              action={onDelete}\n              value={id}\n              testID=\"context-delete-task\"\n            />\n          </Context.Menu>\n        </Context>\n      </FlexBox>\n    )\n  }\n\n  private handleCreate = () => {\n    const {onCreateFromTemplate, template} = this.props\n\n    onCreateFromTemplate(template.id)\n  }\n\n  private handleClone = () => {\n    const {\n      template: {id},\n      onClone,\n    } = this.props\n    onClone(id)\n  }\n\n  private handleNameClick = (e: MouseEvent): void => {\n    e.preventDefault()\n\n    this.handleViewTemplate()\n  }\n\n  private handleViewTemplate = () => {\n    const {router, template, org} = this.props\n    router.push(`/orgs/${org.id}/settings/templates/${template.id}/view`)\n  }\n\n  private handleAddLabel = (label: Label): void => {\n    const {template, onAddTemplateLabels} = this.props\n\n    onAddTemplateLabels(template.id, [label])\n  }\n\n  private handleRemoveLabel = (label: Label): void => {\n    const {template, onRemoveTemplateLabels} = this.props\n\n    onRemoveTemplateLabels(template.id, [label])\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    org: getOrg(state),\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onDelete: deleteTemplate,\n  onClone: cloneTemplate,\n  onUpdate: updateTemplate,\n  onCreateFromTemplate: createResourceFromTemplate,\n  onAddTemplateLabels: addTemplateLabelsAsync,\n  onRemoveTemplateLabels: removeTemplateLabelsAsync,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(TemplateCard))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport {ResourceList} from '@influxdata/clockface'\nimport EmptyTemplatesList from 'src/templates/components/EmptyTemplatesList'\nimport TemplateCard from 'src/templates/components/TemplateCard'\n\n// Types\nimport {TemplateSummary} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {Sort} from 'src/clockface'\n\n// Selectors\nimport {getSortedResources} from 'src/shared/utils/sort'\n\ntype SortKey = 'meta.name'\n\ninterface Props {\n  templates: TemplateSummary[]\n  searchTerm: string\n  onFilterChange: (searchTerm: string) => void\n  onImport: () => void\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (nextSort: Sort, sortKey: SortKey) => void\n}\n\nexport default class TemplatesList extends PureComponent<Props> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  public render() {\n    const {\n      searchTerm,\n      onImport,\n      sortKey,\n      sortDirection,\n      onClickColumn,\n    } = this.props\n\n    const headerKeys: SortKey[] = ['meta.name']\n\n    return (\n      <>\n        <ResourceList>\n          <ResourceList.Header>\n            <ResourceList.Sorter\n              name=\"Name\"\n              sortKey={headerKeys[0]}\n              sort={sortKey === headerKeys[0] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n          </ResourceList.Header>\n          <ResourceList.Body\n            emptyState={\n              <EmptyTemplatesList searchTerm={searchTerm} onImport={onImport} />\n            }\n          >\n            {this.rows}\n          </ResourceList.Body>\n        </ResourceList>\n      </>\n    )\n  }\n\n  private get rows(): JSX.Element[] {\n    const {\n      templates,\n      sortKey,\n      sortDirection,\n      sortType,\n      onFilterChange,\n    } = this.props\n\n    const sortedTemplates = this.memGetSortedResources(\n      templates,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    return sortedTemplates.map(t => (\n      <TemplateCard\n        key={`template-id--${t.id}`}\n        template={t}\n        onFilterChange={onFilterChange}\n      />\n    ))\n  }\n}\n","// Libraries\nimport React, {PureComponent, MouseEvent} from 'react'\nimport {get} from 'lodash'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {\n  Button,\n  ComponentSize,\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n} from '@influxdata/clockface'\n\n// Components\nimport {ResourceCard} from '@influxdata/clockface'\n\n// Actions\nimport {createResourceFromStaticTemplate} from 'src/templates/actions/thunks'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {ComponentColor} from '@influxdata/clockface'\nimport {AppState, Organization, TemplateSummary} from 'src/types'\n\n// Constants\ninterface OwnProps {\n  template: TemplateSummary\n  name: string\n  onFilterChange: (searchTerm: string) => void\n}\n\ninterface DispatchProps {\n  onCreateFromTemplate: typeof createResourceFromStaticTemplate\n}\n\ninterface StateProps {\n  org: Organization\n}\n\ntype Props = DispatchProps & OwnProps & StateProps\n\nclass StaticTemplateCard extends PureComponent<Props & WithRouterProps> {\n  public render() {\n    const {template} = this.props\n\n    return (\n      <ResourceCard\n        testID=\"template-card\"\n        contextMenu={this.contextMenu}\n        description={this.description}\n        name={\n          <ResourceCard.Name\n            onClick={this.handleNameClick}\n            name={template.meta.name}\n            testID=\"template-card--name\"\n          />\n        }\n        metaData={[this.templateType]}\n      />\n    )\n  }\n\n  private get contextMenu(): JSX.Element {\n    return (\n      <FlexBox\n        margin={ComponentSize.Medium}\n        direction={FlexDirection.Row}\n        justifyContent={JustifyContent.FlexEnd}\n      >\n        <Button\n          text=\"Create\"\n          color={ComponentColor.Primary}\n          size={ComponentSize.ExtraSmall}\n          onClick={this.handleCreate}\n        />\n      </FlexBox>\n    )\n  }\n\n  private get description(): JSX.Element {\n    const {template} = this.props\n    const description = get(template, 'content.data.attributes.description')\n\n    return (\n      <ResourceCard.Description description={description || 'No description'} />\n    )\n  }\n\n  private get templateType(): JSX.Element {\n    const {template} = this.props\n\n    return (\n      <div className=\"resource-list--meta-item\">\n        {get(template, 'content.data.type')}\n      </div>\n    )\n  }\n\n  private handleCreate = () => {\n    const {onCreateFromTemplate, name} = this.props\n\n    onCreateFromTemplate(name)\n  }\n\n  private handleNameClick = (e: MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault()\n    this.handleViewTemplate()\n  }\n\n  private handleViewTemplate = () => {\n    const {router, org, name} = this.props\n\n    router.push(`/orgs/${org.id}/settings/templates/${name}/static/view`)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    org: getOrg(state),\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onCreateFromTemplate: createResourceFromStaticTemplate,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(StaticTemplateCard))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport {ResourceList} from '@influxdata/clockface'\nimport EmptyTemplatesList from 'src/templates/components/EmptyTemplatesList'\nimport StaticTemplateCard from 'src/templates/components/StaticTemplateCard'\n\n// Types\nimport {Template, TemplateSummary, RemoteDataState} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {Sort} from 'src/clockface'\n\n// Selectors\nimport {getSortedResources} from 'src/shared/utils/sort'\n\ntype SortKey = 'meta.name'\n\nexport type TemplateOrSummary = Template | TemplateSummary\n\nexport interface StaticTemplate {\n  name: string\n  template: TemplateOrSummary\n}\n\ninterface Props {\n  templates: StaticTemplate[]\n  searchTerm: string\n  onFilterChange: (searchTerm: string) => void\n  onImport: () => void\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (nextSort: Sort, sortKey: SortKey) => void\n}\n\nexport default class StaticTemplatesList extends PureComponent<Props> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  public render() {\n    const {\n      searchTerm,\n      onImport,\n      sortKey,\n      sortDirection,\n      onClickColumn,\n    } = this.props\n\n    const headerKeys: SortKey[] = ['meta.name']\n\n    return (\n      <ResourceList>\n        <ResourceList.Header>\n          <ResourceList.Sorter\n            name=\"Name\"\n            sortKey={headerKeys[0]}\n            sort={sortKey === headerKeys[0] ? sortDirection : Sort.None}\n            onClick={onClickColumn}\n          />\n        </ResourceList.Header>\n        <ResourceList.Body\n          emptyState={\n            <EmptyTemplatesList searchTerm={searchTerm} onImport={onImport} />\n          }\n        >\n          {this.rows}\n        </ResourceList.Body>\n      </ResourceList>\n    )\n  }\n\n  private get rows(): JSX.Element[] {\n    const {\n      templates,\n      sortKey,\n      sortDirection,\n      sortType,\n      onFilterChange,\n    } = this.props\n\n    const sortedTemplates = this.memGetSortedResources(\n      templates,\n      `template.${sortKey}`,\n      sortDirection,\n      sortType\n    )\n\n    return sortedTemplates.map(t => (\n      <StaticTemplateCard\n        key={`template-id--static-${t.name}`}\n        name={t.name}\n        template={{...t.template, status: RemoteDataState.Done}}\n        onFilterChange={onFilterChange}\n      />\n    ))\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\n\n// Components\nimport FilterList from 'src/shared/components/FilterList'\nimport TemplatesList from 'src/templates/components/TemplatesList'\nimport StaticTemplatesList, {\n  StaticTemplate,\n  TemplateOrSummary,\n} from 'src/templates/components/StaticTemplatesList'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport GetResources from 'src/resources/components/GetResources'\nimport SettingsTabbedPageHeader from 'src/settings/components/SettingsTabbedPageHeader'\n\n// Types\nimport {AppState, ResourceType, TemplateSummary} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {\n  Sort,\n  Button,\n  ComponentColor,\n  IconFont,\n  SelectGroup,\n  FlexBox,\n  FlexDirection,\n  ComponentSize,\n} from '@influxdata/clockface'\n\nimport {staticTemplates as statics} from 'src/templates/constants/defaultTemplates'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors/getAll'\n\nconst staticTemplates: StaticTemplate[] = _.map(statics, (template, name) => ({\n  name,\n  template: template as TemplateOrSummary,\n}))\n\ninterface OwnProps {\n  onImport: () => void\n}\n\ninterface StateProps {\n  templates: TemplateSummary[]\n}\n\ntype Props = OwnProps & StateProps\n\ninterface State {\n  searchTerm: string\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n  activeTab: string\n}\n\ntype SortKey = 'meta.name'\n\nconst FilterStaticTemplates = FilterList<StaticTemplate>()\nconst FilterTemplateSummaries = FilterList<TemplateSummary>()\n\n@ErrorHandling\nclass TemplatesPage extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      searchTerm: '',\n      sortKey: 'meta.name',\n      sortDirection: Sort.Ascending,\n      sortType: SortTypes.String,\n      activeTab: 'static-templates',\n    }\n  }\n\n  public render() {\n    const {onImport} = this.props\n    const {activeTab} = this.state\n\n    return (\n      <>\n        <SettingsTabbedPageHeader>\n          <FlexBox direction={FlexDirection.Row} margin={ComponentSize.Small}>\n            {this.filterComponent}\n            <SelectGroup>\n              <SelectGroup.Option\n                name=\"template-type\"\n                id=\"static-templates\"\n                active={activeTab === 'static-templates'}\n                value=\"static-templates\"\n                onClick={this.handleClickTab}\n                titleText=\"Static Templates\"\n              >\n                Static Templates\n              </SelectGroup.Option>\n              <SelectGroup.Option\n                name=\"template-type\"\n                id=\"user-templates\"\n                active={activeTab === 'user-templates'}\n                value=\"user-templates\"\n                onClick={this.handleClickTab}\n                titleText=\"User Templates\"\n              >\n                User Templates\n              </SelectGroup.Option>\n            </SelectGroup>\n          </FlexBox>\n          <Button\n            text=\"Import Template\"\n            icon={IconFont.Plus}\n            color={ComponentColor.Primary}\n            onClick={onImport}\n          />\n        </SettingsTabbedPageHeader>\n        {this.templatesList}\n      </>\n    )\n  }\n\n  private handleClickTab = val => {\n    this.setState({activeTab: val})\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    const sortType = SortTypes.String\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private get templatesList(): JSX.Element {\n    const {templates, onImport} = this.props\n    const {searchTerm, sortKey, sortDirection, sortType, activeTab} = this.state\n\n    if (activeTab === 'static-templates') {\n      return (\n        <FilterStaticTemplates\n          searchTerm={searchTerm}\n          searchKeys={['template.meta.name', 'labels[].name']}\n          list={staticTemplates}\n        >\n          {ts => {\n            return (\n              <StaticTemplatesList\n                searchTerm={searchTerm}\n                templates={ts}\n                onFilterChange={this.setSearchTerm}\n                onImport={onImport}\n                sortKey={sortKey}\n                sortDirection={sortDirection}\n                sortType={sortType}\n                onClickColumn={this.handleClickColumn}\n              />\n            )\n          }}\n        </FilterStaticTemplates>\n      )\n    }\n\n    if (activeTab === 'user-templates') {\n      return (\n        <GetResources resources={[ResourceType.Labels]}>\n          <FilterTemplateSummaries\n            searchTerm={searchTerm}\n            searchKeys={['meta.name', 'labels[].name']}\n            list={templates}\n          >\n            {ts => {\n              return (\n                <TemplatesList\n                  searchTerm={searchTerm}\n                  templates={ts}\n                  onFilterChange={this.setSearchTerm}\n                  onImport={onImport}\n                  sortKey={sortKey}\n                  sortDirection={sortDirection}\n                  sortType={sortType}\n                  onClickColumn={this.handleClickColumn}\n                />\n              )\n            }}\n          </FilterTemplateSummaries>\n        </GetResources>\n      )\n    }\n  }\n\n  private get filterComponent(): JSX.Element {\n    const {searchTerm} = this.state\n\n    return (\n      <SearchWidget\n        placeholderText=\"Filter templates...\"\n        onSearch={this.setSearchTerm}\n        searchTerm={searchTerm}\n      />\n    )\n  }\n\n  private setSearchTerm = (searchTerm: string) => {\n    this.setState({searchTerm})\n  }\n}\nconst mstp = (state: AppState): StateProps => ({\n  templates: getAll(state, ResourceType.Templates),\n})\n\nexport default connect<StateProps>(\n  mstp,\n  null\n)(TemplatesPage)\n","import React, {Component} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {Page} from '@influxdata/clockface'\nimport SettingsTabbedPage from 'src/settings/components/SettingsTabbedPage'\nimport SettingsHeader from 'src/settings/components/SettingsHeader'\nimport TemplatesPage from 'src/templates/components/TemplatesPage'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\ninterface StateProps {\n  org: Organization\n}\n\ntype Props = WithRouterProps & StateProps\n\n@ErrorHandling\nclass TemplatesIndex extends Component<Props> {\n  public render() {\n    const {org, children} = this.props\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Templates', 'Settings'])}>\n          <SettingsHeader />\n          <SettingsTabbedPage activeTab=\"templates\" orgID={org.id}>\n            <GetResources resources={[ResourceType.Templates]}>\n              <TemplatesPage onImport={this.handleImport} />\n            </GetResources>\n          </SettingsTabbedPage>\n        </Page>\n        {children}\n      </>\n    )\n  }\n\n  private handleImport = () => {\n    const {router, org} = this.props\n    router.push(`/orgs/${org.id}/settings/templates/import`)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    org: getOrg(state),\n  }\n}\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(withRouter<{}>(TemplatesIndex))\n","// Libraries\nimport React, {PureComponent, MouseEvent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps, Link} from 'react-router'\n\n// Components\nimport {Context} from 'src/clockface'\nimport {ResourceCard, IconFont} from '@influxdata/clockface'\nimport {ComponentColor} from '@influxdata/clockface'\nimport InlineLabels from 'src/shared/components/inlineLabels/InlineLabels'\n\n// Actions\nimport {\n  addTelegrafLabelsAsync,\n  removeTelegrafLabelsAsync,\n} from 'src/telegrafs/actions/thunks'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\n// Constants\nimport {DEFAULT_COLLECTOR_NAME} from 'src/dashboards/constants'\n\n// Types\nimport {AppState, Organization, Label, Telegraf} from 'src/types'\n\ninterface OwnProps {\n  collector: Telegraf\n  onDelete: (telegraf: Telegraf) => void\n  onUpdate: (telegraf: Telegraf) => void\n  onFilterChange: (searchTerm: string) => void\n}\n\ninterface StateProps {\n  org: Organization\n}\n\ninterface DispatchProps {\n  onAddLabels: typeof addTelegrafLabelsAsync\n  onRemoveLabels: typeof removeTelegrafLabelsAsync\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nclass CollectorRow extends PureComponent<Props & WithRouterProps> {\n  public render() {\n    const {collector, org} = this.props\n\n    return (\n      <ResourceCard\n        key={`telegraf-id--${collector.id}`}\n        testID=\"resource-card\"\n        name={\n          <ResourceCard.EditableName\n            onUpdate={this.handleUpdateName}\n            onClick={this.handleNameClick}\n            name={collector.name}\n            noNameString={DEFAULT_COLLECTOR_NAME}\n            testID=\"collector-card--name\"\n            buttonTestID=\"collector-card--name-button\"\n            inputTestID=\"collector-card--input\"\n          />\n        }\n        description={\n          <ResourceCard.EditableDescription\n            onUpdate={this.handleUpdateDescription}\n            description={collector.description}\n            placeholder={`Describe ${collector.name}`}\n          />\n        }\n        labels={this.labels}\n        metaData={[\n          <span key={`bucket-key--${collector.id}`} data-testid=\"bucket-name\">\n            {/* todo(glinton): verify what sets this. It seems like it is using the 'config' section of 'influxdb_v2' output?? */}\n            Bucket: {collector.metadata.buckets.join(', ')}\n          </span>,\n          <>\n            <Link\n              to={`/orgs/${org.id}/load-data/telegrafs/${\n                collector.id\n              }/instructions`}\n              data-testid=\"setup-instructions-link\"\n            >\n              Setup Instructions\n            </Link>\n          </>,\n        ]}\n        contextMenu={this.contextMenu}\n      />\n    )\n  }\n\n  private get contextMenu(): JSX.Element {\n    return (\n      <Context>\n        <Context.Menu icon={IconFont.Trash} color={ComponentColor.Danger}>\n          <Context.Item label=\"Delete\" action={this.handleDeleteConfig} />\n        </Context.Menu>\n      </Context>\n    )\n  }\n\n  private handleUpdateName = (name: string) => {\n    const {onUpdate, collector} = this.props\n\n    onUpdate({...collector, name})\n  }\n\n  private handleUpdateDescription = (description: string) => {\n    const {onUpdate, collector} = this.props\n\n    onUpdate({...collector, description})\n  }\n\n  private get labels(): JSX.Element {\n    const {collector, onFilterChange} = this.props\n\n    return (\n      <InlineLabels\n        selectedLabelIDs={collector.labels}\n        onFilterChange={onFilterChange}\n        onAddLabel={this.handleAddLabel}\n        onRemoveLabel={this.handleRemoveLabel}\n      />\n    )\n  }\n\n  private handleAddLabel = async (label: Label) => {\n    const {collector, onAddLabels} = this.props\n\n    await onAddLabels(collector.id, [label])\n  }\n\n  private handleRemoveLabel = async (label: Label) => {\n    const {collector, onRemoveLabels} = this.props\n\n    await onRemoveLabels(collector.id, [label])\n  }\n\n  private handleNameClick = (e: MouseEvent) => {\n    e.preventDefault()\n\n    this.handleOpenConfig()\n  }\n\n  private handleOpenConfig = (): void => {\n    const {collector, router, org} = this.props\n    router.push(`/orgs/${org.id}/load-data/telegrafs/${collector.id}/view`)\n  }\n\n  private handleDeleteConfig = (): void => {\n    this.props.onDelete(this.props.collector)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const org = getOrg(state)\n\n  return {org}\n}\n\nconst mdtp: DispatchProps = {\n  onAddLabels: addTelegrafLabelsAsync,\n  onRemoveLabels: removeTelegrafLabelsAsync,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(CollectorRow))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport {ResourceList} from '@influxdata/clockface'\nimport CollectorRow from 'src/telegrafs/components/CollectorCard'\nimport FilterList from 'src/shared/components/FilterList'\n\n// Types\nimport {Sort} from '@influxdata/clockface'\nimport {SortTypes, getSortedResources} from 'src/shared/utils/sort'\nimport {AppState, Telegraf, ResourceType} from 'src/types'\nimport {updateTelegraf, deleteTelegraf} from 'src/telegrafs/actions/thunks'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\ntype SortKey = keyof Telegraf\n\ninterface OwnProps {\n  emptyState: JSX.Element\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (nextSort: Sort, sortKey: SortKey) => void\n  onFilterChange: (searchTerm: string) => void\n}\n\ninterface StateProps {\n  collectors: Telegraf[]\n}\n\ninterface DispatchProps {\n  onUpdateTelegraf: typeof updateTelegraf\n  onDeleteTelegraf: typeof deleteTelegraf\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nclass CollectorList extends PureComponent<Props> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  public render() {\n    const {emptyState, sortKey, sortDirection, onClickColumn} = this.props\n\n    return (\n      <ResourceList>\n        <ResourceList.Header>\n          <ResourceList.Sorter\n            sortKey=\"name\"\n            sort={sortKey === 'name' ? sortDirection : Sort.None}\n            name=\"Name\"\n            onClick={onClickColumn}\n            testID=\"name-sorter\"\n          />\n        </ResourceList.Header>\n        <ResourceList.Body emptyState={emptyState}>\n          {this.collectorsList}\n        </ResourceList.Body>\n      </ResourceList>\n    )\n  }\n\n  public get collectorsList(): JSX.Element[] {\n    const {\n      collectors,\n      sortKey,\n      sortDirection,\n      sortType,\n      onDeleteTelegraf,\n      onUpdateTelegraf,\n      onFilterChange,\n    } = this.props\n\n    const sortedCollectors = this.memGetSortedResources(\n      collectors,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    if (collectors !== undefined) {\n      return sortedCollectors.map(collector => (\n        <CollectorRow\n          key={collector.id}\n          collector={collector}\n          onDelete={(telegraf: Telegraf) =>\n            onDeleteTelegraf(telegraf.id, telegraf.name)\n          }\n          onUpdate={onUpdateTelegraf}\n          onFilterChange={onFilterChange}\n        />\n      ))\n    }\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  collectors: getAll<Telegraf>(state, ResourceType.Telegrafs),\n})\n\nconst mdtp: DispatchProps = {\n  onUpdateTelegraf: updateTelegraf,\n  onDeleteTelegraf: deleteTelegraf,\n}\n\nconnect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(CollectorList)\n\ntype FilteredOwnProps = OwnProps & {\n  searchTerm: string\n}\n\ntype FilteredProps = Props & FilteredOwnProps\n\nconst FilterTelegrafs = FilterList<Telegraf>()\nclass FilteredCollectorList extends PureComponent<FilteredProps> {\n  render() {\n    const {\n      searchTerm,\n      collectors,\n      emptyState,\n      onFilterChange,\n      sortKey,\n      sortDirection,\n      sortType,\n      onClickColumn,\n      onUpdateTelegraf,\n      onDeleteTelegraf,\n    } = this.props\n    return (\n      <FilterTelegrafs\n        searchTerm={searchTerm}\n        searchKeys={['metadata.buckets[]', 'name', 'labels[].name']}\n        list={collectors}\n      >\n        {cs => (\n          <CollectorList\n            collectors={cs}\n            emptyState={emptyState}\n            onFilterChange={onFilterChange}\n            sortKey={sortKey}\n            sortDirection={sortDirection}\n            sortType={sortType}\n            onClickColumn={onClickColumn}\n            onUpdateTelegraf={onUpdateTelegraf}\n            onDeleteTelegraf={onDeleteTelegraf}\n          />\n        )}\n      </FilterTelegrafs>\n    )\n  }\n}\n\nconst FilteredList = connect<StateProps, DispatchProps, FilteredOwnProps>(\n  mstp,\n  mdtp\n)(FilteredCollectorList)\n\nexport {FilteredCollectorList, FilteredList}\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {\n  Panel,\n  EmptyState,\n  InfluxColors,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport {TextAlignProperty} from 'csstype'\n\ninterface Props {\n  hasNoTelegrafs?: boolean\n  textAlign?: TextAlignProperty\n  bodySize?: ComponentSize\n}\n\nconst TelegrafExplainer: FunctionComponent<Props> = ({\n  hasNoTelegrafs = false,\n  textAlign = 'inherit',\n  bodySize,\n}) => (\n  <Panel\n    backgroundColor={InfluxColors.Smoke}\n    style={{textAlign, marginTop: 32}}\n  >\n    {hasNoTelegrafs && (\n      <EmptyState.Text style={{color: InfluxColors.Platinum, marginTop: 16}}>\n        What is Telegraf?\n      </EmptyState.Text>\n    )}\n    {!hasNoTelegrafs && (\n      <Panel.Header>\n        <h5>What is Telegraf?</h5>\n      </Panel.Header>\n    )}\n    <Panel.Body size={bodySize}>\n      Telegraf is an agent written in Go for collecting metrics and writing them\n      into <strong>InfluxDB</strong> or other possible outputs.\n      <br />\n      <br />\n      Here's a handy guide for{' '}\n      <a\n        href=\"https://v2.docs.influxdata.com/v2.0/write-data/use-telegraf/\"\n        target=\"_blank\"\n      >\n        Getting Started with Telegraf\n      </a>\n    </Panel.Body>\n  </Panel>\n)\n\nexport default TelegrafExplainer\n","// Libraries\nimport React, {SFC} from 'react'\n\n// Components\nimport {ComponentColor, IconFont, Alert} from '@influxdata/clockface'\n\ninterface Props {\n  visible: boolean\n  resourceName: string\n}\n\nconst NoBucketsWarning: SFC<Props> = ({visible, resourceName}) => {\n  return (\n    visible && (\n      <Alert\n        color={ComponentColor.Primary}\n        icon={IconFont.AlertTriangle}\n        className=\"no-buckets-warning\"\n      >\n        You don't currently have any buckets. Any{' '}\n        <strong>{resourceName}</strong> you have will not be able to write data\n        until a bucket is created and they are directed to that bucket.\n      </Alert>\n    )\n  )\n}\n\nexport default NoBucketsWarning\n","// Libraries\nimport _ from 'lodash'\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {\n  Button,\n  EmptyState,\n  Grid,\n  Sort,\n  Columns,\n  IconFont,\n  ComponentSize,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport SettingsTabbedPageHeader from 'src/settings/components/SettingsTabbedPageHeader'\nimport {FilteredList} from 'src/telegrafs/components/CollectorList'\nimport TelegrafExplainer from 'src/telegrafs/components/TelegrafExplainer'\nimport NoBucketsWarning from 'src/buckets/components/NoBucketsWarning'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Actions\nimport {updateTelegraf, deleteTelegraf} from 'src/telegrafs/actions/thunks'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {Telegraf, OverlayState, AppState, Bucket, ResourceType} from 'src/types'\nimport {\n  setTelegrafConfigID,\n  setTelegrafConfigName,\n  clearDataLoaders,\n} from 'src/dataLoaders/actions/dataLoaders'\nimport {SortTypes} from 'src/shared/utils/sort'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  hasTelegrafs: boolean\n  orgName: string\n  buckets: Bucket[]\n}\n\ninterface DispatchProps {\n  onSetTelegrafConfigID: typeof setTelegrafConfigID\n  onSetTelegrafConfigName: typeof setTelegrafConfigName\n  onClearDataLoaders: typeof clearDataLoaders\n  onUpdateTelegraf: typeof updateTelegraf\n  onDeleteTelegraf: typeof deleteTelegraf\n}\n\ntype Props = DispatchProps & StateProps & WithRouterProps\n\ninterface State {\n  dataLoaderOverlay: OverlayState\n  searchTerm: string\n  instructionsOverlay: OverlayState\n  collectorID?: string\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ntype SortKey = keyof Telegraf\n\n@ErrorHandling\nclass Collectors extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      dataLoaderOverlay: OverlayState.Closed,\n      searchTerm: '',\n      instructionsOverlay: OverlayState.Closed,\n      collectorID: null,\n      sortKey: 'name',\n      sortDirection: Sort.Ascending,\n      sortType: SortTypes.String,\n    }\n  }\n\n  public render() {\n    const {hasTelegrafs} = this.props\n    const {searchTerm, sortKey, sortDirection, sortType} = this.state\n    return (\n      <>\n        <NoBucketsWarning\n          visible={this.hasNoBuckets}\n          resourceName=\"Telegraf Configurations\"\n        />\n\n        <SettingsTabbedPageHeader className=\"telegraf-collectors--header\">\n          <SearchWidget\n            placeholderText=\"Filter telegraf configurations...\"\n            searchTerm={searchTerm}\n            onSearch={this.handleFilterChange}\n          />\n          <div className=\"telegraf-collectors-button-wrap\">\n            <Button\n              text=\"InfluxDB Output Plugin\"\n              icon={IconFont.Eye}\n              color={ComponentColor.Secondary}\n              style={{marginRight: '8px'}}\n              onClick={this.handleJustTheOutput}\n              titleText=\"Output section of telegraf.conf for V2\"\n              testID=\"button--output-only\"\n            />\n            {this.createButton}\n          </div>\n        </SettingsTabbedPageHeader>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column\n              widthXS={Columns.Twelve}\n              widthSM={hasTelegrafs ? Columns.Eight : Columns.Twelve}\n              widthMD={hasTelegrafs ? Columns.Ten : Columns.Twelve}\n            >\n              <GetResources resources={[ResourceType.Labels]}>\n                <FilteredList\n                  searchTerm={searchTerm}\n                  emptyState={this.emptyState}\n                  onFilterChange={this.handleFilterUpdate}\n                  sortKey={sortKey}\n                  sortDirection={sortDirection}\n                  sortType={sortType}\n                  onClickColumn={this.handleClickColumn}\n                />\n              </GetResources>\n            </Grid.Column>\n            {hasTelegrafs && (\n              <Grid.Column\n                widthXS={Columns.Twelve}\n                widthSM={Columns.Four}\n                widthMD={Columns.Two}\n              >\n                <TelegrafExplainer />\n              </Grid.Column>\n            )}\n          </Grid.Row>\n        </Grid>\n      </>\n    )\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    const sortType = SortTypes.String\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private get hasNoBuckets(): boolean {\n    const {buckets} = this.props\n\n    if (!buckets || !buckets.length) {\n      return true\n    }\n\n    return false\n  }\n\n  private get createButton(): JSX.Element {\n    let status = ComponentStatus.Default\n    let titleText = 'Create a new Telegraf Configuration'\n\n    if (this.hasNoBuckets) {\n      status = ComponentStatus.Disabled\n      titleText =\n        'You need at least 1 bucket in order to create a Telegraf Configuration'\n    }\n\n    return (\n      <Button\n        text=\"Create Configuration\"\n        icon={IconFont.Plus}\n        color={ComponentColor.Primary}\n        onClick={this.handleAddCollector}\n        status={status}\n        titleText={titleText}\n      />\n    )\n  }\n\n  private handleAddCollector = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/load-data/telegrafs/new`)\n  }\n\n  private handleJustTheOutput = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/load-data/telegrafs/output`)\n  }\n\n  private get emptyState(): JSX.Element {\n    const {orgName} = this.props\n    const {searchTerm} = this.state\n\n    if (_.isEmpty(searchTerm)) {\n      return (\n        <EmptyState size={ComponentSize.Medium}>\n          <EmptyState.Text>\n            {`${orgName}`} does not own any <b>Telegraf Configurations</b>, why\n            not create one?\n          </EmptyState.Text>\n          {this.createButton}\n          <br />\n          <br />\n          <TelegrafExplainer\n            hasNoTelegrafs={true}\n            textAlign=\"center\"\n            bodySize={ComponentSize.Medium}\n          />\n        </EmptyState>\n      )\n    }\n\n    return (\n      <EmptyState size={ComponentSize.Medium}>\n        <EmptyState.Text>\n          No <b>Telegraf Configurations</b> match your query\n        </EmptyState.Text>\n      </EmptyState>\n    )\n  }\n\n  private handleFilterChange = (searchTerm: string): void => {\n    this.handleFilterUpdate(searchTerm)\n  }\n\n  private handleFilterUpdate = (searchTerm: string) => {\n    this.setState({searchTerm})\n  }\n}\nconst mstp = (state: AppState): StateProps => {\n  const {telegrafs} = state.resources\n  const orgName = getOrg(state).name\n  const buckets = getAll<Bucket>(state, ResourceType.Buckets)\n  const hasTelegrafs = !!telegrafs.allIDs.length\n\n  return {\n    hasTelegrafs,\n    orgName,\n    buckets,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onSetTelegrafConfigID: setTelegrafConfigID,\n  onSetTelegrafConfigName: setTelegrafConfigName,\n  onClearDataLoaders: clearDataLoaders,\n  onUpdateTelegraf: updateTelegraf,\n  onDeleteTelegraf: deleteTelegraf,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(withRouter<StateProps & DispatchProps>(Collectors))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport LoadDataTabbedPage from 'src/settings/components/LoadDataTabbedPage'\nimport LoadDataHeader from 'src/settings/components/LoadDataHeader'\nimport Collectors from 'src/telegrafs/components/Collectors'\nimport GetResources from 'src/resources/components/GetResources'\nimport LimitChecker from 'src/cloud/components/LimitChecker'\nimport RateLimitAlert from 'src/cloud/components/RateLimitAlert'\nimport {\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n  Page,\n} from '@influxdata/clockface'\n\n// Utils\nimport {extractRateLimitResources} from 'src/cloud/utils/limits'\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\ninterface StateProps {\n  org: Organization\n  limitedResources: string[]\n}\n\n@ErrorHandling\nclass TelegrafsPage extends PureComponent<StateProps> {\n  public render() {\n    const {org, children} = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Telegraf', 'Load Data'])}>\n          <LimitChecker>\n            <LoadDataHeader />\n            <FlexBox\n              direction={FlexDirection.Row}\n              justifyContent={JustifyContent.Center}\n            >\n              {this.isCardinalityExceeded && (\n                <RateLimitAlert className=\"load-data--rate-alert\" />\n              )}\n            </FlexBox>\n            <LoadDataTabbedPage activeTab=\"telegrafs\" orgID={org.id}>\n              <GetResources\n                resources={[ResourceType.Buckets, ResourceType.Telegrafs]}\n              >\n                <Collectors />\n              </GetResources>\n            </LoadDataTabbedPage>\n          </LimitChecker>\n        </Page>\n        {children}\n      </>\n    )\n  }\n  private get isCardinalityExceeded(): boolean {\n    const {limitedResources} = this.props\n\n    return limitedResources.includes('cardinality')\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const org = getOrg(state)\n  const {\n    cloud: {limits},\n  } = state\n  const limitedResources = extractRateLimitResources(limits)\n\n  return {org, limitedResources}\n}\n\nexport default connect<StateProps>(mstp)(TelegrafsPage)\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst CSharpLogo: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 300 300\"\n    >\n      <style>\n        {`\n          .csharp0{fill:none;}\n\t\t  .csharp1{fill:#9A4993;}\n\t\t  .csharp2{fill:#6A1577;}\n\t\t  .csharp3{fill:#813084;}\n\t\t  .csharp4{fill:#FFFFFF;}\n        `}\n      </style>\n      <rect className=\"csharp0\" width=\"300\" height=\"300\" />\n      <g>\n        <path\n          id=\"XMLID_7_\"\n          className=\"csharp1\"\n          d=\"M230,113c0-3-0.6-5.7-2-8c-1.3-2.3-3.2-4.1-5.8-5.6c-21.3-12.3-42.6-24.5-63.9-36.8\n\t\tc-5.7-3.3-11.3-3.2-17,0.2c-8.5,5-50.9,29.3-63.6,36.6c-5.2,3-7.7,7.6-7.7,13.6c0,24.7,0,49.4,0,74.1c0,3,0.6,5.6,1.9,7.8\n\t\tc1.3,2.3,3.2,4.3,5.9,5.8c12.6,7.3,55.1,31.6,63.6,36.6c5.7,3.4,11.3,3.5,17,0.2c21.3-12.3,42.6-24.5,63.9-36.8\n\t\tc2.6-1.5,4.6-3.5,5.9-5.8c1.2-2.3,1.9-4.9,1.9-7.8C230,187,230,137.7,230,113\"\n        />\n        <path\n          id=\"XMLID_4_\"\n          className=\"csharp2\"\n          d=\"M150.2,149.8l-78.4,45.1c1.3,2.3,3.2,4.3,5.9,5.8c12.6,7.3,55.1,31.6,63.6,36.6\n\t\tc5.7,3.4,11.3,3.5,17,0.2c21.3-12.3,42.6-24.5,63.9-36.8c2.6-1.5,4.6-3.5,5.9-5.8L150.2,149.8\"\n        />\n        <path\n          id=\"XMLID_5_\"\n          className=\"csharp2\"\n          d=\"M127,163.1c4.6,8,13.1,13.3,23,13.3c9.9,0,18.5-5.4,23.1-13.5l-22.8-13.2L127,163.1\"\n        />\n        <path\n          id=\"XMLID_6_\"\n          className=\"csharp3\"\n          d=\"M230,113c0-3-0.6-5.7-2-8l-77.8,44.8l77.9,45.1c1.2-2.3,1.9-4.9,1.9-7.8\n\t\tC230,187,230,137.7,230,113\"\n        />\n        <path\n          id=\"XMLID_9_\"\n          className=\"csharp4\"\n          d=\"M173.1,163c-4.5,8-13.2,13.5-23.1,13.5c-9.8,0-18.4-5.4-23-13.3c-2.2-3.9-3.5-8.3-3.5-13.1\n\t\tc0-14.6,11.8-26.5,26.5-26.5c9.8,0,18.3,5.3,22.9,13.2l23.1-13.3c-9.2-15.9-26.4-26.5-46-26.5c-29.3,0-53.1,23.8-53.1,53.1\n\t\tc0,9.6,2.6,18.7,7,26.4c9.2,16,26.4,26.7,46.1,26.7c19.8,0,37-10.8,46.1-26.8L173.1,163\"\n        />\n        <g id=\"XMLID_32_\">\n          <rect\n            id=\"XMLID_1_\"\n            x=\"197\"\n            y=\"137.4\"\n            className=\"csharp4\"\n            width=\"5.3\"\n            height=\"25.5\"\n          />\n          <rect\n            id=\"XMLID_30_\"\n            x=\"208.7\"\n            y=\"137.4\"\n            className=\"csharp4\"\n            width=\"5.3\"\n            height=\"25.5\"\n          />\n\n          <rect\n            id=\"XMLID_31_\"\n            x=\"202.9\"\n            y=\"131.6\"\n            transform=\"matrix(-1.836970e-16 1 -1 -1.836970e-16 349.8133 -61.1451)\"\n            className=\"csharp4\"\n            width=\"5.3\"\n            height=\"25.5\"\n          />\n\n          <rect\n            id=\"XMLID_23_\"\n            x=\"202.9\"\n            y=\"143.3\"\n            transform=\"matrix(-1.836970e-16 1 -1 -1.836970e-16 361.4733 -49.4852)\"\n            className=\"csharp4\"\n            width=\"5.3\"\n            height=\"25.5\"\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nexport default CSharpLogo\n","// Libraries\nimport React, {SFC} from 'react'\n\n/* eslint-disable no-mixed-spaces-and-tabs */\nconst GoLogo: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 300 300\"\n    >\n      <style>\n        {`\n          .go0{fill:none;}\n          .go1{fill:#2DBCAF;}\n        `}\n      </style>\n      <rect className=\"go0\" width={300} height={300} />\n      <g>\n        <g>\n          <g>\n            <g>\n              <path\n                className=\"go1\"\n                d=\"M32.1,130.4c-0.5,0-0.6-0.3-0.4-0.6l2.7-3.5c0.3-0.4,0.9-0.6,1.4-0.6h46.2c0.5,0,0.6,0.4,0.4,0.8l-2.2,3.4\n              \t\t\t\t\tc-0.3,0.4-0.9,0.8-1.3,0.8L32.1,130.4z\"\n              />\n            </g>\n          </g>\n        </g>\n        <g>\n          <g>\n            <g>\n              <path\n                className=\"go1\"\n                d=\"M12.5,142.3c-0.5,0-0.6-0.3-0.4-0.6l2.7-3.5c0.3-0.4,0.9-0.6,1.4-0.6h59.1c0.5,0,0.8,0.4,0.6,0.8l-1,3.1\n              \t\t\t\t\tc-0.1,0.5-0.6,0.8-1.2,0.8L12.5,142.3z\"\n              />\n            </g>\n          </g>\n        </g>\n        <g>\n          <g>\n            <g>\n              <path\n                className=\"go1\"\n                d=\"M43.9,154.2c-0.5,0-0.6-0.4-0.4-0.8l1.8-3.2c0.3-0.4,0.8-0.8,1.3-0.8h25.9c0.5,0,0.8,0.4,0.8,0.9l-0.3,3.1\n              \t\t\t\t\tc0,0.5-0.5,0.9-0.9,0.9L43.9,154.2z\"\n              />\n            </g>\n          </g>\n        </g>\n        <g>\n          <g id=\"CXHf1q_1_\">\n            <g>\n              <g>\n                <path\n                  className=\"go1\"\n                  d=\"M178.3,128.1c-8.2,2.1-13.7,3.6-21.8,5.7c-1.9,0.5-2.1,0.6-3.8-1.3c-1.9-2.2-3.4-3.6-6.1-4.9\n                \t\t\t\t\t\tc-8.2-4-16.1-2.8-23.4,1.9c-8.8,5.7-13.3,14.1-13.2,24.6c0.1,10.4,7.3,18.9,17.5,20.3c8.8,1.2,16.2-1.9,22-8.5\n                \t\t\t\t\t\tc1.2-1.4,2.2-3,3.5-4.8c-4.7,0-10.5,0-25,0c-2.7,0-3.4-1.7-2.5-3.9c1.7-4,4.8-10.7,6.6-14.1c0.4-0.8,1.3-2.1,3.2-2.1\n                \t\t\t\t\t\tc6.6,0,31,0,47.1,0c-0.3,3.5-0.3,7-0.8,10.5c-1.4,9.3-4.9,17.9-10.6,25.4c-9.3,12.3-21.5,19.9-36.9,22\n                \t\t\t\t\t\tc-12.7,1.7-24.5-0.8-34.8-8.5c-9.6-7.3-15-16.8-16.4-28.8c-1.7-14.1,2.5-26.8,11-37.9c9.2-12,21.4-19.7,36.3-22.4\n                \t\t\t\t\t\tc12.2-2.2,23.8-0.8,34.3,6.3c6.9,4.5,11.8,10.7,15,18.3C180.4,127,179.8,127.7,178.3,128.1z\"\n                />\n              </g>\n              <g>\n                <path\n                  className=\"go1\"\n                  d=\"M221.2,199.7c-11.8-0.3-22.5-3.6-31.6-11.4c-7.6-6.6-12.4-15-14-25c-2.3-14.6,1.7-27.6,10.5-39.1\n                \t\t\t\t\t\tc9.5-12.4,20.9-18.9,36.3-21.6c13.2-2.3,25.6-1,36.9,6.6c10.2,7,16.6,16.4,18.3,28.9c2.2,17.5-2.8,31.7-14.9,43.9\n                \t\t\t\t\t\tc-8.5,8.7-19,14.1-31.1,16.6C228,199.2,224.5,199.3,221.2,199.7z M252,147.4c-0.1-1.7-0.1-3-0.4-4.3\n                \t\t\t\t\t\tc-2.3-12.8-14.1-20.1-26.4-17.2c-12,2.7-19.8,10.4-22.7,22.5c-2.3,10.1,2.6,20.3,11.9,24.5c7.1,3.1,14.2,2.7,21.1-0.8\n                \t\t\t\t\t\tC245.8,166.8,251.3,158.5,252,147.4z\"\n                />\n              </g>\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  )\n}\n/* eslint-enable */\nexport default GoLogo\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst JavaLogo: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 300 300\"\n    >\n      <style>\n        {`\n          .java0{fill:none;}\n          .java1{fill:#0074BD;}\n          .java2{fill:#EA2D2E;}\n        `}\n      </style>\n      <rect className=\"java0\" width=\"300\" height=\"300\" />\n      <g>\n        <path\n          id=\"XMLID_25_\"\n          className=\"java1\"\n          d=\"M128.3,151.2c0,0-6.2,3.6,4.4,4.9c12.9,1.5,19.6,1.3,33.8-1.4c0,0,3.8,2.3,9,4.4\n\t\tC143.6,172.8,103.2,158.3,128.3,151.2L128.3,151.2z\"\n        />\n        <path\n          id=\"XMLID_24_\"\n          className=\"java1\"\n          d=\"M124.4,133.4c0,0-7,5.2,3.7,6.3c13.8,1.4,24.7,1.5,43.6-2.1c0,0,2.6,2.6,6.7,4.1\n\t\tC139.8,153,96.8,142.5,124.4,133.4L124.4,133.4z\"\n        />\n        <path\n          id=\"XMLID_22_\"\n          className=\"java2\"\n          d=\"M157.3,103c7.9,9.1-2.1,17.2-2.1,17.2s20-10.3,10.8-23.3c-8.6-12.1-15.2-18,20.5-38.7\n\t\tC186.5,58.3,130.6,72.3,157.3,103L157.3,103z\"\n        />\n        <path\n          id=\"XMLID_21_\"\n          className=\"java1\"\n          d=\"M199.6,164.5c0,0,4.6,3.8-5.1,6.7c-18.4,5.6-76.8,7.3-93,0.2c-5.8-2.5,5.1-6.1,8.5-6.8\n\t\tc3.6-0.8,5.6-0.6,5.6-0.6c-6.5-4.6-41.9,9-18,12.8C162.9,187.4,216.5,172.1,199.6,164.5L199.6,164.5z\"\n        />\n        <path\n          id=\"XMLID_20_\"\n          className=\"java1\"\n          d=\"M131.3,114.8c0,0-29.7,7.1-10.5,9.6c8.1,1.1,24.2,0.8,39.3-0.4c12.3-1,24.6-3.2,24.6-3.2\n\t\ts-4.3,1.9-7.5,4c-30.1,7.9-88.4,4.2-71.6-3.9C119.8,114.1,131.3,114.8,131.3,114.8L131.3,114.8z\"\n        />\n        <path\n          id=\"XMLID_19_\"\n          className=\"java1\"\n          d=\"M184.6,144.6c30.6-15.9,16.5-31.2,6.6-29.2c-2.4,0.5-3.5,0.9-3.5,0.9s0.9-1.4,2.6-2\n\t\tc19.6-6.9,34.6,20.3-6.3,31C183.9,145.4,184.4,145,184.6,144.6L184.6,144.6z\"\n        />\n        <path\n          id=\"XMLID_18_\"\n          className=\"java2\"\n          d=\"M166.1,25c0,0,17,17-16.1,43.1c-26.5,20.9-6,32.9,0,46.5c-15.5-14-26.8-26.3-19.2-37.7\n\t\tC142,60.1,172.9,51.9,166.1,25L166.1,25z\"\n        />\n        <path\n          id=\"XMLID_17_\"\n          className=\"java1\"\n          d=\"M134.3,187.7c29.4,1.9,74.6-1,75.6-15c0,0-2.1,5.3-24.3,9.5c-25.1,4.7-56.1,4.2-74.4,1.1\n\t\tC111.2,183.4,115,186.5,134.3,187.7L134.3,187.7z\"\n        />\n        <path\n          className=\"java2\"\n          d=\"M208.6,212.7h-0.9v-0.5h2.4v0.5h-0.9v2.5h-0.6L208.6,212.7L208.6,212.7L208.6,212.7z M213.4,212.8L213.4,212.8\n\t\tl-0.9,2.4h-0.4l-0.9-2.4h0v2.4h-0.6v-3h0.9l0.8,2.1l0.8-2.1h0.9v3h-0.6L213.4,212.8L213.4,212.8z\"\n        />\n        <path\n          className=\"java2\"\n          d=\"M129.5,240.9c-2.8,2.4-5.7,3.8-8.3,3.8c-3.7,0-5.8-2.3-5.8-5.9c0-3.9,2.2-6.8,10.9-6.8h3.2V240.9L129.5,240.9\n\t\tL129.5,240.9z M137.2,249.5v-26.7c0-6.8-3.9-11.3-13.3-11.3c-5.5,0-10.3,1.4-14.2,3.1l1.1,4.7c3.1-1.1,7.1-2.2,11-2.2\n\t\tc5.4,0,7.7,2.2,7.7,6.7v3.4h-2.7c-13.1,0-19.1,5.1-19.1,12.8c0,6.6,3.9,10.4,11.3,10.4c4.7,0,8.3-2,11.6-4.8l0.6,4.1H137.2\n\t\tL137.2,249.5z\"\n        />\n        <path\n          id=\"XMLID_12_\"\n          className=\"java2\"\n          d=\"M162.7,249.5h-9.5l-11.5-37.4h8.3l7.1,23l1.6,6.9c3.6-10,6.2-20.1,7.4-29.9h8.1\n\t\tC172.1,224.5,168.2,238,162.7,249.5L162.7,249.5z\"\n        />\n        <path\n          className=\"java2\"\n          d=\"M199.3,240.9c-2.8,2.4-5.7,3.8-8.3,3.8c-3.8,0-5.8-2.3-5.8-5.9c0-3.9,2.2-6.8,10.9-6.8h3.2L199.3,240.9\n\t\tL199.3,240.9L199.3,240.9z M207,249.5v-26.7c0-6.8-3.9-11.3-13.3-11.3c-5.5,0-10.3,1.4-14.2,3.1l1.1,4.7c3.1-1.1,7.1-2.2,11-2.2\n\t\tc5.4,0,7.7,2.2,7.7,6.7v3.4h-2.7c-13.1,0-19.1,5.1-19.1,12.8c0,6.6,3.9,10.4,11.3,10.4c4.7,0,8.3-2,11.6-4.8l0.6,4.1H207L207,249.5\n\t\tz\"\n        />\n        <path\n          id=\"XMLID_8_\"\n          className=\"java2\"\n          d=\"M99.3,255.9c-2.2,3.2-5.7,5.7-9.6,7.1l-3.8-4.5c2.9-1.5,5.5-3.9,6.6-6.2c1-2,1.4-4.6,1.4-10.8\n\t\tv-42.7h8.1V241C102.2,249.3,101.5,252.6,99.3,255.9L99.3,255.9z\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default JavaLogo\n","// Libraries\nimport React, {SFC} from 'react'\n\n/* eslint-disable no-mixed-spaces-and-tabs */\nconst JSLogo: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 300 300\"\n    >\n      <style>\n        {`\n           .js0{fill:none;}\n           .js1{fill:#699F63;}\n           .js2{fill-rule:evenodd;clip-rule:evenodd;fill:#FFFFFF;}\n           .js3{fill-rule:evenodd;clip-rule:evenodd;fill:#699F63;}\n           .js4{clip-path:url(#XMLID_5_);}\n           .js5{fill:url(#SVGID_1_);}\n           .js6{fill:url(#SVGID_2_);}\n           .js7{fill:url(#SVGID_3_);}\n           .js8{fill:url(#SVGID_4_);}\n           .js9{fill:url(#SVGID_5_);}\n           .js10{fill:url(#SVGID_6_);}\n        `}\n      </style>\n      <rect className=\"js0\" width={300} height={300} />\n      <g>\n        <g>\n          <path\n            className=\"js1\"\n            d=\"M148.5,235.7c-0.9,0-1.8-0.2-2.6-0.7l-8.1-4.8c-1.2-0.7-0.6-0.9-0.2-1.1c1.6-0.6,1.9-0.7,3.7-1.7\n          \t\t\tc0.2-0.1,0.4-0.1,0.6,0l6.3,3.7c0.2,0.1,0.5,0.1,0.8,0l24.4-14.1c0.2-0.1,0.4-0.4,0.4-0.7v-28.1c0-0.3-0.1-0.5-0.4-0.7l-24.4-14.1\n          \t\t\tc-0.2-0.1-0.5-0.1-0.8,0l-24.4,14.1c-0.2,0.1-0.4,0.4-0.4,0.7v28.1c0,0.3,0.1,0.5,0.4,0.7l6.7,3.9c3.6,1.8,5.8-0.3,5.8-2.5v-27.8\n          \t\t\tc0-0.4,0.3-0.7,0.7-0.7h3.1c0.4,0,0.7,0.3,0.7,0.7v27.8c0,4.8-2.6,7.6-7.2,7.6c-1.4,0-2.5,0-5.6-1.5l-6.4-3.7\n          \t\t\tc-1.6-0.9-2.6-2.6-2.6-4.4v-28.1c0-1.8,1-3.5,2.6-4.4l24.4-14.1c1.5-0.9,3.6-0.9,5.1,0l24.4,14.1c1.6,0.9,2.6,2.6,2.6,4.4v28.1\n          \t\t\tc0,1.8-1,3.5-2.6,4.4L151,235C150.2,235.4,149.4,235.7,148.5,235.7z\"\n          />\n          <path\n            className=\"js1\"\n            d=\"M156,216.3c-10.7,0-12.9-4.9-12.9-9c0-0.4,0.3-0.7,0.7-0.7h3.2c0.4,0,0.6,0.3,0.7,0.6\n          \t\t\tc0.5,3.2,1.9,4.8,8.3,4.8c5.1,0,7.3-1.2,7.3-3.9c0-1.6-0.6-2.7-8.6-3.5c-6.7-0.7-10.8-2.1-10.8-7.5c0-4.9,4.1-7.9,11.1-7.9\n          \t\t\tc7.8,0,11.7,2.7,12.2,8.5c0,0.2-0.1,0.4-0.2,0.5c-0.1,0.1-0.3,0.2-0.5,0.2h-3.2c-0.3,0-0.6-0.2-0.7-0.6c-0.8-3.4-2.6-4.5-7.6-4.5\n          \t\t\tc-5.6,0-6.3,2-6.3,3.4c0,1.8,0.8,2.3,8.3,3.3c7.5,1,11.1,2.4,11.1,7.7C168.1,213.3,163.7,216.3,156,216.3z\"\n          />\n        </g>\n        <g>\n          <path\n            className=\"js1\"\n            d=\"M191.1,186.8c0,2.6-2.1,4.7-4.7,4.7c-2.6,0-4.7-2.1-4.7-4.7c0-2.7,2.2-4.7,4.7-4.7\n          \t\t\tC189,182.1,191.1,184.1,191.1,186.8z M182.5,186.8c0,2.2,1.8,4,3.9,4c2.2,0,4-1.8,4-4c0-2.2-1.8-3.9-4-3.9\n          \t\t\tC184.3,182.8,182.5,184.6,182.5,186.8z M184.7,184.1h1.8c0.6,0,1.8,0,1.8,1.4c0,1-0.6,1.2-1,1.3c0.7,0,0.8,0.5,0.9,1.2\n          \t\t\tc0.1,0.4,0.1,1.1,0.3,1.4h-1.1c0-0.2-0.2-1.6-0.2-1.7c-0.1-0.3-0.2-0.4-0.5-0.4h-0.9v2.1h-1V184.1z M185.7,186.5h0.8\n          \t\t\tc0.7,0,0.8-0.5,0.8-0.7c0-0.7-0.5-0.7-0.8-0.7h-0.8V186.5z\"\n          />\n        </g>\n        <path\n          className=\"js2\"\n          d=\"M72.9,125.6c0-1.1-0.6-2.2-1.6-2.7L45.5,108c-0.4-0.3-0.9-0.4-1.4-0.4c0,0-0.2,0-0.3,0c-0.5,0-1,0.2-1.4,0.4\n        \t\tl-25.9,14.9c-1,0.6-1.6,1.6-1.6,2.7l0.1,40.1c0,0.6,0.3,1.1,0.8,1.3c0.5,0.3,1.1,0.3,1.6,0l15.4-8.8c1-0.6,1.6-1.6,1.6-2.7v-18.7\n        \t\tc0-1.1,0.6-2.1,1.6-2.7l6.5-3.8c0.5-0.3,1-0.4,1.6-0.4c0.5,0,1.1,0.1,1.6,0.4l6.5,3.8c1,0.6,1.6,1.6,1.6,2.7v18.7\n        \t\tc0,1.1,0.6,2.1,1.6,2.7l15.4,8.8c0.5,0.3,1.1,0.3,1.6,0c0.5-0.3,0.8-0.8,0.8-1.3L72.9,125.6z\"\n        />\n        <path\n          className=\"js2\"\n          d=\"M197.3,70.5c-0.5-0.3-1.1-0.3-1.6,0c-0.5,0.3-0.8,0.8-0.8,1.3v39.7c0,0.4-0.2,0.8-0.5,0.9\n        \t\tc-0.3,0.2-0.8,0.2-1.1,0l-6.5-3.7c-1-0.6-2.2-0.6-3.1,0l-25.9,14.9c-1,0.6-1.6,1.6-1.6,2.7v29.9c0,1.1,0.6,2.1,1.6,2.7l25.9,14.9\n        \t\tc1,0.6,2.2,0.6,3.1,0l25.9-14.9c1-0.6,1.6-1.6,1.6-2.7V81.8c0-1.1-0.6-2.2-1.6-2.7L197.3,70.5z M194.9,146.4c0,0.3-0.1,0.5-0.4,0.7\n        \t\tl-8.9,5.1c-0.2,0.1-0.5,0.1-0.8,0l-8.9-5.1c-0.2-0.1-0.4-0.4-0.4-0.7v-10.3c0-0.3,0.1-0.5,0.4-0.7l8.9-5.1c0.2-0.1,0.5-0.1,0.8,0\n        \t\tl8.9,5.1c0.2,0.1,0.4,0.4,0.4,0.7V146.4z\"\n        />\n        <g>\n          <path\n            className=\"js2\"\n            d=\"M283.4,135.9c1-0.6,1.6-1.6,1.6-2.7V126c0-1.1-0.6-2.1-1.6-2.7l-25.7-14.9c-1-0.6-2.2-0.6-3.1,0l-25.9,14.9\n          \t\t\tc-1,0.6-1.6,1.6-1.6,2.7v29.8c0,1.1,0.6,2.2,1.6,2.7l25.7,14.6c0.9,0.5,2.1,0.5,3.1,0l15.5-8.6c0.5-0.3,0.8-0.8,0.8-1.4\n          \t\t\tc0-0.6-0.3-1.1-0.8-1.4l-26-14.9c-0.5-0.3-0.8-0.8-0.8-1.4v-9.4c0-0.6,0.3-1.1,0.8-1.4l8.1-4.7c0.5-0.3,1.1-0.3,1.6,0l8.1,4.7\n          \t\t\tc0.5,0.3,0.8,0.8,0.8,1.4v7.4c0,0.6,0.3,1.1,0.8,1.4c0.5,0.3,1.1,0.3,1.6,0L283.4,135.9z\"\n          />\n          <path\n            className=\"js3\"\n            d=\"M255.8,134.5c0.2-0.1,0.4-0.1,0.6,0l5,2.9c0.2,0.1,0.3,0.3,0.3,0.5v5.7c0,0.2-0.1,0.4-0.3,0.5l-5,2.9\n          \t\t\tc-0.2,0.1-0.4,0.1-0.6,0l-5-2.9c-0.2-0.1-0.3-0.3-0.3-0.5v-5.7c0-0.2,0.1-0.4,0.3-0.5L255.8,134.5z\"\n          />\n        </g>\n        <g>\n          <defs>\n            <path\n              id=\"XMLID_143_\"\n              d=\"M116.2,108.5c-1-0.6-2.1-0.6-3.1,0l-25.7,14.8c-1,0.6-1.6,1.6-1.6,2.7v29.7c0,1.1,0.6,2.1,1.6,2.7\n            \t\t\t\tl25.7,14.9c1,0.6,2.1,0.6,3.1,0l25.7-14.9c1-0.6,1.6-1.6,1.6-2.7v-29.7c0-1.1-0.6-2.1-1.6-2.7L116.2,108.5z\"\n            />\n          </defs>\n          <linearGradient\n            id=\"XMLID_4_\"\n            gradientUnits=\"userSpaceOnUse\"\n            x1=\"125.1041\"\n            y1=\"119.5736\"\n            x2=\"101.8713\"\n            y2=\"166.9685\"\n          >\n            <stop offset={0} style={{stopColor: '#41873F'}} />\n            <stop offset=\"0.3288\" style={{stopColor: '#418B3D'}} />\n            <stop offset=\"0.6352\" style={{stopColor: '#419637'}} />\n            <stop offset=\"0.9319\" style={{stopColor: '#3FA92D'}} />\n            <stop offset={1} style={{stopColor: '#3FAE2A'}} />\n          </linearGradient>\n          <use\n            xlinkHref=\"#XMLID_143_\"\n            style={{\n              overflow: 'visible',\n              fillRule: 'evenodd',\n              clipRule: 'evenodd',\n              fill: 'url(#XMLID_4_)',\n            }}\n          />\n          <clipPath id=\"XMLID_5_\">\n            <use xlinkHref=\"#XMLID_143_\" style={{overflow: 'visible'}} />\n          </clipPath>\n          <g className=\"js4\">\n            <path\n              className=\"js0\"\n              d=\"M113,108.5l-25.8,14.8c-1,0.6-1.7,1.6-1.7,2.7v29.7c0,0.7,0.3,1.4,0.8,2l29-49.5\n            \t\t\t\tC114.6,108,113.8,108.1,113,108.5z\"\n            />\n            <path\n              className=\"js0\"\n              d=\"M115.5,173.6c0.3-0.1,0.5-0.2,0.7-0.3l25.7-14.9c1-0.6,1.6-1.6,1.6-2.7v-29.7c0-0.8-0.4-1.6-0.9-2.2\n            \t\t\t\tL115.5,173.6z\"\n            />\n            <linearGradient\n              id=\"SVGID_1_\"\n              gradientUnits=\"userSpaceOnUse\"\n              x1=\"110.7341\"\n              y1=\"144.3775\"\n              x2=\"175.9236\"\n              y2=\"96.212\"\n            >\n              <stop offset=\"0.1376\" style={{stopColor: '#41873F'}} />\n              <stop offset=\"0.4032\" style={{stopColor: '#54A044'}} />\n              <stop offset=\"0.7136\" style={{stopColor: '#66B848'}} />\n              <stop offset=\"0.9081\" style={{stopColor: '#6CC04A'}} />\n            </linearGradient>\n            <path\n              className=\"js5\"\n              d=\"M142,123.4l-25.8-14.8c-0.3-0.1-0.5-0.3-0.8-0.3l-29,49.5c0.2,0.3,0.5,0.5,0.9,0.7l25.8,14.9\n            \t\t\t\tc0.7,0.4,1.6,0.5,2.4,0.3l27.1-49.7C142.5,123.7,142.2,123.5,142,123.4z\"\n            />\n          </g>\n          <g className=\"js4\">\n            <path\n              className=\"js0\"\n              d=\"M143.6,155.8v-29.7c0-1.1-0.7-2.1-1.6-2.7l-25.8-14.8c-0.3-0.2-0.6-0.3-0.9-0.3l28.3,48.3\n            \t\t\t\tC143.6,156.2,143.6,156,143.6,155.8z\"\n            />\n            <path\n              className=\"js0\"\n              d=\"M87.3,123.4c-1,0.6-1.7,1.6-1.7,2.7v29.7c0,1.1,0.7,2.1,1.7,2.7l25.8,14.9c0.6,0.4,1.3,0.5,2,0.4l-27.7-50.4\n            \t\t\t\tL87.3,123.4z\"\n            />\n            <linearGradient\n              id=\"SVGID_2_\"\n              gradientUnits=\"userSpaceOnUse\"\n              x1=\"84.9192\"\n              y1=\"103.1674\"\n              x2=\"144.3774\"\n              y2=\"103.1674\"\n            >\n              <stop offset=\"9.191646e-02\" style={{stopColor: '#6CC04A'}} />\n              <stop offset=\"0.2864\" style={{stopColor: '#66B848'}} />\n              <stop offset=\"0.5968\" style={{stopColor: '#54A044'}} />\n              <stop offset=\"0.8624\" style={{stopColor: '#41873F'}} />\n            </linearGradient>\n            <polygon\n              className=\"js6\"\n              points=\"112.2,103.1 111.9,103.3 112.4,103.3 \t\t\t\"\n            />\n            <linearGradient\n              id=\"SVGID_3_\"\n              gradientUnits=\"userSpaceOnUse\"\n              x1=\"84.9192\"\n              y1=\"140.8973\"\n              x2=\"144.3774\"\n              y2=\"140.8973\"\n            >\n              <stop offset=\"9.191646e-02\" style={{stopColor: '#6CC04A'}} />\n              <stop offset=\"0.2864\" style={{stopColor: '#66B848'}} />\n              <stop offset=\"0.5968\" style={{stopColor: '#54A044'}} />\n              <stop offset=\"0.8624\" style={{stopColor: '#41873F'}} />\n            </linearGradient>\n            <path\n              className=\"js7\"\n              d=\"M142,158.4c0.7-0.4,1.3-1.2,1.5-2l-28.3-48.3c-0.7-0.1-1.5,0-2.2,0.3l-25.6,14.8l27.7,50.4\n            \t\t\t\tc0.4-0.1,0.8-0.2,1.1-0.4L142,158.4z\"\n            />\n            <linearGradient\n              id=\"SVGID_4_\"\n              gradientUnits=\"userSpaceOnUse\"\n              x1=\"84.9192\"\n              y1=\"157.8714\"\n              x2=\"144.3774\"\n              y2=\"157.8714\"\n            >\n              <stop offset=\"9.191646e-02\" style={{stopColor: '#6CC04A'}} />\n              <stop offset=\"0.2864\" style={{stopColor: '#66B848'}} />\n              <stop offset=\"0.5968\" style={{stopColor: '#54A044'}} />\n              <stop offset=\"0.8624\" style={{stopColor: '#41873F'}} />\n            </linearGradient>\n            <polygon\n              className=\"js8\"\n              points=\"144.4,158 144.2,157.7 144.2,158.1 \t\t\t\"\n            />\n            <linearGradient\n              id=\"SVGID_5_\"\n              gradientUnits=\"userSpaceOnUse\"\n              x1=\"84.9192\"\n              y1=\"165.5433\"\n              x2=\"144.3774\"\n              y2=\"165.5433\"\n            >\n              <stop offset=\"9.191646e-02\" style={{stopColor: '#6CC04A'}} />\n              <stop offset=\"0.2864\" style={{stopColor: '#66B848'}} />\n              <stop offset=\"0.5968\" style={{stopColor: '#54A044'}} />\n              <stop offset=\"0.8624\" style={{stopColor: '#41873F'}} />\n            </linearGradient>\n            <path\n              className=\"js9\"\n              d=\"M142,158.4l-25.7,14.9c-0.4,0.2-0.7,0.3-1.1,0.4l0.5,0.9l28.6-16.6v-0.4l-0.7-1.2\n            \t\t\t\tC143.3,157.3,142.7,158,142,158.4z\"\n            />\n            <linearGradient\n              id=\"SVGID_6_\"\n              gradientUnits=\"userSpaceOnUse\"\n              x1=\"153.0397\"\n              y1=\"118.1685\"\n              x2=\"116.3697\"\n              y2=\"192.9754\"\n            >\n              <stop offset={0} style={{stopColor: '#41873F'}} />\n              <stop offset=\"0.3288\" style={{stopColor: '#418B3D'}} />\n              <stop offset=\"0.6352\" style={{stopColor: '#419637'}} />\n              <stop offset=\"0.9319\" style={{stopColor: '#3FA92D'}} />\n              <stop offset={1} style={{stopColor: '#3FAE2A'}} />\n            </linearGradient>\n            <path\n              className=\"js10\"\n              d=\"M142,158.4l-25.7,14.9c-0.4,0.2-0.7,0.3-1.1,0.4l0.5,0.9l28.6-16.6v-0.4l-0.7-1.2\n            \t\t\t\tC143.3,157.3,142.7,158,142,158.4z\"\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  )\n}\n/* eslint-enable */\nexport default JSLogo\n","// Libraries\nimport React, {SFC} from 'react'\n\n/* eslint-disable no-mixed-spaces-and-tabs */\nconst PythonLogo: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 300 300\"\n    >\n      <style>\n        {`\n          .python0{fill:none;}\n          .python1{fill:url(#path1948_1_);}\n          .python2{fill:url(#path1950_1_);}\n        `}\n      </style>\n      <rect className=\"python0\" width={300} height={300} />\n      <g>\n        <linearGradient\n          id=\"path1948_1_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1=\"125.7967\"\n          y1=\"170.4548\"\n          x2=\"290.6952\"\n          y2=\"28.5818\"\n          gradientTransform=\"matrix(0.5625 0 0 -0.568 -8.9623 166.6543)\"\n        >\n          <stop offset={0} style={{stopColor: '#5A9FD4'}} />\n          <stop offset={1} style={{stopColor: '#306998'}} />\n        </linearGradient>\n        <path\n          id=\"path1948\"\n          className=\"python1\"\n          d=\"M149,65c-6.9,0-13.6,0.6-19.4,1.7c-17.2,3-20.3,9.4-20.3,21.1v15.5h40.6v5.2h-40.6H94.1\n        \t\tc-11.8,0-22.1,7.1-25.3,20.6c-3.7,15.4-3.9,25.1,0,41.2c2.9,12,9.8,20.6,21.6,20.6h13.9v-18.5c0-13.4,11.6-25.2,25.3-25.2h40.5\n        \t\tc11.3,0,20.3-9.3,20.3-20.6V87.7c0-11-9.3-19.2-20.3-21.1C163.2,65.5,155.9,65,149,65z M127.1,77.4c4.2,0,7.6,3.5,7.6,7.8\n        \t\tc0,4.3-3.4,7.7-7.6,7.7c-4.2,0-7.6-3.4-7.6-7.7C119.5,80.9,122.9,77.4,127.1,77.4z\"\n        />\n        <linearGradient\n          id=\"path1950_1_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1=\"354.446\"\n          y1=\"-57.2856\"\n          x2=\"295.5609\"\n          y2=\"26.0267\"\n          gradientTransform=\"matrix(0.5625 0 0 -0.568 -8.9623 166.6543)\"\n        >\n          <stop offset={0} style={{stopColor: '#FFD43B'}} />\n          <stop offset={1} style={{stopColor: '#FFE873'}} />\n        </linearGradient>\n        <path\n          id=\"path1950\"\n          className=\"python2\"\n          d=\"M195.5,108.3v18c0,14-11.8,25.7-25.3,25.7h-40.5c-11.1,0-20.3,9.5-20.3,20.6v38.6\n        \t\tc0,11,9.6,17.5,20.3,20.6c12.8,3.8,25.1,4.5,40.5,0c10.2-3,20.3-8.9,20.3-20.6v-15.5h-40.5v-5.2h40.5h20.3\n        \t\tc11.8,0,16.2-8.2,20.3-20.6c4.2-12.7,4.1-24.9,0-41.2c-2.9-11.7-8.5-20.6-20.3-20.6H195.5z M172.7,206.1c4.2,0,7.6,3.4,7.6,7.7\n        \t\tc0,4.3-3.4,7.8-7.6,7.8c-4.2,0-7.6-3.5-7.6-7.8C165.1,209.6,168.5,206.1,172.7,206.1z\"\n        />\n      </g>\n    </svg>\n  )\n}\n\n/* eslint-enable */\nexport default PythonLogo\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst RubyLogo: SFC = () => {\n  return (\n    <svg\n      width=\"50%\"\n      height=\"50%\"\n      id=\"ruby_logo\"\n      viewBox=\"0 0 100 100\"\n      xmlSpace=\"preserve\"\n    >\n      <style>\n        {`\n          .ruby_st0{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_1_);}\n          .ruby_st1{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_2_);}\n          .ruby_st2{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_3_);}\n          .ruby_st3{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_4_);}\n          .ruby_st4{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_5_);}\n          .ruby_st5{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_6_);}\n          .ruby_st6{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_7_);}\n          .ruby_st7{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_8_);}\n          .ruby_st8{fill-rule:evenodd;clip-rule:evenodd;fill:#FFFFFF;}\n          .ruby_st9{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_9_);}\n          .ruby_st10{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_10_);}\n          .ruby_st11{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_11_);}\n          .ruby_st12{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_12_);}\n          .ruby_st13{fill-rule:evenodd;clip-rule:evenodd;fill:#AA3E35;}\n          .ruby_st14{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_13_);}\n          .ruby_st15{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_14_);}\n          .ruby_st16{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_15_);}\n          .ruby_st17{fill-rule:evenodd;clip-rule:evenodd;fill:url(#RUBY_SVGID_16_);}\n        `}\n      </style>\n      <linearGradient\n        id=\"RUBY_SVGID_1_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"87.8568\"\n        y1=\"108.9284\"\n        x2=\"66.7595\"\n        y2=\"71.6801\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#F68F71'}} />\n        <stop offset=\"0\" style={{stopColor: '#F68F71'}} />\n        <stop offset=\"0.41\" style={{stopColor: '#DC5242'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#A72C32'}} />\n        <stop offset=\"1\" style={{stopColor: '#A72C32'}} />\n      </linearGradient>\n      <polygon\n        className=\"ruby_st0\"\n        points=\"20.4,99.9 94.3,94.8 100,20.3 77.5,66 \"\n      />\n      <linearGradient\n        id=\"RUBY_SVGID_2_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"98.3669\"\n        y1=\"77.6417\"\n        x2=\"71.1783\"\n        y2=\"59.3965\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#9B3F34'}} />\n        <stop offset=\"0\" style={{stopColor: '#9B3F34'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#A23E36'}} />\n        <stop offset=\"1\" style={{stopColor: '#A23E36'}} />\n      </linearGradient>\n      <polygon className=\"ruby_st1\" points=\"70.8,73.8 94.4,94.8 88.1,50.9 \" />\n      <linearGradient\n        id=\"RUBY_SVGID_3_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"76.6134\"\n        y1=\"110.0583\"\n        x2=\"49.4248\"\n        y2=\"91.8131\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#9B3F34'}} />\n        <stop offset=\"0\" style={{stopColor: '#9B3F34'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#A23E36'}} />\n        <stop offset=\"1\" style={{stopColor: '#A23E36'}} />\n      </linearGradient>\n      <polygon className=\"ruby_st2\" points=\"20.6,99.8 94.5,94.8 48,91.1 \" />\n      <linearGradient\n        id=\"RUBY_SVGID_4_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"19.5308\"\n        y1=\"64.4356\"\n        x2=\"23.7457\"\n        y2=\"91.8282\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0.23\" style={{stopColor: '#E28B6F'}} />\n        <stop offset=\"0.46\" style={{stopColor: '#DA6144'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#A60003'}} />\n        <stop offset=\"1\" style={{stopColor: '#A60003'}} />\n      </linearGradient>\n      <polygon className=\"ruby_st3\" points=\"6.7,67.2 20.7,99.8 32.3,61.7 \" />\n      <linearGradient\n        id=\"RUBY_SVGID_5_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"48.52\"\n        y1=\"38.856\"\n        x2=\"50.0731\"\n        y2=\"66.8124\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0.23\" style={{stopColor: '#E08A6D'}} />\n        <stop offset=\"0.56\" style={{stopColor: '#C14435'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#B13430'}} />\n        <stop offset=\"1\" style={{stopColor: '#B13430'}} />\n      </linearGradient>\n      <polygon className=\"ruby_st4\" points=\"29.4,60.7 70.8,73.9 60.1,32 \" />\n      <linearGradient\n        id=\"RUBY_SVGID_6_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"74.2463\"\n        y1=\"13.0212\"\n        x2=\"78.8952\"\n        y2=\"33.056\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0.18\" style={{stopColor: '#DF8063'}} />\n        <stop offset=\"0.4\" style={{stopColor: '#C94D37'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#B13430'}} />\n        <stop offset=\"1\" style={{stopColor: '#B13430'}} />\n      </linearGradient>\n      <polygon className=\"ruby_st5\" points=\"60.6,35 97.6,32.6 68.6,9 \" />\n      <linearGradient\n        id=\"RUBY_SVGID_7_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"60.0495\"\n        y1=\"5.9643\"\n        x2=\"80.0838\"\n        y2=\"-4.0529\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0.54\" style={{stopColor: '#C94838'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#C12D2F'}} />\n        <stop offset=\"1\" style={{stopColor: '#C12D2F'}} />\n      </linearGradient>\n      <polygon className=\"ruby_st6\" points=\"56.3,0.4 84,0.5 67,9.9 \" />\n      <linearGradient\n        id=\"RUBY_SVGID_8_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"1.9704\"\n        y1=\"57.4524\"\n        x2=\"3.6193\"\n        y2=\"73.9617\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0.31\" style={{stopColor: '#DA6548'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#C14433'}} />\n        <stop offset=\"1\" style={{stopColor: '#C14433'}} />\n      </linearGradient>\n      <polygon className=\"ruby_st7\" points=\"1.4,51.4 0,79.9 7.1,66.9 \" />\n      <path\n        className=\"ruby_st8\"\n        d=\"M1,50.9l5.8,16.5L32,61.7L60.8,35l8.1-25.8l-12.8-9L34.4,8.3c-6.9,6.4-20.2,19-20.6,19.2\n\tC13.3,27.7,5,43.4,1,50.9z\"\n      />\n      <linearGradient\n        id=\"RUBY_SVGID_9_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"-9.368\"\n        y1=\"78.4252\"\n        x2=\"68.1438\"\n        y2=\"-1.2786\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#BD0012'}} />\n        <stop offset=\"0\" style={{stopColor: '#BD0012'}} />\n        <stop offset=\"7.000000e-02\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0.17\" style={{stopColor: '#FFFFFF'}} />\n        <stop offset=\"0.27\" style={{stopColor: '#C95841'}} />\n        <stop offset=\"0.33\" style={{stopColor: '#983734'}} />\n        <stop offset=\"0.46\" style={{stopColor: '#AE4231'}} />\n        <stop offset=\"0.72\" style={{stopColor: '#B93E2F'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#DE4E2B'}} />\n        <stop offset=\"1\" style={{stopColor: '#DE4E2B'}} />\n      </linearGradient>\n      <path\n        className=\"ruby_st9\"\n        d=\"M21.4,21.4c14.9-14.7,34-23.4,41.4-16c7.3,7.4-0.4,25.4-15.3,40.2S13.6,69.4,6.3,62C-1,54.6,6.5,36.1,21.4,21.4\n\tz\"\n      />\n      <linearGradient\n        id=\"RUBY_SVGID_10_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"50.0059\"\n        y1=\"86.4623\"\n        x2=\"26.6606\"\n        y2=\"80.7005\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#9F3633'}} />\n        <stop offset=\"0\" style={{stopColor: '#9F3633'}} />\n        <stop offset=\"0.54\" style={{stopColor: '#A73532'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#B13439'}} />\n        <stop offset=\"1\" style={{stopColor: '#B13439'}} />\n      </linearGradient>\n      <path\n        className=\"ruby_st10\"\n        d=\"M20.7,99.8l11.5-38.2l38.3,12.3C56.7,86.8,41.3,97.8,20.7,99.8z\"\n      />\n      <linearGradient\n        id=\"RUBY_SVGID_11_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"90.1051\"\n        y1=\"58.4408\"\n        x2=\"69.3643\"\n        y2=\"39.8514\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#923C36'}} />\n        <stop offset=\"0\" style={{stopColor: '#923C36'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#AA3531'}} />\n        <stop offset=\"1\" style={{stopColor: '#AA3531'}} />\n      </linearGradient>\n      <path\n        className=\"ruby_st11\"\n        d=\"M60.8,34.9l9.8,39c11.6-12.2,22-25.3,27-41.4L60.8,34.9z\"\n      />\n      <linearGradient\n        id=\"RUBY_SVGID_12_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"97.7252\"\n        y1=\"24.3333\"\n        x2=\"87.3936\"\n        y2=\"13.2881\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#8D3E36'}} />\n        <stop offset=\"0\" style={{stopColor: '#8D3E36'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#AA3E37'}} />\n        <stop offset=\"1\" style={{stopColor: '#AA3E37'}} />\n      </linearGradient>\n      <path\n        className=\"ruby_st12\"\n        d=\"M97.6,32.6c3.9-11.9,4.8-28.9-13.7-32.1L68.7,9L97.6,32.6z\"\n      />\n      <path\n        className=\"ruby_st13\"\n        d=\"M0,79.8c0.5,19.6,14.7,19.9,20.7,20.1L6.8,67.3L0,79.8z\"\n      />\n      <radialGradient\n        id=\"RUBY_SVGID_13_\"\n        cx=\"72.5938\"\n        cy=\"40.2085\"\n        r=\"25.4177\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#B13430'}} />\n        <stop offset=\"0\" style={{stopColor: '#B13430'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#923834'}} />\n        <stop offset=\"1\" style={{stopColor: '#923834'}} />\n      </radialGradient>\n      <path\n        className=\"ruby_st14\"\n        d=\"M60.9,35c8.9,5.5,26.8,16.4,27.2,16.6c0.6,0.3,7.7-12.1,9.4-19.1L60.9,35z\"\n      />\n      <radialGradient\n        id=\"RUBY_SVGID_14_\"\n        cx=\"37.3946\"\n        cy=\"73.7016\"\n        r=\"33.7894\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#AE3531'}} />\n        <stop offset=\"0\" style={{stopColor: '#AE3531'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#953A36'}} />\n        <stop offset=\"1\" style={{stopColor: '#953A36'}} />\n      </radialGradient>\n      <path\n        className=\"ruby_st15\"\n        d=\"M32.2,61.5l15.4,29.8c9.1-4.9,16.3-11,22.8-17.4L32.2,61.5z\"\n      />\n      <linearGradient\n        id=\"RUBY_SVGID_15_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"13.4615\"\n        y1=\"99.7397\"\n        x2=\"5.0417\"\n        y2=\"71.1741\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#994939'}} />\n        <stop offset=\"0\" style={{stopColor: '#994939'}} />\n        <stop offset=\"0.43\" style={{stopColor: '#AA3A36'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#B83936'}} />\n        <stop offset=\"1\" style={{stopColor: '#B83936'}} />\n      </linearGradient>\n      <path\n        className=\"ruby_st16\"\n        d=\"M6.7,67.4l-2.2,26c4.1,5.6,9.8,6.1,15.7,5.7C16,88.4,7.4,66.9,6.7,67.4z\"\n      />\n      <linearGradient\n        id=\"RUBY_SVGID_16_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"78.0512\"\n        y1=\"5.0843\"\n        x2=\"96.9277\"\n        y2=\"13.4167\"\n      >\n        <stop offset=\"0\" style={{stopColor: '#B9392F'}} />\n        <stop offset=\"0\" style={{stopColor: '#B9392F'}} />\n        <stop offset=\"0.44\" style={{stopColor: '#A23A36'}} />\n        <stop offset=\"0.99\" style={{stopColor: '#8D463A'}} />\n        <stop offset=\"1\" style={{stopColor: '#8D463A'}} />\n      </linearGradient>\n      <path\n        className=\"ruby_st17\"\n        d=\"M68.6,9l30.6,4.3C97.6,6.4,92.6,1.9,84,0.5L68.6,9z\"\n      />\n    </svg>\n  )\n}\n\nexport default RubyLogo\n","import {SFC} from 'react'\nimport CSharpLogo from '../graphics/CSharpLogo'\nimport GoLogo from '../graphics/GoLogo'\nimport JavaLogo from '../graphics/JavaLogo'\nimport JSLogo from '../graphics/JSLogo'\nimport PythonLogo from '../graphics/PythonLogo'\nimport RubyLogo from '../graphics/RubyLogo'\n\nexport interface ClientLibrary {\n  id: string\n  name: string\n  url: string\n  image: SFC\n}\n\nexport const clientCSharpLibrary = {\n  id: 'csharp',\n  name: 'C#',\n  url: 'https://github.com/influxdata/influxdb-client-csharp',\n  image: CSharpLogo,\n  installingPackageManagerCodeSnippet: `Install-Package InfluxDB.Client`,\n  installingPackageDotNetCLICodeSnippet: `dotnet add package InfluxDB.Client`,\n  packageReferenceCodeSnippet: `<PackageReference Include=\"InfluxDB.Client\" />`,\n  initializeClientCodeSnippet: `using InfluxDB.Client;\nnamespace Examples\n{\n  public class Examples\n  {\n    public static void Main(string[] args)\n    {\n      // You can generate a Token from the \"Tokens Tab\" in the UI\n      var client = InfluxDBClientFactory.Create(\"<%= server %>\", \"<%= token %>\".ToCharArray());\n    }\n  }\n}`,\n  executeQueryCodeSnippet: `const string query = \"from(bucket: \\\\\"<%= bucket %>\\\\\") |> range(start: -1h)\";\nvar tables = await client.GetQueryApi().QueryAsync(query, \"<%= org %>\");`,\n  writingDataLineProtocolCodeSnippet: `const string data = \"mem,host=host1 used_percent=23.43234543 1556896326\";\nusing (var writeApi = client.GetWriteApi())\n{\n  writeApi.WriteRecord(\"<%= bucket %>\", \"<%= org %>\", WritePrecision.Ns, data);\n}`,\n  writingDataPointCodeSnippet: `var point = PointData\n  .Measurement(\"mem\")\n  .Tag(\"host\", \"host1\")\n  .Field(\"used_percent\", 23.43234543)\n  .Timestamp(1556896326L, WritePrecision.Ns);\n\nusing (var writeApi = client.GetWriteApi())\n{\n  writeApi.WritePoint(\"<%= bucket %>\", \"<%= org %>\", point);\n}`,\n  writingDataPocoCodeSnippet: `var mem = new Mem { Host = \"host1\", UsedPercent = 23.43234543, Time = DateTime.UtcNow };\n\nusing (var writeApi = client.GetWriteApi())\n{\n  writeApi.WriteMeasurement(\"<%= bucket %>\", \"<%= org %>\", WritePrecision.Ns, mem);\n}`,\n  pocoClassCodeSnippet: `// Public class\n[Measurement(\"mem\")]\nprivate class Mem\n{\n  [Column(\"host\", IsTag = true)] public string Host { get; set; }\n  [Column(\"used_percent\")] public double? UsedPercent { get; set; }\n  [Column(IsTimestamp = true)] public DateTime Time { get; set; }\n}`,\n}\n\nexport const clientGoLibrary = {\n  id: 'go',\n  name: 'GO',\n  url: 'https://github.com/influxdata/influxdb-client-go',\n  image: GoLogo,\n  initializeClientCodeSnippet: `// You can generate a Token from the \"Tokens Tab\" in the UI\ninflux, err := influxdb.New(<%= server %>, <%= token %>, influxdb.WithHTTPClient(myHTTPClient))\nif err != nil {\n  panic(err) // error handling here; normally we wouldn't use fmt but it works for the example\n}\n// Add your app code here\ninflux.Close() // closes the client.  After this the client is useless.`,\n  writeDataCodeSnippet: `// we use client.NewRowMetric for the example because it's easy, but if you need extra performance\n// it is fine to manually build the []client.Metric{}.\nmyMetrics := []influxdb.Metric{\n  influxdb.NewRowMetric(\n    map[string]interface{}{\"memory\": 1000, \"cpu\": 0.93},\n    \"system-metrics\",\n    map[string]string{\"hostname\": \"hal9000\"},\n    time.Date(2018, 3, 4, 5, 6, 7, 8, time.UTC)),\n  influxdb.NewRowMetric(\n    map[string]interface{}{\"memory\": 1000, \"cpu\": 0.93},\n    \"system-metrics\",\n    map[string]string{\"hostname\": \"hal9000\"},\n    time.Date(2018, 3, 4, 5, 6, 7, 9, time.UTC)),\n}\n\n// The actual write..., this method can be called concurrently.\nif _, err := influx.Write(context.Background(), \"<%= bucket %>\", \"<%= org %>\", myMetrics...)\nif err != nil {\n  log.Fatal(err) // as above use your own error handling here.\n}`,\n}\n\nexport const clientJavaLibrary = {\n  id: 'java',\n  name: 'Java',\n  url: 'https://github.com/influxdata/influxdb-client-java',\n  image: JavaLogo,\n  buildWithMavenCodeSnippet: `<dependency>\n  <groupId>com.influxdb</groupId>\n  <artifactId>influxdb-client-java</artifactId>\n  <version>1.5.0</version>\n</dependency>`,\n  buildWithGradleCodeSnippet: `dependencies {\n  compile \"com.influxdb:influxdb-client-java:1.5.0\"\n}`,\n  initializeClientCodeSnippet: `package example;\n\nimport com.influxdb.client.InfluxDBClient;\nimport com.influxdb.client.InfluxDBClientFactory;\n\npublic class InfluxDB2Example {\n  public static void main(final String[] args) {\n    // You can generate a Token from the \"Tokens Tab\" in the UI\n    InfluxDBClient client = InfluxDBClientFactory.create(\"<%= server %>\", \"<%= token %>\".toCharArray());\n  }\n}`,\n  executeQueryCodeSnippet: `String query = \"from(bucket: \\\\\"<%= bucket %>\\\\\") |> range(start: -1h)\";\nList<FluxTable> tables = client.getQueryApi().query(query, \"<%= org %>\");`,\n  writingDataLineProtocolCodeSnippet: `String data = \"mem,host=host1 used_percent=23.43234543 1556896326\";\ntry (WriteApi writeApi = client.getWriteApi()) {\n  writeApi.writeRecord(\"<%= bucket %>\", \"<%= org %>\", WritePrecision.NS, data);\n}`,\n  writingDataPointCodeSnippet: `Point point = Point\n  .measurement(\"mem\")\n  .addTag(\"host\", \"host1\")\n  .addField(\"used_percent\", 23.43234543)\n  .time(1556896326L, WritePrecision.NS);\n\ntry (WriteApi writeApi = client.getWriteApi()) {\n  writeApi.writePoint(\"<%= bucket %>\", \"<%= org %>\", point);\n}`,\n  writingDataPojoCodeSnippet: `Mem mem = new Mem();\nmem.host = \"host1\";\nmem.used_percent = 23.43234543;\nmem.time = Instant.now();\n\ntry (WriteApi writeApi = client.getWriteApi()) {\n  writeApi.writeMeasurement(\"<%= bucket %>\", \"<%= org %>\", WritePrecision.NS, mem);\n}`,\n  pojoClassCodeSnippet: `@Measurement(name = \"mem\")\npublic class Mem {\n  @Column(tag = true)\n  String host;\n  @Column\n  Double used_percent;\n  @Column(timestamp = true)\n  Instant time;\n}`,\n}\n\nexport const clientJSLibrary = {\n  id: 'javascript-node',\n  name: 'JavaScript/Node.js',\n  url: 'https://github.com/influxdata/influxdb-client-js',\n  image: JSLogo,\n  initializeClientCodeSnippet: `import Client from '@influxdata/influx'\n// You can generate a Token from the \"Tokens Tab\" in the UI\nconst client = new Client('<%= server %>', '<%= token %>')`,\n  executeQueryCodeSnippet: `const query = 'from(bucket: \"my_bucket\") |> range(start: -1h)'\nconst {promise} = client.queries.execute('<%= org %>', query)\nconst csv = await promise`,\n  writingDataLineProtocolCodeSnippet: `const data = 'mem,host=host1 used_percent=23.43234543 1556896326' // Line protocol string\nconst response = await client.write.create('<%= org %>', '<%= bucket %>', data)`,\n}\n\nexport const clientPythonLibrary = {\n  id: 'python',\n  name: 'Python',\n  url: 'https://github.com/influxdata/influxdb-client-python',\n  image: PythonLogo,\n  initializePackageCodeSnippet: `pip install influxdb-client`,\n  initializeClientCodeSnippet: `import influxdb_client\nfrom influxdb_client import InfluxDBClient\n\n## You can generate a Token from the \"Tokens Tab\" in the UI\nclient = InfluxDBClient(url=\"<%= server %>\", token=\"<%= token %>\")`,\n  executeQueryCodeSnippet: `query = 'from(bucket: \"<%= bucket %>\") |> range(start: -1h)'\ntables = client.query_api().query(query, org=\"<%= org %>\")`,\n  writingDataLineProtocolCodeSnippet: `data = \"mem,host=host1 used_percent=23.43234543 1556896326\"\nwrite_client.write(\"<%= bucket %>\", \"<%= org %>\", data)`,\n  writingDataPointCodeSnippet: `point = Point(\"mem\")\n  .tag(\"host\", \"host1\")\n  .field(\"used_percent\", 23.43234543)\n  .time(1556896326, WritePrecision.NS)\n\nwrite_client.write(\"<%= bucket %>\", \"<%= org %>\", point)`,\n  writingDataBatchCodeSnippet: `sequence = [\"mem,host=host1 used_percent=23.43234543 1556896326\",\n            \"mem,host=host1 available_percent=15.856523 1556896326\"]\nwrite_client.write(\"<%= bucket %>\", \"<%= org %>\", sequence)`,\n}\n\nexport const clientRubyLibrary = {\n  id: 'ruby',\n  name: 'Ruby',\n  url: 'https://github.com/influxdata/influxdb-client-ruby',\n  image: RubyLogo,\n  initializeGemCodeSnippet: `gem install influxdb-client -v 1.0.0.beta`,\n  initializeClientCodeSnippet: `## You can generate a Token from the \"Tokens Tab\" in the UI\nclient = InfluxDB2::Client.new('<%= server %>', '<%= token %>')`,\n  executeQueryCodeSnippet: `query = 'from(bucket: \"<%= bucket %>\") |> range(start: -1h)'\ntables = client.create_query_api.query(query: query, org: '<%= org %>')`,\n  writingDataLineProtocolCodeSnippet: `data = 'mem,host=host1 used_percent=23.43234543 1556896326'\nwrite_client.write(data: data, bucket: '<%= bucket %>', org: '<%= org %>')`,\n  writingDataPointCodeSnippet: `point = InfluxDB2::Point.new(name: 'mem')\n  .add_tag('host', 'host1')\n  .add_field('used_percent', 23.43234543)\n  .time(1_556_896_326, WritePrecision.NS)\n\nwrite_client.write(data: point, bucket: '<%= bucket %>', org: '<%= org %>')`,\n  writingDataHashCodeSnippet: `hash = { name: 'h2o',\n  tags: { host: 'aws', region: 'us' },\n  fields: { level: 5, saturation: '99%' },\n  time: 123 }\n\nwrite_client.write(data: hash, bucket: '<%= bucket %>', org: '<%= org %>')`,\n  writingDataBatchCodeSnippet: `point = InfluxDB2::Point.new(name: 'mem')\n  .add_tag('host', 'host1')\n  .add_field('used_percent', 23.43234543)\n  .time(1_556_896_326, WritePrecision.NS)\n \nhash = { name: 'h2o',\n  tags: { host: 'aws', region: 'us' },\n  fields: { level: 5, saturation: '99%' },\n  time: 123 }\n  \ndata = 'mem,host=host1 used_percent=23.43234543 1556896326'   \n            \nwrite_client.write(data: [point, hash, data], bucket: '<%= bucket %>', org: '<%= org %>')`,\n}\n\nexport const clientLibraries: ClientLibrary[] = [\n  clientCSharpLibrary,\n  clientGoLibrary,\n  clientJavaLibrary,\n  clientJSLibrary,\n  clientPythonLibrary,\n  clientRubyLibrary,\n]\n","// Libraries\nimport _ from 'lodash'\nimport React, {FunctionComponent, createElement} from 'react'\nimport {withRouter, WithRouterProps, Link} from 'react-router'\n\n// Components\nimport {\n  Grid,\n  SelectableCard,\n  SquareGrid,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport CodeSnippet from 'src/shared/components/CodeSnippet'\n\n// Mocks\nimport {clientLibraries} from 'src/clientLibraries/constants'\n\ninterface OwnProps {\n  orgID: string\n}\n\ntype Props = OwnProps & WithRouterProps\n\nconst ClientLibraries: FunctionComponent<Props> = ({orgID, router}) => {\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column>\n          <p>\n            Use the following URL when initializing each Client Library. The\n            Token can be generated on the\n            <Link to={`/orgs/${orgID}/load-data/tokens`}>&nbsp;Tokens tab</Link>\n            .\n          </p>\n          <CodeSnippet copyText={window.location.origin} label=\"Client URL\" />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <SquareGrid cardSize=\"200px\" gutter={ComponentSize.Small}>\n            {clientLibraries.map(cl => {\n              const handleClick = (): void => {\n                router.push(\n                  `/orgs/${orgID}/load-data/client-libraries/${cl.id}`\n                )\n              }\n\n              return (\n                <SquareGrid.Card key={cl.id}>\n                  <SelectableCard\n                    id={cl.id}\n                    formName=\"client-libraries-cards\"\n                    label={cl.name}\n                    testID={`client-libraries-cards--${cl.id}`}\n                    selected={false}\n                    onClick={handleClick}\n                  >\n                    {createElement(cl.image)}\n                  </SelectableCard>\n                </SquareGrid.Card>\n              )\n            })}\n          </SquareGrid>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default withRouter<OwnProps>(ClientLibraries)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport LoadDataTabbedPage from 'src/settings/components/LoadDataTabbedPage'\nimport LoadDataHeader from 'src/settings/components/LoadDataHeader'\nimport {Page} from '@influxdata/clockface'\nimport ClientLibraries from 'src/clientLibraries/components/ClientLibraries'\n\n// Types\nimport {AppState, Organization} from 'src/types'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  org: Organization\n}\n\n@ErrorHandling\nclass ClientLibrariesPage extends PureComponent<StateProps> {\n  public render() {\n    const {org, children} = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Client Libraries', 'Load Data'])}>\n          <LoadDataHeader />\n          <LoadDataTabbedPage activeTab=\"client-libraries\" orgID={org.id}>\n            <ClientLibraries orgID={org.id} />\n          </LoadDataTabbedPage>\n        </Page>\n        {children}\n      </>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  org: getOrg(state),\n})\n\nexport default connect<StateProps>(mstp)(ClientLibrariesPage)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\n\n// Types\nimport {AppState, Organization} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface OwnProps {\n  title: string\n}\n\ninterface StateProps {\n  org: Organization\n}\n\ntype Props = OwnProps & StateProps & WithRouterProps\n\nconst ClientLibraryOverlay: FunctionComponent<Props> = ({\n  title,\n  children,\n  router,\n  org,\n}) => {\n  const onDismiss = () => {\n    router.push(`/orgs/${org.id}/load-data/client-libraries`)\n  }\n\n  return (\n    <Overlay visible={true}>\n      <Overlay.Container maxWidth={980}>\n        <Overlay.Header title={title} onDismiss={onDismiss} />\n        <Overlay.Body className=\"client-library-overlay\">\n          {children}\n        </Overlay.Body>\n      </Overlay.Container>\n    </Overlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  org: getOrg(state),\n})\n\nexport default connect<StateProps>(mstp)(\n  withRouter<OwnProps>(ClientLibraryOverlay)\n)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport ClientLibraryOverlay from 'src/clientLibraries/components/ClientLibraryOverlay'\nimport TemplatedCodeSnippet from 'src/shared/components/TemplatedCodeSnippet'\n\n// Constants\nimport {clientCSharpLibrary} from 'src/clientLibraries/constants'\n\n// Types\nimport {AppState} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  org: string\n}\n\ntype Props = StateProps\n\nconst ClientCSharpOverlay: FunctionComponent<Props> = props => {\n  const {\n    name,\n    url,\n    installingPackageManagerCodeSnippet,\n    installingPackageDotNetCLICodeSnippet,\n    packageReferenceCodeSnippet,\n    initializeClientCodeSnippet,\n    executeQueryCodeSnippet,\n    writingDataPointCodeSnippet: writingDataDataPointCodeSnippet,\n    writingDataLineProtocolCodeSnippet,\n    writingDataPocoCodeSnippet,\n    pocoClassCodeSnippet,\n  } = clientCSharpLibrary\n  const {org} = props\n  const server = window.location.origin\n\n  return (\n    <ClientLibraryOverlay title={`${name} Client Library`}>\n      <p>\n        For more detailed and up to date information check out the{' '}\n        <a href={url} target=\"_blank\">\n          GitHub Repository\n        </a>\n      </p>\n      <h5>Install Package</h5>\n      <p>Package Manager</p>\n      <TemplatedCodeSnippet\n        template={installingPackageManagerCodeSnippet}\n        label=\"Code\"\n      />\n      <p>.NET CLI</p>\n      <TemplatedCodeSnippet\n        template={installingPackageDotNetCLICodeSnippet}\n        label=\"Code\"\n      />\n      <p>Package Reference</p>\n      <TemplatedCodeSnippet\n        template={packageReferenceCodeSnippet}\n        label=\"Code\"\n      />\n      <h5>Initialize the Client</h5>\n      <TemplatedCodeSnippet\n        template={initializeClientCodeSnippet}\n        label=\"C# Code\"\n        defaults={{\n          server: 'basepath',\n          token: 'token',\n        }}\n        values={{\n          server,\n        }}\n      />\n      <h5>Write Data</h5>\n      <p>Option 1: Use InfluxDB Line Protocol to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataLineProtocolCodeSnippet}\n        label=\"C# Code\"\n        defaults={{\n          org: 'orgID',\n          bucket: 'bucketID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <p>Option 2: Use a Data Point to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataDataPointCodeSnippet}\n        label=\"C# Code\"\n        defaults={{\n          org: 'orgID',\n          bucket: 'bucketID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <p>Option 3: Use POCO and corresponding Class to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataPocoCodeSnippet}\n        label=\"C# Code\"\n        defaults={{\n          org: 'orgID',\n          bucket: 'bucketID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <TemplatedCodeSnippet template={pocoClassCodeSnippet} label=\"C# Code\" />\n      <h5>Execute a Flux query</h5>\n      <TemplatedCodeSnippet\n        template={executeQueryCodeSnippet}\n        label=\"C# Code\"\n        defaults={{\n          org: 'orgID',\n          bucket: 'bucketID',\n        }}\n        values={{\n          org,\n        }}\n      />\n    </ClientLibraryOverlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    org: getOrg(state).id,\n  }\n}\n\nexport {ClientCSharpOverlay}\nexport default connect<StateProps, {}, Props>(\n  mstp,\n  null\n)(ClientCSharpOverlay)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport ClientLibraryOverlay from 'src/clientLibraries/components/ClientLibraryOverlay'\nimport TemplatedCodeSnippet from 'src/shared/components/TemplatedCodeSnippet'\n\n// Constants\nimport {clientGoLibrary} from 'src/clientLibraries/constants'\n\n// Types\nimport {AppState} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  org: string\n}\n\ntype Props = StateProps\n\nconst ClientGoOverlay: FunctionComponent<Props> = props => {\n  const {\n    name,\n    url,\n    initializeClientCodeSnippet,\n    writeDataCodeSnippet,\n  } = clientGoLibrary\n  const {org} = props\n  const server = window.location.origin\n\n  return (\n    <ClientLibraryOverlay title={`${name} Client Library`}>\n      <p>\n        For more detailed and up to date information check out the{' '}\n        <a href={url} target=\"_blank\">\n          GitHub Repository\n        </a>\n      </p>\n      <h5>Initialize the Client</h5>\n      <TemplatedCodeSnippet\n        template={initializeClientCodeSnippet}\n        label=\"Go Code\"\n        defaults={{\n          token: 'myToken',\n          server: 'myHTTPInfluxAddress',\n        }}\n        values={{\n          server,\n        }}\n      />\n      <h5>Write Data</h5>\n      <TemplatedCodeSnippet\n        template={writeDataCodeSnippet}\n        label=\"Go Code\"\n        defaults={{\n          bucket: 'my-awesome-bucket',\n          org: 'my-very-awesome-org',\n        }}\n        values={{\n          org,\n        }}\n      />\n    </ClientLibraryOverlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    org: getOrg(state).id,\n  }\n}\n\nexport {ClientGoOverlay}\nexport default connect<StateProps, {}, Props>(\n  mstp,\n  null\n)(ClientGoOverlay)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport ClientLibraryOverlay from 'src/clientLibraries/components/ClientLibraryOverlay'\nimport TemplatedCodeSnippet from 'src/shared/components/TemplatedCodeSnippet'\n\n// Constants\nimport {clientJavaLibrary} from 'src/clientLibraries/constants'\n\n// Types\nimport {AppState} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  org: string\n}\n\ntype Props = StateProps\n\nconst ClientJavaOverlay: FunctionComponent<Props> = props => {\n  const {\n    name,\n    url,\n    buildWithMavenCodeSnippet,\n    buildWithGradleCodeSnippet,\n    initializeClientCodeSnippet,\n    executeQueryCodeSnippet,\n    writingDataLineProtocolCodeSnippet,\n    writingDataPointCodeSnippet,\n    writingDataPojoCodeSnippet,\n    pojoClassCodeSnippet,\n  } = clientJavaLibrary\n  const {org} = props\n  const server = window.location.origin\n\n  return (\n    <ClientLibraryOverlay title={`${name} Client Library`}>\n      <p>\n        For more detailed and up to date information check out the{' '}\n        <a href={url} target=\"_blank\">\n          GitHub Repository\n        </a>\n      </p>\n      <h5>Add Dependency</h5>\n      <p>Build with Maven</p>\n      <TemplatedCodeSnippet template={buildWithMavenCodeSnippet} label=\"Code\" />\n      <p>Build with Gradle</p>\n      <TemplatedCodeSnippet\n        template={buildWithGradleCodeSnippet}\n        label=\"Code\"\n      />\n      <h5>Initialize the Client</h5>\n      <TemplatedCodeSnippet\n        template={initializeClientCodeSnippet}\n        label=\"Java Code\"\n        defaults={{\n          server: 'serverUrl',\n          token: 'token',\n        }}\n        values={{\n          server,\n        }}\n      />\n      <h5>Write Data</h5>\n      <p>Option 1: Use InfluxDB Line Protocol to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataLineProtocolCodeSnippet}\n        label=\"Java Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <p>Option 2: Use a Data Point to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataPointCodeSnippet}\n        label=\"Java Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <p>Option 3: Use POJO and corresponding class to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataPojoCodeSnippet}\n        label=\"Java Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <TemplatedCodeSnippet template={pojoClassCodeSnippet} label=\"Java Code\" />\n      <h5>Execute a Flux query</h5>\n      <TemplatedCodeSnippet\n        template={executeQueryCodeSnippet}\n        label=\"Java Code\"\n        defaults={{\n          bucket: 'my_bucket',\n          org: 'myorgid',\n        }}\n        values={{\n          org,\n        }}\n      />\n    </ClientLibraryOverlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    org: getOrg(state).id,\n  }\n}\n\nexport {ClientJavaOverlay}\nexport default connect<StateProps, {}, Props>(\n  mstp,\n  null\n)(ClientJavaOverlay)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport ClientLibraryOverlay from 'src/clientLibraries/components/ClientLibraryOverlay'\nimport TemplatedCodeSnippet from 'src/shared/components/TemplatedCodeSnippet'\n\n// Constants\nimport {clientJSLibrary} from 'src/clientLibraries/constants'\n\n// Types\nimport {AppState} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  org: string\n}\n\ntype Props = StateProps\n\nconst ClientJSOverlay: FunctionComponent<Props> = props => {\n  const {\n    name,\n    url,\n    initializeClientCodeSnippet,\n    executeQueryCodeSnippet,\n    writingDataLineProtocolCodeSnippet,\n  } = clientJSLibrary\n  const {org} = props\n  const server = window.location.origin\n\n  return (\n    <ClientLibraryOverlay title={`${name} Client Library`}>\n      <p>\n        For more detailed and up to date information check out the{' '}\n        <a href={url} target=\"_blank\">\n          GitHub Repository\n        </a>\n      </p>\n      <br />\n      <h5>Initialize the Client</h5>\n      <TemplatedCodeSnippet\n        template={initializeClientCodeSnippet}\n        label=\"JavaScript Code\"\n        defaults={{\n          server: 'server',\n          token: 'token',\n        }}\n        values={{\n          server,\n        }}\n      />\n      <h5>Write Data</h5>\n      <TemplatedCodeSnippet\n        template={writingDataLineProtocolCodeSnippet}\n        label=\"JavaScript Code\"\n        defaults={{\n          org: 'orgID',\n          bucket: 'bucketID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <h5>Execute a Flux query</h5>\n      <TemplatedCodeSnippet\n        template={executeQueryCodeSnippet}\n        label=\"JavaScript Code\"\n        defaults={{\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n    </ClientLibraryOverlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {id} = getOrg(state)\n\n  return {\n    org: id,\n  }\n}\n\nexport {ClientJSOverlay}\nexport default connect<StateProps, {}, Props>(\n  mstp,\n  null\n)(ClientJSOverlay)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport ClientLibraryOverlay from 'src/clientLibraries/components/ClientLibraryOverlay'\nimport TemplatedCodeSnippet from 'src/shared/components/TemplatedCodeSnippet'\n\n// Constants\nimport {clientPythonLibrary} from 'src/clientLibraries/constants'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  org: string\n}\n\ntype Props = StateProps\n\nconst ClientPythonOverlay: FunctionComponent<Props> = props => {\n  const {\n    name,\n    url,\n    initializePackageCodeSnippet,\n    initializeClientCodeSnippet,\n    executeQueryCodeSnippet,\n    writingDataLineProtocolCodeSnippet,\n    writingDataPointCodeSnippet,\n    writingDataBatchCodeSnippet,\n  } = clientPythonLibrary\n  const {org} = props\n  const server = window.location.origin\n\n  return (\n    <ClientLibraryOverlay title={`${name} Client Library`}>\n      <p>\n        For more detailed and up to date information check out the{' '}\n        <a href={url} target=\"_blank\">\n          GitHub Repository\n        </a>\n      </p>\n      <h5>Install Package</h5>\n      <TemplatedCodeSnippet\n        template={initializePackageCodeSnippet}\n        label=\"Code\"\n      />\n      <h5>Initialize the Client</h5>\n      <TemplatedCodeSnippet\n        template={initializeClientCodeSnippet}\n        label=\"Python Code\"\n        defaults={{\n          server: 'serverUrl',\n          token: 'token',\n        }}\n        values={{\n          server,\n        }}\n      />\n      <h5>Write Data</h5>\n      <p>Option 1: Use InfluxDB Line Protocol to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataLineProtocolCodeSnippet}\n        label=\"Python Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <p>Option 2: Use a Data Point to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataPointCodeSnippet}\n        label=\"Python Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <p>Option 3: Use a Batch Sequence to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataBatchCodeSnippet}\n        label=\"Python Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <h5>Execute a Flux query</h5>\n      <TemplatedCodeSnippet\n        template={executeQueryCodeSnippet}\n        label=\"Python Code\"\n        defaults={{\n          bucket: 'my_bucket',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n    </ClientLibraryOverlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {id} = getOrg(state)\n\n  return {\n    org: id,\n  }\n}\n\nexport {ClientPythonOverlay}\nexport default connect<StateProps, {}, Props>(\n  mstp,\n  null\n)(ClientPythonOverlay)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport ClientLibraryOverlay from 'src/clientLibraries/components/ClientLibraryOverlay'\nimport TemplatedCodeSnippet from 'src/shared/components/TemplatedCodeSnippet'\n\n// Constants\nimport {clientRubyLibrary} from 'src/clientLibraries/constants'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  org: string\n}\n\ntype Props = StateProps\n\nconst ClientRubyOverlay: FunctionComponent<Props> = props => {\n  const {\n    name,\n    url,\n    initializeGemCodeSnippet,\n    initializeClientCodeSnippet,\n    executeQueryCodeSnippet,\n    writingDataLineProtocolCodeSnippet,\n    writingDataPointCodeSnippet,\n    writingDataHashCodeSnippet,\n    writingDataBatchCodeSnippet,\n  } = clientRubyLibrary\n  const {org} = props\n  const server = window.location.origin\n\n  return (\n    <ClientLibraryOverlay title={`${name} Client Library`}>\n      <p>\n        For more detailed and up to date information check out the{' '}\n        <a href={url} target=\"_blank\">\n          GitHub Repository\n        </a>\n      </p>\n      <h5>Install the Gem</h5>\n      <TemplatedCodeSnippet template={initializeGemCodeSnippet} label=\"Code\" />\n      <h5>Initialize the Client</h5>\n      <TemplatedCodeSnippet\n        template={initializeClientCodeSnippet}\n        label=\"Ruby Code\"\n        defaults={{\n          server: 'serverUrl',\n          token: 'token',\n        }}\n        values={{\n          server,\n        }}\n      />\n      <h5>Write Data</h5>\n      <p>Option 1: Use InfluxDB Line Protocol to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataLineProtocolCodeSnippet}\n        label=\"Ruby Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <p>Option 2: Use a Data Point to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataPointCodeSnippet}\n        label=\"Ruby Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <p>Option 3: Use a Hash to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataHashCodeSnippet}\n        label=\"Ruby Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <p>Option 4: Use a Batch Sequence to write data</p>\n      <TemplatedCodeSnippet\n        template={writingDataBatchCodeSnippet}\n        label=\"Ruby Code\"\n        defaults={{\n          bucket: 'bucketID',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n      <h5>Execute a Flux query</h5>\n      <TemplatedCodeSnippet\n        template={executeQueryCodeSnippet}\n        label=\"Ruby Code\"\n        defaults={{\n          bucket: 'my_bucket',\n          org: 'orgID',\n        }}\n        values={{\n          org,\n        }}\n      />\n    </ClientLibraryOverlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {id} = getOrg(state)\n\n  return {\n    org: id,\n  }\n}\n\nexport {ClientRubyOverlay}\nexport default connect<StateProps, {}, Props>(\n  mstp,\n  null\n)(ClientRubyOverlay)\n","import React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport ImportOverlay from 'src/shared/components/ImportOverlay'\n\n// Copy\nimport {invalidJSON} from 'src/shared/copy/notifications'\n\n// Actions\nimport {createTemplate as createTemplateAction} from 'src/templates/actions/thunks'\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\n\n// Types\nimport {AppState, ResourceType, Organization} from 'src/types'\nimport {ComponentStatus} from '@influxdata/clockface'\n\n// Utils\nimport jsonlint from 'jsonlint-mod'\nimport {getByID} from 'src/resources/selectors'\n\ninterface State {\n  status: ComponentStatus\n}\n\ninterface DispatchProps {\n  createTemplate: typeof createTemplateAction\n  notify: typeof notifyAction\n}\n\ninterface StateProps {\n  org: Organization\n}\n\ninterface OwnProps extends WithRouterProps {\n  params: {orgID: string}\n}\n\ntype Props = DispatchProps & OwnProps & StateProps\n\nclass TemplateImportOverlay extends PureComponent<Props> {\n  public state: State = {\n    status: ComponentStatus.Default,\n  }\n\n  public render() {\n    return (\n      <ImportOverlay\n        onDismissOverlay={this.onDismiss}\n        resourceName=\"Template\"\n        onSubmit={this.handleImportTemplate}\n        status={this.state.status}\n        updateStatus={this.updateOverlayStatus}\n      />\n    )\n  }\n\n  private onDismiss = () => {\n    const {router} = this.props\n\n    router.goBack()\n  }\n\n  private updateOverlayStatus = (status: ComponentStatus) =>\n    this.setState(() => ({status}))\n\n  private handleImportTemplate = (importString: string) => {\n    const {createTemplate, notify} = this.props\n\n    let template\n    this.updateOverlayStatus(ComponentStatus.Default)\n    try {\n      template = jsonlint.parse(importString)\n    } catch (error) {\n      this.updateOverlayStatus(ComponentStatus.Error)\n      notify(invalidJSON(error.message))\n      return\n    }\n    createTemplate(template)\n    this.onDismiss()\n  }\n}\n\nconst mstp = (state: AppState, props: Props): StateProps => {\n  const org = getByID<Organization>(\n    state,\n    ResourceType.Orgs,\n    props.params.orgID\n  )\n\n  return {org}\n}\n\nconst mdtp: DispatchProps = {\n  notify: notifyAction,\n  createTemplate: createTemplateAction,\n}\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mstp,\n  mdtp\n)(withRouter(TemplateImportOverlay))\n","import React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport ExportOverlay from 'src/shared/components/ExportOverlay'\n\n// Actions\nimport {\n  convertToTemplate as convertToTemplateAction,\n  clearExportTemplate as clearExportTemplateAction,\n} from 'src/templates/actions/thunks'\n\n// Types\nimport {DocumentCreate} from '@influxdata/influx'\nimport {AppState} from 'src/types'\nimport {RemoteDataState} from 'src/types'\n\ninterface OwnProps {\n  params: {id: string}\n}\n\ninterface DispatchProps {\n  convertToTemplate: typeof convertToTemplateAction\n  clearExportTemplate: typeof clearExportTemplateAction\n}\n\ninterface StateProps {\n  exportTemplate: DocumentCreate\n  status: RemoteDataState\n}\n\ntype Props = OwnProps & StateProps & DispatchProps & WithRouterProps\n\nclass TemplateExportOverlay extends PureComponent<Props> {\n  public componentDidMount() {\n    const {\n      params: {id},\n      convertToTemplate,\n    } = this.props\n    convertToTemplate(id)\n  }\n\n  public render() {\n    const {exportTemplate, status} = this.props\n\n    return (\n      <ExportOverlay\n        resourceName=\"Template\"\n        resource={exportTemplate}\n        onDismissOverlay={this.onDismiss}\n        status={status}\n      />\n    )\n  }\n\n  private onDismiss = () => {\n    const {router, clearExportTemplate} = this.props\n\n    router.goBack()\n    clearExportTemplate()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  exportTemplate: state.resources.templates.exportTemplate.item,\n  status: state.resources.templates.exportTemplate.status,\n})\n\nconst mdtp: DispatchProps = {\n  convertToTemplate: convertToTemplateAction,\n  clearExportTemplate: clearExportTemplateAction,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(TemplateExportOverlay))\n","// Libraries\nimport React, {SFC} from 'react'\n\ninterface Props {\n  children: JSX.Element[] | JSX.Element\n}\n\nconst TabbedPageHeader: SFC<Props> = ({children}) => (\n  <div className=\"tabbed-page-section--header\">{children}</div>\n)\n\nexport default TabbedPageHeader\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Context} from 'src/clockface'\nimport {IconFont, ComponentColor} from '@influxdata/clockface'\n\n// Types\nimport {Variable} from 'src/types'\n\ninterface Props {\n  variable: Variable\n  onExport: () => void\n  onRename: () => void\n  onDelete: (variable: Variable) => void\n}\n\nexport default class VariableContextMenu extends PureComponent<Props> {\n  public render() {\n    const {variable, onExport, onRename, onDelete} = this.props\n\n    return (\n      <Context>\n        <Context.Menu icon={IconFont.CogThick}>\n          <Context.Item label=\"Export\" action={onExport} />\n          <Context.Item\n            label=\"Rename\"\n            action={onRename}\n            testID=\"context-rename-variable\"\n          />\n        </Context.Menu>\n        <Context.Menu\n          icon={IconFont.Trash}\n          color={ComponentColor.Danger}\n          testID=\"context-delete-menu\"\n        >\n          <Context.Item\n            label=\"Delete\"\n            action={onDelete}\n            value={variable}\n            testID=\"context-delete-variable\"\n          />\n        </Context.Menu>\n      </Context>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {ResourceCard} from '@influxdata/clockface'\nimport InlineLabels from 'src/shared/components/inlineLabels/InlineLabels'\nimport VariableContextMenu from 'src/variables/components/VariableContextMenu'\n\n// Types\nimport {Label, Variable} from 'src/types'\n\n// Actions\nimport {\n  addVariableLabelAsync,\n  removeVariableLabelAsync,\n} from 'src/variables/actions/thunks'\n\ninterface OwnProps {\n  variable: Variable\n  onDeleteVariable: (variable: Variable) => void\n  onEditVariable: (variable: Variable) => void\n  onFilterChange: (searchTerm: string) => void\n}\n\ninterface DispatchProps {\n  onAddVariableLabel: typeof addVariableLabelAsync\n  onRemoveVariableLabel: typeof removeVariableLabelAsync\n}\n\ntype Props = OwnProps & DispatchProps\n\nclass VariableCard extends PureComponent<Props & WithRouterProps> {\n  public render() {\n    const {variable, onDeleteVariable} = this.props\n\n    return (\n      <ResourceCard\n        testID=\"resource-card\"\n        labels={this.labels}\n        contextMenu={\n          <VariableContextMenu\n            variable={variable}\n            onExport={this.handleExport}\n            onRename={this.handleRenameVariable}\n            onDelete={onDeleteVariable}\n          />\n        }\n        name={\n          <ResourceCard.Name\n            onClick={this.handleNameClick}\n            name={variable.name}\n          />\n        }\n        metaData={[<>Type: {variable.arguments.type}</>]}\n      />\n    )\n  }\n\n  private handleNameClick = (): void => {\n    const {\n      variable,\n      params: {orgID},\n      router,\n    } = this.props\n\n    router.push(`/orgs/${orgID}/settings/variables/${variable.id}/edit`)\n  }\n\n  private get labels(): JSX.Element {\n    const {variable, onFilterChange} = this.props\n\n    return (\n      <InlineLabels\n        selectedLabelIDs={variable.labels}\n        onFilterChange={onFilterChange}\n        onAddLabel={this.handleAddLabel}\n        onRemoveLabel={this.handleRemoveLabel}\n      />\n    )\n  }\n\n  private handleAddLabel = (label: Label): void => {\n    const {variable, onAddVariableLabel} = this.props\n\n    onAddVariableLabel(variable.id, label)\n  }\n\n  private handleRemoveLabel = (label: Label): void => {\n    const {variable, onRemoveVariableLabel} = this.props\n\n    onRemoveVariableLabel(variable.id, label)\n  }\n\n  private handleExport = () => {\n    const {\n      router,\n      variable,\n      params: {orgID},\n    } = this.props\n    router.push(`/orgs/${orgID}/settings/variables/${variable.id}/export`)\n  }\n\n  private handleRenameVariable = () => {\n    const {\n      router,\n      variable,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/settings/variables/${variable.id}/rename`)\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onAddVariableLabel: addVariableLabelAsync,\n  onRemoveVariableLabel: removeVariableLabelAsync,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(withRouter<OwnProps>(VariableCard))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport {ResourceList} from '@influxdata/clockface'\nimport VariableCard from 'src/variables/components/VariableCard'\n\n// Types\nimport {OverlayState, Variable} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {Sort} from '@influxdata/clockface'\n\n// Selectors\nimport {getSortedResources} from 'src/shared/utils/sort'\n\ntype SortKey = keyof Variable | 'arguments.type'\n\ninterface Props {\n  variables: Variable[]\n  emptyState: JSX.Element\n  onDeleteVariable: (variable: Variable) => void\n  onFilterChange: (searchTerm: string) => void\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (nextSort: Sort, sortKey: SortKey) => void\n}\n\ninterface State {\n  variableID: string\n  variableOverlayState: OverlayState\n  sortedVariables: Variable[]\n}\n\nexport default class VariableList extends PureComponent<Props, State> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      variableID: null,\n      variableOverlayState: OverlayState.Closed,\n      sortedVariables: this.props.variables,\n    }\n  }\n\n  public render() {\n    const {emptyState, sortKey, sortDirection, onClickColumn} = this.props\n\n    return (\n      <>\n        <ResourceList>\n          <ResourceList.Header>\n            <ResourceList.Sorter\n              name=\"Name\"\n              sortKey={this.headerKeys[0]}\n              sort={sortKey === this.headerKeys[0] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n            <ResourceList.Sorter\n              name=\"Type\"\n              sortKey={this.headerKeys[1]}\n              sort={sortKey === this.headerKeys[1] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n          </ResourceList.Header>\n          <ResourceList.Body emptyState={emptyState}>\n            {this.rows}\n          </ResourceList.Body>\n        </ResourceList>\n      </>\n    )\n  }\n\n  private get headerKeys(): SortKey[] {\n    return ['name', 'arguments.type']\n  }\n\n  private get rows(): JSX.Element[] {\n    const {\n      variables,\n      sortKey,\n      sortDirection,\n      sortType,\n      onDeleteVariable,\n      onFilterChange,\n    } = this.props\n\n    const sortedVariables = this.memGetSortedResources(\n      variables,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    return sortedVariables.map((variable, index) => (\n      <VariableCard\n        key={variable.id || `variable-${index}`}\n        variable={variable}\n        onDeleteVariable={onDeleteVariable}\n        onEditVariable={this.handleStartEdit}\n        onFilterChange={onFilterChange}\n      />\n    ))\n  }\n\n  private handleStartEdit = (variable: Variable) => {\n    this.setState({\n      variableID: variable.id,\n      variableOverlayState: OverlayState.Open,\n    })\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Utils\nimport {deleteVariable} from 'src/variables/actions/thunks'\nimport {extractVariablesList} from 'src/variables/selectors'\n\n// Components\nimport {EmptyState} from '@influxdata/clockface'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport TabbedPageHeader from 'src/shared/components/tabbed_page/TabbedPageHeader'\nimport VariableList from 'src/variables/components/VariableList'\nimport Filter from 'src/shared/components/FilterList'\nimport AddResourceDropdown from 'src/shared/components/AddResourceDropdown'\nimport GetResources from 'src/resources/components/GetResources'\nimport {Sort} from '@influxdata/clockface'\n\n// Types\nimport {AppState, OverlayState, ResourceType, Variable} from 'src/types'\nimport {ComponentSize} from '@influxdata/clockface'\nimport {SortTypes} from 'src/shared/utils/sort'\n\ninterface StateProps {\n  variables: Variable[]\n}\n\ninterface DispatchProps {\n  onDeleteVariable: typeof deleteVariable\n}\n\ntype Props = StateProps & DispatchProps & WithRouterProps\n\ninterface State {\n  searchTerm: string\n  importOverlayState: OverlayState\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ntype SortKey = keyof Variable\n\nconst FilterList = Filter<Variable>()\n\nclass VariablesTab extends PureComponent<Props, State> {\n  public state: State = {\n    searchTerm: '',\n    importOverlayState: OverlayState.Closed,\n    sortKey: 'name',\n    sortDirection: Sort.Ascending,\n    sortType: SortTypes.String,\n  }\n\n  public render() {\n    const {variables} = this.props\n    const {searchTerm, sortKey, sortDirection, sortType} = this.state\n\n    return (\n      <>\n        <TabbedPageHeader>\n          <SearchWidget\n            placeholderText=\"Filter variables...\"\n            searchTerm={searchTerm}\n            onSearch={this.handleFilterChange}\n          />\n          <AddResourceDropdown\n            resourceName=\"Variable\"\n            onSelectImport={this.handleOpenImportOverlay}\n            onSelectNew={this.handleOpenCreateOverlay}\n          />\n        </TabbedPageHeader>\n        <GetResources resources={[ResourceType.Labels]}>\n          <FilterList\n            searchTerm={searchTerm}\n            searchKeys={['name', 'labels[].name']}\n            list={variables}\n          >\n            {variables => (\n              <VariableList\n                variables={variables}\n                emptyState={this.emptyState}\n                onDeleteVariable={this.handleDeleteVariable}\n                onFilterChange={this.handleFilterUpdate}\n                sortKey={sortKey}\n                sortDirection={sortDirection}\n                sortType={sortType}\n                onClickColumn={this.handleClickColumn}\n              />\n            )}\n          </FilterList>\n        </GetResources>\n      </>\n    )\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    const sortType = SortTypes.String\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private get emptyState(): JSX.Element {\n    const {searchTerm} = this.state\n\n    if (!searchTerm) {\n      return (\n        <EmptyState size={ComponentSize.Large}>\n          <EmptyState.Text>\n            Looks like there aren't any <b>Variables</b>, why not create one?\n          </EmptyState.Text>\n          <AddResourceDropdown\n            resourceName=\"Variable\"\n            onSelectImport={this.handleOpenImportOverlay}\n            onSelectNew={this.handleOpenCreateOverlay}\n          />\n        </EmptyState>\n      )\n    }\n\n    return (\n      <EmptyState size={ComponentSize.Large}>\n        <EmptyState.Text>No Variables match your query</EmptyState.Text>\n      </EmptyState>\n    )\n  }\n\n  private handleFilterChange = (searchTerm: string) => {\n    this.handleFilterUpdate(searchTerm)\n  }\n\n  private handleFilterUpdate = (searchTerm: string) => {\n    this.setState({searchTerm})\n  }\n\n  private handleOpenImportOverlay = (): void => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/settings/variables/import`)\n  }\n\n  private handleOpenCreateOverlay = (): void => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/settings/variables/new`)\n  }\n\n  private handleDeleteVariable = (variable: Variable): void => {\n    const {onDeleteVariable} = this.props\n    onDeleteVariable(variable.id)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const variables = extractVariablesList(state)\n\n  return {variables}\n}\n\nconst mdtp: DispatchProps = {\n  onDeleteVariable: deleteVariable,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(withRouter<{}>(VariablesTab))\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport SettingsTabbedPage from 'src/settings/components/SettingsTabbedPage'\nimport SettingsHeader from 'src/settings/components/SettingsHeader'\nimport {Page} from '@influxdata/clockface'\nimport VariablesTab from 'src/variables/components/VariablesTab'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\ninterface StateProps {\n  org: Organization\n}\n\n@ErrorHandling\nclass VariablesIndex extends Component<StateProps> {\n  public render() {\n    const {org, children} = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Variables', 'Settings'])}>\n          <SettingsHeader />\n          <SettingsTabbedPage activeTab=\"variables\" orgID={org.id}>\n            <GetResources resources={[ResourceType.Variables]}>\n              <VariablesTab />\n            </GetResources>\n          </SettingsTabbedPage>\n        </Page>\n        {children}\n      </>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {org: state.resources.orgs.org}\n}\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(VariablesIndex)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Context} from 'src/clockface'\nimport {ResourceCard} from '@influxdata/clockface'\nimport {Scraper} from 'src/types'\n\n// Constants\nimport {DEFAULT_SCRAPER_NAME} from 'src/dashboards/constants'\nimport {IconFont, ComponentColor} from '@influxdata/clockface'\n\ninterface Props {\n  scraper: Scraper\n  onDeleteScraper: (scraper) => void\n  onUpdateScraper: (scraper: Scraper) => void\n}\n\nexport default class ScraperRow extends PureComponent<Props> {\n  public render() {\n    const {scraper} = this.props\n    return (\n      <>\n        <ResourceCard\n          name={\n            <ResourceCard.EditableName\n              onUpdate={this.handleUpdateScraperName}\n              name={scraper.name}\n              noNameString={DEFAULT_SCRAPER_NAME}\n              buttonTestID=\"editable-name\"\n              inputTestID=\"input-field\"\n            />\n          }\n          metaData={[<>Bucket: {scraper.bucket}</>, <>URL: {scraper.url}</>]}\n          contextMenu={this.contextMenu}\n        />\n      </>\n    )\n  }\n\n  private get contextMenu(): JSX.Element {\n    return (\n      <Context>\n        <Context.Menu icon={IconFont.Trash} color={ComponentColor.Danger}>\n          <Context.Item\n            label=\"Delete\"\n            action={this.handleDeleteScraper}\n            testID=\"confirmation-button\"\n          />\n        </Context.Menu>\n      </Context>\n    )\n  }\n\n  private handleDeleteScraper = () => {\n    const {onDeleteScraper, scraper} = this.props\n    onDeleteScraper(scraper)\n  }\n\n  private handleUpdateScraperName = (name: string) => {\n    const {onUpdateScraper, scraper} = this.props\n    onUpdateScraper({...scraper, name})\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport {ResourceList} from '@influxdata/clockface'\nimport ScraperRow from 'src/scrapers/components/ScraperRow'\n\n// Types\nimport {Scraper} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {Sort} from '@influxdata/clockface'\n\n// Selectors\nimport {getSortedResources} from 'src/shared/utils/sort'\n\ntype SortKey = keyof Scraper\n\ninterface Props {\n  scrapers: Scraper[]\n  emptyState: JSX.Element\n  onDeleteScraper: (scraper) => void\n  onUpdateScraper: (scraper: Scraper) => void\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (nextSort: Sort, sortKey: SortKey) => void\n}\n\nexport default class ScraperList extends PureComponent<Props> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  public render() {\n    const {emptyState, sortKey, sortDirection, onClickColumn} = this.props\n\n    return (\n      <>\n        <ResourceList>\n          <ResourceList.Header>\n            <ResourceList.Sorter\n              name={this.headerKeys[0]}\n              sortKey={this.headerKeys[0]}\n              sort={sortKey === this.headerKeys[0] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n            <ResourceList.Sorter\n              name={this.headerKeys[1]}\n              sortKey={this.headerKeys[1]}\n              sort={sortKey === this.headerKeys[1] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n            <ResourceList.Sorter\n              name={this.headerKeys[2]}\n              sortKey={this.headerKeys[2]}\n              sort={sortKey === this.headerKeys[2] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n            />\n          </ResourceList.Header>\n          <ResourceList.Body emptyState={emptyState}>\n            {this.scrapersList}\n          </ResourceList.Body>\n        </ResourceList>\n      </>\n    )\n  }\n\n  private get headerKeys(): SortKey[] {\n    return ['name', 'url', 'bucket']\n  }\n\n  public get scrapersList(): JSX.Element[] {\n    const {\n      scrapers,\n      sortKey,\n      sortDirection,\n      sortType,\n      onDeleteScraper,\n      onUpdateScraper,\n    } = this.props\n    const sortedScrapers = this.memGetSortedResources(\n      scrapers,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    if (scrapers !== undefined) {\n      return sortedScrapers.map(scraper => (\n        <ScraperRow\n          key={scraper.id}\n          scraper={scraper}\n          onDeleteScraper={onDeleteScraper}\n          onUpdateScraper={onUpdateScraper}\n        />\n      ))\n    }\n    return\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport {isEmpty} from 'lodash'\n\n// Components\nimport {Button, EmptyState, Sort} from '@influxdata/clockface'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport SettingsTabbedPageHeader from 'src/settings/components/SettingsTabbedPageHeader'\nimport ScraperList from 'src/scrapers/components/ScraperList'\nimport NoBucketsWarning from 'src/buckets/components/NoBucketsWarning'\nimport FilterList from 'src/shared/components/FilterList'\n\n// Actions\nimport {updateScraper, deleteScraper} from 'src/scrapers/actions/thunks'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {SortTypes} from 'src/shared/utils/sort'\n\n// Types\nimport {\n  IconFont,\n  ComponentSize,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\nimport {AppState, Bucket, Scraper, Organization, ResourceType} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  scrapers: Scraper[]\n  buckets: Bucket[]\n  org: Organization\n}\n\ninterface DispatchProps {\n  onUpdateScraper: typeof updateScraper\n  onDeleteScraper: typeof deleteScraper\n}\n\ntype Props = StateProps & DispatchProps & WithRouterProps\n\ninterface State {\n  searchTerm: string\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ntype SortKey = keyof Scraper\n\nconst FilterScrapers = FilterList<Scraper>()\n\n@ErrorHandling\nclass Scrapers extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      searchTerm: '',\n      sortKey: 'name',\n      sortDirection: Sort.Ascending,\n      sortType: SortTypes.String,\n    }\n  }\n\n  public render() {\n    const {searchTerm, sortKey, sortDirection, sortType} = this.state\n    const {scrapers} = this.props\n\n    return (\n      <>\n        <SettingsTabbedPageHeader>\n          <SearchWidget\n            placeholderText=\"Filter scrapers...\"\n            searchTerm={searchTerm}\n            onSearch={this.handleFilterChange}\n          />\n          {this.createScraperButton('create-scraper-button-header')}\n        </SettingsTabbedPageHeader>\n        <NoBucketsWarning visible={this.hasNoBuckets} resourceName=\"Scrapers\" />\n        <FilterScrapers\n          searchTerm={searchTerm}\n          searchKeys={['name', 'url']}\n          list={scrapers}\n        >\n          {sl => (\n            <ScraperList\n              scrapers={sl}\n              emptyState={this.emptyState}\n              onDeleteScraper={this.handleDeleteScraper}\n              onUpdateScraper={this.handleUpdateScraper}\n              sortKey={sortKey}\n              sortDirection={sortDirection}\n              sortType={sortType}\n              onClickColumn={this.handleClickColumn}\n            />\n          )}\n        </FilterScrapers>\n      </>\n    )\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    const sortType = SortTypes.String\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private get hasNoBuckets(): boolean {\n    const {buckets} = this.props\n\n    if (!buckets || !buckets.length) {\n      return true\n    }\n\n    return false\n  }\n\n  private createScraperButton = (testID: string): JSX.Element => {\n    let status = ComponentStatus.Default\n    let titleText = 'Create a new Scraper'\n\n    if (this.hasNoBuckets) {\n      status = ComponentStatus.Disabled\n      titleText = 'You need at least 1 bucket in order to create a scraper'\n    }\n\n    return (\n      <Button\n        text=\"Create Scraper\"\n        icon={IconFont.Plus}\n        color={ComponentColor.Primary}\n        onClick={this.handleShowOverlay}\n        status={status}\n        titleText={titleText}\n        testID={testID}\n      />\n    )\n  }\n\n  private get emptyState(): JSX.Element {\n    const {org} = this.props\n    const {searchTerm} = this.state\n\n    if (isEmpty(searchTerm)) {\n      return (\n        <EmptyState size={ComponentSize.Large}>\n          <EmptyState.Text>\n            {`${org.name}`} does not own any <b>Scrapers</b>, why not create\n            one?\n          </EmptyState.Text>\n          {this.createScraperButton('create-scraper-button-empty')}\n        </EmptyState>\n      )\n    }\n\n    return (\n      <EmptyState size={ComponentSize.Large}>\n        <EmptyState.Text>No Scrapers match your query</EmptyState.Text>\n      </EmptyState>\n    )\n  }\n\n  private handleUpdateScraper = (scraper: Scraper) => {\n    const {onUpdateScraper} = this.props\n    onUpdateScraper(scraper)\n  }\n\n  private handleDeleteScraper = (scraper: Scraper) => {\n    const {onDeleteScraper} = this.props\n    onDeleteScraper(scraper)\n  }\n\n  private handleShowOverlay = () => {\n    const {router, org} = this.props\n\n    if (this.hasNoBuckets) {\n      return\n    }\n\n    router.push(`/orgs/${org.id}/load-data/scrapers/new`)\n  }\n\n  private handleFilterChange = (searchTerm: string) => {\n    this.setState({searchTerm})\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  scrapers: getAll<Scraper>(state, ResourceType.Scrapers),\n  buckets: getAll<Bucket>(state, ResourceType.Buckets),\n  org: getOrg(state),\n})\n\nconst mdtp: DispatchProps = {\n  onDeleteScraper: deleteScraper,\n  onUpdateScraper: updateScraper,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(withRouter(Scrapers))\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Page} from '@influxdata/clockface'\nimport LoadDataHeader from 'src/settings/components/LoadDataHeader'\nimport LoadDataTabbedPage from 'src/settings/components/LoadDataTabbedPage'\nimport GetResources from 'src/resources/components/GetResources'\nimport Scrapers from 'src/scrapers/components/Scrapers'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\ninterface StateProps {\n  org: Organization\n}\n\n@ErrorHandling\nclass ScrapersIndex extends Component<StateProps> {\n  public render() {\n    const {org, children} = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Scrapers', 'Load Data'])}>\n          <LoadDataHeader />\n          <LoadDataTabbedPage activeTab=\"scrapers\" orgID={org.id}>\n            <GetResources\n              resources={[ResourceType.Scrapers, ResourceType.Buckets]}\n            >\n              <Scrapers />\n            </GetResources>\n          </LoadDataTabbedPage>\n        </Page>\n        {children}\n      </>\n    )\n  }\n}\n\nconst mstp = (state: AppState) => ({org: getOrg(state)})\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(ScrapersIndex)\n","import React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport ImportOverlay from 'src/shared/components/ImportOverlay'\n\n// Copy\nimport {invalidJSON} from 'src/shared/copy/notifications'\n\n// Actions\nimport {\n  createVariableFromTemplate as createVariableFromTemplateAction,\n  getVariables as getVariablesAction,\n} from 'src/variables/actions/thunks'\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\n\n// Types\nimport {ComponentStatus} from '@influxdata/clockface'\n\n// Utils\nimport jsonlint from 'jsonlint-mod'\n\ninterface State {\n  status: ComponentStatus\n}\n\ninterface DispatchProps {\n  createVariableFromTemplate: typeof createVariableFromTemplateAction\n  getVariables: typeof getVariablesAction\n  notify: typeof notifyAction\n}\n\ntype Props = DispatchProps & WithRouterProps\n\nclass VariableImportOverlay extends PureComponent<Props> {\n  public state: State = {\n    status: ComponentStatus.Default,\n  }\n\n  public render() {\n    return (\n      <ImportOverlay\n        onDismissOverlay={this.onDismiss}\n        resourceName=\"Variable\"\n        onSubmit={this.handleImportVariable}\n        status={this.state.status}\n        updateStatus={this.updateOverlayStatus}\n      />\n    )\n  }\n\n  private onDismiss = () => {\n    const {router} = this.props\n\n    router.goBack()\n  }\n\n  private updateOverlayStatus = (status: ComponentStatus) =>\n    this.setState(() => ({status}))\n\n  private handleImportVariable = (uploadContent: string) => {\n    const {createVariableFromTemplate, getVariables, notify} = this.props\n\n    let template\n    this.updateOverlayStatus(ComponentStatus.Default)\n    try {\n      template = jsonlint.parse(uploadContent)\n    } catch (error) {\n      this.updateOverlayStatus(ComponentStatus.Error)\n      notify(invalidJSON(error.message))\n      return\n    }\n\n    createVariableFromTemplate(template)\n    getVariables()\n\n    this.onDismiss()\n  }\n}\n\nconst mdtp: DispatchProps = {\n  createVariableFromTemplate: createVariableFromTemplateAction,\n  getVariables: getVariablesAction,\n  notify: notifyAction,\n}\n\nexport default connect<{}, DispatchProps, Props>(\n  null,\n  mdtp\n)(withRouter(VariableImportOverlay))\n","import React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport ExportOverlay from 'src/shared/components/ExportOverlay'\n\n// Actions\nimport {convertToTemplate as convertToTemplateAction} from 'src/variables/actions/thunks'\nimport {clearExportTemplate as clearExportTemplateAction} from 'src/templates/actions/thunks'\n\n// Types\nimport {AppState} from 'src/types'\nimport {DocumentCreate} from '@influxdata/influx'\nimport {RemoteDataState} from 'src/types'\n\ninterface OwnProps {\n  params: {id: string}\n}\n\ninterface DispatchProps {\n  convertToTemplate: typeof convertToTemplateAction\n  clearExportTemplate: typeof clearExportTemplateAction\n}\n\ninterface StateProps {\n  variableTemplate: DocumentCreate\n  status: RemoteDataState\n}\n\ntype Props = OwnProps & StateProps & DispatchProps & WithRouterProps\n\nclass VariableExportOverlay extends PureComponent<Props> {\n  public componentDidMount() {\n    const {\n      params: {id},\n      convertToTemplate,\n    } = this.props\n\n    convertToTemplate(id)\n  }\n\n  public render() {\n    const {variableTemplate, status} = this.props\n\n    return (\n      <ExportOverlay\n        resourceName=\"Variable\"\n        resource={variableTemplate}\n        onDismissOverlay={this.onDismiss}\n        status={status}\n      />\n    )\n  }\n\n  private onDismiss = () => {\n    const {router, clearExportTemplate} = this.props\n\n    router.goBack()\n    clearExportTemplate()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  variableTemplate: state.resources.templates.exportTemplate.item,\n  status: state.resources.templates.exportTemplate.status,\n})\n\nconst mdtp: DispatchProps = {\n  convertToTemplate: convertToTemplateAction,\n  clearExportTemplate: clearExportTemplateAction,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(VariableExportOverlay))\n","// Libraries\nimport React, {useEffect, useState, FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\n// Actions\nimport {setOrg as setOrgAction} from 'src/organizations/actions/creators'\n\n// Decorators\nimport {InjectedRouter} from 'react-router'\nimport {\n  RemoteDataState,\n  SpinnerContainer,\n  TechnoSpinner,\n} from '@influxdata/clockface'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\ninterface PassedInProps {\n  children: React.ReactElement<any>\n  router: InjectedRouter\n  params: {orgID: string}\n}\n\ninterface DispatchProps {\n  setOrg: typeof setOrgAction\n}\n\ninterface StateProps {\n  orgs: Organization[]\n}\n\ntype Props = StateProps & DispatchProps & PassedInProps\n\nconst SetOrg: FC<Props> = ({\n  params: {orgID},\n  orgs,\n  router,\n  setOrg,\n  children,\n}) => {\n  const [loading, setLoading] = useState(RemoteDataState.Loading)\n\n  useEffect(() => {\n    // does orgID from url match any orgs that exist\n    const foundOrg = orgs.find(o => o.id === orgID)\n    if (foundOrg) {\n      setOrg(foundOrg)\n      setLoading(RemoteDataState.Done)\n      return\n    }\n\n    if (!orgs.length) {\n      router.push(`/no-orgs`)\n      return\n    }\n\n    // else default to first org\n    router.push(`/orgs/${orgs[0].id}`)\n  }, [orgID])\n\n  return (\n    <SpinnerContainer loading={loading} spinnerComponent={<TechnoSpinner />}>\n      {children}\n    </SpinnerContainer>\n  )\n}\n\nconst mdtp = {\n  setOrg: setOrgAction,\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const orgs = getAll<Organization>(state, ResourceType.Orgs)\n\n  return {orgs}\n}\n\nexport default connect<StateProps, DispatchProps, PassedInProps>(\n  mstp,\n  mdtp\n)(SetOrg)\n","// Libraries\nimport {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {WithRouterProps} from 'react-router'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  orgs: Organization[]\n  org: {id?: string}\n}\n\ntype Props = StateProps & WithRouterProps\n\nclass RouteToOrg extends PureComponent<Props> {\n  public componentDidMount() {\n    const {orgs, router, org} = this.props\n\n    if (!orgs || !orgs.length) {\n      router.push(`/no-orgs`)\n      return\n    }\n\n    // org from local storage\n    if (org && org.id) {\n      router.push(`/orgs/${org.id}`)\n      return\n    }\n\n    // else default to first org\n    router.push(`/orgs/${orgs[0].id}`)\n  }\n\n  render() {\n    return false\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const org = getOrg(state)\n  const orgs = getAll<Organization>(state, ResourceType.Orgs)\n\n  return {orgs, org}\n}\n\nexport default connect<StateProps, {}, {}>(mstp)(RouteToOrg)\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {connect} from 'react-redux'\nimport {WithRouterProps, withRouter} from 'react-router'\n\nimport {sample, startCase} from 'lodash'\n\n// Components\nimport {Form, Input, Button, Overlay} from '@influxdata/clockface'\n\n// Types\nimport {Bucket, Organization} from 'src/types'\nimport {\n  ButtonType,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\n// Actions\nimport {createOrgWithBucket} from 'src/organizations/actions/thunks'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  createOrgWithBucket: typeof createOrgWithBucket\n}\n\ntype Props = OwnProps & DispatchProps & WithRouterProps\n\ninterface State {\n  org: Organization\n  bucket: Bucket\n  orgNameInputStatus: ComponentStatus\n  bucketNameInputStatus: ComponentStatus\n  orgErrorMessage: string\n  bucketErrorMessage: string\n}\n\nclass CreateOrgOverlay extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      org: {name: ''},\n      bucket: {name: '', retentionRules: []},\n      orgNameInputStatus: ComponentStatus.Default,\n      bucketNameInputStatus: ComponentStatus.Default,\n      orgErrorMessage: '',\n      bucketErrorMessage: '',\n    }\n  }\n\n  public render() {\n    const {\n      org,\n      orgNameInputStatus,\n      orgErrorMessage,\n      bucket,\n      bucketNameInputStatus,\n      bucketErrorMessage,\n    } = this.state\n\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={500}>\n          <Overlay.Header\n            title=\"Create Organization\"\n            onDismiss={this.closeModal}\n          />\n          <Form onSubmit={this.handleCreateOrg}>\n            <Overlay.Body>\n              <Form.Element\n                label=\"Organization Name\"\n                errorMessage={orgErrorMessage}\n              >\n                <Input\n                  placeholder=\"Give your organization a name\"\n                  name=\"name\"\n                  autoFocus={true}\n                  value={org.name}\n                  onChange={this.handleChangeOrgInput}\n                  status={orgNameInputStatus}\n                  testID=\"create-org-name-input\"\n                />\n              </Form.Element>\n              <Form.Element\n                label=\"Bucket Name\"\n                errorMessage={bucketErrorMessage}\n              >\n                <Input\n                  placeholder=\"Give your bucket a name\"\n                  name=\"name\"\n                  autoFocus={false}\n                  value={bucket.name}\n                  onChange={this.handleChangeBucketInput}\n                  status={bucketNameInputStatus}\n                  testID=\"create-org-name-input\"\n                />\n              </Form.Element>\n            </Overlay.Body>\n            <Overlay.Footer>\n              <Button text=\"Cancel\" onClick={this.closeModal} />\n              <Button\n                text=\"Create\"\n                type={ButtonType.Submit}\n                color={ComponentColor.Primary}\n                status={this.submitButtonStatus}\n                testID=\"create-org-submit-button\"\n              />\n            </Overlay.Footer>\n          </Form>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private get submitButtonStatus(): ComponentStatus {\n    const {org, bucket} = this.state\n\n    if (org.name && bucket.name) {\n      return ComponentStatus.Default\n    }\n\n    return ComponentStatus.Disabled\n  }\n\n  private handleCreateOrg = async () => {\n    const {org, bucket} = this.state\n    const {createOrgWithBucket} = this.props\n\n    await createOrgWithBucket(org, bucket)\n  }\n\n  private closeModal = () => {\n    this.props.router.goBack()\n  }\n\n  private handleChangeOrgInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    const key = e.target.name\n    const org = {...this.state.org, [key]: value}\n\n    if (!value) {\n      return this.setState({\n        org,\n        orgNameInputStatus: ComponentStatus.Error,\n        orgErrorMessage: this.randomErrorMessage(key, 'organization'),\n      })\n    }\n\n    this.setState({\n      org,\n      orgNameInputStatus: ComponentStatus.Valid,\n      orgErrorMessage: '',\n    })\n  }\n\n  private handleChangeBucketInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    const key = e.target.name\n    const bucket = {...this.state.bucket, [key]: value}\n\n    if (!value) {\n      return this.setState({\n        bucket,\n        bucketNameInputStatus: ComponentStatus.Error,\n        bucketErrorMessage: this.randomErrorMessage(key, 'bucket'),\n      })\n    }\n\n    this.setState({\n      bucket,\n      bucketNameInputStatus: ComponentStatus.Valid,\n      bucketErrorMessage: '',\n    })\n  }\n\n  private randomErrorMessage = (key: string, resource: string): string => {\n    const messages = [\n      `Imagine that! ${startCase(resource)} without a ${key}`,\n      `${startCase(resource)} needs a ${key}`,\n      `You're not getting far without a ${key}`,\n      `The ${resource} formerly known as...`,\n      `Pick a ${key}, any ${key}`,\n      `Any ${key} will do`,\n    ]\n\n    return sample(messages)\n  }\n}\n\nconst mdtp = {\n  createOrgWithBucket,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(withRouter<OwnProps & DispatchProps>(CreateOrgOverlay))\n","// Libraries\nimport React, {PureComponent, ChangeEvent, FormEvent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {Form, Input, Grid, Button, ButtonType} from '@influxdata/clockface'\nimport BucketDropdown from 'src/dataLoaders/components/BucketsDropdown'\n\n// Types\nimport {Bucket} from 'src/types'\nimport {Columns, ComponentStatus, ComponentColor} from '@influxdata/clockface'\n\ninterface Props {\n  buckets: Bucket[]\n  name: string\n  url: string\n  selectedBucketID: string\n  onInputChange: (e: ChangeEvent<HTMLInputElement>) => void\n  onSelectBucket: (bucket: Bucket) => void\n  onSubmit: (e: FormEvent<HTMLFormElement>) => void\n  onDismiss: () => void\n}\n\nexport class ScraperTarget extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props)\n  }\n\n  public render() {\n    const {\n      onInputChange,\n      url,\n      name,\n      onSelectBucket,\n      buckets,\n      selectedBucketID,\n      onSubmit,\n      onDismiss,\n    } = this.props\n\n    return (\n      <Form onSubmit={onSubmit}>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthSM={Columns.Six}>\n              <Form.ValidationElement\n                label=\"Name\"\n                validationFunc={this.handleNameValidation}\n                value={name}\n              >\n                {status => (\n                  <Input\n                    value={name}\n                    name=\"name\"\n                    onChange={onInputChange}\n                    titleText=\"Name\"\n                    placeholder=\"Name this scraper\"\n                    autoFocus={true}\n                    status={status}\n                  />\n                )}\n              </Form.ValidationElement>\n            </Grid.Column>\n            <Grid.Column widthSM={Columns.Six}>\n              <Form.Element label=\"Bucket to store scraped metrics\">\n                <BucketDropdown\n                  selectedBucketID={selectedBucketID}\n                  buckets={buckets}\n                  onSelectBucket={onSelectBucket}\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthSM={Columns.Twelve}>\n              <Form.ValidationElement\n                label=\"Target URL\"\n                validationFunc={this.handleUrlValidation}\n                value={url}\n              >\n                {status => (\n                  <Input\n                    value={url}\n                    name=\"url\"\n                    placeholder=\"http://\"\n                    onChange={onInputChange}\n                    titleText=\"Target URL\"\n                    status={status}\n                  />\n                )}\n              </Form.ValidationElement>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Form.Footer>\n                <Button\n                  text=\"Cancel\"\n                  onClick={onDismiss}\n                  testID=\"create-scraper--cancel\"\n                />\n                <Button\n                  status={this.submitButtonStatus}\n                  text=\"Create\"\n                  color={ComponentColor.Success}\n                  testID=\"create-scraper--submit\"\n                  type={ButtonType.Submit}\n                />\n              </Form.Footer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form>\n    )\n  }\n\n  private get submitButtonStatus(): ComponentStatus {\n    const {name, url, selectedBucketID} = this.props\n\n    if (!url || !name || !selectedBucketID) {\n      return ComponentStatus.Disabled\n    }\n\n    return ComponentStatus.Default\n  }\n\n  private handleNameValidation = (name: string): string | null => {\n    if (!name) {\n      return 'Name cannot be empty'\n    }\n\n    return null\n  }\n\n  private handleUrlValidation = (url: string): string | null => {\n    if (!url) {\n      return 'Target URL cannot be empty'\n    }\n\n    const isURLValid =\n      _.startsWith(url, 'http://') || _.startsWith(url, 'https://')\n\n    if (!isURLValid) {\n      return 'Target URL must begin with \"http://\"'\n    }\n\n    return null\n  }\n}\n\nexport default ScraperTarget\n","// Libraries\nimport React, {PureComponent, ChangeEvent, FormEvent} from 'react'\nimport {get} from 'lodash'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport CreateScraperForm from 'src/scrapers/components/CreateScraperForm'\n\n// Actions\nimport {createScraper} from 'src/scrapers/actions/thunks'\n\n// Types\nimport {ScraperTargetRequest} from '@influxdata/influx'\nimport {AppState, Bucket, ResourceType} from 'src/types'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\ninterface OwnProps {\n  visible: boolean\n}\n\ninterface StateProps {\n  buckets: Bucket[]\n}\n\ninterface DispatchProps {\n  onCreateScraper: typeof createScraper\n}\n\ntype Props = OwnProps & StateProps & DispatchProps & WithRouterProps\n\ninterface State {\n  scraper: ScraperTargetRequest\n}\n\nclass CreateScraperOverlay extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    const {\n      params: {bucketID, orgID},\n      buckets,\n    } = this.props\n\n    const firstBucketID = get(buckets, '0.id', '')\n\n    this.state = {\n      scraper: {\n        name: 'Name this Scraper',\n        type: ScraperTargetRequest.TypeEnum.Prometheus,\n        url: `${this.origin}/metrics`,\n        orgID,\n        bucketID: bucketID ? bucketID : firstBucketID,\n      },\n    }\n  }\n\n  public render() {\n    const {scraper} = this.state\n    const {buckets} = this.props\n\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={600}>\n          <Overlay.Header title=\"Create Scraper\" onDismiss={this.onDismiss} />\n          <Overlay.Body>\n            <h5 className=\"wizard-step--sub-title\">\n              Scrapers collect data from multiple targets at regular intervals\n              and to write to a bucket\n            </h5>\n            <CreateScraperForm\n              buckets={buckets}\n              url={scraper.url}\n              name={scraper.name}\n              selectedBucketID={scraper.bucketID}\n              onInputChange={this.handleInputChange}\n              onSelectBucket={this.handleSelectBucket}\n              onSubmit={this.handleFormSubmit}\n              onDismiss={this.onDismiss}\n            />\n          </Overlay.Body>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    const key = e.target.name\n    const scraper = {...this.state.scraper, [key]: value}\n\n    this.setState({\n      scraper,\n    })\n  }\n\n  private handleSelectBucket = (bucket: Bucket) => {\n    const {orgID, id} = bucket\n\n    const scraper = {...this.state.scraper, orgID: orgID, bucketID: id}\n\n    this.setState({scraper})\n  }\n\n  private handleFormSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    const {onCreateScraper} = this.props\n    const {scraper} = this.state\n    e.preventDefault()\n    onCreateScraper(scraper)\n    this.onDismiss()\n  }\n\n  private get origin(): string {\n    return window.location.origin\n  }\n\n  private onDismiss = (): void => {\n    this.props.router.goBack()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  buckets: getAll<Bucket>(state, ResourceType.Buckets),\n})\n\nconst mdtp: DispatchProps = {\n  onCreateScraper: createScraper,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<StateProps & DispatchProps & OwnProps>(CreateScraperOverlay))\n","// Libraries\nimport React, {Component, KeyboardEvent, ChangeEvent, MouseEvent} from 'react'\nimport classnames from 'classnames'\nimport {SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\n\n// Components\nimport {Input, Icon} from '@influxdata/clockface'\nimport {ClickOutside} from 'src/shared/components/ClickOutside'\n\n// Types\nimport {ComponentSize, IconFont} from '@influxdata/clockface'\nimport {RemoteDataState} from 'src/types'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  onUpdate: (name: string) => void\n  name: string\n  noNameString: string\n  hrefValue: string\n  testID: string\n  onEditName?: (e?: MouseEvent<HTMLAnchorElement>) => void\n  placeholder?: string\n}\n\ninterface State {\n  isEditing: boolean\n  workingName: string\n  loading: RemoteDataState\n}\n\n@ErrorHandling\nclass EditableName extends Component<Props, State> {\n  public static defaultProps = {\n    hrefValue: 'javascript:void(0);',\n    testID: 'editable-name',\n  }\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      isEditing: false,\n      workingName: props.name,\n      loading: RemoteDataState.Done,\n    }\n  }\n\n  public render() {\n    const {name, onEditName, hrefValue, noNameString, testID} = this.props\n\n    return (\n      <div className={this.className} data-testid={testID}>\n        <SpinnerContainer\n          loading={this.state.loading}\n          spinnerComponent={<TechnoSpinner diameterPixels={20} />}\n        >\n          <a href={hrefValue} onClick={onEditName}>\n            <span>{name || noNameString}</span>\n          </a>\n        </SpinnerContainer>\n        <div\n          className=\"editable-name--toggle\"\n          onClick={this.handleStartEditing}\n          data-testid={testID + '--toggle'}\n        >\n          <Icon glyph={IconFont.Pencil} />\n        </div>\n        {this.input}\n      </div>\n    )\n  }\n\n  private get input(): JSX.Element {\n    const {placeholder} = this.props\n    const {workingName, isEditing, loading} = this.state\n\n    if (isEditing && loading !== RemoteDataState.Loading) {\n      return (\n        <ClickOutside onClickOutside={this.handleStopEditing}>\n          <Input\n            size={ComponentSize.ExtraSmall}\n            maxLength={90}\n            autoFocus={true}\n            spellCheck={false}\n            placeholder={placeholder}\n            onFocus={this.handleInputFocus}\n            onChange={this.handleInputChange}\n            onKeyDown={this.handleKeyDown}\n            className=\"editable-name--input\"\n            value={workingName}\n          />\n        </ClickOutside>\n      )\n    }\n  }\n\n  private handleStartEditing = (): void => {\n    this.setState({isEditing: true})\n  }\n\n  private handleStopEditing = () => {\n    const {workingName} = this.state\n    const {onUpdate} = this.props\n\n    this.setState({loading: RemoteDataState.Loading})\n    onUpdate(workingName)\n    this.setState({loading: RemoteDataState.Done, isEditing: false})\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    this.setState({workingName: e.target.value})\n  }\n\n  private handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    const {onUpdate, name} = this.props\n    const {workingName} = this.state\n\n    if (e.key === 'Enter') {\n      e.persist()\n      if (!workingName) {\n        this.setState({isEditing: false, workingName: name})\n        return\n      }\n      this.setState({loading: RemoteDataState.Loading})\n      onUpdate(workingName)\n      this.setState({isEditing: false, loading: RemoteDataState.Done})\n    }\n\n    if (e.key === 'Escape') {\n      this.setState({isEditing: false, workingName: name})\n    }\n  }\n\n  private handleInputFocus = (e: ChangeEvent<HTMLInputElement>): void => {\n    e.currentTarget.select()\n  }\n\n  private get className(): string {\n    const {name, noNameString} = this.props\n\n    return classnames('editable-name', {\n      'untitled-name': name === noNameString,\n    })\n  }\n}\n\nexport default EditableName\n","// Libraries\nimport React, {PureComponent, MouseEvent} from 'react'\nimport {connect} from 'react-redux'\n\n// Actions\nimport {\n  deleteAuthorization,\n  updateAuthorization,\n} from 'src/authorizations/actions/thunks'\n\n// Components\nimport {\n  ComponentSize,\n  SlideToggle,\n  ComponentColor,\n  IndexList,\n  Alignment,\n  ConfirmationButton,\n  Appearance,\n} from '@influxdata/clockface'\nimport EditableName from 'src/shared/components/EditableName'\n\n// Types\nimport {Authorization} from 'src/types'\nimport {DEFAULT_TOKEN_DESCRIPTION} from 'src/dashboards/constants'\n\ninterface OwnProps {\n  auth: Authorization\n  onClickDescription: (authID: string) => void\n}\n\ninterface DispatchProps {\n  onDelete: typeof deleteAuthorization\n  onUpdate: typeof updateAuthorization\n}\n\ntype Props = DispatchProps & OwnProps\n\nclass TokenRow extends PureComponent<Props> {\n  public render() {\n    const {description} = this.props.auth\n\n    return (\n      <IndexList.Row brighten={true}>\n        <IndexList.Cell>\n          <EditableName\n            name={description}\n            onUpdate={this.handleUpdateName}\n            noNameString={DEFAULT_TOKEN_DESCRIPTION}\n            onEditName={this.handleClickDescription}\n          />\n        </IndexList.Cell>\n        <IndexList.Cell>\n          <SlideToggle\n            active={this.isTokenEnabled}\n            size={ComponentSize.ExtraSmall}\n            onChange={this.changeToggle}\n            color={ComponentColor.Success}\n          />\n        </IndexList.Cell>\n        <IndexList.Cell alignment={Alignment.Right} revealOnHover={true}>\n          <ConfirmationButton\n            testID=\"delete-token\"\n            size={ComponentSize.ExtraSmall}\n            text=\"Delete\"\n            confirmationLabel=\"Really delete this token?\"\n            confirmationButtonText=\"Confirm\"\n            confirmationButtonColor={ComponentColor.Danger}\n            popoverAppearance={Appearance.Outline}\n            popoverColor={ComponentColor.Danger}\n            color={ComponentColor.Danger}\n            onConfirm={this.handleDelete}\n          />\n        </IndexList.Cell>\n      </IndexList.Row>\n    )\n  }\n\n  private get isTokenEnabled(): boolean {\n    const {auth} = this.props\n    return auth.status === 'active'\n  }\n\n  private changeToggle = () => {\n    const {auth, onUpdate} = this.props\n    if (auth.status === 'active') {\n      auth.status = 'inactive'\n    } else {\n      auth.status = 'active'\n    }\n    onUpdate(auth)\n  }\n\n  private handleDelete = () => {\n    const {id, description} = this.props.auth\n    this.props.onDelete(id, description)\n  }\n\n  private handleClickDescription = (e: MouseEvent<HTMLAnchorElement>) => {\n    const {onClickDescription, auth} = this.props\n\n    e.preventDefault()\n\n    onClickDescription(auth.id)\n  }\n\n  private handleUpdateName = (value: string) => {\n    const {auth, onUpdate} = this.props\n    onUpdate({...auth, description: value})\n  }\n}\n\nconst mdtp = {\n  onDelete: deleteAuthorization,\n  onUpdate: updateAuthorization,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(TokenRow)\n","// Libraries\nimport React, {Component} from 'react'\nimport classnames from 'classnames'\n\n// Types\nimport {\n  PermissionsWidgetMode,\n  PermissionsWidgetSelection,\n} from 'src/shared/components/permissionsWidget/PermissionsWidget'\nimport {IconFont} from 'src/clockface'\n\ninterface Props {\n  mode?: PermissionsWidgetMode\n  id: string\n  testID?: string\n  label: string\n  selected: PermissionsWidgetSelection\n  onToggle?: (\n    permissionID: string,\n    newState: PermissionsWidgetSelection\n  ) => void\n}\n\nclass PermissionsWidgetItem extends Component<Props> {\n  public render() {\n    const {label, testID} = this.props\n\n    return (\n      <li\n        className={this.className}\n        onClick={this.handleClick}\n        data-testid={testID || 'permissions--item'}\n      >\n        {this.checkbox}\n        <label className=\"permissions-widget--item-label\">{label}</label>\n      </li>\n    )\n  }\n\n  private get checkbox(): JSX.Element {\n    const {mode, selected} = this.props\n\n    if (mode === PermissionsWidgetMode.Write) {\n      return (\n        <div className=\"permissions-widget--checkbox\">\n          <span className={`icon ${IconFont.Checkmark}`} />\n        </div>\n      )\n    }\n\n    if (selected === PermissionsWidgetSelection.Selected) {\n      return (\n        <div className=\"permissions-widget--icon\">\n          <span className={`icon ${IconFont.Checkmark}`} />\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"permissions-widget--icon\">\n        <span className={`icon ${IconFont.Remove}`} />\n      </div>\n    )\n  }\n\n  private get className(): string {\n    const {selected, mode} = this.props\n\n    return classnames('permissions-widget--item', {\n      selected: selected === PermissionsWidgetSelection.Selected,\n      unselected: selected === PermissionsWidgetSelection.Unselected,\n      selectable: mode === PermissionsWidgetMode.Write,\n    })\n  }\n\n  private handleClick = (): void => {\n    const {id, mode, selected, onToggle} = this.props\n\n    if (mode === PermissionsWidgetMode.Read || !onToggle) {\n      return\n    }\n\n    if (selected === PermissionsWidgetSelection.Selected) {\n      onToggle(id, PermissionsWidgetSelection.Unselected)\n    } else if (selected === PermissionsWidgetSelection.Unselected) {\n      onToggle(id, PermissionsWidgetSelection.Selected)\n    }\n  }\n}\n\nexport default PermissionsWidgetItem\n","// Libraries\nimport React, {Component} from 'react'\n\n// Components\nimport {\n  Button,\n  ComponentSize,\n  FlexBox,\n  FlexDirection,\n  JustifyContent,\n} from '@influxdata/clockface'\nimport PermissionsWidgetItem from 'src/shared/components/permissionsWidget/PermissionsWidgetItem'\n\n// Types\nimport {PermissionsWidgetMode} from 'src/shared/components/permissionsWidget/PermissionsWidget'\n\ninterface Props {\n  children: JSX.Element[] | JSX.Element\n  mode?: PermissionsWidgetMode\n  id: string\n  title: string\n  onSelectAll?: (sectionID: string) => void\n  onDeselectAll?: (sectionID: string) => void\n  testID?: string\n}\n\nclass PermissionsWidgetSection extends Component<Props> {\n  public render() {\n    const {title, testID} = this.props\n\n    return (\n      <section\n        className=\"permissions-widget--section\"\n        data-testid={testID || 'permissions-section'}\n      >\n        <header className=\"permissions-widget--section-heading\">\n          <h3 className=\"permissions-widget--section-title\">{title}</h3>\n          {this.selectionButtons}\n        </header>\n        <ul className=\"permissions-widget--section-list\">\n          {this.sectionItems}\n        </ul>\n      </section>\n    )\n  }\n\n  private get sectionItems(): JSX.Element[] {\n    const {children, mode} = this.props\n\n    return React.Children.map(children, (child: JSX.Element) => {\n      if (child.type !== PermissionsWidgetItem) {\n        return null\n      }\n\n      return <PermissionsWidgetItem {...child.props} mode={mode} />\n    })\n  }\n\n  private get selectionButtons(): JSX.Element {\n    const {mode, title} = this.props\n\n    if (mode === PermissionsWidgetMode.Write) {\n      return (\n        <FlexBox\n          margin={ComponentSize.Small}\n          direction={FlexDirection.Row}\n          justifyContent={JustifyContent.FlexEnd}\n        >\n          <Button\n            text=\"Select All\"\n            size={ComponentSize.ExtraSmall}\n            titleText={`Select all permissions within ${title}`}\n            onClick={this.handleSelectAll}\n          />\n          <Button\n            text=\"Deselect All\"\n            size={ComponentSize.ExtraSmall}\n            titleText={`Deselect all permissions within ${title}`}\n            onClick={this.handleDeselectAll}\n          />\n        </FlexBox>\n      )\n    }\n  }\n\n  private handleSelectAll = (): void => {\n    const {id, onSelectAll} = this.props\n\n    if (onSelectAll) {\n      onSelectAll(id)\n    }\n  }\n\n  private handleDeselectAll = (): void => {\n    const {id, onDeselectAll} = this.props\n\n    if (onDeselectAll) {\n      onDeselectAll(id)\n    }\n  }\n}\n\nexport default PermissionsWidgetSection\n","// Libraries\nimport React, {Component, CSSProperties} from 'react'\n\n// Components\nimport PermissionsWidgetSection from 'src/shared/components/permissionsWidget/PermissionsWidgetSection'\nimport PermissionsWidgetItem from 'src/shared/components/permissionsWidget/PermissionsWidgetItem'\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\n\nexport enum PermissionsWidgetMode {\n  Read = 'read',\n  Write = 'write',\n}\n\nexport enum PermissionsWidgetSelection {\n  Selected = 'selected',\n  Unselected = 'unselected',\n}\n\ninterface Props {\n  children: JSX.Element[] | JSX.Element\n  mode: PermissionsWidgetMode\n  heightPixels: number\n  className?: string\n}\n\nclass PermissionsWidget extends Component<Props> {\n  public static defaultProps = {\n    heightPixels: 500,\n  }\n\n  public static Section = PermissionsWidgetSection\n  public static Item = PermissionsWidgetItem\n\n  public render() {\n    return (\n      <div className={this.className} style={this.style}>\n        <div className=\"permissions-widget--header\">{this.headerText}</div>\n        <div className=\"permissions-widget--body\">\n          <FancyScrollbar autoHide={false}>{this.sections}</FancyScrollbar>\n        </div>\n      </div>\n    )\n  }\n\n  private get className(): string {\n    const {className} = this.props\n\n    if (className) {\n      return `permissions-widget ${className}`\n    }\n\n    return 'permissions-widget'\n  }\n\n  private get sections() {\n    const {children, mode} = this.props\n\n    return React.Children.map(children, (child: JSX.Element) => {\n      if (child.type !== PermissionsWidgetSection) {\n        return null\n      }\n\n      return <PermissionsWidgetSection {...child.props} mode={mode} />\n    })\n  }\n\n  private get style(): CSSProperties {\n    const {heightPixels} = this.props\n\n    return {height: `${heightPixels}px`}\n  }\n\n  private get headerText(): string {\n    const {mode} = this.props\n\n    if (mode === PermissionsWidgetMode.Read) {\n      return 'Summary of access permissions'\n    } else if (mode === PermissionsWidgetMode.Write) {\n      return 'Summary of access permissions, each item can be toggled ON or OFF'\n    }\n  }\n}\n\nexport default PermissionsWidget\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {get} from 'lodash'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport PermissionsWidget, {\n  PermissionsWidgetMode,\n  PermissionsWidgetSelection,\n} from 'src/shared/components/permissionsWidget/PermissionsWidget'\nimport CodeSnippet from 'src/shared/components/CodeSnippet'\n\nimport {\n  authorizationCopySuccess,\n  authorizationCopyFailed,\n} from 'src/shared/copy/notifications'\n\n// Types\nimport {Authorization, Permission} from 'src/types'\n\ninterface Props {\n  auth: Authorization\n  onDismissOverlay: () => void\n}\n\nexport default class ViewTokenOverlay extends PureComponent<Props> {\n  public render() {\n    const {description} = this.props.auth\n\n    const permissions = this.permissions\n\n    const notes = (_text, success) => {\n      if (success) {\n        return authorizationCopySuccess()\n      }\n      return authorizationCopyFailed()\n    }\n\n    return (\n      <Overlay.Container>\n        <Overlay.Header title={description} onDismiss={this.handleDismiss} />\n        <Overlay.Body>\n          <CodeSnippet\n            copyText={this.props.auth.token}\n            label={description}\n            onCopyText={notes}\n          />\n          <PermissionsWidget\n            mode={PermissionsWidgetMode.Read}\n            heightPixels={500}\n          >\n            {Object.keys(permissions).map(type => {\n              return (\n                <PermissionsWidget.Section\n                  key={type}\n                  id={type}\n                  title={type}\n                  mode={PermissionsWidgetMode.Read}\n                >\n                  {permissions[type].map((action, i) => (\n                    <PermissionsWidget.Item\n                      key={i}\n                      label={action}\n                      id={this.itemID(type, action)}\n                      selected={PermissionsWidgetSelection.Selected}\n                    />\n                  ))}\n                </PermissionsWidget.Section>\n              )\n            })}\n          </PermissionsWidget>\n        </Overlay.Body>\n      </Overlay.Container>\n    )\n  }\n\n  private get permissions(): {[x: string]: Permission['action'][]} {\n    const p = this.props.auth.permissions.reduce((acc, {action, resource}) => {\n      const {type} = resource\n      const name = get(resource, 'name', '')\n      let key = `${type}`\n      if (name) {\n        key = `${type}-${name}`\n      }\n\n      let actions = get(acc, key, [])\n\n      if (name && actions) {\n        return {...acc, [key]: [...actions, action]}\n      }\n\n      actions = get(acc, key || resource.type, [])\n      return {...acc, [type]: [...actions, action]}\n    }, {})\n\n    return p\n  }\n\n  private itemID = (\n    permission: string,\n    action: Permission['action']\n  ): string => {\n    return `${permission}-${action}-${permission || '*'}-${permission || '*'}`\n  }\n\n  private handleDismiss = () => {\n    this.props.onDismissOverlay()\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport {EmptyState, Overlay, IndexList} from '@influxdata/clockface'\nimport TokenRow from 'src/authorizations/components/TokenRow'\nimport ViewTokenOverlay from 'src/authorizations/components/ViewTokenOverlay'\n\n// Types\nimport {Authorization} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {ComponentSize, Sort} from '@influxdata/clockface'\n\n// Utils\nimport {getSortedResources} from 'src/shared/utils/sort'\n\ntype SortKey = keyof Authorization\n\ninterface Props {\n  auths: Authorization[]\n  searchTerm: string\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (nextSort: Sort, sortKey: SortKey) => void\n}\n\ninterface State {\n  isTokenOverlayVisible: boolean\n  authInView: Authorization\n}\n\nexport default class TokenList extends PureComponent<Props, State> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isTokenOverlayVisible: false,\n      authInView: null,\n    }\n  }\n\n  public render() {\n    const {sortKey, sortDirection, onClickColumn} = this.props\n    const {isTokenOverlayVisible, authInView} = this.state\n\n    return (\n      <>\n        <IndexList>\n          <IndexList.Header>\n            <IndexList.HeaderCell\n              sortKey={this.headerKeys[0]}\n              sort={sortKey === this.headerKeys[0] ? sortDirection : Sort.None}\n              columnName=\"Description\"\n              onClick={onClickColumn}\n              width=\"50%\"\n            />\n            <IndexList.HeaderCell\n              sortKey={this.headerKeys[1]}\n              sort={sortKey === this.headerKeys[1] ? sortDirection : Sort.None}\n              columnName=\"Status\"\n              onClick={onClickColumn}\n              width=\"50%\"\n            />\n          </IndexList.Header>\n          <IndexList.Body emptyState={this.emptyState} columnCount={2}>\n            {this.rows}\n          </IndexList.Body>\n        </IndexList>\n        <Overlay visible={isTokenOverlayVisible}>\n          <ViewTokenOverlay\n            auth={authInView}\n            onDismissOverlay={this.handleDismissOverlay}\n          />\n        </Overlay>\n      </>\n    )\n  }\n\n  private get headerKeys(): SortKey[] {\n    return ['description', 'status']\n  }\n\n  private get rows(): JSX.Element[] {\n    const {auths, sortDirection, sortKey, sortType} = this.props\n    const sortedAuths = this.memGetSortedResources(\n      auths,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    return sortedAuths.map(auth => (\n      <TokenRow\n        key={auth.id}\n        auth={auth}\n        onClickDescription={this.handleClickDescription}\n      />\n    ))\n  }\n\n  private handleDismissOverlay = () => {\n    this.setState({isTokenOverlayVisible: false})\n  }\n\n  private handleClickDescription = (authID: string): void => {\n    const authInView = this.props.auths.find(a => a.id === authID)\n    this.setState({isTokenOverlayVisible: true, authInView})\n  }\n\n  private get emptyState(): JSX.Element {\n    const {searchTerm} = this.props\n    let emptyStateText =\n      'There are not any Tokens associated with this account. Contact your administrator'\n\n    if (searchTerm) {\n      emptyStateText = 'No Tokens match your search term'\n    }\n\n    return (\n      <EmptyState size={ComponentSize.Large}>\n        <EmptyState.Text>{emptyStateText}</EmptyState.Text>\n      </EmptyState>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {Dropdown} from '@influxdata/clockface'\n\n// Types\nimport {IconFont, ComponentColor} from '@influxdata/clockface'\n\ninterface OwnProps {\n  onSelectAllAccess: () => void\n  onSelectReadWrite: () => void\n}\n\ntype Props = OwnProps\n\nexport default class GenerateTokenDropdown extends PureComponent<Props> {\n  public render() {\n    return (\n      <Dropdown\n        testID=\"dropdown--gen-token\"\n        style={{width: '160px'}}\n        button={(active, onClick) => (\n          <Dropdown.Button\n            active={active}\n            onClick={onClick}\n            icon={IconFont.Plus}\n            color={ComponentColor.Primary}\n            testID=\"dropdown-button--gen-token\"\n          >\n            Generate\n          </Dropdown.Button>\n        )}\n        menu={onCollapse => (\n          <Dropdown.Menu onCollapse={onCollapse}>\n            {this.optionItems}\n          </Dropdown.Menu>\n        )}\n      />\n    )\n  }\n\n  private get optionItems(): JSX.Element[] {\n    return [\n      <Dropdown.Item\n        testID=\"dropdown-item generate-token--read-write\"\n        id={this.bucketReadWriteOption}\n        key={this.bucketReadWriteOption}\n        value={this.bucketReadWriteOption}\n        onClick={this.handleSelect}\n      >\n        {this.bucketReadWriteOption}\n      </Dropdown.Item>,\n      <Dropdown.Item\n        testID=\"dropdown-item generate-token--all-access\"\n        id={this.allAccessOption}\n        key={this.allAccessOption}\n        value={this.allAccessOption}\n        onClick={this.handleSelect}\n      >\n        {this.allAccessOption}\n      </Dropdown.Item>,\n    ]\n  }\n\n  private get bucketReadWriteOption(): string {\n    return 'Read/Write Token'\n  }\n\n  private get allAccessOption(): string {\n    return 'All Access Token'\n  }\n\n  private handleSelect = (selection: string): void => {\n    if (selection === this.allAccessOption) {\n      this.props.onSelectAllAccess()\n    } else if (selection === this.bucketReadWriteOption) {\n      this.props.onSelectReadWrite()\n    }\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Sort} from '@influxdata/clockface'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport TokenList from 'src/authorizations/components/TokenList'\nimport FilterList from 'src/shared/components/FilterList'\nimport TabbedPageHeader from 'src/shared/components/tabbed_page/TabbedPageHeader'\nimport GenerateTokenDropdown from 'src/authorizations/components/GenerateTokenDropdown'\n\n// Types\nimport {AppState, Authorization, ResourceType} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\nenum AuthSearchKeys {\n  Description = 'description',\n  Status = 'status',\n}\n\ninterface State {\n  searchTerm: string\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ninterface StateProps {\n  tokens: Authorization[]\n}\n\ntype SortKey = keyof Authorization\n\ntype Props = StateProps & WithRouterProps\n\nconst FilterAuthorizations = FilterList<Authorization>()\n\nclass TokensTab extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchTerm: '',\n      sortKey: 'description',\n      sortDirection: Sort.Ascending,\n      sortType: SortTypes.String,\n    }\n  }\n\n  public render() {\n    const {searchTerm, sortKey, sortDirection, sortType} = this.state\n    const {tokens} = this.props\n\n    return (\n      <>\n        <TabbedPageHeader>\n          <SearchWidget\n            searchTerm={searchTerm}\n            placeholderText=\"Filter Tokens...\"\n            onSearch={this.handleChangeSearchTerm}\n            testID=\"input-field--filter\"\n          />\n          <GenerateTokenDropdown\n            onSelectAllAccess={this.handleGenerateAllAccess}\n            onSelectReadWrite={this.handleGenerateReadWrite}\n          />\n        </TabbedPageHeader>\n        <FilterAuthorizations\n          list={tokens}\n          searchTerm={searchTerm}\n          searchKeys={this.searchKeys}\n        >\n          {filteredAuths => (\n            <TokenList\n              auths={filteredAuths}\n              searchTerm={searchTerm}\n              sortKey={sortKey}\n              sortDirection={sortDirection}\n              sortType={sortType}\n              onClickColumn={this.handleClickColumn}\n            />\n          )}\n        </FilterAuthorizations>\n      </>\n    )\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    const sortType = SortTypes.String\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private handleChangeSearchTerm = (searchTerm: string): void => {\n    this.setState({searchTerm})\n  }\n\n  private get searchKeys(): AuthSearchKeys[] {\n    return [AuthSearchKeys.Status, AuthSearchKeys.Description]\n  }\n\n  private handleGenerateAllAccess = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/load-data/tokens/generate/all-access`)\n  }\n\n  private handleGenerateReadWrite = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/load-data/tokens/generate/buckets`)\n  }\n}\n\nconst mstp = (state: AppState) => ({\n  tokens: getAll<Authorization>(state, ResourceType.Authorizations),\n})\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(withRouter(TokensTab))\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Page} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport LoadDataTabbedPage from 'src/settings/components/LoadDataTabbedPage'\nimport LoadDataHeader from 'src/settings/components/LoadDataHeader'\nimport GetResources from 'src/resources/components/GetResources'\nimport TokensTab from 'src/authorizations/components/TokensTab'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\ninterface StateProps {\n  org: Organization\n}\n\n@ErrorHandling\nclass TokensIndex extends Component<StateProps> {\n  public render() {\n    const {org, children} = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Tokens', 'Load Data'])}>\n          <LoadDataHeader />\n          <LoadDataTabbedPage activeTab=\"tokens\" orgID={org.id}>\n            <GetResources resources={[ResourceType.Authorizations]}>\n              <TokensTab />\n            </GetResources>\n          </LoadDataTabbedPage>\n        </Page>\n        {children}\n      </>\n    )\n  }\n}\n\nconst mstp = (state: AppState) => ({org: getOrg(state)})\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(TokensIndex)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Member} from 'src/types'\nimport {Context} from 'src/clockface'\n\nimport CloudExclude from 'src/shared/components/cloud/CloudExclude'\nimport {IconFont, ComponentColor} from '@influxdata/clockface'\n\ninterface Props {\n  member: Member\n  onDelete: (member: Member) => void\n}\n\nexport default class MemberContextMenu extends PureComponent<Props> {\n  public render() {\n    const {member} = this.props\n\n    return (\n      <CloudExclude>\n        <Context>\n          <Context.Menu\n            icon={IconFont.Trash}\n            color={ComponentColor.Danger}\n            testID=\"context-delete-menu\"\n          >\n            <Context.Item\n              label=\"Delete\"\n              action={this.handleDelete}\n              value={member}\n              testID=\"context-delete-task\"\n            />\n          </Context.Menu>\n        </Context>\n      </CloudExclude>\n    )\n  }\n\n  private handleDelete = () => {\n    const {member, onDelete} = this.props\n    onDelete(member)\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Member} from 'src/types'\nimport {ResourceCard} from '@influxdata/clockface'\nimport MemberContextMenu from 'src/members/components/MemberContextMenu'\n\ninterface Props {\n  member: Member\n  onDelete: (member: Member) => void\n}\n\nexport default class MemberCard extends PureComponent<Props> {\n  public render() {\n    const {member, onDelete} = this.props\n\n    return (\n      <>\n        <ResourceCard\n          testID=\"task-card\"\n          contextMenu={\n            <MemberContextMenu member={member} onDelete={onDelete} />\n          }\n          name={<ResourceCard.Name name={member.name} />}\n          metaData={[<>Role: {member.role}</>]}\n        />\n      </>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport memoizeOne from 'memoize-one'\n\n// Components\nimport {ResourceList} from '@influxdata/clockface'\nimport MemberCard from 'src/members/components/MemberCard'\n\n// Types\nimport {Member} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\nimport {Sort} from '@influxdata/clockface'\n\n// Selectors\nimport {getSortedResources} from 'src/shared/utils/sort'\n\ntype SortKey = keyof Member\n\ninterface Props {\n  members: Member[]\n  emptyState: JSX.Element\n  onDelete: (member: Member) => void\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (nextSort: Sort, sortKey: SortKey) => void\n}\n\nexport default class MemberList extends PureComponent<Props> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  public render() {\n    const {sortKey, sortDirection, onClickColumn} = this.props\n\n    return (\n      <ResourceList>\n        <ResourceList.Header>\n          <ResourceList.Sorter\n            name=\"Username\"\n            sortKey={this.headerKeys[0]}\n            sort={sortKey === this.headerKeys[0] ? sortDirection : Sort.None}\n            onClick={onClickColumn}\n          />\n          <ResourceList.Sorter\n            name=\"Role\"\n            sortKey={this.headerKeys[1]}\n            sort={sortKey === this.headerKeys[1] ? sortDirection : Sort.None}\n            onClick={onClickColumn}\n          />\n        </ResourceList.Header>\n        <ResourceList.Body\n          emptyState={this.props.emptyState}\n          data-testid=\"members-list\"\n        >\n          {this.rows}\n        </ResourceList.Body>\n      </ResourceList>\n    )\n  }\n\n  private get headerKeys(): SortKey[] {\n    return ['name', 'role']\n  }\n\n  private get rows(): JSX.Element[] {\n    const {members, sortKey, sortDirection, sortType, onDelete} = this.props\n    const sortedMembers = this.memGetSortedResources(\n      members,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    return sortedMembers.map(member => (\n      <MemberCard key={member.id} member={member} onDelete={onDelete} />\n    ))\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n// Libraries\nimport {isEmpty} from 'lodash'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport SettingsTabbedPageHeader from 'src/settings/components/SettingsTabbedPageHeader'\nimport {EmptyState, Sort} from '@influxdata/clockface'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport MemberList from 'src/members/components/MemberList'\nimport FilterList from 'src/shared/components/FilterList'\n\n// Actions\nimport {deleteMember} from 'src/members/actions/thunks'\n\n// Types\nimport {ComponentSize} from '@influxdata/clockface'\nimport {AppState, Member, ResourceType} from 'src/types'\nimport {SortTypes} from 'src/shared/utils/sort'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  members: Member[]\n}\n\ninterface DispatchProps {\n  onRemoveMember: typeof deleteMember\n}\n\ntype Props = StateProps & DispatchProps\n\ninterface State {\n  searchTerm: string\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ntype SortKey = keyof Member\n\nconst FilterMembers = FilterList<Member>()\n\nclass Members extends PureComponent<Props & WithRouterProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchTerm: '',\n      sortKey: 'name',\n      sortDirection: Sort.Ascending,\n      sortType: SortTypes.String,\n    }\n  }\n  public render() {\n    const {searchTerm, sortKey, sortDirection, sortType} = this.state\n\n    return (\n      <>\n        <SettingsTabbedPageHeader>\n          <SearchWidget\n            placeholderText=\"Filter members...\"\n            searchTerm={searchTerm}\n            onSearch={this.handleFilterChange}\n          />\n        </SettingsTabbedPageHeader>\n        <FilterMembers\n          list={this.props.members}\n          searchKeys={['name']}\n          searchTerm={searchTerm}\n        >\n          {ms => (\n            <MemberList\n              members={ms}\n              emptyState={this.emptyState}\n              onDelete={this.removeMember}\n              sortKey={sortKey}\n              sortDirection={sortDirection}\n              sortType={sortType}\n              onClickColumn={this.handleClickColumn}\n            />\n          )}\n        </FilterMembers>\n      </>\n    )\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    const sortType = SortTypes.String\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private removeMember = (member: Member) => {\n    const {onRemoveMember} = this.props\n    onRemoveMember(member)\n  }\n\n  private handleFilterChange = (searchTerm: string): void => {\n    this.setState({searchTerm})\n  }\n\n  private get emptyState(): JSX.Element {\n    const {searchTerm} = this.state\n\n    if (isEmpty(searchTerm)) {\n      return (\n        <EmptyState size={ComponentSize.Medium}>\n          <EmptyState.Text>\n            Looks like there aren't any <b>Members</b>.\n          </EmptyState.Text>\n        </EmptyState>\n      )\n    }\n\n    return (\n      <EmptyState size={ComponentSize.Medium}>\n        <EmptyState.Text>No Members match your query</EmptyState.Text>\n      </EmptyState>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const members = getAll<Member>(state, ResourceType.Members)\n  return {members}\n}\n\nconst mdtp: DispatchProps = {\n  onRemoveMember: deleteMember,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(withRouter<Props>(Members))\n","import React, {Component} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport SettingsTabbedPage from 'src/settings/components/SettingsTabbedPage'\nimport SettingsHeader from 'src/settings/components/SettingsHeader'\nimport {Page} from '@influxdata/clockface'\nimport GetResources from 'src/resources/components/GetResources'\nimport Members from 'src/members/components/Members'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {getByID} from 'src/resources/selectors'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\ninterface StateProps {\n  org: Organization\n}\n\ntype Props = WithRouterProps & StateProps\n\n@ErrorHandling\nclass MembersIndex extends Component<Props> {\n  constructor(props) {\n    super(props)\n  }\n\n  public render() {\n    const {org, children} = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Members', 'Settings'])}>\n          <SettingsHeader />\n          <SettingsTabbedPage activeTab=\"members\" orgID={org.id}>\n            <GetResources resources={[ResourceType.Members]}>\n              <Members />\n            </GetResources>\n          </SettingsTabbedPage>\n        </Page>\n        {children}\n      </>\n    )\n  }\n}\n\nconst mstp = (state: AppState, props: Props) => {\n  const org = getByID<Organization>(\n    state,\n    ResourceType.Orgs,\n    props.params.orgID\n  )\n\n  return {\n    org,\n  }\n}\n\nexport default connect<StateProps>(\n  mstp,\n  null\n)(withRouter<{}>(MembersIndex))\n","// Libraries\nimport React, {Component, ChangeEvent} from 'react'\n\n// Components\nimport LabelOverlayForm from 'src/labels/components/LabelOverlayForm'\nimport {ComponentStatus, Overlay} from '@influxdata/clockface'\n\n// Types\nimport {Label} from 'src/types'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  label: Label\n  onDismiss: () => void\n  onUpdateLabel: (label: Label) => void\n  onNameValidation: (name: string) => string | null\n}\n\ninterface State {\n  label: Label\n  colorStatus: ComponentStatus\n}\n\n@ErrorHandling\nclass UpdateLabelOverlay extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      label: props.label,\n      colorStatus: ComponentStatus.Default,\n    }\n  }\n\n  public render() {\n    const {onDismiss, onNameValidation} = this.props\n    const {label} = this.state\n\n    return (\n      <Overlay.Container maxWidth={400}>\n        <Overlay.Header title=\"Edit Label\" onDismiss={onDismiss} />\n        <Overlay.Body>\n          <LabelOverlayForm\n            id={label.id}\n            name={label.name}\n            description={label.properties.description}\n            color={label.properties.color}\n            onColorChange={this.handleColorHexChange}\n            onSubmit={this.handleSubmit}\n            onCloseModal={onDismiss}\n            onInputChange={this.handleInputChange}\n            onLabelPropertyChange={this.handleLabelPropertyChange}\n            buttonText=\"Save Changes\"\n            isFormValid={this.isFormValid}\n            onNameValidation={onNameValidation}\n          />\n        </Overlay.Body>\n      </Overlay.Container>\n    )\n  }\n\n  private get isFormValid(): boolean {\n    const {label, colorStatus} = this.state\n\n    const nameIsValid = this.props.onNameValidation(label.name) === null\n    const colorIsValid =\n      colorStatus === ComponentStatus.Default ||\n      colorStatus == ComponentStatus.Valid\n\n    return nameIsValid && colorIsValid\n  }\n\n  private handleSubmit = () => {\n    const {onUpdateLabel, onDismiss} = this.props\n\n    onUpdateLabel(this.state.label)\n    onDismiss()\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {value, name} = e.target\n\n    this.setState(prevState => ({\n      label: {...prevState.label, [name]: value},\n    }))\n  }\n\n  private handleLabelPropertyChange = (\n    e: ChangeEvent<HTMLInputElement>\n  ): void => {\n    const {value, name} = e.target\n\n    this.setState(prevState => ({\n      label: {\n        ...prevState.label,\n        properties: {...prevState.label.properties, [name]: value},\n      },\n    }))\n  }\n\n  private handleColorHexChange = (\n    color: string,\n    colorStatus: ComponentStatus\n  ): void => {\n    const properties = {...this.state.label.properties, color}\n    const label = {...this.state.label, properties}\n\n    this.setState({label, colorStatus})\n  }\n}\n\nexport default UpdateLabelOverlay\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Context} from 'src/clockface'\nimport {IconFont, ComponentColor} from '@influxdata/clockface'\n\n// Types\nimport {Label} from 'src/types'\n\ninterface Props {\n  label: Label\n  onDelete: (labelID: string) => void\n}\n\nexport default class LabelContextMenu extends PureComponent<Props> {\n  public render() {\n    const {label, onDelete} = this.props\n\n    return (\n      <Context>\n        <Context.Menu\n          icon={IconFont.Trash}\n          color={ComponentColor.Danger}\n          testID=\"context-delete-menu\"\n        >\n          <Context.Item\n            label=\"Delete\"\n            action={onDelete}\n            value={label.id}\n            testID=\"context-delete-label\"\n          />\n        </Context.Menu>\n      </Context>\n    )\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {\n  ComponentSize,\n  Label as LabelComponent,\n  ResourceCard,\n} from '@influxdata/clockface'\n\n// Types\nimport {Label} from 'src/types'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport LabelContextMenu from './LabelContextMenu'\n\ninterface Props {\n  label: Label\n  onClick: (labelID: string) => void\n  onDelete: (labelID: string) => void\n}\n\n@ErrorHandling\nexport default class LabelCard extends PureComponent<Props> {\n  public render() {\n    const {label, onDelete} = this.props\n\n    return (\n      <>\n        <ResourceCard\n          testID=\"label-card\"\n          contextMenu={<LabelContextMenu label={label} onDelete={onDelete} />}\n          name={\n            <LabelComponent\n              id={label.id}\n              name={label.name}\n              color={label.properties.color}\n              description={label.properties.description}\n              size={ComponentSize.Small}\n              onClick={this.handleClick}\n            />\n          }\n          metaData={[<>Description: {label.properties.description}</>]}\n        />\n      </>\n    )\n  }\n\n  private handleClick = (): void => {\n    const {label, onClick} = this.props\n\n    onClick(label.id)\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Overlay, ResourceList} from '@influxdata/clockface'\nimport UpdateLabelOverlay from 'src/labels/components/UpdateLabelOverlay'\nimport LabelCard from 'src/labels/components/LabelCard'\n\n// Utils\nimport {validateLabelUniqueness} from 'src/labels/utils/'\nimport memoizeOne from 'memoize-one'\n\n// Types\nimport {OverlayState, Label} from 'src/types'\nimport {Sort} from '@influxdata/clockface'\nimport {SortTypes} from 'src/shared/utils/sort'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Selectors\nimport {getSortedResources} from 'src/shared/utils/sort'\n\ninterface Props {\n  labels: Label[]\n  emptyState: JSX.Element\n  onUpdateLabel: (label: Label) => void\n  onDeleteLabel: (labelID: string) => void\n  sortKey: string\n  sortDirection: Sort\n  sortType: SortTypes\n  onClickColumn: (mextSort: Sort, sortKey: string) => void\n}\n\ninterface State {\n  labelID: string\n  overlayState: OverlayState\n}\n\n@ErrorHandling\nexport default class LabelList extends PureComponent<Props, State> {\n  private memGetSortedResources = memoizeOne<typeof getSortedResources>(\n    getSortedResources\n  )\n\n  public state: State = {\n    labelID: null,\n    overlayState: OverlayState.Closed,\n  }\n\n  public render() {\n    const {sortKey, sortDirection, onClickColumn} = this.props\n    const headerKeys = ['name', 'properties.description']\n    return (\n      <>\n        <ResourceList>\n          <ResourceList.Header>\n            <ResourceList.Sorter\n              name={headerKeys[0]}\n              sortKey={headerKeys[0]}\n              sort={sortKey === headerKeys[0] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n              testID=\"sorter--name\"\n            />\n            <ResourceList.Sorter\n              name=\"Description\"\n              sortKey={headerKeys[1]}\n              sort={sortKey === headerKeys[1] ? sortDirection : Sort.None}\n              onClick={onClickColumn}\n              testID=\"sorter--desc\"\n            />\n          </ResourceList.Header>\n          <ResourceList.Body emptyState={this.props.emptyState}>\n            {this.rows}\n          </ResourceList.Body>\n        </ResourceList>\n        <Overlay visible={this.isOverlayVisible}>\n          <UpdateLabelOverlay\n            label={this.label}\n            onDismiss={this.handleCloseModal}\n            onUpdateLabel={this.handleUpdateLabel}\n            onNameValidation={this.handleNameValidation}\n          />\n        </Overlay>\n      </>\n    )\n  }\n\n  private get rows(): JSX.Element[] {\n    const {labels, sortKey, sortDirection, sortType, onDeleteLabel} = this.props\n    const sortedLabels = this.memGetSortedResources(\n      labels,\n      sortKey,\n      sortDirection,\n      sortType\n    )\n\n    return sortedLabels.map((label, index) => (\n      <LabelCard\n        key={label.id || `label-${index}`}\n        onDelete={onDeleteLabel}\n        onClick={this.handleStartEdit}\n        label={label}\n      />\n    ))\n  }\n\n  private get label(): Label | null {\n    if (this.state.labelID) {\n      return this.props.labels.find(l => l.id === this.state.labelID)\n    }\n  }\n\n  private handleCloseModal = () => {\n    this.setState({overlayState: OverlayState.Closed})\n  }\n\n  private handleStartEdit = (labelID: string): void => {\n    this.setState({labelID, overlayState: OverlayState.Open})\n  }\n\n  private get isOverlayVisible(): boolean {\n    const {labelID, overlayState} = this.state\n    return !!labelID && overlayState === OverlayState.Open\n  }\n\n  private handleUpdateLabel = (updatedLabel: Label) => {\n    this.props.onUpdateLabel(updatedLabel)\n    this.setState({overlayState: OverlayState.Closed})\n  }\n\n  private handleNameValidation = (name: string): string | null => {\n    const {labels} = this.props\n\n    const names = labels.map(label => label.name).filter(l => l !== name)\n\n    return validateLabelUniqueness(names, name)\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Button, EmptyState} from '@influxdata/clockface'\nimport SearchWidget from 'src/shared/components/search_widget/SearchWidget'\nimport CreateLabelOverlay from 'src/labels/components/CreateLabelOverlay'\nimport TabbedPageHeader from 'src/shared/components/tabbed_page/TabbedPageHeader'\nimport LabelList from 'src/labels/components/LabelList'\nimport FilterList from 'src/shared/components/FilterList'\n\n// Actions\nimport {createLabel, updateLabel, deleteLabel} from 'src/labels/actions/thunks'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\n// Utils\nimport {validateLabelUniqueness} from 'src/labels/utils/'\n\n// Types\nimport {AppState, Label, ResourceType} from 'src/types'\nimport {\n  IconFont,\n  ComponentSize,\n  ComponentColor,\n  Sort,\n} from '@influxdata/clockface'\nimport {SortTypes} from 'src/shared/utils/sort'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface StateProps {\n  labels: Label[]\n}\n\ninterface State {\n  searchTerm: string\n  isOverlayVisible: boolean\n  sortKey: SortKey\n  sortDirection: Sort\n  sortType: SortTypes\n}\n\ninterface DispatchProps {\n  createLabel: typeof createLabel\n  updateLabel: typeof updateLabel\n  deleteLabel: typeof deleteLabel\n}\n\ntype Props = DispatchProps & StateProps\n\ntype SortKey = keyof Label\n\nconst FilterLabels = FilterList<Label>()\n@ErrorHandling\nclass Labels extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      searchTerm: '',\n      isOverlayVisible: false,\n      sortKey: 'name',\n      sortDirection: Sort.Ascending,\n      sortType: SortTypes.String,\n    }\n  }\n\n  public render() {\n    const {labels} = this.props\n    const {\n      searchTerm,\n      isOverlayVisible,\n      sortKey,\n      sortDirection,\n      sortType,\n    } = this.state\n\n    return (\n      <>\n        <TabbedPageHeader>\n          <SearchWidget\n            searchTerm={searchTerm}\n            onSearch={this.handleFilterChange}\n            placeholderText=\"Filter Labels...\"\n          />\n          <Button\n            text=\"Create Label\"\n            color={ComponentColor.Primary}\n            icon={IconFont.Plus}\n            onClick={this.handleShowOverlay}\n            testID=\"button-create\"\n          />\n        </TabbedPageHeader>\n        <FilterLabels\n          list={labels}\n          searchKeys={['name', 'properties.description']}\n          searchTerm={searchTerm}\n        >\n          {ls => (\n            <LabelList\n              labels={ls}\n              emptyState={this.emptyState}\n              onUpdateLabel={this.handleUpdateLabel}\n              onDeleteLabel={this.handleDelete}\n              sortKey={sortKey}\n              sortDirection={sortDirection}\n              sortType={sortType}\n              onClickColumn={this.handleClickColumn}\n            />\n          )}\n        </FilterLabels>\n        <CreateLabelOverlay\n          isVisible={isOverlayVisible}\n          onDismiss={this.handleDismissOverlay}\n          onCreateLabel={this.handleCreateLabel}\n          onNameValidation={this.handleNameValidation}\n        />\n      </>\n    )\n  }\n\n  private handleClickColumn = (nextSort: Sort, sortKey: SortKey) => {\n    const sortType = SortTypes.String\n    this.setState({sortKey, sortDirection: nextSort, sortType})\n  }\n\n  private handleShowOverlay = (): void => {\n    this.setState({isOverlayVisible: true})\n  }\n\n  private handleDismissOverlay = (): void => {\n    this.setState({isOverlayVisible: false})\n  }\n\n  private handleFilterChange = (searchTerm: string): void => {\n    this.setState({searchTerm})\n  }\n\n  private handleCreateLabel = (label: Label) => {\n    this.props.createLabel(label.name, label.properties)\n  }\n\n  private handleUpdateLabel = (label: Label) => {\n    this.props.updateLabel(label.id, label)\n  }\n\n  private handleDelete = (id: string) => {\n    this.props.deleteLabel(id)\n  }\n\n  private handleNameValidation = (name: string): string | null => {\n    const names = this.props.labels.map(label => label.name)\n\n    return validateLabelUniqueness(names, name)\n  }\n\n  private get emptyState(): JSX.Element {\n    const {searchTerm} = this.state\n\n    if (searchTerm) {\n      return (\n        <EmptyState size={ComponentSize.Medium}>\n          <EmptyState.Text>No Labels match your search term</EmptyState.Text>\n        </EmptyState>\n      )\n    }\n\n    return (\n      <EmptyState size={ComponentSize.Medium}>\n        <EmptyState.Text>\n          Looks like you haven't created any <b>Labels</b>, why not create one?\n        </EmptyState.Text>\n        <Button\n          text=\"Create Label\"\n          color={ComponentColor.Primary}\n          icon={IconFont.Plus}\n          onClick={this.handleShowOverlay}\n          testID=\"button-create-initial\"\n        />\n      </EmptyState>\n    )\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const labels = getAll<Label>(state, ResourceType.Labels)\n  return {labels}\n}\n\nconst mdtp: DispatchProps = {\n  createLabel: createLabel,\n  updateLabel: updateLabel,\n  deleteLabel: deleteLabel,\n}\n\nexport default connect(\n  mstp,\n  mdtp\n)(Labels)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport SettingsTabbedPage from 'src/settings/components/SettingsTabbedPage'\nimport SettingsHeader from 'src/settings/components/SettingsHeader'\nimport {Page} from '@influxdata/clockface'\nimport LabelsTab from 'src/labels/components/LabelsTab'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {AppState, Organization, ResourceType} from 'src/types'\n\ninterface StateProps {\n  org: Organization\n}\n\n@ErrorHandling\nclass LabelsIndex extends PureComponent<StateProps> {\n  public render() {\n    const {org, children} = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Labels', 'Settings'])}>\n          <SettingsHeader />\n          <SettingsTabbedPage activeTab=\"labels\" orgID={org.id}>\n            <GetResources resources={[ResourceType.Labels]}>\n              <LabelsTab />\n            </GetResources>\n          </SettingsTabbedPage>\n        </Page>\n        {children}\n      </>\n    )\n  }\n}\n\nconst mstp = (state: AppState) => ({org: getOrg(state)})\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(LabelsIndex)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {\n  Button,\n  SpinnerContainer,\n  TechnoSpinner,\n  Overlay,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport {Controlled as ReactCodeMirror} from 'react-codemirror2'\nimport CopyButton from 'src/shared/components/CopyButton'\n\n// Types\nimport {ComponentColor} from '@influxdata/clockface'\nimport {RemoteDataState, DashboardTemplate} from 'src/types'\nimport {DocumentCreate} from '@influxdata/influx'\n\ninterface Props {\n  onDismissOverlay: () => void\n  resource: DashboardTemplate | DocumentCreate\n  overlayHeading: string\n  status: RemoteDataState\n  isVisible: boolean\n}\n\nexport default class ViewOverlay extends PureComponent<Props> {\n  public static defaultProps = {\n    isVisible: true,\n  }\n\n  public render() {\n    const {isVisible, overlayHeading, onDismissOverlay, status} = this.props\n\n    return (\n      <Overlay visible={isVisible}>\n        <Overlay.Container maxWidth={800}>\n          <Overlay.Header title={overlayHeading} onDismiss={onDismissOverlay} />\n          <Overlay.Body>\n            <SpinnerContainer\n              loading={status}\n              spinnerComponent={<TechnoSpinner />}\n            >\n              {this.overlayBody}\n            </SpinnerContainer>\n          </Overlay.Body>\n          <Overlay.Footer>\n            {this.closeButton}\n            {this.copyButton}\n          </Overlay.Footer>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private doNothing = () => {}\n\n  private get overlayBody(): JSX.Element {\n    const options = {\n      tabIndex: 1,\n      mode: 'json',\n      readonly: true,\n      lineNumbers: true,\n      autoRefresh: true,\n      theme: 'time-machine',\n      completeSingle: false,\n    }\n\n    return (\n      <div className=\"export-overlay--text-area\">\n        <ReactCodeMirror\n          autoFocus={false}\n          autoCursor={true}\n          value={this.resourceText}\n          options={options}\n          onBeforeChange={this.doNothing}\n          onTouchStart={this.doNothing}\n        />\n      </div>\n    )\n  }\n\n  private get resourceText(): string {\n    return JSON.stringify(this.props.resource, null, 1)\n  }\n\n  private get copyButton(): JSX.Element {\n    return (\n      <CopyButton\n        textToCopy={this.resourceText}\n        contentName={this.props.overlayHeading}\n        size={ComponentSize.Small}\n        color={ComponentColor.Secondary}\n      />\n    )\n  }\n\n  private get closeButton(): JSX.Element {\n    return (\n      <Button\n        text=\"Close\"\n        onClick={this.props.onDismissOverlay}\n        color={ComponentColor.Primary}\n      />\n    )\n  }\n}\n","import React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport _ from 'lodash'\n\n// Components\nimport ViewOverlay from 'src/shared/components/ViewOverlay'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Actions\nimport {\n  convertToTemplate as convertToTemplateAction,\n  clearExportTemplate as clearExportTemplateAction,\n} from 'src/templates/actions/thunks'\n\n// Types\nimport {DocumentCreate} from '@influxdata/influx'\nimport {AppState} from 'src/types'\nimport {RemoteDataState} from 'src/types'\n\ninterface OwnProps {\n  params: {id: string}\n}\n\ninterface DispatchProps {\n  convertToTemplate: typeof convertToTemplateAction\n  clearExportTemplate: typeof clearExportTemplateAction\n}\n\ninterface StateProps {\n  exportTemplate: DocumentCreate\n  status: RemoteDataState\n}\n\ntype Props = OwnProps & StateProps & DispatchProps & WithRouterProps\n\n@ErrorHandling\nclass TemplateExportOverlay extends PureComponent<Props> {\n  public componentDidMount() {\n    const {\n      params: {id},\n      convertToTemplate,\n    } = this.props\n    convertToTemplate(id)\n  }\n\n  public render() {\n    const {exportTemplate, status} = this.props\n\n    return (\n      <ViewOverlay\n        resource={exportTemplate}\n        overlayHeading={this.overlayTitle}\n        onDismissOverlay={this.onDismiss}\n        status={status}\n      />\n    )\n  }\n\n  private get overlayTitle() {\n    const {exportTemplate} = this.props\n    if (exportTemplate) {\n      return exportTemplate.meta.name\n    }\n    return ''\n  }\n\n  private onDismiss = () => {\n    const {router, clearExportTemplate} = this.props\n\n    router.goBack()\n    clearExportTemplate()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  exportTemplate: state.resources.templates.exportTemplate.item,\n  status: state.resources.templates.exportTemplate.status,\n})\n\nconst mdtp: DispatchProps = {\n  convertToTemplate: convertToTemplateAction,\n  clearExportTemplate: clearExportTemplateAction,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(TemplateExportOverlay))\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Dropdown} from '@influxdata/clockface'\n\n// Types\nimport {WritePrecision} from '@influxdata/influx'\nimport {Precision} from 'src/types/dataLoaders'\n\ninterface Props {\n  setPrecision: (precision: WritePrecision) => void\n  precision: WritePrecision\n}\n\nconst writePrecisions: WritePrecision[] = [\n  WritePrecision.Ns,\n  WritePrecision.Us,\n  WritePrecision.Ms,\n  WritePrecision.S,\n]\n\nconst makePrecisionReadable = {\n  [WritePrecision.Ns]: Precision.Nanoseconds,\n  [WritePrecision.Us]: Precision.Microseconds,\n  [WritePrecision.S]: Precision.Seconds,\n  [WritePrecision.Ms]: Precision.Milliseconds,\n}\n\nclass PrecisionDropdown extends PureComponent<Props> {\n  public render() {\n    const {setPrecision, precision} = this.props\n    return (\n      <Dropdown\n        testID=\"wizard-step--lp-precision--dropdown\"\n        style={{width: '220px'}}\n        button={(active, onClick) => (\n          <Dropdown.Button active={active} onClick={onClick}>\n            {`Precision: ${makePrecisionReadable[precision]}`}\n          </Dropdown.Button>\n        )}\n        menu={onCollapse => (\n          <Dropdown.Menu onCollapse={onCollapse}>\n            {writePrecisions.map(value => (\n              <Dropdown.Item\n                key={value}\n                value={value}\n                id={value}\n                onClick={setPrecision}\n                testID={`wizard-step--lp-precision-${value}`}\n                selected={`${value}` === `${precision}`}\n              >\n                {makePrecisionReadable[value]}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        )}\n      />\n    )\n  }\n}\n\nexport default PrecisionDropdown\n","import React, {PureComponent} from 'react'\n\nimport {SelectGroup} from '@influxdata/clockface'\n\nimport {LineProtocolTab} from 'src/types'\n\ninterface Props {\n  active: boolean\n  tab: LineProtocolTab\n  onClick: (tab: LineProtocolTab) => void\n}\n\nexport default class extends PureComponent<Props> {\n  public render() {\n    const {tab, active} = this.props\n\n    return (\n      <SelectGroup.Option\n        name=\"line-protocol\"\n        key={tab}\n        id={tab}\n        titleText={tab}\n        value={tab}\n        active={active}\n        onClick={this.handleClick}\n        testID={tab}\n      >\n        {tab}\n      </SelectGroup.Option>\n    )\n  }\n\n  private handleClick = () => {\n    this.props.onClick(this.props.tab)\n  }\n}\n","import React, {PureComponent} from 'react'\n\nimport {SelectGroup, ButtonShape} from '@influxdata/clockface'\nimport {LineProtocolTab} from 'src/types'\n\nimport Tab from 'src/dataLoaders/components/lineProtocolWizard/configure/Tab'\n\ninterface Props {\n  tabs: LineProtocolTab[]\n  activeLPTab: LineProtocolTab\n  onClick: (tab: LineProtocolTab) => void\n}\n\nexport default class extends PureComponent<Props> {\n  public render() {\n    const {tabs, activeLPTab} = this.props\n    return (\n      <SelectGroup shape={ButtonShape.Default}>\n        {tabs.map(t => (\n          <Tab\n            tab={t}\n            key={t}\n            active={activeLPTab === t}\n            onClick={this.handleTabClick}\n          />\n        ))}\n      </SelectGroup>\n    )\n  }\n\n  private handleTabClick = (tab: LineProtocolTab) => {\n    const {activeLPTab, onClick} = this.props\n    if (tab !== activeLPTab) {\n      onClick(tab)\n    }\n  }\n}\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\n\n// Components\nimport {\n  Form,\n  Input,\n  Grid,\n  TextArea,\n  Columns,\n  InputType,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport DragAndDrop from 'src/shared/components/DragAndDrop'\nimport {LineProtocolTab} from 'src/types'\nimport {WritePrecision} from '@influxdata/influx'\n\nimport {setLineProtocolBody} from 'src/dataLoaders/actions/dataLoaders'\n\ninterface Props {\n  lineProtocolBody: string\n  activeLPTab: LineProtocolTab\n  precision: WritePrecision\n  setLineProtocolBody: typeof setLineProtocolBody\n  onURLChange: (url: string) => void\n  urlInput: string\n}\n\nexport default class extends PureComponent<Props> {\n  public render() {\n    const {lineProtocolBody, activeLPTab, urlInput} = this.props\n\n    switch (activeLPTab) {\n      case LineProtocolTab.UploadFile:\n        return (\n          <DragAndDrop\n            submitText=\"Upload File\"\n            handleSubmit={this.handleSetLineProtocol}\n            submitOnDrop={true}\n            submitOnUpload={true}\n            className=\"line-protocol--content\"\n          />\n        )\n      case LineProtocolTab.EnterManually:\n        return (\n          <TextArea\n            value={lineProtocolBody}\n            placeholder=\"Write text here\"\n            onChange={this.handleTextChange}\n            testID=\"line-protocol--text-area\"\n            className=\"line-protocol--content\"\n          />\n        )\n      case LineProtocolTab.EnterURL:\n        return (\n          <Grid>\n            <Grid.Row>\n              <Grid.Column\n                widthXS={Columns.Twelve}\n                widthMD={Columns.Ten}\n                offsetMD={Columns.One}\n              >\n                <Form.Element label=\"File URL:\">\n                  <Input\n                    titleText=\"File URL:\"\n                    type={InputType.Text}\n                    placeholder=\"http://...\"\n                    value={urlInput}\n                    onChange={this.handleChange}\n                    autoFocus={true}\n                    size={ComponentSize.Large}\n                  />\n                </Form.Element>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        )\n    }\n  }\n\n  private handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {value} = e.target\n    this.props.onURLChange(value)\n  }\n\n  private handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    const {setLineProtocolBody} = this.props\n    setLineProtocolBody(e.target.value)\n  }\n\n  private handleSetLineProtocol = (lpBody: string) => {\n    const {setLineProtocolBody} = this.props\n    setLineProtocolBody(lpBody)\n  }\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\n// Components\nimport PrecisionDropdown from 'src/dataLoaders/components/lineProtocolWizard/configure/PrecisionDropdown'\nimport TabSelector from 'src/dataLoaders/components/lineProtocolWizard/configure/TabSelector'\nimport TabBody from 'src/dataLoaders/components/lineProtocolWizard/configure/TabBody'\n\n// Types\nimport {AppState, LineProtocolTab} from 'src/types'\nimport {WritePrecision} from '@influxdata/influx'\n\n// Actions\nimport {\n  setLineProtocolBody,\n  setActiveLPTab,\n  setPrecision,\n} from 'src/dataLoaders/actions/dataLoaders'\n\ninterface OwnProps {\n  tabs: LineProtocolTab[]\n  bucket: string\n  org: string\n}\n\ntype Props = OwnProps & DispatchProps & StateProps\n\ninterface DispatchProps {\n  setLineProtocolBody: typeof setLineProtocolBody\n  setActiveLPTab: typeof setActiveLPTab\n  setPrecision: typeof setPrecision\n}\n\ninterface StateProps {\n  lineProtocolBody: string\n  activeLPTab: LineProtocolTab\n  precision: WritePrecision\n}\n\ninterface State {\n  urlInput: string\n}\n\nexport class LineProtocolTabs extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      urlInput: '',\n    }\n  }\n\n  public render() {\n    const {\n      setPrecision,\n      precision,\n      activeLPTab,\n      tabs,\n      setLineProtocolBody,\n      lineProtocolBody,\n    } = this.props\n\n    const {urlInput} = this.state\n\n    return (\n      <>\n        <div className=\"line-protocol--header\">\n          <TabSelector\n            activeLPTab={activeLPTab}\n            tabs={tabs}\n            onClick={this.handleTabClick}\n          />\n          <PrecisionDropdown\n            setPrecision={setPrecision}\n            precision={precision}\n          />\n        </div>\n        <TabBody\n          onURLChange={this.handleURLChange}\n          activeLPTab={activeLPTab}\n          precision={precision}\n          urlInput={urlInput}\n          lineProtocolBody={lineProtocolBody}\n          setLineProtocolBody={setLineProtocolBody}\n        />\n      </>\n    )\n  }\n\n  private handleTabClick = (tab: LineProtocolTab) => {\n    const {setActiveLPTab, setLineProtocolBody} = this.props\n\n    setLineProtocolBody('')\n    setActiveLPTab(tab)\n  }\n\n  private handleURLChange = (urlInput: string) => {\n    this.setState({urlInput})\n  }\n}\n\nconst mstp = ({\n  dataLoading: {\n    dataLoaders: {lineProtocolBody, activeLPTab, precision},\n  },\n}: AppState) => {\n  return {lineProtocolBody, activeLPTab, precision}\n}\n\nconst mdtp: DispatchProps = {\n  setLineProtocolBody,\n  setActiveLPTab,\n  setPrecision,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(LineProtocolTabs)\n","// Libraries\nimport React, {FC} from 'react'\n\nconst LineProtocolHelperText: FC<{}> = () => {\n  return (\n    <p>\n      Need help writing InfluxDB Line Protocol?{' '}\n      <a\n        href=\"https://v2.docs.influxdata.com/v2.0/write-data/#write-data-in-the-influxdb-ui\"\n        target=\"_blank\"\n      >\n        See Documentation\n      </a>\n    </p>\n  )\n}\n\nexport default LineProtocolHelperText\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Form, Overlay} from '@influxdata/clockface'\nimport LineProtocolTabs from 'src/dataLoaders/components/lineProtocolWizard/configure/LineProtocolTabs'\nimport OnboardingButtons from 'src/onboarding/components/OnboardingButtons'\nimport LineProtocolHelperText from 'src/dataLoaders/components/lineProtocolWizard/LineProtocolHelperText'\n\n// Actions\nimport {\n  setLPStatus as setLPStatusAction,\n  writeLineProtocolAction,\n} from 'src/dataLoaders/actions/dataLoaders'\n\n// Decorator\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {LineProtocolTab} from 'src/types/dataLoaders'\nimport {AppState} from 'src/types/index'\nimport {WritePrecision} from '@influxdata/influx'\nimport {RemoteDataState} from 'src/types'\nimport {LineProtocolStepProps} from 'src/dataLoaders/components/lineProtocolWizard/LineProtocolWizard'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ntype OwnProps = LineProtocolStepProps\n\ninterface StateProps {\n  lineProtocolBody: string\n  precision: WritePrecision\n  bucket: string\n  org: string\n}\n\ninterface DispatchProps {\n  setLPStatus: typeof setLPStatusAction\n  writeLineProtocolAction: typeof writeLineProtocolAction\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\n@ErrorHandling\nexport class LineProtocol extends PureComponent<Props> {\n  public componentDidMount() {\n    const {setLPStatus} = this.props\n    setLPStatus(RemoteDataState.NotStarted)\n  }\n\n  public render() {\n    const {bucket, org} = this.props\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Overlay.Body style={{textAlign: 'center'}}>\n          <LineProtocolTabs\n            tabs={this.LineProtocolTabs}\n            bucket={bucket}\n            org={org}\n          />\n          <LineProtocolHelperText />\n        </Overlay.Body>\n        <OnboardingButtons autoFocusNext={true} nextButtonText=\"Write Data\" />\n      </Form>\n    )\n  }\n\n  private get LineProtocolTabs(): LineProtocolTab[] {\n    return [LineProtocolTab.UploadFile, LineProtocolTab.EnterManually]\n  }\n\n  private handleSubmit = () => {\n    const {onIncrementCurrentStepIndex} = this.props\n    this.handleUpload()\n    onIncrementCurrentStepIndex()\n  }\n\n  private handleUpload = () => {\n    const {bucket, org, lineProtocolBody, precision} = this.props\n    this.props.writeLineProtocolAction(org, bucket, lineProtocolBody, precision)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {dataLoading} = state\n  const {\n    dataLoaders: {lineProtocolBody, precision},\n    steps: {bucket},\n  } = dataLoading\n  const org = getOrg(state).name\n\n  return {lineProtocolBody, precision, bucket, org}\n}\n\nconst mdtp: DispatchProps = {\n  setLPStatus: setLPStatusAction,\n  writeLineProtocolAction,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(LineProtocol)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport classnames from 'classnames'\nimport {connect} from 'react-redux'\n\n// Components\nimport {SparkleSpinner} from '@influxdata/clockface'\n\n// Types\nimport {RemoteDataState} from 'src/types'\nimport {AppState} from 'src/types'\n\ninterface StateProps {\n  status: RemoteDataState\n  errorMessage: string\n}\n\ntype Props = StateProps\n\nexport class StatusIndicator extends PureComponent<Props> {\n  public render() {\n    const {status} = this.props\n    return (\n      <div className=\"line-protocol--spinner\">\n        <p data-testid=\"line-protocol--status\" className={this.statusClassName}>\n          {this.statusText.status}\n        </p>\n        <SparkleSpinner loading={status} sizePixels={220} />\n        <p className={this.statusClassName}>{this.statusText.message}</p>\n      </div>\n    )\n  }\n\n  private get statusClassName(): string {\n    const {status} = this.props\n\n    return classnames(`line-protocol--status`, {\n      loading: status === RemoteDataState.Loading,\n      success: status === RemoteDataState.Done,\n      error: status === RemoteDataState.Error,\n    })\n  }\n\n  private get statusText() {\n    let status = ''\n    let message = ''\n    switch (this.props.status) {\n      case RemoteDataState.Loading:\n        status = 'Loading...'\n        message = 'Just a moment'\n        break\n      case RemoteDataState.Done:\n        status = 'Data Written Successfully'\n        message = 'Hooray!'\n        break\n      case RemoteDataState.Error:\n        status = 'Unable to Write Data'\n        message = `Error: ${this.props.errorMessage}`\n        break\n    }\n\n    return {\n      status,\n      message,\n    }\n  }\n}\n\nconst mstp = ({\n  dataLoading: {\n    dataLoaders: {lpStatus, lpError},\n  },\n}: AppState): StateProps => ({\n  status: lpStatus,\n  errorMessage: lpError,\n})\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(StatusIndicator)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {Form, Overlay} from '@influxdata/clockface'\nimport StatusIndicator from 'src/dataLoaders/components/lineProtocolWizard/verify/StatusIndicator'\nimport OnboardingButtons from 'src/onboarding/components/OnboardingButtons'\nimport LineProtocolHelperText from 'src/dataLoaders/components/lineProtocolWizard/LineProtocolHelperText'\n\n// Types\nimport {LineProtocolStepProps} from 'src/dataLoaders/components/lineProtocolWizard/LineProtocolWizard'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ntype Props = LineProtocolStepProps\n\n@ErrorHandling\nexport class VerifyLineProtocolStep extends PureComponent<Props> {\n  public render() {\n    const {onDecrementCurrentStepIndex, onExit} = this.props\n\n    return (\n      <Form onSubmit={onExit}>\n        <Overlay.Body style={{textAlign: 'center'}}>\n          <StatusIndicator />\n          <LineProtocolHelperText />\n        </Overlay.Body>\n        <OnboardingButtons\n          onClickBack={onDecrementCurrentStepIndex}\n          nextButtonText=\"Finish\"\n        />\n      </Form>\n    )\n  }\n}\n\nexport default VerifyLineProtocolStep\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport LineProtocol from 'src/dataLoaders/components/lineProtocolWizard/configure/LineProtocol'\nimport LineProtocolVerifyStep from 'src/dataLoaders/components/lineProtocolWizard/verify/LineProtocolVerifyStep'\n\n// Types\nimport {LineProtocolStepProps} from 'src/dataLoaders/components/lineProtocolWizard/LineProtocolWizard'\nimport {Bucket, LineProtocolStep} from 'src/types'\n\ninterface Props {\n  stepProps: LineProtocolStepProps\n  buckets: Bucket[]\n}\n\n@ErrorHandling\nclass StepSwitcher extends PureComponent<Props> {\n  public render() {\n    const {stepProps} = this.props\n\n    switch (stepProps.currentStepIndex) {\n      case LineProtocolStep.Configure:\n        return <LineProtocol {...stepProps} />\n      case LineProtocolStep.Verify:\n        return <LineProtocolVerifyStep {...stepProps} />\n      default:\n        return <div />\n    }\n  }\n}\n\nexport default StepSwitcher\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport LineProtocolStepSwitcher from 'src/dataLoaders/components/lineProtocolWizard/verify/LineProtocolStepSwitcher'\n\n// Actions\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\nimport {\n  setBucketInfo,\n  incrementCurrentStepIndex,\n  decrementCurrentStepIndex,\n  setCurrentStepIndex,\n  clearSteps,\n} from 'src/dataLoaders/actions/steps'\n\nimport {clearDataLoaders} from 'src/dataLoaders/actions/dataLoaders'\n\n// Types\nimport {AppState, ResourceType} from 'src/types'\nimport {Bucket} from 'src/types'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\nexport interface LineProtocolStepProps {\n  currentStepIndex: number\n  onIncrementCurrentStepIndex: () => void\n  onDecrementCurrentStepIndex: () => void\n  notify: typeof notifyAction\n  onExit: () => void\n}\n\ninterface OwnProps {\n  onCompleteSetup: () => void\n  startingStep?: number\n}\n\ninterface DispatchProps {\n  notify: typeof notifyAction\n  onSetBucketInfo: typeof setBucketInfo\n  onIncrementCurrentStepIndex: typeof incrementCurrentStepIndex\n  onDecrementCurrentStepIndex: typeof decrementCurrentStepIndex\n  onSetCurrentStepIndex: typeof setCurrentStepIndex\n  onClearDataLoaders: typeof clearDataLoaders\n  onClearSteps: typeof clearSteps\n}\n\ninterface StateProps {\n  currentStepIndex: number\n  username: string\n  bucket: string\n  buckets: Bucket[]\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\n@ErrorHandling\nclass LineProtocolWizard extends PureComponent<Props & WithRouterProps> {\n  public componentDidMount() {\n    this.handleSetBucketInfo()\n    this.handleSetStartingValues()\n  }\n\n  public render() {\n    const {buckets} = this.props\n\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={800}>\n          <Overlay.Header\n            title=\"Add Data Using Line Protocol\"\n            onDismiss={this.handleDismiss}\n          />\n          <LineProtocolStepSwitcher\n            stepProps={this.stepProps}\n            buckets={buckets}\n          />\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private handleSetBucketInfo = () => {\n    const {bucket, buckets} = this.props\n    if (!bucket && buckets && buckets.length) {\n      const {orgID, name, id} = buckets[0]\n\n      this.props.onSetBucketInfo(orgID, name, id)\n    }\n  }\n\n  private handleSetStartingValues = () => {\n    const {startingStep} = this.props\n\n    const hasStartingStep = startingStep || startingStep === 0\n\n    if (hasStartingStep) {\n      this.props.onSetCurrentStepIndex(startingStep)\n    }\n  }\n\n  private handleDismiss = () => {\n    const {router, onClearDataLoaders, onClearSteps} = this.props\n\n    onClearDataLoaders()\n    onClearSteps()\n    router.goBack()\n  }\n\n  private get stepProps(): LineProtocolStepProps {\n    const {\n      notify,\n      currentStepIndex,\n      onDecrementCurrentStepIndex,\n      onIncrementCurrentStepIndex,\n    } = this.props\n\n    return {\n      currentStepIndex,\n      onIncrementCurrentStepIndex,\n      onDecrementCurrentStepIndex,\n      notify,\n      onExit: this.handleDismiss,\n    }\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    dataLoading: {\n      steps: {currentStep, bucket},\n    },\n    me: {name},\n  } = state\n\n  const buckets = getAll<Bucket>(state, ResourceType.Buckets)\n\n  return {\n    currentStepIndex: currentStep,\n    username: name,\n    bucket,\n    buckets,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  notify: notifyAction,\n  onSetBucketInfo: setBucketInfo,\n  onIncrementCurrentStepIndex: incrementCurrentStepIndex,\n  onDecrementCurrentStepIndex: decrementCurrentStepIndex,\n  onSetCurrentStepIndex: setCurrentStepIndex,\n  onClearDataLoaders: clearDataLoaders,\n  onClearSteps: clearSteps,\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(LineProtocolWizard))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {downloadTextFile} from 'src/shared/utils/download'\nimport {ComponentColor, Button} from '@influxdata/clockface'\nimport {isFlagEnabled} from 'src/shared/utils/featureFlag'\nimport {AppState} from 'src/types'\n\ninterface OwnProps {\n  onDismiss: () => void\n}\n\ninterface StateProps {\n  script: string\n}\n\ninterface DispatchProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\nexport class TelegrafEditorFooter extends PureComponent<Props> {\n  public render() {\n    if (!isFlagEnabled('telegrafEditor')) {\n      return false\n    }\n\n    return (\n      <>\n        <Button\n          color={ComponentColor.Secondary}\n          text=\"Download Config\"\n          onClick={this.handleDownloadConfig}\n        />\n        <Button\n          color={ComponentColor.Primary}\n          text=\"Save Config\"\n          onClick={this.handleSaveConfig}\n        />\n      </>\n    )\n  }\n\n  private handleDownloadConfig = () => {\n    downloadTextFile(this.props.script, 'telegraf', '.conf')\n  }\n\n  private handleSaveConfig = () => {\n    this.props.onDismiss()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const script = state.telegrafEditor.text\n\n  return {\n    script,\n  }\n}\n\nconst mdtp: DispatchProps = {}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mstp,\n  mdtp\n)(TelegrafEditorFooter)\n","// Types\nimport {Bucket} from 'src/types'\n\nexport const SYSTEM = 'system'\n\nexport const isSystemBucket = (type: string): boolean => type === SYSTEM\n\nconst sortFunc = (a: Bucket, b: Bucket) => {\n  const firstBucket = `${a.name}`.toLowerCase()\n  const secondBucket = `${b.name}`.toLowerCase()\n  if (firstBucket === secondBucket) {\n    return 0\n  }\n  if (firstBucket < secondBucket) {\n    return -1\n  }\n  if (firstBucket > secondBucket) {\n    return 1\n  }\n  return 0\n}\n\nexport const getSortedBucketNames = (buckets: Bucket[]) => {\n  const systemBuckets = []\n  const otherBuckets = []\n  buckets.forEach(bucket => {\n    // separate system buckets from the rest\n    if (isSystemBucket(bucket.type)) {\n      systemBuckets.push(bucket)\n    } else {\n      otherBuckets.push(bucket)\n    }\n  })\n  // alphabetize system buckets\n  systemBuckets.sort(sortFunc)\n  // alphabetize other buckets\n  otherBuckets.sort(sortFunc)\n  // concat the system buckets to the end of the other buckets and map results\n  return otherBuckets.concat(systemBuckets).map(bucket => bucket.name)\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport Loadable from 'react-loadable'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {Overlay} from '@influxdata/clockface'\nimport TelegrafEditorFooter from 'src/dataLoaders/components/TelegrafEditorFooter'\n\nconst spinner = <div />\nconst TelegrafEditor = Loadable({\n  loader: () => import('src/dataLoaders/components/TelegrafEditor'),\n  loading() {\n    return spinner\n  },\n})\nconst CollectorsStepSwitcher = Loadable({\n  loader: () =>\n    import('src/dataLoaders/components/collectorsWizard/CollectorsStepSwitcher'),\n  loading() {\n    return spinner\n  },\n})\nimport {isFlagEnabled, FeatureFlag} from 'src/shared/utils/featureFlag'\n\n// Actions\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\nimport {\n  setBucketInfo,\n  incrementCurrentStepIndex,\n  decrementCurrentStepIndex,\n  setCurrentStepIndex,\n  clearSteps,\n} from 'src/dataLoaders/actions/steps'\n\nimport {\n  clearDataLoaders,\n  setActiveTelegrafPlugin,\n  setPluginConfiguration,\n} from 'src/dataLoaders/actions/dataLoaders'\nimport {reset} from 'src/dataLoaders/actions/telegrafEditor'\n\n// Types\nimport {Links} from 'src/types/links'\nimport {Substep, TelegrafPlugin} from 'src/types/dataLoaders'\nimport {AppState, Bucket, Organization, ResourceType} from 'src/types'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\nimport {getOrg} from 'src/organizations/selectors'\nimport {isSystemBucket} from 'src/buckets/selectors'\n\nexport interface CollectorsStepProps {\n  currentStepIndex: number\n  onIncrementCurrentStepIndex: () => void\n  onDecrementCurrentStepIndex: () => void\n  notify: typeof notifyAction\n  onExit: () => void\n}\n\ninterface DispatchProps {\n  notify: typeof notifyAction\n  onSetBucketInfo: typeof setBucketInfo\n  onIncrementCurrentStepIndex: typeof incrementCurrentStepIndex\n  onDecrementCurrentStepIndex: typeof decrementCurrentStepIndex\n  onSetCurrentStepIndex: typeof setCurrentStepIndex\n  onClearDataLoaders: typeof clearDataLoaders\n  onClearSteps: typeof clearSteps\n  onClearTelegrafEditor: typeof reset\n  onSetActiveTelegrafPlugin: typeof setActiveTelegrafPlugin\n  onSetPluginConfiguration: typeof setPluginConfiguration\n}\n\ninterface StateProps {\n  links: Links\n  buckets: Bucket[]\n  telegrafPlugins: TelegrafPlugin[]\n  currentStepIndex: number\n  substep: Substep\n  username: string\n  bucket: string\n  text: string\n  org: Organization\n}\n\ntype Props = StateProps & DispatchProps\ntype AllProps = Props & WithRouterProps\n\n@ErrorHandling\nclass CollectorsWizard extends PureComponent<AllProps> {\n  public componentDidMount() {\n    const {bucket, buckets} = this.props\n    if (!bucket && buckets && buckets.length) {\n      const {orgID, name, id} = buckets[0]\n      this.props.onSetBucketInfo(orgID, name, id)\n    }\n    this.props.onSetCurrentStepIndex(0)\n  }\n\n  public render() {\n    const {buckets} = this.props\n\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={1200}>\n          <Overlay.Header\n            title=\"Create a Telegraf Configuration\"\n            onDismiss={this.handleDismiss}\n          />\n          <Overlay.Body className=\"data-loading--overlay\">\n            <FeatureFlag name=\"telegrafEditor\">\n              <TelegrafEditor />\n            </FeatureFlag>\n            <FeatureFlag name=\"telegrafEditor\" equals={false}>\n              <CollectorsStepSwitcher\n                stepProps={this.stepProps}\n                buckets={buckets}\n              />\n            </FeatureFlag>\n          </Overlay.Body>\n          <Overlay.Footer>\n            <TelegrafEditorFooter onDismiss={this.handleDismiss} />\n          </Overlay.Footer>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private handleDismiss = () => {\n    const {router, org} = this.props\n\n    if (isFlagEnabled('telegrafEditor')) {\n      const {onClearTelegrafEditor} = this.props\n      onClearTelegrafEditor()\n    } else {\n      const {onClearDataLoaders, onClearSteps} = this.props\n      onClearDataLoaders()\n      onClearSteps()\n    }\n    router.push(`/orgs/${org.id}/load-data/telegrafs`)\n  }\n\n  private get stepProps(): CollectorsStepProps {\n    const {\n      notify,\n      currentStepIndex,\n      onDecrementCurrentStepIndex,\n      onIncrementCurrentStepIndex,\n    } = this.props\n\n    return {\n      currentStepIndex,\n      onIncrementCurrentStepIndex,\n      onDecrementCurrentStepIndex,\n      notify,\n      onExit: this.handleDismiss,\n    }\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    links,\n    dataLoading: {\n      dataLoaders: {telegrafPlugins},\n      steps: {currentStep, substep, bucket},\n    },\n    me: {name},\n    telegrafEditor,\n  } = state\n\n  const buckets = getAll<Bucket>(state, ResourceType.Buckets)\n\n  const nonSystemBuckets = buckets.filter(\n    bucket => !isSystemBucket(bucket.name)\n  )\n\n  const org = getOrg(state)\n\n  return {\n    links,\n    telegrafPlugins,\n    text: telegrafEditor.text,\n    currentStepIndex: currentStep,\n    substep,\n    username: name,\n    bucket,\n    buckets: nonSystemBuckets,\n    org,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  notify: notifyAction,\n  onSetBucketInfo: setBucketInfo,\n  onIncrementCurrentStepIndex: incrementCurrentStepIndex,\n  onDecrementCurrentStepIndex: decrementCurrentStepIndex,\n  onSetCurrentStepIndex: setCurrentStepIndex,\n  onClearDataLoaders: clearDataLoaders,\n  onClearSteps: clearSteps,\n  onClearTelegrafEditor: reset,\n  onSetActiveTelegrafPlugin: setActiveTelegrafPlugin,\n  onSetPluginConfiguration: setPluginConfiguration,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(withRouter<Props>(CollectorsWizard))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {Overlay} from '@influxdata/clockface'\nimport TelegrafInstructions from 'src/dataLoaders/components/verifyStep/TelegrafInstructions'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Constants\nimport {TOKEN_LABEL} from 'src/labels/constants'\n\n// Types\nimport {Telegraf, AppState, ResourceType, Authorization} from 'src/types'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\nconst {Authorizations} = ResourceType\n\ninterface StateProps {\n  username: string\n  telegrafs: Telegraf[]\n  tokens: Authorization[]\n  collectors: Telegraf[]\n}\n\n@ErrorHandling\nexport class TelegrafInstructionsOverlay extends PureComponent<\n  StateProps & WithRouterProps\n> {\n  public render() {\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={700}>\n          <Overlay.Header\n            title=\"Telegraf Setup Instructions\"\n            onDismiss={this.handleDismiss}\n          />\n          <Overlay.Body>\n            <GetResources resources={[ResourceType.Authorizations]}>\n              <TelegrafInstructions\n                token={this.token}\n                configID={get(this.collector, 'id', '')}\n              />\n            </GetResources>\n          </Overlay.Body>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private get token(): string {\n    const {telegrafs, tokens} = this.props\n    const config =\n      telegrafs.find(t => get(this.collector, 'id', '') === t.id) ||\n      this.collector\n\n    if (!config) {\n      return 'no config found'\n    }\n\n    const labels = get(config, 'labels', [])\n\n    const label = labels.find(l => l.name === TOKEN_LABEL)\n    const auth = tokens.find(t => t.id === get(label, 'properties.tokenID'))\n\n    if (!label || !auth) {\n      return 'unknown token'\n    }\n\n    return auth.token\n  }\n\n  private get collector() {\n    const {\n      params: {id},\n      collectors,\n    } = this.props\n    return collectors.find(c => c.id === id)\n  }\n\n  private handleDismiss = (): void => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n    this.setState({\n      collectorID: null,\n    })\n\n    router.push(`/orgs/${orgID}/load-data/telegrafs/`)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    me: {name},\n  } = state\n\n  const tokens = getAll<Authorization>(state, Authorizations)\n  const telegrafs = getAll<Telegraf>(state, ResourceType.Telegrafs)\n\n  return {\n    username: name,\n    tokens,\n    collectors: telegrafs,\n    telegrafs: telegrafs,\n  }\n}\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(withRouter<StateProps>(TelegrafInstructionsOverlay))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {WithRouterProps, withRouter} from 'react-router'\n\nimport _ from 'lodash'\n\n// Components\nimport {\n  Form,\n  Button,\n  ComponentSize,\n  Panel,\n  IconFont,\n  FlexBox,\n  AlignItems,\n  FlexDirection,\n  Gradients,\n  InfluxColors,\n  JustifyContent,\n} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {ButtonType} from 'src/clockface'\n\ntype Props = WithRouterProps\n\n@ErrorHandling\nclass OrgProfileTab extends PureComponent<Props> {\n  public render() {\n    return (\n      <Panel backgroundColor={InfluxColors.Onyx}>\n        <Panel.Header size={ComponentSize.Small}>\n          <h4>Organization Profile</h4>\n        </Panel.Header>\n        <Panel.Body size={ComponentSize.Small}>\n          <Form onSubmit={this.handleShowEditOverlay}>\n            <Panel gradient={Gradients.DocScott}>\n              <Panel.Header size={ComponentSize.ExtraSmall}>\n                <h5>Danger Zone!</h5>\n              </Panel.Header>\n              <Panel.Body size={ComponentSize.ExtraSmall}>\n                <FlexBox\n                  stretchToFitWidth={true}\n                  alignItems={AlignItems.Center}\n                  direction={FlexDirection.Row}\n                  justifyContent={JustifyContent.SpaceBetween}\n                >\n                  <div>\n                    <h5 style={{marginBottom: '0'}}>Rename Organization</h5>\n                    <p style={{marginTop: '2px'}}>\n                      This action can have wide-reaching unintended\n                      consequences.\n                    </p>\n                  </div>\n                  <Button\n                    text=\"Rename\"\n                    icon={IconFont.Pencil}\n                    type={ButtonType.Submit}\n                  />\n                </FlexBox>\n              </Panel.Body>\n            </Panel>\n          </Form>\n        </Panel.Body>\n      </Panel>\n    )\n  }\n\n  private handleShowEditOverlay = () => {\n    const {\n      params: {orgID},\n      router,\n    } = this.props\n\n    router.push(`/orgs/${orgID}/settings/profile/rename`)\n  }\n}\n\nexport default withRouter<{}>(OrgProfileTab)\n","// Libraries\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport SettingsTabbedPage from 'src/settings/components/SettingsTabbedPage'\nimport SettingsHeader from 'src/settings/components/SettingsHeader'\nimport {Grid, Columns, Page} from '@influxdata/clockface'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Types\nimport {AppState, Organization} from 'src/types'\nimport OrgProfileTab from '../components/OrgProfileTab'\n\ninterface StateProps {\n  org: Organization\n}\n\n@ErrorHandling\nclass OrgProfilePage extends Component<StateProps> {\n  public render() {\n    const {org, children} = this.props\n\n    return (\n      <>\n        <Page titleTag={pageTitleSuffixer(['Org Profile', 'Settings'])}>\n          <SettingsHeader />\n          <SettingsTabbedPage activeTab=\"profile\" orgID={org.id}>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column widthXS={Columns.Twelve} widthSM={Columns.Six}>\n                  <OrgProfileTab />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </SettingsTabbedPage>\n        </Page>\n        {children}\n      </>\n    )\n  }\n}\n\nconst mstp = (state: AppState) => ({org: getOrg(state)})\n\nexport default connect<StateProps, {}, {}>(\n  mstp,\n  null\n)(OrgProfilePage)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\nimport _ from 'lodash'\n\n// Components\nimport {\n  Button,\n  IconFont,\n  ComponentColor,\n  Alert,\n  FlexBox,\n  AlignItems,\n  FlexDirection,\n  ComponentSize,\n  ButtonType,\n  Form,\n} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  message: string\n  effectedItems: string[]\n  onConfirm: () => void\n  confirmButtonText: string\n}\n\n@ErrorHandling\nclass DangerConfirmationForm extends PureComponent<Props> {\n  public render() {\n    return (\n      <Form onSubmit={this.props.onConfirm}>\n        <FlexBox\n          alignItems={AlignItems.Center}\n          direction={FlexDirection.Column}\n          margin={ComponentSize.Large}\n        >\n          <Alert color={ComponentColor.Danger} icon={IconFont.AlertTriangle}>\n            Bad things could happen if you don't read this!\n          </Alert>\n          <Form.Element label=\"\">\n            <>\n              <p>{this.props.message}</p>\n              <ul>\n                {this.props.effectedItems.map(item => (\n                  <li key={item}>{item}</li>\n                ))}\n              </ul>\n            </>\n          </Form.Element>\n          <Form.Footer>\n            <Button\n              color={ComponentColor.Danger}\n              text={this.props.confirmButtonText}\n              type={ButtonType.Submit}\n              testID=\"danger-confirmation-button\"\n            />\n          </Form.Footer>\n        </FlexBox>\n      </Form>\n    )\n  }\n}\n\nexport default DangerConfirmationForm\n","// Libraries\nimport React, {PureComponent} from 'react'\n\nimport _ from 'lodash'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport DangerConfirmationForm from 'src/shared/components/dangerConfirmation/DangerConfirmationForm'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  message: string\n  effectedItems: string[]\n  title: string\n  onClose: () => void\n  confirmButtonText: string\n}\n\ninterface State {\n  isConfirmed: boolean\n}\n\n@ErrorHandling\nclass DangerConfirmationOverlay extends PureComponent<Props, State> {\n  public state = {\n    isConfirmed: false,\n  }\n\n  public render() {\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={400}>\n          <Overlay.Header\n            title={this.overlayTitle}\n            onDismiss={this.handleCloseOverlay}\n          />\n          <Overlay.Body>{this.overlayContents}</Overlay.Body>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private get overlayTitle() {\n    const {title} = this.props\n\n    if (this.state.isConfirmed) {\n      return title\n    }\n\n    return 'Are you sure?'\n  }\n\n  private get overlayContents() {\n    const {message, effectedItems, confirmButtonText} = this.props\n    if (this.state.isConfirmed) {\n      return this.props.children\n    }\n\n    return (\n      <DangerConfirmationForm\n        onConfirm={this.handleConfirm}\n        message={message}\n        effectedItems={effectedItems}\n        confirmButtonText={confirmButtonText}\n      />\n    )\n  }\n\n  private handleCloseOverlay = () => {\n    this.props.onClose()\n  }\n\n  private handleConfirm = () => {\n    this.setState({isConfirmed: true})\n  }\n}\n\nexport default DangerConfirmationOverlay\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {connect} from 'react-redux'\nimport {WithRouterProps, withRouter} from 'react-router'\n\n// Components\nimport {\n  Form,\n  Input,\n  Button,\n  ComponentSize,\n  IconFont,\n  FlexBox,\n  ComponentColor,\n  ButtonType,\n  AlignItems,\n  FlexDirection,\n} from '@influxdata/clockface'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Actions\nimport {renameOrg} from 'src/organizations/actions/thunks'\n\n// Types\nimport {ComponentStatus} from '@influxdata/clockface'\nimport {AppState, Organization, ResourceType} from 'src/types'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  startOrg: Organization\n  orgNames: string[]\n}\n\ninterface DispatchProps {\n  onRenameOrg: typeof renameOrg\n}\n\ntype Props = StateProps & DispatchProps & WithRouterProps\n\ninterface State {\n  org: Organization\n}\n\n@ErrorHandling\nclass RenameOrgForm extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      org: this.props.startOrg,\n    }\n  }\n\n  public render() {\n    const {org} = this.state\n\n    return (\n      <Form onSubmit={this.handleRenameOrg}>\n        <Form.ValidationElement\n          label=\"Name\"\n          validationFunc={this.handleValidation}\n          value={org.name}\n        >\n          {status => (\n            <>\n              <FlexBox\n                alignItems={AlignItems.Center}\n                direction={FlexDirection.Column}\n                margin={ComponentSize.Large}\n              >\n                <Input\n                  placeholder=\"Give your organization a name\"\n                  name=\"name\"\n                  autoFocus={true}\n                  onChange={this.handleInputChange}\n                  value={org.name}\n                  status={status}\n                  testID=\"create-org-name-input\"\n                />\n                <FlexBox\n                  alignItems={AlignItems.Center}\n                  direction={FlexDirection.Row}\n                  margin={ComponentSize.Small}\n                >\n                  <Button\n                    text=\"Cancel\"\n                    icon={IconFont.Remove}\n                    onClick={this.handleGoBack}\n                  />\n                  <Button\n                    text=\"Change Organization Name\"\n                    icon={IconFont.Checkmark}\n                    status={this.saveButtonStatus(status)}\n                    color={ComponentColor.Success}\n                    type={ButtonType.Submit}\n                  />\n                </FlexBox>\n              </FlexBox>\n            </>\n          )}\n        </Form.ValidationElement>\n      </Form>\n    )\n  }\n\n  private saveButtonStatus = (\n    validationStatus: ComponentStatus\n  ): ComponentStatus => {\n    if (\n      this.state.org.name === this.props.startOrg.name ||\n      validationStatus === ComponentStatus.Error\n    ) {\n      return ComponentStatus.Disabled\n    }\n\n    return validationStatus\n  }\n\n  private handleGoBack = () => {\n    this.props.router.push(`/orgs/${this.props.startOrg.id}/settings/profile`)\n  }\n\n  private handleValidation = (orgName: string): string | null => {\n    if (!orgName) {\n      return 'Name is required'\n    }\n\n    if (!this.isUniqueName(orgName)) {\n      return 'This org name is taken'\n    }\n  }\n\n  private isUniqueName = (orgName: string): boolean => {\n    return !this.props.orgNames.find(o => o === orgName)\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const name = e.target.value\n    const org = {...this.state.org, name}\n\n    this.setState({org})\n  }\n\n  private handleRenameOrg = async () => {\n    const {onRenameOrg, startOrg} = this.props\n    const {org} = this.state\n\n    await onRenameOrg(startOrg.name, org)\n\n    this.handleGoBack()\n  }\n}\n\nconst mstp = (state: AppState) => {\n  const {resources} = state\n  const {\n    orgs: {org: startOrg},\n  } = resources\n  const orgs = getAll<Organization>(state, ResourceType.Orgs)\n\n  const orgNames = orgs.filter(o => o.id !== startOrg.id).map(o => o.name)\n\n  return {startOrg, orgNames}\n}\n\nconst mdtp = {\n  onRenameOrg: renameOrg,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(withRouter<{}>(RenameOrgForm))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\n\nimport _ from 'lodash'\n\n// Components\nimport DangerConfirmationOverlay from 'src/shared/components/dangerConfirmation/DangerConfirmationOverlay'\nimport RenameOrgForm from 'src/organizations/components/RenameOrgForm'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n@ErrorHandling\nclass RenameOrgOverlay extends PureComponent<WithRouterProps> {\n  public render() {\n    return (\n      <DangerConfirmationOverlay\n        title=\"Rename Organization\"\n        message={this.message}\n        effectedItems={this.effectedItems}\n        onClose={this.handleClose}\n        confirmButtonText=\"I understand, let's rename my Organization\"\n      >\n        <RenameOrgForm />\n      </DangerConfirmationOverlay>\n    )\n  }\n\n  private get message(): string {\n    return 'Updating the name of an Organization can have unintended consequences. Anything that references this Organization by name will stop working including:'\n  }\n\n  private get effectedItems(): string[] {\n    return [\n      'Queries',\n      'Dashboards',\n      'Tasks',\n      'Telegraf Configurations',\n      'Client Libraries',\n    ]\n  }\n\n  private handleClose = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/settings/profile`)\n  }\n}\n\nexport default withRouter(RenameOrgOverlay)\n","// Libraries\nimport React, {\n  FunctionComponent,\n  useEffect,\n  useState,\n  ChangeEvent,\n  FormEvent,\n} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport {\n  Overlay,\n  RemoteDataState,\n  SpinnerContainer,\n  TechnoSpinner,\n} from '@influxdata/clockface'\nimport BucketOverlayForm from 'src/buckets/components/BucketOverlayForm'\n\n// Actions\nimport {updateBucket} from 'src/buckets/actions/thunks'\nimport {notify} from 'src/shared/actions/notifications'\n\n// APIs\nimport * as api from 'src/client'\n\n// Constants\nimport {DEFAULT_SECONDS} from 'src/buckets/components/Retention'\nimport {getBucketFailed} from 'src/shared/copy/notifications'\n\n//Types\nimport {Bucket} from 'src/types'\n\ninterface DispatchProps {\n  onUpdateBucket: typeof updateBucket\n  onNotify: typeof notify\n}\n\ntype Props = DispatchProps & WithRouterProps\n\nconst UpdateBucketOverlay: FunctionComponent<Props> = ({\n  onUpdateBucket,\n  onNotify,\n  params: {bucketID, orgID},\n  router,\n}) => {\n  const [bucketDraft, setBucketDraft] = useState<Bucket>(null)\n\n  const [loadingStatus, setLoadingStatus] = useState(RemoteDataState.Loading)\n\n  const [retentionSelection, setRetentionSelection] = useState(DEFAULT_SECONDS)\n\n  useEffect(() => {\n    const fetchBucket = async () => {\n      const resp = await api.getBucket({bucketID})\n\n      if (resp.status !== 200) {\n        onNotify(getBucketFailed(bucketID, resp.data.message))\n        handleClose()\n        return\n      }\n      setBucketDraft(resp.data as Bucket)\n\n      const rules = get(resp.data, 'retentionRules', [])\n      const rule = rules.find(r => r.type === 'expire')\n      if (rule) {\n        setRetentionSelection(rule.everySeconds)\n      }\n\n      setLoadingStatus(RemoteDataState.Done)\n    }\n    fetchBucket()\n  }, [bucketID])\n\n  const handleChangeRetentionRule = (everySeconds: number): void => {\n    setBucketDraft({\n      ...bucketDraft,\n      retentionRules: [{type: 'expire' as 'expire', everySeconds}],\n    })\n    setRetentionSelection(everySeconds)\n  }\n\n  const handleChangeRuleType = (ruleType: 'expire' | null) => {\n    if (ruleType) {\n      setBucketDraft({\n        ...bucketDraft,\n        retentionRules: [\n          {type: 'expire' as 'expire', everySeconds: retentionSelection},\n        ],\n      })\n    } else {\n      setBucketDraft({\n        ...bucketDraft,\n        retentionRules: [],\n      })\n    }\n  }\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault()\n    onUpdateBucket(bucketDraft)\n    handleClose()\n  }\n\n  const handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const key = e.target.name\n    const value = e.target.value\n    setBucketDraft({...bucketDraft, [key]: value})\n  }\n\n  const handleClose = () => {\n    router.push(`/orgs/${orgID}/load-data/buckets`)\n  }\n\n  const rules = get(bucketDraft, 'retentionRules', [])\n  const rule = rules.find(r => r.type === 'expire')\n\n  const retentionSeconds = rule ? rule.everySeconds : retentionSelection\n  const ruleType = rule ? ('expire' as 'expire') : null\n\n  return (\n    <Overlay visible={true}>\n      <Overlay.Container maxWidth={500}>\n        <Overlay.Header title=\"Edit Bucket\" onDismiss={handleClose} />\n        <SpinnerContainer\n          spinnerComponent={<TechnoSpinner />}\n          loading={loadingStatus}\n        >\n          <Overlay.Body>\n            <BucketOverlayForm\n              name={bucketDraft ? bucketDraft.name : ''}\n              buttonText=\"Save Changes\"\n              ruleType={ruleType}\n              onCloseModal={handleClose}\n              onSubmit={handleSubmit}\n              disableRenaming={true}\n              onChangeInput={handleChangeInput}\n              retentionSeconds={retentionSeconds}\n              onChangeRuleType={handleChangeRuleType}\n              onChangeRetentionRule={handleChangeRetentionRule}\n            />\n          </Overlay.Body>\n        </SpinnerContainer>\n      </Overlay.Container>\n    </Overlay>\n  )\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateBucket: updateBucket,\n  onNotify: notify,\n}\n\nexport default connect<{}, DispatchProps, {}>(\n  null,\n  mdtp\n)(withRouter(UpdateBucketOverlay))\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport {ComponentStatus} from 'src/clockface'\nimport {\n  Form,\n  Input,\n  Button,\n  ButtonType,\n  ComponentColor,\n  FlexBox,\n  AlignItems,\n  FlexDirection,\n  ComponentSize,\n} from '@influxdata/clockface'\n\n// Actions\nimport {renameBucket} from 'src/buckets/actions/thunks'\n\n// Types\nimport {AppState, Bucket, ResourceType} from 'src/types'\n\n// Selectors\nimport {getAll, getByID} from 'src/resources/selectors'\n\ninterface State {\n  bucket: Bucket\n}\n\ninterface StateProps {\n  startBucket: Bucket\n  buckets: Bucket[]\n}\n\ninterface DispatchProps {\n  onRenameBucket: typeof renameBucket\n}\n\ntype OwnProps = {}\n\ntype Props = StateProps & DispatchProps & WithRouterProps & OwnProps\n\nclass RenameBucketForm extends PureComponent<Props, State> {\n  public state = {bucket: this.props.startBucket}\n\n  public render() {\n    const {bucket} = this.state\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.ValidationElement\n          label=\"Name\"\n          validationFunc={this.handleValidation}\n          value={bucket.name}\n        >\n          {status => (\n            <>\n              <FlexBox\n                alignItems={AlignItems.Center}\n                direction={FlexDirection.Column}\n                margin={ComponentSize.Large}\n              >\n                <Input\n                  placeholder=\"Give your bucket a name\"\n                  name=\"name\"\n                  autoFocus={true}\n                  value={bucket.name}\n                  onChange={this.handleChangeInput}\n                  status={status}\n                />\n                <FlexBox\n                  alignItems={AlignItems.Center}\n                  direction={FlexDirection.Row}\n                  margin={ComponentSize.Small}\n                >\n                  <Button\n                    text=\"Cancel\"\n                    onClick={this.handleClose}\n                    type={ButtonType.Button}\n                  />\n                  <Button\n                    text=\"Change Bucket Name\"\n                    color={ComponentColor.Danger}\n                    status={this.saveButtonStatus(status)}\n                    type={ButtonType.Submit}\n                  />\n                </FlexBox>\n              </FlexBox>\n            </>\n          )}\n        </Form.ValidationElement>\n      </Form>\n    )\n  }\n\n  private saveButtonStatus = (\n    validationStatus: ComponentStatus\n  ): ComponentStatus => {\n    if (\n      this.state.bucket.name === this.props.startBucket.name ||\n      validationStatus === ComponentStatus.Error\n    ) {\n      return ComponentStatus.Disabled\n    }\n\n    return validationStatus\n  }\n\n  private handleValidation = (bucketName: string): string | null => {\n    if (!bucketName) {\n      return 'Name is required'\n    }\n\n    if (this.props.buckets.find(b => b.name === bucketName)) {\n      return 'This bucket name is taken'\n    }\n  }\n\n  private handleSubmit = (): void => {\n    const {startBucket, onRenameBucket} = this.props\n    const {bucket} = this.state\n\n    onRenameBucket(startBucket.name, bucket)\n    this.handleClose()\n  }\n\n  private handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.value\n    const bucket = {...this.state.bucket, name}\n\n    this.setState({bucket})\n  }\n\n  private handleClose = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/load-data/buckets`)\n  }\n}\n\nconst mstp = (state: AppState, props: Props): StateProps => {\n  const {\n    params: {bucketID},\n  } = props\n\n  const startBucket = getByID<Bucket>(state, ResourceType.Buckets, bucketID)\n  const buckets = getAll<Bucket>(state, ResourceType.Buckets).filter(\n    b => b.id !== bucketID\n  )\n\n  return {\n    startBucket,\n    buckets,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onRenameBucket: renameBucket,\n}\n\n// state mapping requires router\nexport default withRouter<OwnProps>(\n  connect<StateProps, DispatchProps, OwnProps>(\n    mstp,\n    mdtp\n  )(RenameBucketForm)\n)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\n\nimport _ from 'lodash'\n\n// Components\nimport DangerConfirmationOverlay from 'src/shared/components/dangerConfirmation/DangerConfirmationOverlay'\nimport RenameBucketForm from 'src/buckets/components/RenameBucketForm'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n@ErrorHandling\nclass RenameBucketOverlay extends PureComponent<WithRouterProps> {\n  public render() {\n    return (\n      <DangerConfirmationOverlay\n        title=\"Rename Bucket\"\n        message={this.message}\n        effectedItems={this.effectedItems}\n        onClose={this.handleClose}\n        confirmButtonText=\"I understand, let's rename my Bucket\"\n      >\n        <RenameBucketForm />\n      </DangerConfirmationOverlay>\n    )\n  }\n\n  private get message(): string {\n    return 'Updating the name of a Bucket can have unintended consequences. Anything that references this Bucket by name will stop working including:'\n  }\n\n  private get effectedItems(): string[] {\n    return [\n      'Queries',\n      'Dashboards',\n      'Tasks',\n      'Telegraf Configurations',\n      'Templates',\n    ]\n  }\n\n  private handleClose = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/load-data/buckets`)\n  }\n}\n\nexport default withRouter(RenameBucketOverlay)\n","// Libraries\nimport React, {PureComponent, ChangeEvent, FormEvent} from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Form, Input, Button, Grid, Columns} from '@influxdata/clockface'\n\n// Utils\nimport {validateVariableName} from 'src/variables/utils/validation'\nimport {extractVariablesList} from 'src/variables/selectors'\n\n// Actions\nimport {updateVariable} from 'src/variables/actions/thunks'\n\n// Types\nimport {AppState, Variable} from 'src/types'\nimport {\n  ButtonType,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\n\ninterface OwnProps {\n  onClose: () => void\n}\n\ninterface State {\n  workingVariable: Variable\n  isNameValid: boolean\n}\n\ninterface StateProps {\n  variables: Variable[]\n  startVariable: Variable\n}\n\ninterface DispatchProps {\n  onUpdateVariable: typeof updateVariable\n}\n\ntype Props = StateProps & OwnProps & DispatchProps & WithRouterProps\n\nclass RenameVariableOverlayForm extends PureComponent<Props, State> {\n  public state: State = {\n    workingVariable: this.props.startVariable,\n    isNameValid: true,\n  }\n\n  public render() {\n    const {onClose} = this.props\n    const {workingVariable, isNameValid} = this.state\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthXS={Columns.Six}>\n              <div className=\"overlay-flux-editor--spacing\">\n                <Form.ValidationElement\n                  label=\"Name\"\n                  value={workingVariable.name}\n                  required={true}\n                  validationFunc={this.handleNameValidation}\n                >\n                  {status => (\n                    <Input\n                      placeholder=\"Rename your variable\"\n                      name=\"name\"\n                      autoFocus={true}\n                      value={workingVariable.name}\n                      onChange={this.handleChangeInput}\n                      status={status}\n                      testID=\"rename-variable-input\"\n                    />\n                  )}\n                </Form.ValidationElement>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Form.Footer>\n                <Button\n                  text=\"Cancel\"\n                  color={ComponentColor.Danger}\n                  onClick={onClose}\n                />\n                <Button\n                  text=\"Submit\"\n                  type={ButtonType.Submit}\n                  color={ComponentColor.Primary}\n                  status={\n                    isNameValid\n                      ? ComponentStatus.Default\n                      : ComponentStatus.Disabled\n                  }\n                  testID=\"rename-variable-submit\"\n                />\n              </Form.Footer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form>\n    )\n  }\n\n  private handleSubmit = (e: FormEvent): void => {\n    const {workingVariable} = this.state\n\n    e.preventDefault()\n\n    this.props.onUpdateVariable(workingVariable.id, workingVariable)\n    this.props.onClose()\n  }\n\n  private handleNameValidation = (name: string) => {\n    const {variables} = this.props\n    const {error} = validateVariableName(name, variables)\n\n    this.setState({isNameValid: !error})\n\n    return error\n  }\n\n  private handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.value\n\n    const workingVariable = {...this.state.workingVariable, name}\n\n    this.setState({\n      workingVariable,\n    })\n  }\n}\n\nconst mstp = (state: AppState, {params: {id}}: Props): StateProps => {\n  const variables = extractVariablesList(state)\n  const startVariable = variables.find(v => v.id === id)\n\n  return {variables, startVariable}\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateVariable: updateVariable,\n}\n\nexport default withRouter<OwnProps>(\n  connect<StateProps, DispatchProps, OwnProps>(\n    mstp,\n    mdtp\n  )(RenameVariableOverlayForm)\n)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\n\nimport _ from 'lodash'\n\n// Components\nimport DangerConfirmationOverlay from 'src/shared/components/dangerConfirmation/DangerConfirmationOverlay'\nimport RenameVariableForm from 'src/variables/components/RenameVariableForm'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n@ErrorHandling\nclass RenameVariableOverlay extends PureComponent<WithRouterProps> {\n  public render() {\n    return (\n      <DangerConfirmationOverlay\n        title=\"Rename Variable\"\n        message={this.message}\n        effectedItems={this.effectedItems}\n        onClose={this.handleClose}\n        confirmButtonText=\"I understand, let's rename my Variable\"\n      >\n        <RenameVariableForm onClose={this.handleClose} />\n      </DangerConfirmationOverlay>\n    )\n  }\n\n  private get message(): string {\n    return 'Updating the name of a Variable can have unintended consequences. Anything that references this Variable by name will stop working including:'\n  }\n\n  private get effectedItems(): string[] {\n    return ['Queries', 'Dashboards', 'Telegraf Configurations', 'Templates']\n  }\n\n  private handleClose = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/settings/variables`)\n  }\n}\n\nexport default withRouter(RenameVariableOverlay)\n","// Libraries\nimport React, {PureComponent, FormEvent} from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {\n  Form,\n  Input,\n  Button,\n  Grid,\n  Dropdown,\n  Columns,\n  Overlay,\n} from '@influxdata/clockface'\nimport VariableArgumentsEditor from 'src/variables/components/VariableArgumentsEditor'\n\n// Actions\nimport {updateVariable} from 'src/variables/actions/thunks'\n\n// Utils\nimport {extractVariablesList} from 'src/variables/selectors'\n\n// Constants\nimport {variableItemTypes} from 'src/variables/constants'\n\n// Types\nimport {\n  ButtonType,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\nimport {VariableArguments, AppState, Variable} from 'src/types'\n\ninterface State {\n  workingVariable: Variable\n  isNameValid: boolean\n  hasValidArgs: boolean\n}\n\ninterface StateProps {\n  variables: Variable[]\n  startVariable: Variable\n}\n\ninterface DispatchProps {\n  onUpdateVariable: typeof updateVariable\n}\n\ntype Props = StateProps & DispatchProps & WithRouterProps\n\nclass UpdateVariableOverlay extends PureComponent<Props, State> {\n  public state: State = {\n    workingVariable: this.props.startVariable,\n    isNameValid: true,\n    hasValidArgs: true,\n  }\n\n  public render() {\n    const {workingVariable, hasValidArgs} = this.state\n\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={1000}>\n          <Overlay.Header title=\"Edit Variable\" onDismiss={this.handleClose} />\n          <Overlay.Body>\n            <Form onSubmit={this.handleSubmit}>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column widthXS={Columns.Six}>\n                    <div className=\"overlay-flux-editor--spacing\">\n                      <Form.Element\n                        label=\"Name\"\n                        helpText=\"To rename your variable use the rename button. Renaming is not allowed here.\"\n                      >\n                        <Input\n                          placeholder=\"Give your variable a name\"\n                          name=\"name\"\n                          autoFocus={true}\n                          value={workingVariable.name}\n                          status={ComponentStatus.Disabled}\n                        />\n                      </Form.Element>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column widthXS={Columns.Six}>\n                    <Form.Element label=\"Type\" required={true}>\n                      <Dropdown\n                        button={(active, onClick) => (\n                          <Dropdown.Button active={active} onClick={onClick}>\n                            {this.typeDropdownLabel}\n                          </Dropdown.Button>\n                        )}\n                        menu={onCollapse => (\n                          <Dropdown.Menu onCollapse={onCollapse}>\n                            {variableItemTypes.map(v => (\n                              <Dropdown.Item\n                                key={v.type}\n                                id={v.type}\n                                value={v.type}\n                                onClick={this.handleChangeType}\n                                selected={\n                                  v.type === workingVariable.arguments.type\n                                }\n                              >\n                                {v.label}\n                              </Dropdown.Item>\n                            ))}\n                          </Dropdown.Menu>\n                        )}\n                      />\n                    </Form.Element>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <VariableArgumentsEditor\n                      onChange={this.handleChangeArgs}\n                      onSelectMapDefault={this.handleSelectMapDefault}\n                      selected={workingVariable.selected}\n                      args={workingVariable.arguments}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Form.Footer>\n                      <Button\n                        text=\"Cancel\"\n                        color={ComponentColor.Danger}\n                        onClick={this.handleClose}\n                      />\n                      <Button\n                        text=\"Submit\"\n                        type={ButtonType.Submit}\n                        color={ComponentColor.Primary}\n                        status={\n                          hasValidArgs\n                            ? ComponentStatus.Default\n                            : ComponentStatus.Disabled\n                        }\n                      />\n                    </Form.Footer>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Form>\n          </Overlay.Body>\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n\n  private get typeDropdownLabel(): string {\n    const {workingVariable} = this.state\n\n    return variableItemTypes.find(\n      variable => variable.type === workingVariable.arguments.type\n    ).label\n  }\n\n  private handleChangeType = (selectedType: string) => {\n    const {isNameValid, workingVariable} = this.state\n    const defaults = {hasValidArgs: false, isNameValid}\n\n    switch (selectedType) {\n      case 'query':\n        return this.setState({\n          ...defaults,\n          workingVariable: {\n            ...workingVariable,\n            arguments: {\n              type: 'query',\n              values: {\n                query: '',\n                language: 'flux',\n              },\n            },\n            selected: null,\n          },\n        })\n      case 'map':\n        return this.setState({\n          ...defaults,\n          workingVariable: {\n            ...workingVariable,\n            selected: null,\n            arguments: {\n              type: 'map',\n              values: {},\n            },\n          },\n        })\n      case 'constant':\n        return this.setState({\n          ...defaults,\n          workingVariable: {\n            ...workingVariable,\n            selected: null,\n            arguments: {\n              type: 'constant',\n              values: [],\n            },\n          },\n        })\n    }\n  }\n\n  private handleSelectMapDefault = (selected: string) => {\n    const {workingVariable} = this.state\n\n    this.setState({\n      workingVariable: {\n        ...workingVariable,\n        selected: [selected],\n      },\n    })\n  }\n\n  private handleChangeArgs = ({\n    args,\n    isValid,\n  }: {\n    args: VariableArguments\n    isValid: boolean\n  }) => {\n    const {workingVariable} = this.state\n\n    this.setState({\n      workingVariable: {\n        ...workingVariable,\n        arguments: args,\n      },\n      hasValidArgs: isValid,\n    })\n  }\n\n  private handleSubmit = (e: FormEvent): void => {\n    e.preventDefault()\n    const {workingVariable} = this.state\n\n    this.props.onUpdateVariable(workingVariable.id, workingVariable)\n    this.handleClose()\n  }\n\n  private handleClose = () => {\n    const {\n      router,\n      params: {orgID},\n    } = this.props\n\n    router.push(`/orgs/${orgID}/settings/variables`)\n  }\n}\n\nconst mstp = (state: AppState, {params: {id}}: Props): StateProps => {\n  const variables = extractVariablesList(state)\n  const startVariable = variables.find(v => v.id === id)\n\n  return {variables, startVariable}\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateVariable: updateVariable,\n}\n\nexport default withRouter(\n  connect<StateProps, DispatchProps>(\n    mstp,\n    mdtp\n  )(UpdateVariableOverlay)\n)\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Components\nimport {\n  EmptyState,\n  ComponentSize,\n  Button,\n  IconFont,\n} from '@influxdata/clockface'\n\n// Types\nimport {AppState, Organization} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ninterface StateProps {\n  org: Organization\n}\n\ntype Props = StateProps & WithRouterProps\n\nclass TemplateBrowserEmpty extends PureComponent<Props> {\n  public render() {\n    return (\n      <div className=\"import-template-overlay--empty\">\n        <EmptyState size={ComponentSize.Large}>\n          <EmptyState.Text>\n            Looks like you don't have any <b>Templates</b> yet, why not import\n            one?\n          </EmptyState.Text>\n          <Button\n            size={ComponentSize.Medium}\n            text=\"Import One Here\"\n            icon={IconFont.CogThick}\n            onClick={this.handleButtonClick}\n          />\n        </EmptyState>\n      </div>\n    )\n  }\n\n  private handleButtonClick = (): void => {\n    const {router, org} = this.props\n\n    router.push(`/orgs/${org.id}/tasks/import`)\n  }\n}\n\nconst mstp = (state: AppState): StateProps => ({\n  org: getOrg(state),\n})\n\nexport default connect<StateProps, {}>(\n  mstp,\n  null\n)(withRouter(TemplateBrowserEmpty))\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport {sortBy} from 'lodash'\n\n// Components\nimport {\n  Button,\n  ComponentColor,\n  ComponentStatus,\n  Overlay,\n} from '@influxdata/clockface'\nimport TemplateBrowser from 'src/templates/components/createFromTemplateOverlay/TemplateBrowser'\nimport TemplateBrowserEmpty from 'src/tasks/components/TemplateBrowserEmpty'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Actions\nimport {createTaskFromTemplate as createTaskFromTemplateAction} from 'src/tasks/actions/thunks'\nimport {getTemplateByID} from 'src/templates/actions/thunks'\n\n// Types\nimport {\n  TemplateSummary,\n  Template,\n  TemplateType,\n  AppState,\n  RemoteDataState,\n  TaskTemplate,\n  ResourceType,\n} from 'src/types'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors/getAll'\n\ninterface StateProps {\n  templates: TemplateSummary[]\n  templateStatus: RemoteDataState\n}\n\ninterface DispatchProps {\n  createTaskFromTemplate: typeof createTaskFromTemplateAction\n}\n\ninterface State {\n  selectedTemplateSummary: TemplateSummary\n  selectedTemplate: Template\n}\n\ntype Props = DispatchProps & StateProps\n\nclass TaskImportFromTemplateOverlay extends PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedTemplateSummary: null,\n      selectedTemplate: null,\n    }\n  }\n\n  render() {\n    return (\n      <Overlay visible={true}>\n        <GetResources resources={[ResourceType.Templates]}>\n          <Overlay.Container maxWidth={900}>\n            <Overlay.Header\n              title=\"Create Task from a Template\"\n              onDismiss={this.onDismiss}\n            />\n            <Overlay.Body>{this.overlayBody}</Overlay.Body>\n            <Overlay.Footer>\n              <Button\n                text=\"Cancel\"\n                onClick={this.onDismiss}\n                key=\"cancel-button\"\n              />\n              <Button\n                text=\"Create Task\"\n                onClick={this.onSubmit}\n                key=\"submit-button\"\n                testID=\"create-task-button\"\n                color={ComponentColor.Success}\n                status={this.submitStatus}\n              />\n            </Overlay.Footer>\n          </Overlay.Container>\n        </GetResources>\n      </Overlay>\n    )\n  }\n\n  private get overlayBody(): JSX.Element {\n    const {selectedTemplateSummary, selectedTemplate} = this.state\n    const {templates} = this.props\n\n    if (!templates.length) {\n      return <TemplateBrowserEmpty />\n    }\n\n    return (\n      <TemplateBrowser\n        templates={templates}\n        selectedTemplate={selectedTemplate}\n        selectedTemplateSummary={selectedTemplateSummary}\n        onSelectTemplate={this.handleSelectTemplate}\n      />\n    )\n  }\n\n  private get submitStatus(): ComponentStatus {\n    const {selectedTemplate} = this.state\n\n    return selectedTemplate ? ComponentStatus.Default : ComponentStatus.Disabled\n  }\n\n  private handleSelectTemplate = async (\n    selectedTemplateSummary: TemplateSummary\n  ): Promise<void> => {\n    const selectedTemplate = await getTemplateByID(selectedTemplateSummary.id)\n\n    this.setState({\n      selectedTemplateSummary,\n      selectedTemplate,\n    })\n  }\n\n  private onDismiss = () => {\n    const {router} = this.props\n    router.goBack()\n  }\n\n  private onSubmit = () => {\n    const {createTaskFromTemplate} = this.props\n    const taskTemplate = this.state.selectedTemplate as TaskTemplate\n\n    createTaskFromTemplate(taskTemplate)\n    this.onDismiss()\n  }\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    resources: {\n      templates: {status},\n    },\n  } = state\n  const items = getAll(state, ResourceType.Templates)\n  const filteredTemplates = items.filter(\n    t => !t.meta.type || t.meta.type === TemplateType.Task\n  )\n\n  const templates = sortBy(filteredTemplates, item =>\n    item.meta.name.toLocaleLowerCase()\n  )\n\n  return {\n    templates,\n    templateStatus: status,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  createTaskFromTemplate: createTaskFromTemplateAction,\n}\n\nexport default connect<StateProps>(\n  mstp,\n  mdtp\n)(withRouter(TaskImportFromTemplateOverlay))\n","import React, {PureComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport _ from 'lodash'\n\n// Components\nimport ViewOverlay from 'src/shared/components/ViewOverlay'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Types\nimport {RemoteDataState} from '@influxdata/clockface'\n\nimport {staticTemplates} from 'src/templates/constants/defaultTemplates'\nimport {DashboardTemplate} from 'src/types'\n\ninterface OwnProps {\n  params: {id: string}\n}\n\ntype Props = OwnProps & WithRouterProps\n\n@ErrorHandling\nclass TemplateExportOverlay extends PureComponent<Props> {\n  public render() {\n    return (\n      <ViewOverlay\n        resource={this.template}\n        overlayHeading={this.overlayTitle}\n        onDismissOverlay={this.onDismiss}\n        status={RemoteDataState.Done}\n      />\n    )\n  }\n\n  private get template(): DashboardTemplate {\n    const {\n      params: {id},\n    } = this.props\n\n    return staticTemplates[id]\n  }\n\n  private get overlayTitle() {\n    return this.template.meta.name\n  }\n\n  private onDismiss = () => {\n    const {router} = this.props\n\n    router.goBack()\n  }\n}\n\nexport default withRouter<Props>(TemplateExportOverlay)\n","import {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  EffectCallback,\n  DependencyList,\n} from 'react'\n\n/*\n  Behaves like `useEffect`, but won't fire after the initial render of a\n  component.\n*/\nexport const useMountedEffect = (\n  effect: EffectCallback,\n  inputs?: DependencyList\n) => {\n  const isFirstRender = useRef(true)\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false\n\n      return\n    }\n\n    return effect()\n  }, inputs)\n}\n\nexport const useMountedLayoutEffect = (\n  effect: EffectCallback,\n  inputs?: DependencyList\n) => {\n  const isFirstRender = useRef(true)\n\n  useLayoutEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false\n\n      return\n    }\n\n    return effect()\n  }, inputs)\n}\n","import {\n  SearchExpr,\n  SearchBooleanOperator,\n  SearchTagExpr,\n  SearchTagOperator,\n  SearchBooleanExpr,\n  SearchStringLiteral,\n  SearchRegexLiteral,\n} from 'src/eventViewer/types'\n\n/*\n  Parse search input into an AST.\n\n  For example, given this search input:\n\n      \"foo\" == \"bar\" and \"baz\" != \"foo\"\n\n  We would obtain the following AST:\n\n      {\n        type: 'BooleanExpression',\n        operator: 'and',\n        left: {\n          type: 'BooleanExpression',\n          operator: '==',\n          left: {type: 'StringLiteral', value: 'foo'},\n          right: {type: 'StringLiteral', value: 'bar'},\n        },\n        right: {\n          type: 'BooleanExpression',\n          operator: '!=',\n          left: {type: 'StringLiteral', value: 'baz'},\n          right: {type: 'StringLiteral', value: 'foo'},\n        },\n      }\n\n\n  Empty input will return `null`. If the input cannot be parsed, an exception\n  will be thrown.\n\n  Currently the search grammar is (roughly) a subset of the Flux grammar,\n  though I expect that to change in the future.\n*/\nexport const parseSearchInput = (input: string): SearchExpr | null => {\n  if (input.trim() === '') {\n    return null\n  }\n\n  return new Parser(input).parse()\n}\n\n/*\n  Format the AST for a search term into a Flux boolean expression that can be\n  used as a predicate in a `filter` call.\n\n  For example, the AST:\n\n      {\n        type: 'BooleanExpression',\n        operator: '==',\n        left: {type: 'StringLiteral', value: 'foo'},\n        right: {type: 'StringLiteral', value: 'bar'},\n      }\n\n  Would be printed as the Flux expression:\n\n      r[\"foo\"] == \"bar\"\n\n  Which is intended to be used in a Flux filter call like so:\n\n      // ...\n      |> filter(fn: (r) => r[\"foo\"] == \"bar\")\n\n*/\nexport const searchExprToFlux = (searchExpr: SearchExpr | null): string => {\n  if (searchExpr === null) {\n    return 'true'\n  }\n\n  switch (searchExpr.type) {\n    case 'BooleanExpression': {\n      const left = searchExprToFlux(searchExpr.left)\n      const right = searchExprToFlux(searchExpr.right)\n\n      return `(${left}) ${searchExpr.operator} (${right})`\n    }\n\n    case 'TagExpression': {\n      const left = searchExpr.left.value\n      const right = searchExpr.right.value\n      const delim = searchExpr.right.type === 'RegexLiteral' ? '/' : '\"'\n\n      return `r[\"${left}\"] ${searchExpr.operator} ${delim}${right}${delim}`\n    }\n\n    default: {\n      const badExpr = JSON.stringify(searchExpr)\n\n      throw new Error(`cannot convert search expression to Flux: ${badExpr} `)\n    }\n  }\n}\n\nexport const isSearchInputValid = (input: string): boolean => {\n  try {\n    parseSearchInput(input)\n  } catch {\n    return false\n  }\n\n  return true\n}\n\ntype Token =\n  | SearchStringLiteral\n  | SearchRegexLiteral\n  | {type: '('}\n  | {type: ')'}\n  | {type: 'and'}\n  | {type: 'or'}\n  | {type: '=='}\n  | {type: '!='}\n  | {type: '=~'}\n  | {type: '!~'}\n\nclass Lexer {\n  private input: string\n  private i: number = 0\n\n  constructor(input) {\n    this.input = input\n  }\n\n  public lex(): Token[] {\n    const tokens: Token[] = []\n\n    while (this.current()) {\n      switch (this.current()) {\n        case ' ':\n        case '\\r':\n        case '\\n':\n          this.advance()\n          break\n        case '(':\n          tokens.push({type: '('})\n          this.advance()\n          break\n        case ')':\n          tokens.push({type: ')'})\n          this.advance()\n          break\n        case 'a':\n          this.advance()\n          this.expect('n')\n          this.advance()\n          this.expect('d')\n          tokens.push({type: 'and'})\n          this.advance()\n          break\n        case 'o':\n          this.advance()\n          this.expect('r')\n          tokens.push({type: 'or'})\n          this.advance()\n          break\n        case '=':\n        case '!':\n          const head = this.current()\n          this.advance()\n          this.expect('=', '~')\n          tokens.push({type: `${head}${this.current()}`} as Token)\n          this.advance()\n          break\n        case '\"':\n          this.advance()\n          tokens.push({type: 'StringLiteral', value: this.readToDelimiter('\"')})\n          this.advance()\n          break\n        case '/':\n          this.advance()\n          tokens.push({type: 'RegexLiteral', value: this.readToDelimiter('/')})\n          this.advance()\n          break\n        default:\n          throw new Error(`unexpected character \"${this.current()}\"`)\n      }\n    }\n\n    return tokens\n  }\n\n  private readToDelimiter(delimiter: string): string {\n    let value = ''\n\n    while (this.current() !== delimiter) {\n      if (!this.current()) {\n        throw new Error('unexpected end of input')\n      }\n\n      value += this.current()\n      this.advance()\n    }\n\n    return value\n  }\n\n  private current() {\n    return this.input[this.i]\n  }\n\n  private advance() {\n    this.i += 1\n\n    return this.input[this.i]\n  }\n\n  private expect(...expected: string[]) {\n    const actual = this.input[this.i]\n\n    if (!expected.includes(actual)) {\n      throw new Error(\n        `expected one of \"${JSON.stringify(expected)}\" but got \"${actual}\"`\n      )\n    }\n\n    return actual\n  }\n}\n\nclass Parser {\n  private input: string\n  private i: number = 0\n  private tokens: Token[]\n\n  private static PRECEDENCES = {\n    ')': 0,\n    and: 1,\n    or: 1,\n    '==': 2,\n    '!=': 2,\n    '=~': 2,\n    '!~': 2,\n    '(': 3,\n  }\n\n  constructor(input) {\n    this.input = input\n  }\n\n  public parse(): SearchExpr {\n    this.tokens = new Lexer(this.input).lex()\n\n    return this.parseExpr()\n  }\n\n  private parseExpr(precedence = 0): SearchExpr {\n    let left\n\n    switch (this.current().type) {\n      case 'StringLiteral':\n        left = this.parseStringLiteral()\n        break\n      case 'RegexLiteral':\n        left = this.parseRegexLiteral()\n        break\n\n      case '(':\n        left = this.parseGroupedExpr()\n        break\n\n      default:\n        throw new Error(`unexpected token ${this.current().type}`)\n    }\n\n    while (!!this.next() && precedence < this.nextPrecedence()) {\n      this.advance()\n\n      switch (left.type) {\n        case 'StringLiteral':\n          left = this.parseTagExpr(left)\n          break\n\n        case 'BooleanExpression':\n        case 'TagExpression':\n          left = this.parseBooleanExpr(left)\n          break\n\n        default:\n          throw new Error(`unexpected node ${left.type}`)\n      }\n    }\n\n    return left\n  }\n\n  private parseBooleanExpr(left): SearchBooleanExpr {\n    this.expect('and', 'or')\n    const operator = this.current().type as SearchBooleanOperator\n    const precedence = this.currentPrecedence()\n\n    this.advance()\n    const right = this.parseExpr(precedence)\n\n    return {type: 'BooleanExpression', operator, left, right}\n  }\n\n  private parseTagExpr(left): SearchTagExpr {\n    this.expect('==', '!=', '=~', '!~')\n    const operator = this.current().type as SearchTagOperator\n\n    this.advance()\n    const right = operator.endsWith('~')\n      ? this.parseRegexLiteral()\n      : this.parseStringLiteral()\n\n    return {type: 'TagExpression', operator, left, right}\n  }\n\n  private parseStringLiteral(): SearchStringLiteral {\n    this.expect('StringLiteral')\n\n    return this.current() as SearchStringLiteral\n  }\n\n  private parseRegexLiteral(): SearchRegexLiteral {\n    this.expect('RegexLiteral')\n\n    return this.current() as SearchRegexLiteral\n  }\n\n  private parseGroupedExpr(): SearchExpr {\n    this.advance()\n    const expr = this.parseExpr(0)\n    this.advance()\n    this.expect(')')\n    return expr\n  }\n\n  private advance(): void {\n    this.i += 1\n  }\n\n  private current(): Token {\n    return this.tokens[this.i]\n  }\n\n  private next(): Token {\n    return this.tokens[this.i + 1]\n  }\n\n  private currentPrecedence(): number {\n    return Parser.PRECEDENCES[this.tokens[this.i].type]\n  }\n\n  private nextPrecedence(): number {\n    return Parser.PRECEDENCES[this.tokens[this.i + 1].type]\n  }\n\n  private expect(...expectedTypes: Token['type'][]) {\n    const expectedMsg = `expected one of ${JSON.stringify(expectedTypes)} `\n\n    if (!this.current()) {\n      throw new Error(`${expectedMsg} but found nothing`)\n    }\n\n    const actual = this.current().type\n\n    if (!expectedTypes.includes(actual)) {\n      throw new Error(`${expectedMsg} but got ${actual}`)\n    }\n  }\n}\n","// Utils\nimport {parseSearchInput} from 'src/eventViewer/utils/search'\n\n// Types\nimport {Dispatch as ReactDispatch} from 'react'\nimport {RemoteDataState} from 'src/types'\nimport {Row, LoadRows, SearchExpr} from 'src/eventViewer/types'\n\nexport interface State {\n  // All rows currently in the table\n  rows: Row[]\n\n  // The offset to use next time we load data\n  offset: number\n\n  // The number of rows to load next time we load data\n  limit: number\n\n  // The definition of \"now\" when running queries that are relative to \"now\"\n  now: number | null\n\n  // The search text a user has typed into the search bar\n  searchInput: string\n\n  // A parsed representation of the whichever search input is currently being\n  // used to filter results (not necessarily derived from the current text\n  // input, which may not be valid / parseable)\n  searchExpr: SearchExpr | null\n\n  // A timeout ID used to debounce performing the search on user input\n  searchTimeoutID: any\n\n  // Tracks the loading status of the next rows being loading\n  nextRowsStatus: RemoteDataState\n\n  // If the next rows failed to load, this field should contain a\n  // human-friendly error message indicating why the rows failed to load\n  nextRowsErrorMessage: string | null\n\n  // A function that can be used to cancel any rows currently being loaded\n  nextRowsCanceller: null | (() => void)\n\n  // If a user has loaded all the rows that exist\n  hasReachedEnd: boolean\n\n  // The current vertical scroll offset, i.e. how many pixels into the table we\n  // have currently scrolled\n  scrollTop: number\n\n  // When set, the table will render once with this exact vertical scroll\n  // offset, then dispatch an action to set this property to null\n  nextScrollTop: number | null\n}\n\nexport type Action =\n  | {type: 'NEXT_ROWS_LOADED'; rows: Row[]}\n  | {type: 'NEXT_ROWS_FAILED_TO_LOAD'; errorMessage: string}\n  | {type: 'NEXT_ROWS_LOADING'; cancel: () => void; now?: number}\n  | {type: 'SEARCH_TYPED'; searchInput: string}\n  | {type: 'SEARCH_SCHEDULED'; searchTimeoutID: any}\n  | {type: 'SEARCH_STARTED'; cancel: () => void; expr: SearchExpr; now: number}\n  | {type: 'SEARCH_COMPLETED'; rows: Row[]; limit: number}\n  | {type: 'SEARCH_FAILED'; errorMessage: string}\n  | {type: 'SEARCH_CLEARED'; now: number; cancel: () => void}\n  | {type: 'SCROLLED'; scrollTop: number}\n  | {type: 'CONSUMED_NEXT_SCROLL_INDEX'}\n  | {type: 'CLICKED_BACK_TO_TOP'}\n  | {type: 'REFRESHED'; cancel: () => void; now: number}\n\nexport type Dispatch = ReactDispatch<Action>\n\nexport const INITIAL_STATE: State = {\n  rows: [],\n  offset: 0,\n  limit: 100,\n  now: null,\n  nextRowsStatus: RemoteDataState.NotStarted,\n  nextRowsErrorMessage: null,\n  nextRowsCanceller: null,\n  hasReachedEnd: false,\n  searchInput: '',\n  searchExpr: null,\n  searchTimeoutID: null,\n  scrollTop: 0,\n  nextScrollTop: null,\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'NEXT_ROWS_LOADING': {\n      return {\n        ...state,\n        nextRowsStatus: RemoteDataState.Loading,\n        nextRowsCanceller: action.cancel,\n        now: action.now ? action.now : state.now,\n      }\n    }\n\n    case 'NEXT_ROWS_FAILED_TO_LOAD': {\n      return {\n        ...state,\n        nextRowsStatus: RemoteDataState.Error,\n        nextRowsErrorMessage: action.errorMessage,\n      }\n    }\n\n    case 'NEXT_ROWS_LOADED': {\n      const rows = [...state.rows, ...action.rows]\n\n      return {\n        ...state,\n        rows,\n        nextRowsStatus: RemoteDataState.Done,\n        offset: rows.length,\n        hasReachedEnd: action.rows.length === 0,\n      }\n    }\n\n    case 'SEARCH_TYPED': {\n      return {...state, searchInput: action.searchInput}\n    }\n\n    case 'SEARCH_SCHEDULED': {\n      return {...state, searchTimeoutID: action.searchTimeoutID}\n    }\n\n    case 'SEARCH_STARTED': {\n      return {\n        ...state,\n        rows: [],\n        offset: 0,\n        now: action.now,\n        searchExpr: action.expr,\n        nextRowsCanceller: action.cancel,\n        nextRowsStatus: RemoteDataState.Loading,\n        hasReachedEnd: false,\n      }\n    }\n\n    case 'SEARCH_COMPLETED': {\n      return {\n        ...state,\n        rows: action.rows,\n        nextRowsStatus: RemoteDataState.Done,\n        offset: action.rows.length,\n        hasReachedEnd: action.rows.length < action.limit,\n      }\n    }\n\n    case 'SEARCH_FAILED': {\n      return {\n        ...state,\n        nextRowsStatus: RemoteDataState.Error,\n        nextRowsErrorMessage: action.errorMessage,\n      }\n    }\n\n    case 'SEARCH_CLEARED': {\n      return {\n        ...state,\n        rows: [],\n        offset: 0,\n        now: action.now,\n        nextRowsStatus: RemoteDataState.Loading,\n        nextScrollTop: 0,\n        hasReachedEnd: false,\n        nextRowsCanceller: action.cancel,\n        searchExpr: null,\n      }\n    }\n\n    case 'SCROLLED': {\n      return {...state, scrollTop: action.scrollTop}\n    }\n\n    case 'CLICKED_BACK_TO_TOP': {\n      return {...state, nextScrollTop: 0}\n    }\n\n    case 'CONSUMED_NEXT_SCROLL_INDEX': {\n      return {...state, nextScrollTop: null}\n    }\n\n    case 'REFRESHED': {\n      return {\n        ...state,\n        rows: [],\n        offset: 0,\n        now: action.now,\n        nextRowsStatus: RemoteDataState.Loading,\n        hasReachedEnd: false,\n        nextRowsCanceller: action.cancel,\n        nextScrollTop: 0,\n      }\n    }\n\n    default: {\n      const neverAction: never = action\n\n      throw new Error(`unhandled action \"${(neverAction as any).type}\"`)\n    }\n  }\n}\n\nexport const loadNextRows = async (\n  state: State,\n  dispatch: Dispatch,\n  loadRows: LoadRows,\n  now?: number\n): Promise<void> => {\n  if (\n    state.nextRowsStatus === RemoteDataState.Loading ||\n    state.nextRowsStatus === RemoteDataState.Error ||\n    state.hasReachedEnd\n  ) {\n    return\n  }\n\n  try {\n    const {promise, cancel} = loadRows({\n      offset: state.offset,\n      limit: state.limit,\n      until: now || state.now,\n      filter: state.searchExpr,\n    })\n\n    dispatch({type: 'NEXT_ROWS_LOADING', cancel, now})\n\n    const rows = await promise\n\n    dispatch({type: 'NEXT_ROWS_LOADED', rows})\n  } catch (error) {\n    if (error.name === 'CancellationError') {\n      return\n    }\n\n    dispatch({type: 'NEXT_ROWS_FAILED_TO_LOAD', errorMessage: error.message})\n  }\n}\n\nexport const search = (\n  state: State,\n  dispatch: Dispatch,\n  loadRows: LoadRows,\n  searchInput: string,\n  searchImmediately = false\n) => {\n  clearTimeout(state.searchTimeoutID)\n  dispatch({type: 'SEARCH_TYPED', searchInput})\n\n  let searchExpr: SearchExpr | null = null\n  let parsingFailed = false\n\n  try {\n    searchExpr = parseSearchInput(searchInput)\n  } catch {\n    parsingFailed = true\n  }\n\n  if (parsingFailed || (searchExpr === null && state.searchExpr === null)) {\n    return\n  } else if (searchExpr === null) {\n    clearSearch(state, dispatch, loadRows)\n  } else if (searchImmediately) {\n    performSearch(state, dispatch, loadRows, searchExpr)\n  } else {\n    const searchTimeoutID = setTimeout(() => {\n      performSearch(state, dispatch, loadRows, searchExpr)\n    }, 500)\n\n    dispatch({type: 'SEARCH_SCHEDULED', searchTimeoutID})\n  }\n}\n\nconst performSearch = async (\n  state: State,\n  dispatch: Dispatch,\n  loadRows: LoadRows,\n  searchExpr: SearchExpr\n): Promise<void> => {\n  try {\n    if (state.nextRowsCanceller) {\n      // Cancel existing pending search, if there is one\n      state.nextRowsCanceller()\n    }\n\n    const now = Date.now()\n    const limit = state.limit\n\n    const {promise, cancel} = loadRows({\n      offset: 0,\n      limit,\n      until: now,\n      filter: searchExpr,\n    })\n\n    dispatch({type: 'SEARCH_STARTED', cancel, now, expr: searchExpr})\n\n    const rows = await promise\n\n    dispatch({type: 'SEARCH_COMPLETED', rows, limit})\n  } catch (error) {\n    if (error.name === 'CancellationError') {\n      return\n    }\n\n    dispatch({type: 'SEARCH_FAILED', errorMessage: error.message})\n  }\n}\n\nconst clearSearch = async (\n  state: State,\n  dispatch: Dispatch,\n  loadRows: LoadRows\n): Promise<void> => {\n  try {\n    if (state.nextRowsCanceller) {\n      // Cancel existing pending search, if there is one\n      state.nextRowsCanceller()\n    }\n\n    const now = Date.now()\n\n    const {promise, cancel} = loadRows({\n      offset: 0,\n      limit: state.limit,\n      until: now,\n    })\n\n    dispatch({type: 'SEARCH_CLEARED', now, cancel})\n\n    const rows = await promise\n\n    dispatch({type: 'NEXT_ROWS_LOADED', rows})\n  } catch (error) {\n    if (error.name === 'CancellationError') {\n      return\n    }\n\n    dispatch({type: 'NEXT_ROWS_FAILED_TO_LOAD', errorMessage: error.message})\n  }\n}\n\nexport const refresh = async (\n  state: State,\n  dispatch: Dispatch,\n  loadRows: LoadRows\n): Promise<void> => {\n  try {\n    if (state.nextRowsCanceller) {\n      // Cancel existing pending fetch, if one exists\n      state.nextRowsCanceller()\n    }\n\n    const now = Date.now()\n\n    const {promise, cancel} = loadRows({\n      offset: 0,\n      limit: state.limit,\n      until: now,\n      filter: state.searchExpr,\n    })\n\n    dispatch({type: 'REFRESHED', cancel, now})\n\n    const rows = await promise\n\n    dispatch({type: 'NEXT_ROWS_LOADED', rows})\n  } catch (error) {\n    if (error.name === 'CancellationError') {\n      return\n    }\n\n    dispatch({type: 'NEXT_ROWS_FAILED_TO_LOAD', errorMessage: error.message})\n  }\n}\n\n/*\n  Given the current state, how many rows should be rendered in the table?\n*/\nexport const getRowCount = (state: State): number => {\n  const isInitialLoad =\n    state.rows.length === 0 &&\n    state.offset === 0 &&\n    state.nextRowsStatus === RemoteDataState.Loading\n\n  if (isInitialLoad && state.nextRowsStatus !== RemoteDataState.Error) {\n    return state.rows.length + 100\n  }\n\n  return state.rows.length + 1\n}\n","// Libraries\nimport {useEffect, useReducer, FC, ReactElement} from 'react'\n\n// Utils\nimport {useMountedLayoutEffect} from 'src/shared/utils/useMountedEffect'\nimport {\n  reducer,\n  INITIAL_STATE,\n  loadNextRows,\n  refresh,\n} from 'src/eventViewer/components/EventViewer.reducer'\n\n// Types\nimport {LoadRows, EventViewerChildProps} from 'src/eventViewer/types'\nimport {State} from 'src/eventViewer/components/EventViewer.reducer'\n\ninterface Props {\n  loadRows: LoadRows\n  children: (props: EventViewerChildProps) => ReactElement\n  initialState?: Partial<State>\n}\n\nconst EventViewer: FC<Props> = ({loadRows, children, initialState}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...INITIAL_STATE,\n    ...initialState,\n  })\n\n  useEffect(() => {\n    loadNextRows(state, dispatch, loadRows, Date.now())\n  }, [])\n\n  useMountedLayoutEffect(() => {\n    refresh(state, dispatch, loadRows)\n  }, [loadRows])\n\n  return children({state, dispatch, loadRows})\n}\n\nexport default EventViewer\n","// Libraries\nimport React, {useState, FC} from 'react'\nimport {\n  Input,\n  Icon,\n  IconFont,\n  ComponentStatus,\n  DropdownMenu,\n  DropdownDivider,\n  DropdownItem,\n  ClickOutside,\n} from '@influxdata/clockface'\n\n// Actions\nimport {search} from 'src/eventViewer/components/EventViewer.reducer'\n\n// Utils\nimport {isSearchInputValid} from 'src/eventViewer/utils/search'\n\n// Types\nimport {EventViewerChildProps} from 'src/eventViewer/types'\n\nconst SUGGESTION_CLASS = 'status-search-bar--suggestion'\n\ntype Props = EventViewerChildProps & {\n  placeholder?: string\n  exampleSearches: string[]\n}\n\nconst SearchBar: FC<Props> = ({\n  placeholder,\n  exampleSearches,\n  state,\n  dispatch,\n  loadRows,\n}) => {\n  const [isFocused, setIsFocused] = useState(false)\n\n  const inputStatus = isSearchInputValid(state.searchInput)\n    ? ComponentStatus.Default\n    : ComponentStatus.Error\n\n  const handleClickSuggestion = (suggestion: string) => {\n    search(state, dispatch, loadRows, suggestion, true)\n    setIsFocused(false)\n  }\n\n  const handleClickOutside = e => {\n    const didClickSuggestion =\n      e.target.classList.contains(SUGGESTION_CLASS) ||\n      e.target.parentNode.classList.contains(SUGGESTION_CLASS)\n\n    if (!didClickSuggestion) {\n      setIsFocused(false)\n    }\n  }\n\n  return (\n    <div className=\"status-search-bar\">\n      <ClickOutside onClickOutside={handleClickOutside}>\n        <Input\n          icon={IconFont.Search}\n          placeholder={placeholder}\n          value={state.searchInput}\n          status={inputStatus}\n          onChange={e => search(state, dispatch, loadRows, e.target.value)}\n          onFocus={() => setIsFocused(true)}\n        />\n      </ClickOutside>\n      {state.searchInput.trim() !== '' && (\n        <div\n          className=\"status-search-bar--clear\"\n          onClick={() => search(state, dispatch, loadRows, '', true)}\n        >\n          <Icon glyph={IconFont.Remove} />\n        </div>\n      )}\n      {isFocused && (\n        <DropdownMenu\n          className=\"status-search-bar--suggestions\"\n          noScrollX={true}\n          noScrollY={true}\n        >\n          <DropdownDivider text=\"Examples\" />\n          {exampleSearches.map(s => (\n            <DropdownItem\n              key={s}\n              value={s}\n              className={SUGGESTION_CLASS}\n              onClick={handleClickSuggestion}\n            >\n              {s}\n            </DropdownItem>\n          ))}\n        </DropdownMenu>\n      )}\n    </div>\n  )\n}\n\nexport default SearchBar\n","// Libraries\nimport React, {FC} from 'react'\n\n// Types\nimport {StatusRow, NotificationRow} from 'src/types'\n\ninterface Props {\n  row: StatusRow | NotificationRow\n}\n\nconst LevelTableField: FC<Props> = ({row: {level}}) => {\n  return (\n    <div\n      className={`level-table-field level-table-field--${level.toLowerCase()}`}\n    >\n      {level}\n    </div>\n  )\n}\n\nexport default LevelTableField\n","// Libraries\nimport React, {FC} from 'react'\nimport moment from 'moment'\n\n// Constants\nimport {DEFAULT_TIME_FORMAT} from 'src/shared/constants'\n\n// Types\nimport {StatusRow, NotificationRow} from 'src/types'\n\ninterface Props {\n  row: StatusRow | NotificationRow\n}\n\nconst TimeTableField: FC<Props> = ({row: {time}}) => {\n  return (\n    <div className=\"time-table-field\">\n      {moment.utc(time).format(DEFAULT_TIME_FORMAT)}\n    </div>\n  )\n}\n\nexport default TimeTableField\n","// Libraries\nimport React, {FC} from 'react'\n\n// Types\nimport {Fields} from 'src/eventViewer/types'\n\ninterface Props {\n  fields: Fields\n}\n\nconst Header: FC<Props> = ({fields}) => {\n  return (\n    <div className=\"event-table-header\">\n      {fields.map(({rowKey, columnWidth, columnName}) => {\n        const style = {flexBasis: `${columnWidth}px`}\n\n        return (\n          <div key={rowKey} className=\"event-table-header--field\" style={style}>\n            {columnName}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Header\n","import React, {FC, CSSProperties} from 'react'\n\nimport {Row, Fields} from 'src/eventViewer/types'\n\ninterface Props {\n  row: Row\n  style: CSSProperties\n  fields: Fields\n}\n\nconst TableRow: FC<Props> = ({row, style, fields}) => {\n  return (\n    <div style={style}>\n      <div className=\"event-row\">\n        {fields.map(({component: Component, columnWidth, rowKey}) => {\n          const style = {flexBasis: `${columnWidth}px`}\n\n          let content\n\n          if (row[rowKey] === undefined) {\n            content = null\n          } else if (Component) {\n            content = <Component key={rowKey} row={row} />\n          } else {\n            content = String(row[rowKey])\n          }\n\n          return (\n            <div key={rowKey} className=\"event-row--field\" style={style}>\n              {content}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default TableRow\n","// Libraries\nimport React, {FC, CSSProperties} from 'react'\nimport {range} from 'lodash'\n\nconst PLACEHOLDER_MIN_WIDTH = 80\nconst PLACEHOLDER_MAX_WIDTH = 140\nconst PLACEHOLDER_HEIGHT = 10\nconst RANDOM_NUMBERS = range(30).map(_ => Math.random())\n\ninterface Props {\n  index: number\n  style: CSSProperties\n}\n\nconst LoadingRow: FC<Props> = ({index, style}) => {\n  const randomNumber = RANDOM_NUMBERS[index % RANDOM_NUMBERS.length]\n\n  const width = Math.floor(\n    PLACEHOLDER_MIN_WIDTH +\n      randomNumber * (PLACEHOLDER_MAX_WIDTH - PLACEHOLDER_MIN_WIDTH)\n  )\n\n  return (\n    <div style={style}>\n      <div className=\"event-loading-row\">\n        <div\n          className=\"event-loading-row--placeholder\"\n          style={{\n            width: `${width}px`,\n            height: `${PLACEHOLDER_HEIGHT}px`,\n            animationDelay: `${(index % 5) / 2}s`,\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default LoadingRow\n","import React, {CSSProperties, FC} from 'react'\n\ninterface Props {\n  style: CSSProperties\n}\n\nconst FooterRow: FC<Props> = ({style}) => {\n  return (\n    <div style={style}>\n      <div className=\"event-footer-row\">No more data found.</div>\n    </div>\n  )\n}\n\nexport default FooterRow\n","import React, {CSSProperties, FC} from 'react'\n\ninterface Props {\n  style: CSSProperties\n  index: number\n}\n\nconst ErrorRow: FC<Props> = ({style, index}) => {\n  return (\n    <div style={style}>\n      <div className=\"event-error-row\">\n        {index === 0 ? 'Failed to load :(' : 'Failed to load next rows :('}\n      </div>\n    </div>\n  )\n}\n\nexport default ErrorRow\n","// Libraries\nimport React, {useLayoutEffect, FC} from 'react'\nimport {AutoSizer, InfiniteLoader, List} from 'react-virtualized'\n\n// Components\nimport Header from 'src/eventViewer/components/Header'\nimport TableRow from 'src/eventViewer/components/TableRow'\nimport LoadingRow from 'src/eventViewer/components/LoadingRow'\nimport FooterRow from 'src/eventViewer/components/FooterRow'\nimport ErrorRow from 'src/eventViewer/components/ErrorRow'\n\n// Utils\nimport {\n  loadNextRows,\n  getRowCount,\n} from 'src/eventViewer/components/EventViewer.reducer'\n\n// Types\nimport {EventViewerChildProps, Fields} from 'src/eventViewer/types'\nimport {RemoteDataState} from 'src/types'\n\ntype Props = EventViewerChildProps & {\n  fields: Fields\n}\n\nconst EventTable: FC<Props> = ({state, dispatch, loadRows, fields}) => {\n  const rowCount = getRowCount(state)\n\n  const isRowLoaded = ({index}) => !!state.rows[index]\n\n  const loadMoreRows = () => loadNextRows(state, dispatch, loadRows)\n\n  const rowRenderer = ({key, index, style}) => {\n    const isLastRow = index === state.rows.length\n\n    if (isLastRow && state.nextRowsStatus === RemoteDataState.Error) {\n      return <ErrorRow key={key} index={index} style={style} />\n    }\n\n    if (isLastRow && state.hasReachedEnd) {\n      return <FooterRow key={key} style={style} />\n    }\n\n    if (!state.rows[index]) {\n      return <LoadingRow key={key} index={index} style={style} />\n    }\n\n    return (\n      <TableRow\n        key={key}\n        style={style}\n        row={state.rows[index]}\n        fields={fields}\n      />\n    )\n  }\n\n  const scrollTop =\n    state.nextScrollTop === null ? undefined : state.nextScrollTop\n\n  useLayoutEffect(() => {\n    dispatch({type: 'CONSUMED_NEXT_SCROLL_INDEX'})\n  }, [scrollTop, dispatch])\n\n  return (\n    <div className=\"event-table\">\n      <Header fields={fields} />\n      <div className=\"event-table--table\">\n        <AutoSizer>\n          {({width, height}) => {\n            if (!width || !height) {\n              return null\n            }\n\n            return (\n              <InfiniteLoader\n                isRowLoaded={isRowLoaded}\n                loadMoreRows={loadMoreRows}\n                rowCount={rowCount}\n              >\n                {({onRowsRendered, registerChild}) => (\n                  <List\n                    width={width}\n                    height={height}\n                    ref={registerChild}\n                    onRowsRendered={onRowsRendered}\n                    rowCount={rowCount}\n                    rowHeight={38}\n                    rowRenderer={rowRenderer}\n                    overscanRowCount={20}\n                    scrollTop={scrollTop}\n                    onScroll={({scrollTop}) =>\n                      dispatch({type: 'SCROLLED', scrollTop})\n                    }\n                  />\n                )}\n              </InfiniteLoader>\n            )\n          }}\n        </AutoSizer>\n      </div>\n    </div>\n  )\n}\n\nexport default EventTable\n","// Libraries\nimport React, {FC} from 'react'\nimport {Button, IconFont} from '@influxdata/clockface'\n\n// Utils\nimport {refresh} from 'src/eventViewer/components/EventViewer.reducer'\n\n// Types\nimport {EventViewerChildProps} from 'src/eventViewer/types'\n\nconst BackToTopButton: FC<EventViewerChildProps> = ({\n  state,\n  dispatch,\n  loadRows,\n}) => {\n  if (state.scrollTop === 0) {\n    return (\n      <Button\n        className=\"back-to-top-button\"\n        icon={IconFont.Refresh}\n        text=\"Refresh\"\n        onClick={() => refresh(state, dispatch, loadRows)}\n      />\n    )\n  }\n\n  return (\n    <Button\n      className=\"back-to-top-button\"\n      icon={IconFont.CaretUp}\n      text=\"Back to Top\"\n      onClick={() => dispatch({type: 'CLICKED_BACK_TO_TOP'})}\n    />\n  )\n}\n\nexport default BackToTopButton\n","// Libraries\nimport React, {FC} from 'react'\nimport {SelectGroup} from '@influxdata/clockface'\n\n// Components\nimport BackToTopButton from 'src/eventViewer/components/BackToTopButton'\nimport SearchBar from 'src/alerting/components/SearchBar'\n\n// Types\nimport {AlertHistoryType} from 'src/types'\nimport {EventViewerChildProps} from 'src/eventViewer/types'\n\n// Constants\nimport {\n  EXAMPLE_STATUS_SEARCHES,\n  EXAMPLE_NOTIFICATION_SEARCHES,\n} from 'src/alerting/constants/history'\n\ninterface Props {\n  historyType: AlertHistoryType\n  onSetHistoryType: (t: AlertHistoryType) => void\n  eventViewerProps: EventViewerChildProps\n}\n\nconst AlertHistoryControls: FC<Props> = ({\n  eventViewerProps,\n  historyType,\n  onSetHistoryType,\n}) => {\n  return (\n    <div className=\"alert-history-controls\">\n      <div className=\"alert-history-controls--left\">\n        <SelectGroup className=\"alert-history-controls--switcher\">\n          <SelectGroup.Option\n            name=\"alert-history-mode\"\n            id=\"alert-history-mode--statuses\"\n            value=\"statuses\"\n            onClick={() => onSetHistoryType('statuses')}\n            titleText=\"View Status History\"\n            active={historyType === 'statuses'}\n          >\n            Statuses\n          </SelectGroup.Option>\n          <SelectGroup.Option\n            name=\"alert-history-mode\"\n            id=\"alert-history-mode--notifications\"\n            value=\"notifications\"\n            onClick={() => onSetHistoryType('notifications')}\n            titleText=\"View Notification History\"\n            active={historyType === 'notifications'}\n          >\n            Notifications\n          </SelectGroup.Option>\n        </SelectGroup>\n      </div>\n      <div className=\"alert-history-controls--right\">\n        <BackToTopButton {...eventViewerProps} />\n        <SearchBar\n          {...eventViewerProps}\n          placeholder={`Search ${historyType}...`}\n          exampleSearches={\n            historyType === 'statuses'\n              ? EXAMPLE_STATUS_SEARCHES\n              : EXAMPLE_NOTIFICATION_SEARCHES\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default AlertHistoryControls\n","import {browserHistory} from 'react-router'\nimport qs from 'qs'\nimport {pickBy} from 'lodash'\n\nexport const readQueryParams = (): {[key: string]: any} => {\n  return qs.parse(window.location.search, {ignoreQueryPrefix: true})\n}\n\n/*\n  Given an object of query parameter keys and values, updates any corresponding\n  query parameters in the URL to match. If the supplied object has a null value\n  for a key, that query parameter will be removed from the URL altogether.\n*/\nexport const updateQueryParams = (updatedQueryParams: object): void => {\n  const currentQueryString = window.location.search\n  const newQueryParams = pickBy(\n    {\n      ...qs.parse(currentQueryString, {ignoreQueryPrefix: true}),\n      ...updatedQueryParams,\n    },\n    v => !!v\n  )\n\n  const newQueryString = qs.stringify(newQueryParams)\n\n  browserHistory.replace(`${window.location.pathname}?${newQueryString}`)\n}\n","// Libraries\nimport {useEffect, FC} from 'react'\n\n// Utils\nimport {updateQueryParams} from 'src/shared/utils/queryParams'\n\n// Constants\nimport {\n  HISTORY_TYPE_QUERY_PARAM,\n  SEARCH_QUERY_PARAM,\n} from 'src/alerting/constants/history'\n\n// Types\nimport {AlertHistoryType} from 'src/types'\n\ninterface Props {\n  searchInput: string\n  historyType: AlertHistoryType\n}\n\nconst AlertHistoryQueryParams: FC<Props> = ({searchInput, historyType}) => {\n  useEffect(() => {\n    updateQueryParams({\n      [SEARCH_QUERY_PARAM]: searchInput || null,\n      [HISTORY_TYPE_QUERY_PARAM]: historyType || null,\n    })\n  }, [searchInput, historyType])\n\n  return null\n}\n\nexport default AlertHistoryQueryParams\n","// Libraries\nimport {cloneDeep} from 'lodash'\nimport {fromFlux} from '@influxdata/giraffe'\n\n// Utils\nimport {runQuery, RunQueryResult} from 'src/shared/apis/query'\nimport {parseSearchInput, searchExprToFlux} from 'src/eventViewer/utils/search'\nimport {findNodes} from 'src/shared/utils/ast'\nimport {readQueryParams} from 'src/shared/utils/queryParams'\n\n// Constants\nimport {\n  HISTORY_TYPE_QUERY_PARAM,\n  SEARCH_QUERY_PARAM,\n} from 'src/alerting/constants/history'\nimport {MONITORING_BUCKET} from 'src/alerting/constants'\n\n// Types\nimport {State as EventViewerState} from 'src/eventViewer/components/EventViewer.reducer'\n\nimport {\n  CancelBox,\n  StatusRow,\n  NotificationRow,\n  AlertHistoryType,\n} from 'src/types'\n\nimport {\n  LoadRowsOptions,\n  Row,\n  SearchExpr,\n  SearchTagExpr,\n} from 'src/eventViewer/types'\n\nexport const loadStatuses = (\n  orgID: string,\n  {offset, limit, since, until, filter}: LoadRowsOptions\n): CancelBox<StatusRow[]> => {\n  const start = since ? Math.round(since / 1000) : '-60d'\n  const fluxFilter = filter ? searchExprToFlux(renameTagKeys(filter)) : null\n\n  const query = `\nfrom(bucket: \"${MONITORING_BUCKET}\")\n  |> range(start: ${start}, stop: ${Math.round(until / 1000)})\n  |> filter(fn: (r) => r._measurement == \"statuses\" and r._field == \"_message\")\n  |> keep(columns: [\"_time\", \"_value\", \"_check_id\", \"_check_name\", \"_level\"])\n  |> rename(columns: {\"_time\": \"time\",\n                      \"_value\": \"message\",\n                      \"_check_id\": \"checkID\",\n                      \"_check_name\": \"checkName\",\n                      \"_level\": \"level\"})\n  |> group()${fluxFilter ? `\\n  |> filter(fn: (r) => ${fluxFilter})` : ''}\n  |> sort(columns: [\"time\"], desc: true)\n  |> limit(n: ${limit}, offset: ${offset})\n`\n\n  return processResponse(runQuery(orgID, query)) as CancelBox<StatusRow[]>\n}\n\nexport const loadNotifications = (\n  orgID: string,\n  {offset, limit, since, until, filter}: LoadRowsOptions\n): CancelBox<NotificationRow[]> => {\n  const start = since ? Math.round(since / 1000) : '-60d'\n  const fluxFilter = filter ? searchExprToFlux(renameTagKeys(filter)) : null\n\n  const query = `\nfrom(bucket: \"${MONITORING_BUCKET}\")\n  |> range(start: ${start}, stop: ${Math.round(until / 1000)})\n  |> filter(fn: (r) => r._measurement == \"notifications\")\n  |> filter(fn: (r) => r._field !~ /^_/)\n  |> keep(columns: [\"_time\",\n                    \"_check_id\",\n                    \"_check_name\",\n                    \"_notification_rule_id\",\n                    \"_notification_rule_name\",\n                    \"_notification_endpoint_id\",\n                    \"_notification_endpoint_name\",\n                    \"_level\",\n                    \"_sent\"])\n  |> rename(columns: {\"_time\": \"time\",\n                      \"_check_id\": \"checkID\",\n                      \"_check_name\": \"checkName\",\n                      \"_notification_rule_id\": \"notificationRuleID\",\n                      \"_notification_rule_name\": \"notificationRuleName\",\n                      \"_notification_endpoint_id\": \"notificationEndpointID\",\n                      \"_notification_endpoint_name\": \"notificationEndpointName\",\n                      \"_level\": \"level\",\n                      \"_sent\": \"sent\"})\n  |> group()${fluxFilter ? `\\n  |> filter(fn: (r) => ${fluxFilter})` : ''}\n  |> sort(columns: [\"time\"], desc: true)\n  |> limit(n: ${limit}, offset: ${offset})\n`\n\n  return processResponse(runQuery(orgID, query)) as CancelBox<NotificationRow[]>\n}\n\n/*\n  Rename the tag keys used in a search term to match the precise tag keys we\n  query using Flux.\n\n  For example if a user writes:\n\n      \"notification rule\" == \"my rule\"\n\n  Then we will rewrite \"notification rule\" as \"notificationRule\". The following\n  tag keys would also be rewritten as \"notificationRule\":\n\n  - \"notificationRule\"\n  - \"rule\"\n  - \"notification_rule\"\n  - \"_notification_rule\"\n\n  The rewrite rules for the \"notificationEndpoint\" work similarly.\n*/\nconst renameTagKeys = (searchExpr: SearchExpr) => {\n  const rewrittenExpr = cloneDeep(searchExpr)\n\n  const tagExprNodes: SearchTagExpr[] = findNodes(\n    rewrittenExpr,\n    n => n && n.type === 'TagExpression'\n  )\n\n  const tagKeyNodes = tagExprNodes.map(n => n.left)\n\n  for (const node of tagKeyNodes) {\n    const normal = node.value\n      .trim()\n      .toLowerCase()\n      .replace(' ', '')\n      .replace('_', '')\n\n    if (normal === 'notificationrule' || normal === 'rule') {\n      node.value = 'notificationRule'\n    } else if (normal === 'notificationEndpoint' || normal === 'endpoint') {\n      node.value = 'notificationEndpoint'\n    }\n  }\n\n  return rewrittenExpr\n}\n\n/*\n  Convert a Flux CSV response into a list of objects.\n*/\nexport const processResponse = ({\n  promise: queryPromise,\n  cancel,\n}: CancelBox<RunQueryResult>): CancelBox<Row[]> => {\n  const promise = queryPromise.then<Row[]>(resp => {\n    if (resp.type !== 'SUCCESS') {\n      return Promise.reject(new Error(resp.message))\n    }\n\n    const {table} = fromFlux(resp.csv)\n    const rows: Row[] = []\n\n    for (let i = 0; i < table.length; i++) {\n      const row = {}\n\n      for (const key of table.columnKeys) {\n        row[key] = table.getColumn(key)[i]\n      }\n\n      rows.push(row)\n    }\n\n    return rows\n  })\n\n  return {\n    promise,\n    cancel,\n  }\n}\n\nexport const getInitialHistoryType = (): AlertHistoryType => {\n  return readQueryParams()[HISTORY_TYPE_QUERY_PARAM] || 'statuses'\n}\n\nexport const getInitialState = (): Partial<EventViewerState> => {\n  const searchInput = readQueryParams()[SEARCH_QUERY_PARAM]\n\n  if (!searchInput) {\n    return {}\n  }\n\n  try {\n    const searchExpr = parseSearchInput(searchInput)\n\n    return {searchInput, searchExpr}\n  } catch {\n    return {searchInput}\n  }\n}\n","import {AppState, Check} from 'src/types'\n\nexport const getCheck = (state: AppState, id: string): Check => {\n  return state.resources.checks.byID[id] || null\n}\n\nexport const getCheckIDs = (state: AppState): {[x: string]: boolean} => {\n  return state.resources.checks.allIDs.reduce(\n    (acc, id) => ({...acc, [id]: true}),\n    {}\n  )\n}\n","import {AppState} from 'src/types'\n\nexport const getEndpointIDs = (state: AppState): {[x: string]: boolean} => {\n  return state.resources.endpoints.allIDs.reduce(\n    (acc, id) => ({...acc, [id]: true}),\n    {}\n  )\n}\n","import {AppState} from 'src/types'\n\nexport const getRuleIDs = (state: AppState): {[x: string]: boolean} => {\n  return state.resources.rules.allIDs.reduce(\n    (acc, ruleID) => ({...acc, [ruleID]: true}),\n    {}\n  )\n}\n","// Libraries\nimport React, {useMemo, useState, FC, createContext} from 'react'\nimport {Page} from '@influxdata/clockface'\nimport {connect} from 'react-redux'\n\n// Components\nimport EventViewer from 'src/eventViewer/components/EventViewer'\nimport EventTable from 'src/eventViewer/components/EventTable'\nimport AlertHistoryControls from 'src/alerting/components/AlertHistoryControls'\nimport AlertHistoryQueryParams from 'src/alerting/components/AlertHistoryQueryParams'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Constants\nimport {\n  STATUS_FIELDS,\n  NOTIFICATION_FIELDS,\n} from 'src/alerting/constants/history'\n\n// Utils\nimport {\n  loadStatuses,\n  loadNotifications,\n  getInitialHistoryType,\n  getInitialState,\n} from 'src/alerting/utils/history'\nimport {getCheckIDs} from 'src/checks/selectors'\nimport {getEndpointIDs} from 'src/notifications/endpoints/selectors'\nimport {getRuleIDs} from 'src/notifications/rules/selectors'\n\n// Types\nimport {ResourceIDs} from 'src/checks/reducers'\nimport {ResourceType, AlertHistoryType, AppState} from 'src/types'\n\nexport const ResourceIDsContext = createContext<ResourceIDs>(null)\n\ninterface OwnProps {\n  params: {orgID: string}\n}\n\ninterface StateProps {\n  resourceIDs: ResourceIDs\n}\n\ntype Props = OwnProps & StateProps\n\nconst AlertHistoryIndex: FC<Props> = ({params: {orgID}, resourceIDs}) => {\n  const [historyType, setHistoryType] = useState<AlertHistoryType>(\n    getInitialHistoryType()\n  )\n\n  const loadRows = useMemo(() => {\n    return historyType === 'statuses'\n      ? options => loadStatuses(orgID, options)\n      : options => loadNotifications(orgID, options)\n  }, [orgID, historyType])\n\n  const fields =\n    historyType === 'statuses' ? STATUS_FIELDS : NOTIFICATION_FIELDS\n\n  return (\n    <GetResources\n      resources={[\n        ResourceType.Checks,\n        ResourceType.NotificationEndpoints,\n        ResourceType.NotificationRules,\n      ]}\n    >\n      <ResourceIDsContext.Provider value={resourceIDs}>\n        <EventViewer loadRows={loadRows} initialState={getInitialState()}>\n          {props => (\n            <Page\n              titleTag=\"Check Statuses | InfluxDB 2.0\"\n              className=\"alert-history-page\"\n            >\n              <Page.Header fullWidth={true}>\n                <div className=\"alert-history-page--header\">\n                  <Page.Title\n                    title=\"Check Statuses\"\n                    testID=\"alert-history-title\"\n                  />\n                  <AlertHistoryQueryParams\n                    searchInput={props.state.searchInput}\n                    historyType={historyType}\n                  />\n                  <AlertHistoryControls\n                    historyType={historyType}\n                    onSetHistoryType={setHistoryType}\n                    eventViewerProps={props}\n                  />\n                </div>\n              </Page.Header>\n              <Page.Contents\n                fullWidth={true}\n                scrollable={false}\n                className=\"alert-history-page--contents\"\n              >\n                <div className=\"alert-history\">\n                  <EventTable {...props} fields={fields} />\n                </div>\n              </Page.Contents>\n            </Page>\n          )}\n        </EventViewer>\n      </ResourceIDsContext.Provider>\n    </GetResources>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const checkIDs = getCheckIDs(state)\n  const endpointIDs = getEndpointIDs(state)\n  const ruleIDs = getRuleIDs(state)\n\n  const resourceIDs = {\n    checkIDs,\n    endpointIDs,\n    ruleIDs,\n  }\n\n  return {resourceIDs}\n}\n\nexport default connect<StateProps>(mstp)(AlertHistoryIndex)\n","/*\n  Given a route relative to an org, returns an absolute route including the\n  current org.\n\n  For example,\n\n      formatOrgRoute('/alerting/history')\n\n  would return\n\n      '/orgs/someID/alerting/history'\n\n*/\nexport const formatOrgRoute = (route: string): string => {\n  return (\n    location.pathname\n      .split('/')\n      .slice(0, 3)\n      .join('/') + route\n  )\n}\n","// Libraries\nimport React, {FC, useContext} from 'react'\nimport {Link} from 'react-router'\n\n// Context\nimport {ResourceIDsContext} from 'src/alerting/components/AlertHistoryIndex'\n\n// Utils\nimport {formatOrgRoute} from 'src/shared/utils/formatOrgRoute'\n\n// Types\nimport {StatusRow, NotificationRow} from 'src/types'\n\ninterface Props {\n  row: StatusRow | NotificationRow\n}\n\nconst CheckTableField: FC<Props> = ({row: {checkName, checkID}}) => {\n  const {checkIDs} = useContext(ResourceIDsContext)\n\n  if (!checkIDs[checkID]) {\n    return (\n      <div\n        className=\"check-name-field\"\n        title=\"The check that created this no longer exists\"\n      >\n        {checkName}\n      </div>\n    )\n  }\n\n  const href = formatOrgRoute(`/alerting/checks/${checkID}/edit`)\n\n  return <Link to={href}>{checkName}</Link>\n}\n\nexport default CheckTableField\n","// Libraries\nimport React, {FC, useContext} from 'react'\nimport {Link} from 'react-router'\n\n// Context\nimport {ResourceIDsContext} from 'src/alerting/components/AlertHistoryIndex'\n\n// Utils\nimport {formatOrgRoute} from 'src/shared/utils/formatOrgRoute'\n\n// Types\nimport {NotificationRow} from 'src/types'\n\ninterface Props {\n  row: NotificationRow\n}\n\nconst NotificationRuleTableField: FC<Props> = ({\n  row: {notificationRuleName, notificationRuleID},\n}) => {\n  const {ruleIDs} = useContext(ResourceIDsContext)\n  if (!ruleIDs[notificationRuleID]) {\n    return (\n      <div\n        className=\"rule-name-field\"\n        title=\"The rule that created this no longer exists\"\n      >\n        {notificationRuleName}\n      </div>\n    )\n  }\n\n  const href = formatOrgRoute(`/alerting/rules/${notificationRuleID}/edit`)\n\n  return <Link to={href}>{notificationRuleName}</Link>\n}\n\nexport default NotificationRuleTableField\n","// Libraries\nimport React, {FC, useContext} from 'react'\nimport {Link} from 'react-router'\n\n// Context\nimport {ResourceIDsContext} from 'src/alerting/components/AlertHistoryIndex'\n\n// Utils\nimport {formatOrgRoute} from 'src/shared/utils/formatOrgRoute'\n\n// Types\nimport {NotificationRow} from 'src/types'\n\ninterface Props {\n  row: NotificationRow\n}\n\nconst NotificationEndpointTableField: FC<Props> = ({\n  row: {notificationEndpointName, notificationEndpointID},\n}) => {\n  const {endpointIDs} = useContext(ResourceIDsContext)\n\n  if (!endpointIDs[notificationEndpointID]) {\n    return (\n      <div\n        className=\"endpoint-name-field\"\n        title=\"This endpoint no longer exists\"\n      >\n        {notificationEndpointName}\n      </div>\n    )\n  }\n\n  const href = formatOrgRoute(\n    `/alerting/endpoints/${notificationEndpointID}/edit`\n  )\n\n  return <Link to={href}>{notificationEndpointName}</Link>\n}\n\nexport default NotificationEndpointTableField\n","// Libraries\nimport React, {FC} from 'react'\nimport {Icon, IconFont} from '@influxdata/clockface'\n\n// Types\nimport {NotificationRow} from 'src/types'\n\ninterface Props {\n  row: NotificationRow\n}\n\nconst SentTableField: FC<Props> = ({row: {sent}}) => {\n  const modifier = sent === 'true' ? 'sent' : 'not-sent'\n\n  return (\n    <div className={`sent-table-field sent-table-field--${modifier}`}>\n      {sent === 'true' ? (\n        <Icon glyph={IconFont.Checkmark} />\n      ) : (\n        <Icon glyph={IconFont.AlertTriangle} />\n      )}\n    </div>\n  )\n}\n\nexport default SentTableField\n","// Components\nimport LevelTableField from 'src/alerting/components/LevelTableField'\nimport TimeTableField from 'src/alerting/components/TimeTableField'\nimport CheckTableField from 'src/checks/components/CheckTableField'\nimport NotificationRuleTableField from 'src/alerting/components/NotificationRuleTableField'\nimport NotificationEndpointTableField from 'src/notifications/endpoints/components/NotificationEndpointTableField'\nimport SentTableField from 'src/alerting/components/SentTableField'\n\n// Types\nimport {Fields} from 'src/eventViewer/types'\n\nexport const STATUS_FIELDS: Fields = [\n  {\n    rowKey: 'time',\n    columnName: 'Time',\n    columnWidth: 160,\n    component: TimeTableField,\n  },\n  {\n    rowKey: 'level',\n    columnName: 'Level',\n    columnWidth: 50,\n    component: LevelTableField,\n  },\n  {\n    rowKey: 'checkID',\n    columnName: 'Check',\n    columnWidth: 150,\n    component: CheckTableField,\n  },\n  {\n    rowKey: 'message',\n    columnName: 'Message',\n    columnWidth: 300,\n  },\n]\n\nexport const NOTIFICATION_FIELDS: Fields = [\n  {\n    rowKey: 'time',\n    columnName: 'Time',\n    columnWidth: 160,\n    component: TimeTableField,\n  },\n  {\n    rowKey: 'level',\n    columnName: 'Level',\n    columnWidth: 50,\n    component: LevelTableField,\n  },\n  {\n    rowKey: 'checkID',\n    columnName: 'Check',\n    columnWidth: 150,\n    component: CheckTableField,\n  },\n  {\n    rowKey: 'notificationRuleID',\n    columnName: 'Notification Rule',\n    columnWidth: 200,\n    component: NotificationRuleTableField,\n  },\n  {\n    rowKey: 'notificationEndpointID',\n    columnName: 'Notification Endpoint',\n    columnWidth: 200,\n    component: NotificationEndpointTableField,\n  },\n  {\n    rowKey: 'sent',\n    columnName: 'Sent',\n    columnWidth: 50,\n    component: SentTableField,\n  },\n]\n\nexport const EXAMPLE_STATUS_SEARCHES = [\n  '\"check\" == \"my check\"',\n  '\"level\" != \"ok\"',\n  '\"level\" == \"warn\"',\n  '\"level\" == \"crit\"',\n  '\"message\" =~ /exceeded capacity/',\n  '\"check\" == \"my check\" and (\"level\" == \"crit\" or \"level\" == \"warn\")',\n]\n\nexport const EXAMPLE_NOTIFICATION_SEARCHES = [\n  '\"check\" == \"my check\"',\n  '\"level\" == \"crit\"',\n  '\"level\" != \"ok\"',\n  '\"notification rule\" == \"my rule\"',\n]\n\nexport const HISTORY_TYPE_QUERY_PARAM = 'type'\nexport const SEARCH_QUERY_PARAM = 'filter'\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport SearchBar from 'src/alerting/components/SearchBar'\n\n// Types\nimport {EventViewerChildProps} from 'src/eventViewer/types'\n\n// Constants\nimport {EXAMPLE_STATUS_SEARCHES} from 'src/alerting/constants/history'\n\ninterface Props {\n  eventViewerProps: EventViewerChildProps\n}\n\nconst CheckHistoryControls: FC<Props> = ({eventViewerProps}) => {\n  return (\n    <div className=\"alert-history-controls\">\n      <div className=\"alert-history-controls--right\">\n        <SearchBar\n          {...eventViewerProps}\n          placeholder=\"Search statuses...\"\n          exampleSearches={EXAMPLE_STATUS_SEARCHES}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CheckHistoryControls\n","// Libraries\nimport React, {FC, createContext, useState} from 'react'\nimport {get} from 'lodash'\n\n// Components\nimport {Plot} from '@influxdata/giraffe'\nimport CheckPlot from 'src/shared/components/CheckPlot'\nimport EmptyQueryView, {ErrorFormat} from 'src/shared/components/EmptyQueryView'\nimport TimeSeries from 'src/shared/components/TimeSeries'\n\n// Types\nimport {ResourceIDs} from 'src/checks/reducers'\nimport {Check, TimeZone, CheckViewProperties, TimeRange} from 'src/types'\n\n// Utils\nimport {createView} from 'src/views/helpers'\nimport {checkResultsLength} from 'src/shared/utils/vis'\nimport {getTimeRangeVars} from 'src/variables/utils/getTimeRangeVars'\n\nexport const ResourceIDsContext = createContext<ResourceIDs>(null)\n\ninterface OwnProps {\n  check: Check\n  timeZone: TimeZone\n}\n\ntype Props = OwnProps\n\nconst CheckHistoryVisualization: FC<Props> = ({check, timeZone}) => {\n  const view = createView<CheckViewProperties>(get(check, 'threshold'))\n\n  const [submitToken] = useState(0)\n  const [manualRefresh] = useState(0)\n\n  return (\n    <TimeSeries\n      submitToken={submitToken}\n      queries={[check.query]}\n      key={manualRefresh}\n      variables={getTimeRangeVars({lower: 'now() - 5m'} as TimeRange)}\n      check={check}\n    >\n      {({giraffeResult, loading, errorMessage, isInitialFetch, statuses}) => {\n        return (\n          <EmptyQueryView\n            errorFormat={ErrorFormat.Tooltip}\n            errorMessage={errorMessage}\n            hasResults={checkResultsLength(giraffeResult)}\n            loading={loading}\n            isInitialFetch={isInitialFetch}\n            queries={[check.query]}\n            fallbackNote={null}\n          >\n            <CheckPlot\n              checkType={check.type}\n              thresholds={check.type === 'threshold' ? check.thresholds : []}\n              table={get(giraffeResult, 'table')}\n              fluxGroupKeyUnion={get(giraffeResult, 'fluxGroupKeyUnion')}\n              loading={loading}\n              timeZone={timeZone}\n              viewProperties={view.properties}\n              statuses={statuses}\n            >\n              {config => <Plot config={config} />}\n            </CheckPlot>\n          </EmptyQueryView>\n        )\n      }}\n    </TimeSeries>\n  )\n}\n\nexport default CheckHistoryVisualization\n","// Libraries\nimport React, {useMemo, FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Page} from '@influxdata/clockface'\nimport EventViewer from 'src/eventViewer/components/EventViewer'\nimport CheckHistoryControls from 'src/checks/components/CheckHistoryControls'\nimport CheckHistoryVisualization from 'src/checks/components/CheckHistoryVisualization'\nimport AlertHistoryQueryParams from 'src/alerting/components/AlertHistoryQueryParams'\nimport EventTable from 'src/eventViewer/components/EventTable'\nimport GetResources from 'src/resources/components/GetResources'\n\n//Context\nimport {ResourceIDsContext} from 'src/alerting/components/AlertHistoryIndex'\n\n// Constants\nimport {STATUS_FIELDS} from 'src/alerting/constants/history'\n\n// Utils\nimport {loadStatuses, getInitialState} from 'src/alerting/utils/history'\nimport {getCheckIDs} from 'src/checks/selectors'\n\n// Types\nimport {ResourceIDs} from 'src/checks/reducers'\nimport {AppState, Check, TimeZone, ResourceType} from 'src/types'\nimport {getByID} from 'src/resources/selectors'\n\ninterface OwnProps {\n  params: {orgID: string; checkID: string}\n}\n\ninterface StateProps {\n  check: Check\n  timeZone: TimeZone\n  resourceIDs: ResourceIDs\n}\n\ntype Props = OwnProps & StateProps\n\nconst CheckHistory: FC<Props> = ({\n  params: {orgID},\n  check,\n  timeZone,\n  resourceIDs,\n}) => {\n  const loadRows = useMemo(() => options => loadStatuses(orgID, options), [\n    orgID,\n  ])\n  const historyType = 'statuses'\n  const fields = STATUS_FIELDS\n  return (\n    <GetResources resources={[ResourceType.Checks]}>\n      <ResourceIDsContext.Provider value={resourceIDs}>\n        <EventViewer loadRows={loadRows} initialState={getInitialState()}>\n          {props => (\n            <Page\n              titleTag=\"Check Statuses | InfluxDB 2.0\"\n              className=\"alert-history-page\"\n            >\n              <Page.Header fullWidth={true}>\n                <div className=\"alert-history-page--header\">\n                  <Page.Title\n                    title=\"Check Statuses\"\n                    testID=\"alert-history-title\"\n                  />\n                  <AlertHistoryQueryParams\n                    searchInput={props.state.searchInput}\n                    historyType={historyType}\n                  />\n                  <CheckHistoryControls eventViewerProps={props} />\n                </div>\n              </Page.Header>\n              <Page.Contents\n                fullWidth={true}\n                scrollable={false}\n                className=\"alert-history-page--contents\"\n              >\n                <div className=\"alert-history-contents\">\n                  {check.type !== 'custom' && (\n                    <CheckHistoryVisualization\n                      check={check}\n                      timeZone={timeZone}\n                    />\n                  )}\n                  <div className=\"alert-history\">\n                    <EventTable {...props} fields={fields} />\n                  </div>\n                </div>\n              </Page.Contents>\n            </Page>\n          )}\n        </EventViewer>\n      </ResourceIDsContext.Provider>\n    </GetResources>\n  )\n}\n\nconst mstp = (state: AppState, props: OwnProps) => {\n  const timeZone = state.app.persisted.timeZone\n  const checkIDs = getCheckIDs(state)\n  const check = getByID<Check>(state, ResourceType.Checks, props.params.checkID)\n\n  const resourceIDs = {\n    checkIDs,\n    endpointIDs: null,\n    ruleIDs: null,\n  }\n\n  return {check, timeZone, resourceIDs}\n}\n\nexport default connect<StateProps>(mstp)(CheckHistory)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {Context, IconFont} from 'src/clockface'\nimport {ComponentColor} from '@influxdata/clockface'\n\ninterface Props {\n  onView: () => void\n  onDelete: () => void\n  onClone: () => void\n}\n\nconst CheckCardContext: FunctionComponent<Props> = ({\n  onDelete,\n  onClone,\n  onView,\n}) => {\n  return (\n    <Context>\n      <Context.Menu icon={IconFont.EyeOpen}>\n        <Context.Item label=\"View History\" action={onView} />\n      </Context.Menu>\n      <Context.Menu icon={IconFont.Duplicate} color={ComponentColor.Secondary}>\n        <Context.Item label=\"Clone\" action={onClone} />\n      </Context.Menu>\n      <Context.Menu\n        icon={IconFont.Trash}\n        color={ComponentColor.Danger}\n        testID=\"context-delete-menu\"\n      >\n        <Context.Item\n          label=\"Delete\"\n          action={onDelete}\n          testID=\"context-delete-task\"\n        />\n      </Context.Menu>\n    </Context>\n  )\n}\n\nexport default CheckCardContext\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {SlideToggle, ComponentSize, ResourceCard} from '@influxdata/clockface'\nimport CheckCardContext from 'src/checks/components/CheckCardContext'\nimport InlineLabels from 'src/shared/components/inlineLabels/InlineLabels'\nimport LastRunTaskStatus from 'src/shared/components/lastRunTaskStatus/LastRunTaskStatus'\n\n// Constants\nimport {DEFAULT_CHECK_NAME} from 'src/alerting/constants'\nimport {SEARCH_QUERY_PARAM} from 'src/alerting/constants/history'\n\n// Actions and Selectors\nimport {\n  updateCheckDisplayProperties,\n  deleteCheck,\n  addCheckLabel,\n  deleteCheckLabel,\n  cloneCheck,\n} from 'src/checks/actions/thunks'\nimport {notify} from 'src/shared/actions/notifications'\nimport {updateCheckFailed} from 'src/shared/copy/notifications'\n\n// Types\nimport {Check, Label} from 'src/types'\n\n// Utilities\nimport {relativeTimestampFormatter} from 'src/shared/utils/relativeTimestampFormatter'\n\ninterface DispatchProps {\n  onUpdateCheckDisplayProperties: typeof updateCheckDisplayProperties\n  deleteCheck: typeof deleteCheck\n  onAddCheckLabel: typeof addCheckLabel\n  onRemoveCheckLabel: typeof deleteCheckLabel\n  onCloneCheck: typeof cloneCheck\n  onNotify: typeof notify\n}\n\ninterface OwnProps {\n  check: Check\n}\n\ntype Props = OwnProps & DispatchProps & WithRouterProps\n\nconst CheckCard: FC<Props> = ({\n  onRemoveCheckLabel,\n  onAddCheckLabel,\n  onCloneCheck,\n  onNotify,\n  check,\n  onUpdateCheckDisplayProperties,\n  deleteCheck,\n  params: {orgID},\n  router,\n}) => {\n  const {id, activeStatus, name, description} = check\n\n  const onUpdateName = (name: string) => {\n    try {\n      onUpdateCheckDisplayProperties(check.id, {name})\n    } catch (error) {\n      onNotify(updateCheckFailed(error.message))\n    }\n  }\n\n  const onUpdateDescription = (description: string) => {\n    try {\n      onUpdateCheckDisplayProperties(check.id, {description})\n    } catch (e) {\n      onNotify(updateCheckFailed(e.message))\n    }\n  }\n\n  const onDelete = () => {\n    deleteCheck(check.id)\n  }\n\n  const onClone = () => {\n    onCloneCheck(check)\n  }\n\n  const onToggle = () => {\n    const status = activeStatus === 'active' ? 'inactive' : 'active'\n\n    try {\n      onUpdateCheckDisplayProperties(id, {status})\n    } catch (error) {\n      onNotify(updateCheckFailed(error.message))\n    }\n  }\n\n  const onCheckClick = () => {\n    router.push(`/orgs/${orgID}/alerting/checks/${id}/edit`)\n  }\n\n  const onView = () => {\n    const queryParams = new URLSearchParams({\n      [SEARCH_QUERY_PARAM]: `\"checkID\" == \"${id}\"`,\n    })\n\n    router.push(`/orgs/${orgID}/checks/${id}/?${queryParams}`)\n  }\n\n  const handleAddCheckLabel = (label: Label) => {\n    onAddCheckLabel(id, label)\n  }\n\n  const handleRemoveCheckLabel = (label: Label) => {\n    onRemoveCheckLabel(id, label.id)\n  }\n\n  return (\n    <ResourceCard\n      key={`check-id--${id}`}\n      testID=\"check-card\"\n      name={\n        <ResourceCard.EditableName\n          onUpdate={onUpdateName}\n          onClick={onCheckClick}\n          name={check.name}\n          noNameString={DEFAULT_CHECK_NAME}\n          testID=\"check-card--name\"\n          buttonTestID=\"check-card--name-button\"\n          inputTestID=\"check-card--input\"\n        />\n      }\n      toggle={\n        <SlideToggle\n          active={activeStatus === 'active'}\n          size={ComponentSize.ExtraSmall}\n          onChange={onToggle}\n          testID=\"check-card--slide-toggle\"\n        />\n      }\n      description={\n        <ResourceCard.EditableDescription\n          onUpdate={onUpdateDescription}\n          description={description}\n          placeholder={`Describe ${name}`}\n        />\n      }\n      labels={\n        <InlineLabels\n          selectedLabelIDs={check.labels}\n          onAddLabel={handleAddCheckLabel}\n          onRemoveLabel={handleRemoveCheckLabel}\n        />\n      }\n      disabled={activeStatus === 'inactive'}\n      contextMenu={\n        <CheckCardContext\n          onView={onView}\n          onDelete={onDelete}\n          onClone={onClone}\n        />\n      }\n      metaData={[\n        <>Last completed at {check.latestCompleted}</>,\n        <>{relativeTimestampFormatter(check.updatedAt, 'Last updated ')}</>,\n        <LastRunTaskStatus\n          key={2}\n          lastRunError={check.lastRunError}\n          lastRunStatus={check.lastRunStatus}\n        />,\n      ]}\n    />\n  )\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateCheckDisplayProperties: updateCheckDisplayProperties,\n  deleteCheck: deleteCheck,\n  onAddCheckLabel: addCheckLabel,\n  onRemoveCheckLabel: deleteCheckLabel,\n  onCloneCheck: cloneCheck,\n  onNotify: notify,\n}\n\nexport default connect<{}, DispatchProps>(\n  null,\n  mdtp\n)(withRouter(CheckCard))\n","//Libraries\nimport React, {FunctionComponent} from 'react'\n\n//Components\nimport CheckCard from 'src/checks/components/CheckCard'\nimport FilterList from 'src/shared/components/FilterList'\nimport {\n  EmptyState,\n  ResourceList,\n  Panel,\n  Gradients,\n  Button,\n  IconFont,\n  ComponentColor,\n  ButtonShape,\n} from '@influxdata/clockface'\n\n// Types\nimport {Check} from 'src/types'\nimport {ComponentSize} from '@influxdata/clockface'\n\nconst FilterChecks = FilterList<Check>()\n\ninterface Props {\n  checks: Check[]\n  searchTerm: string\n  showFirstTimeWidget: boolean\n  onCreateThreshold: () => void\n  onCreateDeadman: () => void\n}\n\nconst CheckCards: FunctionComponent<Props> = ({\n  checks,\n  searchTerm,\n  showFirstTimeWidget,\n  onCreateThreshold,\n  onCreateDeadman,\n}) => {\n  const cards = cs => cs.map(c => <CheckCard key={c.id} check={c} />)\n  const body = filtered => (\n    <ResourceList.Body\n      emptyState={\n        <EmptyChecksList\n          showFirstTimeWidget={showFirstTimeWidget}\n          onCreateThreshold={onCreateThreshold}\n          onCreateDeadman={onCreateDeadman}\n          searchTerm={searchTerm}\n        />\n      }\n    >\n      {cards(filtered)}\n    </ResourceList.Body>\n  )\n  const filteredChecks = (\n    <FilterChecks list={checks} searchKeys={['name']} searchTerm={searchTerm}>\n      {filtered => body(filtered)}\n    </FilterChecks>\n  )\n\n  return (\n    <>\n      <ResourceList>{filteredChecks}</ResourceList>\n    </>\n  )\n}\n\ninterface EmptyProps {\n  showFirstTimeWidget: boolean\n  onCreateThreshold: () => void\n  onCreateDeadman: () => void\n  searchTerm: string\n}\n\nconst EmptyChecksList: FunctionComponent<EmptyProps> = ({\n  showFirstTimeWidget,\n  onCreateThreshold,\n  onCreateDeadman,\n  searchTerm,\n}) => {\n  if (searchTerm) {\n    return (\n      <EmptyState size={ComponentSize.Small} className=\"alert-column--empty\">\n        <EmptyState.Text>\n          No <b>checks</b> match your search\n        </EmptyState.Text>\n      </EmptyState>\n    )\n  }\n\n  if (showFirstTimeWidget) {\n    return (\n      <Panel gradient={Gradients.PolarExpress} className=\"alerting-first-time\">\n        <Panel.Body size={ComponentSize.Large}>\n          <h1>Get started monitoring by creating a check</h1>\n          <h5>When a value crosses a specific threshold:</h5>\n          <Button\n            size={ComponentSize.Medium}\n            color={ComponentColor.Primary}\n            onClick={onCreateThreshold}\n            text=\"Threshold Check\"\n            icon={IconFont.Plus}\n            shape={ButtonShape.StretchToFit}\n          />\n          <h5>If a service stops sending metrics:</h5>\n          <Button\n            size={ComponentSize.Medium}\n            color={ComponentColor.Primary}\n            onClick={onCreateDeadman}\n            text=\"Deadman Check\"\n            icon={IconFont.Plus}\n            shape={ButtonShape.StretchToFit}\n          />\n        </Panel.Body>\n      </Panel>\n    )\n  }\n\n  return (\n    <EmptyState size={ComponentSize.Small} className=\"alert-column--empty\">\n      <EmptyState.Text>\n        Looks like you have not created a <b>Check</b> yet\n        <br />\n        <br />\n        You will need one to be notified about\n        <br /> any changes in system status\n      </EmptyState.Text>\n    </EmptyState>\n  )\n}\n\nexport default CheckCards\n","// Libraries\nimport React, {FC, ReactChild, useState} from 'react'\n\n// Types\nimport {ResourceType} from 'src/types'\n\n// Components\nimport {\n  Panel,\n  InfluxColors,\n  DapperScrollbars,\n  Input,\n  IconFont,\n  FlexBox,\n  FlexDirection,\n  ComponentSize,\n  QuestionMarkTooltip,\n  ComponentColor,\n} from '@influxdata/clockface'\n\ntype ColumnTypes =\n  | ResourceType.NotificationRules\n  | ResourceType.NotificationEndpoints\n  | ResourceType.Checks\n\ninterface Props {\n  type: ColumnTypes\n  title: string\n  createButton: JSX.Element\n  questionMarkTooltipContents: JSX.Element | string\n  children: (searchTerm: string) => ReactChild\n}\n\nconst AlertsColumnHeader: FC<Props> = ({\n  type,\n  children,\n  title,\n  createButton,\n  questionMarkTooltipContents,\n}) => {\n  const [searchTerm, onChangeSearchTerm] = useState('')\n  return (\n    <Panel\n      backgroundColor={InfluxColors.Kevlar}\n      className=\"alerting-index--column\"\n      testID={`${type}--column`}\n    >\n      <Panel.Header>\n        <FlexBox direction={FlexDirection.Row} margin={ComponentSize.Small}>\n          <h4 style={{width: 'auto', marginRight: '6px'}}>{title}</h4>\n          <QuestionMarkTooltip\n            diameter={18}\n            color={ComponentColor.Primary}\n            testID={`${title}--question-mark`}\n            tooltipContents={questionMarkTooltipContents}\n          />\n        </FlexBox>\n        {createButton}\n      </Panel.Header>\n      <div className=\"alerting-index--search\">\n        <Input\n          icon={IconFont.Search}\n          placeholder={`Filter ${title}...`}\n          value={searchTerm}\n          onChange={e => onChangeSearchTerm(e.target.value)}\n          testID={`filter--input ${type}`}\n        />\n      </div>\n      <div className=\"alerting-index--column-body\">\n        <DapperScrollbars\n          autoSize={true}\n          autoHide={true}\n          style={{width: '100%', height: '100%'}}\n        >\n          <div className=\"alerting-index--list\">{children(searchTerm)}</div>\n        </DapperScrollbars>\n      </div>\n    </Panel>\n  )\n}\n\nexport default AlertsColumnHeader\n","// Libraries\nimport React, {FunctionComponent, MouseEvent} from 'react'\n\n// Components\nimport {Dropdown, ComponentColor, IconFont} from '@influxdata/clockface'\n\n// Types\nimport {CheckType} from 'src/types'\n\ninterface Props {\n  onCreateThreshold: () => void\n  onCreateDeadman: () => void\n}\n\nconst CreateCheckDropdown: FunctionComponent<Props> = ({\n  onCreateThreshold,\n  onCreateDeadman,\n}) => {\n  const handleItemClick = (type: CheckType): void => {\n    if (type === 'threshold') {\n      onCreateThreshold()\n    }\n\n    if (type === 'deadman') {\n      onCreateDeadman()\n    }\n  }\n\n  const DropdownButton = (\n    active: boolean,\n    onClick: (e: MouseEvent<HTMLButtonElement>) => void\n  ) => (\n    <Dropdown.Button\n      icon={IconFont.Plus}\n      color={ComponentColor.Primary}\n      active={active}\n      onClick={onClick}\n      testID=\"create-check\"\n    >\n      Create\n    </Dropdown.Button>\n  )\n\n  const DropdownMenu = (onCollapse: () => void) => (\n    <Dropdown.Menu onCollapse={onCollapse}>\n      <Dropdown.Item\n        value=\"threshold\"\n        onClick={handleItemClick}\n        testID=\"create-threshold-check\"\n      >\n        Threshold Check\n      </Dropdown.Item>\n      <Dropdown.Item\n        value=\"deadman\"\n        onClick={handleItemClick}\n        testID=\"create-deadman-check\"\n      >\n        Deadman Check\n      </Dropdown.Item>\n    </Dropdown.Menu>\n  )\n\n  return (\n    <Dropdown\n      button={DropdownButton}\n      menu={DropdownMenu}\n      style={{width: '124px'}}\n    />\n  )\n}\n\nexport default CreateCheckDropdown\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\n// Components\nimport CheckCards from 'src/checks/components/CheckCards'\nimport AlertsColumn from 'src/alerting/components/AlertsColumn'\nimport CreateCheckDropdown from 'src/checks/components/CreateCheckDropdown'\n\n// Types\nimport {\n  Check,\n  NotificationRuleDraft,\n  AppState,\n  NotificationEndpoint,\n  ResourceType,\n} from 'src/types'\n\ninterface StateProps {\n  checks: Check[]\n  rules: NotificationRuleDraft[]\n  endpoints: NotificationEndpoint[]\n}\n\ntype Props = StateProps & WithRouterProps\n\nconst ChecksColumn: FunctionComponent<Props> = ({\n  checks,\n  router,\n  params: {orgID},\n  rules,\n  endpoints,\n}) => {\n  const handleCreateThreshold = () => {\n    router.push(`/orgs/${orgID}/alerting/checks/new-threshold`)\n  }\n\n  const handleCreateDeadman = () => {\n    router.push(`/orgs/${orgID}/alerting/checks/new-deadman`)\n  }\n\n  const tooltipContents = (\n    <>\n      A <strong>Check</strong> is a periodic query that the system\n      <br />\n      performs against your time series data\n      <br />\n      that will generate a status\n      <br />\n      <br />\n      <a\n        href=\"https://v2.docs.influxdata.com/v2.0/monitor-alert/checks/create/\"\n        target=\"_blank\"\n      >\n        Read Documentation\n      </a>\n    </>\n  )\n\n  const noAlertingResourcesExist =\n    !checks.length && !rules.length && !endpoints.length\n\n  const createButton = (\n    <CreateCheckDropdown\n      onCreateThreshold={handleCreateThreshold}\n      onCreateDeadman={handleCreateDeadman}\n    />\n  )\n\n  return (\n    <AlertsColumn\n      type={ResourceType.Checks}\n      title=\"Checks\"\n      createButton={createButton}\n      questionMarkTooltipContents={tooltipContents}\n    >\n      {searchTerm => (\n        <CheckCards\n          checks={checks}\n          searchTerm={searchTerm}\n          onCreateThreshold={handleCreateThreshold}\n          onCreateDeadman={handleCreateDeadman}\n          showFirstTimeWidget={noAlertingResourcesExist}\n        />\n      )}\n    </AlertsColumn>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const checks = getAll<Check>(state, ResourceType.Checks)\n\n  const endpoints = getAll<NotificationEndpoint>(\n    state,\n    ResourceType.NotificationEndpoints\n  )\n\n  const rules = getAll<NotificationRuleDraft>(\n    state,\n    ResourceType.NotificationRules\n  )\n\n  return {\n    checks,\n    rules,\n    endpoints,\n  }\n}\n\nexport default connect<StateProps>(\n  mstp,\n  null\n)(withRouter(ChecksColumn))\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {Context, IconFont} from 'src/clockface'\nimport {ComponentColor} from '@influxdata/clockface'\n\ninterface Props {\n  onDelete: () => void\n  onClone: () => void\n  onView: () => void\n}\n\nconst RuleCardContext: FunctionComponent<Props> = ({\n  onDelete,\n  onClone,\n  onView,\n}) => {\n  return (\n    <Context>\n      <Context.Menu icon={IconFont.EyeOpen} testID=\"context-history-menu\">\n        <Context.Item\n          label=\"View History\"\n          action={onView}\n          testID=\"context-history-task\"\n        />\n      </Context.Menu>\n      <Context.Menu\n        icon={IconFont.Duplicate}\n        color={ComponentColor.Secondary}\n        testID=\"context-clone-menu\"\n      >\n        <Context.Item\n          label=\"Clone\"\n          action={onClone}\n          testID=\"context-clone-task\"\n        />\n      </Context.Menu>\n      <Context.Menu\n        icon={IconFont.Trash}\n        color={ComponentColor.Danger}\n        testID=\"context-delete-menu\"\n      >\n        <Context.Item\n          label=\"Delete\"\n          action={onDelete}\n          testID=\"context-delete-task\"\n        />\n      </Context.Menu>\n    </Context>\n  )\n}\n\nexport default RuleCardContext\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {SlideToggle, ComponentSize, ResourceCard} from '@influxdata/clockface'\nimport NotificationRuleCardContext from 'src/notifications/rules/components/RuleCardContext'\nimport InlineLabels from 'src/shared/components/inlineLabels/InlineLabels'\nimport LastRunTaskStatus from 'src/shared/components/lastRunTaskStatus/LastRunTaskStatus'\n\n// Constants\nimport {DEFAULT_NOTIFICATION_RULE_NAME} from 'src/alerting/constants'\nimport {\n  SEARCH_QUERY_PARAM,\n  HISTORY_TYPE_QUERY_PARAM,\n} from 'src/alerting/constants/history'\n\n// Actions and Selectors\nimport {\n  updateRuleProperties,\n  deleteRule,\n  addRuleLabel,\n  deleteRuleLabel,\n  cloneRule,\n} from 'src/notifications/rules/actions/thunks'\n\n// Types\nimport {NotificationRuleDraft, Label, AlertHistoryType} from 'src/types'\n\n// Utilities\nimport {relativeTimestampFormatter} from 'src/shared/utils/relativeTimestampFormatter'\n\ninterface DispatchProps {\n  onUpdateRuleProperties: typeof updateRuleProperties\n  deleteNotificationRule: typeof deleteRule\n  onAddRuleLabel: typeof addRuleLabel\n  onRemoveRuleLabel: typeof deleteRuleLabel\n  onCloneRule: typeof cloneRule\n}\n\ninterface OwnProps {\n  rule: NotificationRuleDraft\n}\n\ntype Props = OwnProps & WithRouterProps & DispatchProps\n\nconst RuleCard: FC<Props> = ({\n  rule,\n  onUpdateRuleProperties,\n  deleteNotificationRule,\n  onCloneRule,\n  onAddRuleLabel,\n  onRemoveRuleLabel,\n  params: {orgID},\n  router,\n}) => {\n  const {\n    id,\n    activeStatus,\n    name,\n    lastRunError,\n    lastRunStatus,\n    description,\n    latestCompleted,\n  } = rule\n\n  const onUpdateName = (name: string) => {\n    onUpdateRuleProperties(id, {name})\n  }\n\n  const onUpdateDescription = (description: string) => {\n    onUpdateRuleProperties(id, {description})\n  }\n\n  const onDelete = () => {\n    deleteNotificationRule(id)\n  }\n\n  const onClone = () => {\n    onCloneRule(rule)\n  }\n\n  const onToggle = () => {\n    const status = activeStatus === 'active' ? 'inactive' : 'active'\n\n    onUpdateRuleProperties(id, {status})\n  }\n\n  const onRuleClick = () => {\n    router.push(`/orgs/${orgID}/alerting/rules/${id}/edit`)\n  }\n\n  const onView = () => {\n    const historyType: AlertHistoryType = 'notifications'\n\n    const queryParams = new URLSearchParams({\n      [HISTORY_TYPE_QUERY_PARAM]: historyType,\n      [SEARCH_QUERY_PARAM]: `\"notificationRuleID\" == \"${id}\"`,\n    })\n\n    router.push(`/orgs/${orgID}/alert-history?${queryParams}`)\n  }\n\n  const handleAddRuleLabel = (label: Label) => {\n    onAddRuleLabel(id, label)\n  }\n\n  const handleRemoveRuleLabel = (label: Label) => {\n    onRemoveRuleLabel(id, label.id)\n  }\n\n  return (\n    <ResourceCard\n      key={`rule-id--${id}`}\n      testID={`rule-card ${name}`}\n      name={\n        <ResourceCard.EditableName\n          onUpdate={onUpdateName}\n          onClick={onRuleClick}\n          name={name}\n          noNameString={DEFAULT_NOTIFICATION_RULE_NAME}\n          testID=\"rule-card--name\"\n          buttonTestID=\"rule-card--name-button\"\n          inputTestID=\"rule-card--input\"\n        />\n      }\n      toggle={\n        <SlideToggle\n          active={activeStatus === 'active'}\n          size={ComponentSize.ExtraSmall}\n          onChange={onToggle}\n          testID=\"rule-card--slide-toggle\"\n        />\n      }\n      description={\n        <ResourceCard.EditableDescription\n          onUpdate={onUpdateDescription}\n          description={description}\n          placeholder={`Describe ${name}`}\n        />\n      }\n      labels={\n        <InlineLabels\n          selectedLabelIDs={rule.labels}\n          onAddLabel={handleAddRuleLabel}\n          onRemoveLabel={handleRemoveRuleLabel}\n        />\n      }\n      disabled={activeStatus === 'inactive'}\n      contextMenu={\n        <NotificationRuleCardContext\n          onView={onView}\n          onClone={onClone}\n          onDelete={onDelete}\n        />\n      }\n      metaData={[\n        <>Last completed at {latestCompleted}</>,\n        <>{relativeTimestampFormatter(rule.updatedAt, 'Last updated ')}</>,\n        <LastRunTaskStatus\n          key={2}\n          lastRunError={lastRunError}\n          lastRunStatus={lastRunStatus}\n        />,\n      ]}\n    />\n  )\n}\n\nconst mdtp: DispatchProps = {\n  onUpdateRuleProperties: updateRuleProperties,\n  deleteNotificationRule: deleteRule,\n  onAddRuleLabel: addRuleLabel,\n  onRemoveRuleLabel: deleteRuleLabel,\n  onCloneRule: cloneRule,\n}\n\nexport default connect<{}, DispatchProps>(\n  null,\n  mdtp\n)(withRouter(RuleCard))\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport NotificationRuleCard from 'src/notifications/rules/components/RuleCard'\nimport {EmptyState, ResourceList} from '@influxdata/clockface'\nimport FilterList from 'src/shared/components/FilterList'\n\n// Types\nimport {NotificationRuleDraft} from 'src/types'\nimport {ComponentSize} from '@influxdata/clockface'\n\ninterface Props {\n  rules: NotificationRuleDraft[]\n  searchTerm: string\n}\n\nconst FilterRules = FilterList<NotificationRuleDraft>()\n\nconst NotificationRuleCards: FC<Props> = ({rules, searchTerm}) => {\n  const cards = rules =>\n    rules.map(nr => <NotificationRuleCard key={nr.id} rule={nr} />)\n\n  const filteredCards = (\n    <FilterRules list={rules} searchKeys={['name']} searchTerm={searchTerm}>\n      {filtered => (\n        <ResourceList.Body\n          emptyState={<EmptyNotificationRulesList searchTerm={searchTerm} />}\n        >\n          {cards(filtered)}\n        </ResourceList.Body>\n      )}\n    </FilterRules>\n  )\n\n  return <ResourceList>{filteredCards}</ResourceList>\n}\n\nconst EmptyNotificationRulesList: FC<{searchTerm: string}> = ({searchTerm}) => {\n  if (searchTerm) {\n    return (\n      <EmptyState size={ComponentSize.Small} className=\"alert-column--empty\">\n        <EmptyState.Text>\n          No <b>rules</b> match your search\n        </EmptyState.Text>\n      </EmptyState>\n    )\n  }\n\n  return (\n    <EmptyState size={ComponentSize.Small} className=\"alert-column--empty\">\n      <EmptyState.Text>\n        You need at least 1 <b>Notification Endpoint</b> before\n        <br />\n        you can create a <b>Notification Rule</b>\n      </EmptyState.Text>\n    </EmptyState>\n  )\n}\n\nexport default NotificationRuleCards\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Types\nimport {\n  NotificationEndpoint,\n  NotificationRuleDraft,\n  AppState,\n  ResourceType,\n} from 'src/types'\n\n// Components\nimport {\n  Button,\n  IconFont,\n  ComponentColor,\n  ComponentStatus,\n} from '@influxdata/clockface'\nimport NotificationRuleCards from 'src/notifications/rules/components/RuleCards'\nimport AlertsColumn from 'src/alerting/components/AlertsColumn'\n\n// Selectors\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  rules: NotificationRuleDraft[]\n  endpoints: NotificationEndpoint[]\n}\n\ntype Props = StateProps & WithRouterProps\n\nconst NotificationRulesColumn: FunctionComponent<Props> = ({\n  rules,\n  router,\n  params,\n  endpoints,\n}) => {\n  const handleOpenOverlay = () => {\n    const newRuleRoute = `/orgs/${params.orgID}/alerting/rules/new`\n    router.push(newRuleRoute)\n  }\n\n  const tooltipContents = (\n    <>\n      A <strong>Notification Rule</strong> will query statuses\n      <br />\n      written by <strong>Checks</strong> to determine if a\n      <br />\n      notification should be sent to a\n      <br />\n      <strong>Notification Endpoint</strong>\n      <br />\n      <br />\n      <a\n        href=\"https://v2.docs.influxdata.com/v2.0/monitor-alert/notification-rules/create\"\n        target=\"_blank\"\n      >\n        Read Documentation\n      </a>\n    </>\n  )\n\n  const buttonStatus = !!endpoints.length\n    ? ComponentStatus.Default\n    : ComponentStatus.Disabled\n\n  const buttonTitleText = !!endpoints.length\n    ? 'Create a Notification Rule'\n    : 'You need at least 1 Notifcation Endpoint to create a Notification Rule'\n\n  const createButton = (\n    <Button\n      color={ComponentColor.Secondary}\n      text=\"Create\"\n      onClick={handleOpenOverlay}\n      testID=\"create-rule\"\n      icon={IconFont.Plus}\n      status={buttonStatus}\n      titleText={buttonTitleText}\n    />\n  )\n\n  return (\n    <AlertsColumn\n      type={ResourceType.NotificationRules}\n      title=\"Notification Rules\"\n      createButton={createButton}\n      questionMarkTooltipContents={tooltipContents}\n    >\n      {searchTerm => (\n        <NotificationRuleCards rules={rules} searchTerm={searchTerm} />\n      )}\n    </AlertsColumn>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const rules = getAll<NotificationRuleDraft>(\n    state,\n    ResourceType.NotificationRules\n  )\n\n  const endpoints = getAll<NotificationEndpoint>(\n    state,\n    ResourceType.NotificationEndpoints\n  )\n\n  return {rules, endpoints}\n}\n\nexport default connect<StateProps>(\n  mstp,\n  null\n)(withRouter(NotificationRulesColumn))\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {Context, IconFont} from 'src/clockface'\nimport {ComponentColor} from '@influxdata/clockface'\n\ninterface Props {\n  onDelete: () => void\n  onClone: () => void\n  onView: () => void\n}\n\nconst EndpointCardContext: FC<Props> = ({onDelete, onView}) => {\n  return (\n    <Context>\n      <Context.Menu icon={IconFont.EyeOpen} testID=\"context-history-menu\">\n        <Context.Item\n          label=\"View History\"\n          action={onView}\n          testID=\"context-history-task\"\n        />\n      </Context.Menu>\n      <Context.Menu\n        icon={IconFont.Trash}\n        color={ComponentColor.Danger}\n        testID=\"context-delete-menu\"\n      >\n        <Context.Item\n          label=\"Delete\"\n          action={onDelete}\n          testID=\"context-delete-task\"\n        />\n      </Context.Menu>\n    </Context>\n  )\n}\n\nexport default EndpointCardContext\n","// Libraries\nimport React, {FC, Dispatch} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Actions\nimport {\n  addEndpointLabel,\n  deleteEndpointLabel,\n  deleteEndpoint,\n  updateEndpointProperties,\n  cloneEndpoint,\n} from 'src/notifications/endpoints/actions/thunks'\n\n// Components\nimport {SlideToggle, ComponentSize, ResourceCard} from '@influxdata/clockface'\nimport EndpointCardMenu from 'src/notifications/endpoints/components/EndpointCardMenu'\nimport InlineLabels from 'src/shared/components/inlineLabels/InlineLabels'\n\n// Constants\nimport {\n  SEARCH_QUERY_PARAM,\n  HISTORY_TYPE_QUERY_PARAM,\n} from 'src/alerting/constants/history'\n\n// Types\nimport {NotificationEndpoint, Label, AlertHistoryType} from 'src/types'\nimport {Action} from 'src/notifications/endpoints/actions/creators'\n\n// Utilities\nimport {relativeTimestampFormatter} from 'src/shared/utils/relativeTimestampFormatter'\n\ninterface DispatchProps {\n  onDeleteEndpoint: typeof deleteEndpoint\n  onAddEndpointLabel: typeof addEndpointLabel\n  onRemoveEndpointLabel: typeof deleteEndpointLabel\n  onUpdateEndpointProperties: typeof updateEndpointProperties\n  onCloneEndpoint: typeof cloneEndpoint\n}\n\ninterface OwnProps {\n  endpoint: NotificationEndpoint\n}\n\ninterface DispatchProp {\n  dispatch: Dispatch<Action>\n}\n\ntype Props = OwnProps & WithRouterProps & DispatchProps & DispatchProp\n\nconst EndpointCard: FC<Props> = ({\n  router,\n  params: {orgID},\n  endpoint,\n  onUpdateEndpointProperties,\n  onCloneEndpoint,\n  onDeleteEndpoint,\n  onAddEndpointLabel,\n  onRemoveEndpointLabel,\n}) => {\n  const {id, name, description, activeStatus} = endpoint\n\n  const handleUpdateName = (name: string) => {\n    onUpdateEndpointProperties(id, {name})\n  }\n\n  const handleClick = () => {\n    router.push(`orgs/${orgID}/alerting/endpoints/${id}/edit`)\n  }\n\n  const nameComponent = (\n    <ResourceCard.EditableName\n      key={id}\n      name={name}\n      onClick={handleClick}\n      onUpdate={handleUpdateName}\n      testID={`endpoint-card--name ${name}`}\n      inputTestID=\"endpoint-card--input\"\n      buttonTestID=\"endpoint-card--name-button\"\n      noNameString=\"Name this notification endpoint\"\n    />\n  )\n\n  const handleToggle = () => {\n    const toStatus = activeStatus === 'active' ? 'inactive' : 'active'\n    onUpdateEndpointProperties(id, {status: toStatus})\n  }\n\n  const toggle = (\n    <SlideToggle\n      active={activeStatus === 'active'}\n      size={ComponentSize.ExtraSmall}\n      onChange={handleToggle}\n      testID=\"endpoint-card--slide-toggle\"\n    />\n  )\n\n  const handleView = () => {\n    const historyType: AlertHistoryType = 'notifications'\n\n    const queryParams = new URLSearchParams({\n      [HISTORY_TYPE_QUERY_PARAM]: historyType,\n      [SEARCH_QUERY_PARAM]: `\"notificationEndpointID\" == \"${id}\"`,\n    })\n\n    router.push(`/orgs/${orgID}/alert-history?${queryParams}`)\n  }\n  const handleDelete = () => {\n    onDeleteEndpoint(id)\n  }\n  const handleClone = () => {\n    onCloneEndpoint(endpoint)\n  }\n  const contextMenu = (\n    <EndpointCardMenu\n      onDelete={handleDelete}\n      onView={handleView}\n      onClone={handleClone}\n    />\n  )\n\n  const handleAddEndpointLabel = (label: Label) => {\n    onAddEndpointLabel(id, label)\n  }\n  const handleRemoveEndpointLabel = (label: Label) => {\n    onRemoveEndpointLabel(id, label.id)\n  }\n\n  const labelsComponent = (\n    <InlineLabels\n      selectedLabelIDs={endpoint.labels}\n      onAddLabel={handleAddEndpointLabel}\n      onRemoveLabel={handleRemoveEndpointLabel}\n    />\n  )\n\n  const handleUpdateDescription = (description: string) => {\n    onUpdateEndpointProperties(id, {description})\n  }\n  const descriptionComponent = (\n    <ResourceCard.EditableDescription\n      onUpdate={handleUpdateDescription}\n      description={description}\n      placeholder={`Describe ${name}`}\n    />\n  )\n\n  return (\n    <ResourceCard\n      key={id}\n      toggle={toggle}\n      name={nameComponent}\n      contextMenu={contextMenu}\n      description={descriptionComponent}\n      labels={labelsComponent}\n      disabled={activeStatus === 'inactive'}\n      metaData={[\n        <>{relativeTimestampFormatter(endpoint.updatedAt, 'Last updated ')}</>,\n      ]}\n      testID={`endpoint-card ${name}`}\n    />\n  )\n}\n\nconst mdtp: DispatchProps = {\n  onDeleteEndpoint: deleteEndpoint,\n  onAddEndpointLabel: addEndpointLabel,\n  onRemoveEndpointLabel: deleteEndpointLabel,\n  onUpdateEndpointProperties: updateEndpointProperties,\n  onCloneEndpoint: cloneEndpoint,\n}\n\nexport default connect<{}, DispatchProps, {}>(\n  null,\n  mdtp\n)(withRouter<OwnProps>(EndpointCard))\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport EndpointCard from 'src/notifications/endpoints/components/EndpointCard'\nimport {EmptyState, ResourceList, ComponentSize} from '@influxdata/clockface'\nimport FilterList from 'src/shared/components/FilterList'\n\n// Types\nimport {NotificationEndpoint} from 'src/types'\n\ninterface Props {\n  endpoints: NotificationEndpoint[]\n  searchTerm: string\n}\n\nconst FilterEndpoints = FilterList<NotificationEndpoint>()\n\nconst EndpointCards: FC<Props> = ({endpoints, searchTerm}) => {\n  const cards = endpoints =>\n    endpoints.map(endpoint => (\n      <EndpointCard key={endpoint.id} endpoint={endpoint} />\n    ))\n\n  const body = (\n    <FilterEndpoints\n      list={endpoints}\n      searchKeys={['name']}\n      searchTerm={searchTerm}\n    >\n      {filteredEndpoints => (\n        <ResourceList.Body\n          emptyState={<EmptyEndpointList searchTerm={searchTerm} />}\n        >\n          {cards(filteredEndpoints)}\n        </ResourceList.Body>\n      )}\n    </FilterEndpoints>\n  )\n\n  return <ResourceList>{body}</ResourceList>\n}\n\nconst EmptyEndpointList: FC<{searchTerm: string}> = ({searchTerm}) => {\n  if (searchTerm) {\n    return (\n      <EmptyState size={ComponentSize.Small} className=\"alert-column--empty\">\n        <EmptyState.Text>\n          \"No <b>endpoints</b> match your search\n        </EmptyState.Text>\n      </EmptyState>\n    )\n  }\n\n  return (\n    <EmptyState size={ComponentSize.Small} className=\"alert-column--empty\">\n      <EmptyState.Text>\n        Want to send notifications to Slack,\n        <br />\n        PagerDuty or an HTTP server?\n        <br />\n        <br />\n        Try creating a <b>Notification Endpoint</b>\n      </EmptyState.Text>\n    </EmptyState>\n  )\n}\n\nexport default EndpointCards\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Button, IconFont, ComponentColor} from '@influxdata/clockface'\nimport EndpointCards from 'src/notifications/endpoints/components/EndpointCards'\nimport AlertsColumn from 'src/alerting/components/AlertsColumn'\nimport {AppState, NotificationEndpoint, ResourceType} from 'src/types'\n\n// Utils\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  endpoints: NotificationEndpoint[]\n}\ntype OwnProps = {}\ntype Props = OwnProps & WithRouterProps & StateProps\n\nconst EndpointsColumn: FC<Props> = ({router, params, endpoints}) => {\n  const handleOpenOverlay = () => {\n    const newRuleRoute = `/orgs/${params.orgID}/alerting/endpoints/new`\n    router.push(newRuleRoute)\n  }\n\n  const tooltipContents = (\n    <>\n      A <strong>Notification Endpoint</strong> stores the information to connect\n      <br />\n      to a third party service that can receive notifications\n      <br />\n      like Slack, PagerDuty, or an HTTP server\n      <br />\n      <br />\n      <a\n        href=\"https://v2.docs.influxdata.com/v2.0/monitor-alert/notification-endpoints/create\"\n        target=\"_blank\"\n      >\n        Read Documentation\n      </a>\n    </>\n  )\n\n  const createButton = (\n    <Button\n      color={ComponentColor.Secondary}\n      text=\"Create\"\n      onClick={handleOpenOverlay}\n      testID=\"create-endpoint\"\n      icon={IconFont.Plus}\n    />\n  )\n\n  return (\n    <AlertsColumn\n      type={ResourceType.NotificationEndpoints}\n      title=\"Notification Endpoints\"\n      createButton={createButton}\n      questionMarkTooltipContents={tooltipContents}\n    >\n      {searchTerm => (\n        <EndpointCards endpoints={endpoints} searchTerm={searchTerm} />\n      )}\n    </AlertsColumn>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const endpoints = getAll<NotificationEndpoint>(\n    state,\n    ResourceType.NotificationEndpoints\n  )\n\n  return {endpoints}\n}\n\nexport default connect<StateProps>(mstp)(withRouter<OwnProps>(EndpointsColumn))\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\n\n//Components\nimport {Grid, GridRow, GridColumn, Page} from '@influxdata/clockface'\nimport PageTitleWithOrg from 'src/shared/components/PageTitleWithOrg'\nimport ChecksColumn from 'src/checks/components/ChecksColumn'\nimport RulesColumn from 'src/notifications/rules/components/RulesColumn'\nimport EndpointsColumn from 'src/notifications/endpoints/components/EndpointsColumn'\nimport GetAssetLimits from 'src/cloud/components/GetAssetLimits'\nimport AssetLimitAlert from 'src/cloud/components/AssetLimitAlert'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Utils\nimport {pageTitleSuffixer} from 'src/shared/utils/pageTitles'\nimport {\n  extractMonitoringLimitStatus,\n  extractLimitedMonitoringResources,\n} from 'src/cloud/utils/limits'\n\n// Types\nimport {AppState, ResourceType} from 'src/types'\nimport {LimitStatus} from 'src/cloud/actions/limits'\n\ninterface StateProps {\n  limitStatus: LimitStatus\n  limitedResources: string\n}\n\nconst AlertingIndex: FunctionComponent<StateProps> = ({\n  children,\n  limitStatus,\n  limitedResources,\n}) => {\n  return (\n    <>\n      <Page titleTag={pageTitleSuffixer(['Monitoring & Alerting'])}>\n        <Page.Header fullWidth={false}>\n          <Page.HeaderLeft>\n            <PageTitleWithOrg title=\"Monitoring & Alerting\" />\n          </Page.HeaderLeft>\n          <Page.HeaderRight />\n        </Page.Header>\n        <Page.Contents fullWidth={false} scrollable={false}>\n          <GetResources resources={[ResourceType.Labels]}>\n            <GetAssetLimits>\n              <AssetLimitAlert\n                resourceName={limitedResources}\n                limitStatus={limitStatus}\n                className=\"load-data--asset-alert\"\n              />\n              <Grid className=\"alerting-index\">\n                <GridRow testID=\"grid--row\">\n                  <GridColumn widthLG={4} widthMD={4} widthSM={4} widthXS={12}>\n                    <GetResources resources={[ResourceType.Checks]}>\n                      <ChecksColumn />\n                    </GetResources>\n                  </GridColumn>\n                  <GridColumn widthLG={4} widthMD={4} widthSM={4} widthXS={12}>\n                    <GetResources\n                      resources={[ResourceType.NotificationEndpoints]}\n                    >\n                      <EndpointsColumn />\n                    </GetResources>\n                  </GridColumn>\n                  <GridColumn widthLG={4} widthMD={4} widthSM={4} widthXS={12}>\n                    <GetResources resources={[ResourceType.NotificationRules]}>\n                      <RulesColumn />\n                    </GetResources>\n                  </GridColumn>\n                </GridRow>\n              </Grid>\n            </GetAssetLimits>\n          </GetResources>\n        </Page.Contents>\n      </Page>\n      {children}\n    </>\n  )\n}\n\nconst mstp = ({cloud: {limits}}: AppState): StateProps => {\n  return {\n    limitStatus: extractMonitoringLimitStatus(limits),\n    limitedResources: extractLimitedMonitoringResources(limits),\n  }\n}\n\nexport default connect(\n  mstp,\n  null\n)(AlertingIndex)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {connect} from 'react-redux'\nimport {SelectDropdown} from '@influxdata/clockface'\n\n// Types\nimport {AppState, Bucket, ResourceType} from 'src/types'\n\n// Selectors\nimport {getSortedBucketNames} from 'src/buckets/selectors'\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  bucketNames: string[]\n}\n\ninterface OwnProps {\n  bucketName: string\n  onSetBucketName: (bucketName: string) => any\n}\n\ntype Props = StateProps & OwnProps\n\nconst BucketsDropdown: FunctionComponent<Props> = ({\n  bucketNames,\n  bucketName,\n  onSetBucketName,\n}) => {\n  return (\n    <SelectDropdown\n      options={bucketNames}\n      selectedOption={bucketName}\n      onSelect={onSetBucketName}\n    />\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  // map names and sort via a selector\n  const buckets = getSortedBucketNames(\n    getAll<Bucket>(state, ResourceType.Buckets)\n  )\n\n  return {\n    bucketNames: buckets,\n  }\n}\n\nexport default connect<StateProps, {}, OwnProps>(mstp)(BucketsDropdown)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {\n  Button,\n  ComponentColor,\n  ComponentStatus,\n  Icon,\n  IconFont,\n} from '@influxdata/clockface'\n\n// Types\nimport {RemoteDataState} from 'src/types'\n\ninterface Props {\n  status: RemoteDataState\n  valid: boolean\n  onClick: () => any\n}\n\nconst DeleteButton: FunctionComponent<Props> = ({status, valid, onClick}) => {\n  if (status === RemoteDataState.Done) {\n    return (\n      <div className=\"delete-data-button delete-data-button--success\">\n        <Icon glyph={IconFont.Checkmark} />\n        Success!\n      </div>\n    )\n  }\n\n  if (status === RemoteDataState.Error) {\n    return (\n      <div className=\"delete-data-button delete-data-button--error\">\n        <Icon glyph={IconFont.Remove} />\n        An error occured and has been reported.\n      </div>\n    )\n  }\n\n  let deleteButtonStatus\n\n  if (status === RemoteDataState.Loading) {\n    deleteButtonStatus = ComponentStatus.Loading\n  } else if (!valid) {\n    deleteButtonStatus = ComponentStatus.Disabled\n  } else {\n    deleteButtonStatus = ComponentStatus.Default\n  }\n\n  return (\n    <Button\n      testID=\"confirm-delete-btn\"\n      text=\"Confirm Delete\"\n      color={ComponentColor.Danger}\n      status={deleteButtonStatus}\n      onClick={onClick}\n    />\n  )\n}\n\nexport default DeleteButton\n","// Libraries\nimport {Dispatch} from 'react'\nimport {extractBoxedCol} from 'src/timeMachine/apis/queryBuilder'\nimport moment from 'moment'\n\n// Utils\nimport {postDelete} from 'src/client'\nimport {runQuery} from 'src/shared/apis/query'\nimport {getWindowVars} from 'src/variables/utils/getWindowVars'\nimport {buildVarsOption} from 'src/variables/utils/buildVarsOption'\nimport {getVariableAssignments} from 'src/timeMachine/selectors'\nimport {checkQueryResult} from 'src/shared/utils/checkQueryResult'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Actions\nimport {notify} from 'src/shared/actions/notifications'\n\n// Constants\nimport {\n  predicateDeleteFailed,\n  predicateDeleteSucceeded,\n  setFilterKeyFailed,\n  setFilterValueFailed,\n} from 'src/shared/copy/notifications'\nimport {rateLimitReached, resultTooLarge} from 'src/shared/copy/notifications'\n\n// Types\nimport {RemoteDataState, Filter, CustomTimeRange, GetState} from 'src/types'\nimport {Action as NotifyAction} from 'src/shared/actions/notifications'\n\nexport type Action =\n  | DeleteFilter\n  | ResetFilters\n  | SetBucketName\n  | SetDeletionStatus\n  | SetFiles\n  | SetFilter\n  | SetIsSerious\n  | SetKeysByBucket\n  | SetPredicateToDefault\n  | SetPreviewStatus\n  | SetTimeRange\n  | SetValuesByKey\n  | NotifyAction\n\ninterface DeleteFilter {\n  type: 'DELETE_FILTER'\n  payload: {index: number}\n}\n\nexport const deleteFilter = (index: number): DeleteFilter => ({\n  type: 'DELETE_FILTER',\n  payload: {index},\n})\n\ninterface ResetFilters {\n  type: 'RESET_FILTERS'\n}\n\nexport const resetFilters = (): ResetFilters => ({\n  type: 'RESET_FILTERS',\n})\n\ninterface SetPredicateToDefault {\n  type: 'SET_PREDICATE_DEFAULT'\n}\n\nexport const resetPredicateState = (): SetPredicateToDefault => ({\n  type: 'SET_PREDICATE_DEFAULT',\n})\n\ninterface SetBucketName {\n  type: 'SET_BUCKET_NAME'\n  payload: {bucketName: string}\n}\n\nexport const setBucketName = (bucketName: string): SetBucketName => ({\n  type: 'SET_BUCKET_NAME',\n  payload: {bucketName},\n})\n\ninterface SetDeletionStatus {\n  type: 'SET_DELETION_STATUS'\n  payload: {deletionStatus: RemoteDataState}\n}\n\nexport const setDeletionStatus = (\n  status: RemoteDataState\n): SetDeletionStatus => ({\n  type: 'SET_DELETION_STATUS',\n  payload: {deletionStatus: status},\n})\n\ninterface SetFiles {\n  type: 'SET_FILES'\n  payload: {files: string[]}\n}\n\nexport const setFiles = (files: string[]): SetFiles => ({\n  type: 'SET_FILES',\n  payload: {files},\n})\n\ninterface SetFilter {\n  type: 'SET_FILTER'\n  payload: {\n    filter: Filter\n    index: number\n  }\n}\n\nexport const setFilter = (filter: Filter, index: number): SetFilter => ({\n  type: 'SET_FILTER',\n  payload: {filter, index},\n})\n\ninterface SetIsSerious {\n  type: 'SET_IS_SERIOUS'\n  payload: {isSerious: boolean}\n}\n\nexport const setIsSerious = (isSerious: boolean): SetIsSerious => ({\n  type: 'SET_IS_SERIOUS',\n  payload: {isSerious},\n})\n\ninterface SetKeysByBucket {\n  type: 'SET_KEYS_BY_BUCKET'\n  payload: {keys: string[]}\n}\n\nconst setKeys = (keys: string[]): SetKeysByBucket => ({\n  type: 'SET_KEYS_BY_BUCKET',\n  payload: {keys},\n})\n\ninterface SetPreviewStatus {\n  type: 'SET_PREVIEW_STATUS'\n  payload: {previewStatus: RemoteDataState}\n}\n\nexport const setPreviewStatus = (\n  status: RemoteDataState\n): SetPreviewStatus => ({\n  type: 'SET_PREVIEW_STATUS',\n  payload: {previewStatus: status},\n})\n\ninterface SetTimeRange {\n  type: 'SET_DELETE_TIME_RANGE'\n  payload: {timeRange: CustomTimeRange}\n}\n\nexport const setTimeRange = (timeRange: CustomTimeRange): SetTimeRange => ({\n  type: 'SET_DELETE_TIME_RANGE',\n  payload: {timeRange},\n})\n\ninterface SetValuesByKey {\n  type: 'SET_VALUES_BY_KEY'\n  payload: {values: string[]}\n}\n\nconst setValues = (values: string[]): SetValuesByKey => ({\n  type: 'SET_VALUES_BY_KEY',\n  payload: {values},\n})\n\nconst formatFilters = (filters: Filter[]) =>\n  filters.map(f => `${f.key} ${f.equality} ${f.value}`).join(' AND ')\n\nexport const deleteWithPredicate = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  dispatch(setDeletionStatus(RemoteDataState.Loading))\n\n  const {\n    predicates: {timeRange, bucketName, filters},\n  } = getState()\n  const orgID = getOrg(getState()).id\n\n  const data = {\n    start: moment(timeRange.lower).toISOString(),\n    stop: moment(timeRange.upper).toISOString(),\n  }\n\n  if (filters.length > 0) {\n    data['predicate'] = formatFilters(filters)\n  }\n\n  try {\n    const resp = await postDelete({\n      data,\n      query: {\n        orgID,\n        bucket: bucketName,\n      },\n    })\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(setDeletionStatus(RemoteDataState.Done))\n    dispatch(notify(predicateDeleteSucceeded()))\n    dispatch(resetPredicateState())\n  } catch {\n    dispatch(notify(predicateDeleteFailed()))\n    dispatch(setDeletionStatus(RemoteDataState.Error))\n    dispatch(resetPredicateState())\n  }\n}\n\nexport const executePreviewQuery = (query: string) => async (\n  dispatch,\n  getState: GetState\n) => {\n  dispatch(setPreviewStatus(RemoteDataState.Loading))\n  try {\n    const orgID = getOrg(getState()).id\n\n    const variableAssignments = getVariableAssignments(getState())\n    const windowVars = getWindowVars(query, variableAssignments)\n    const extern = buildVarsOption([...variableAssignments, ...windowVars])\n    const result = await runQuery(orgID, query, extern).promise\n\n    if (result.type === 'UNKNOWN_ERROR') {\n      throw new Error(result.message)\n    }\n\n    if (result.type === 'RATE_LIMIT_ERROR') {\n      dispatch(notify(rateLimitReached(result.retryAfter)))\n\n      throw new Error(result.message)\n    }\n\n    if (result.didTruncate) {\n      dispatch(notify(resultTooLarge(result.bytesRead)))\n    }\n\n    checkQueryResult(result.csv)\n\n    const files = [result.csv]\n    dispatch(setFiles(files))\n  } catch (e) {\n    if (e.name === 'CancellationError') {\n      return\n    }\n\n    console.error(e)\n    dispatch(setPreviewStatus(RemoteDataState.Error))\n  }\n}\n\nexport const setBucketAndKeys = (bucketName: string) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  const orgID = getOrg(getState()).id\n\n  try {\n    const query = `import \"influxdata/influxdb/v1\"\n    v1.tagKeys(bucket: \"${bucketName}\")\n    |> filter(fn: (r) => r._value != \"_stop\" and r._value != \"_start\")`\n    const keys = await extractBoxedCol(runQuery(orgID, query), '_value').promise\n    keys.sort()\n    dispatch(setBucketName(bucketName))\n    dispatch(setKeys(keys))\n  } catch {\n    dispatch(notify(setFilterKeyFailed()))\n    dispatch(setDeletionStatus(RemoteDataState.Error))\n  }\n}\n\nexport const setValuesByKey = (bucketName: string, keyName: string) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  const orgID = getOrg(getState()).id\n\n  try {\n    const query = `import \"influxdata/influxdb/v1\" v1.tagValues(bucket: \"${bucketName}\", tag: \"${keyName}\")`\n    const values = await extractBoxedCol(runQuery(orgID, query), '_value')\n      .promise\n    values.sort()\n    dispatch(setValues(values))\n  } catch {\n    dispatch(notify(setFilterValueFailed()))\n    dispatch(setDeletionStatus(RemoteDataState.Error))\n  }\n}\n","// Libraries\nimport React, {FC} from 'react'\nimport {\n  Button,\n  ButtonShape,\n  Form,\n  IconFont,\n  SelectDropdown,\n} from '@influxdata/clockface'\nimport {connect} from 'react-redux'\n\n// Components\nimport SearchableDropdown from 'src/shared/components/SearchableDropdown'\n\n// Types\nimport {Filter} from 'src/types'\n\n// Actions\nimport {setValuesByKey} from 'src/shared/actions/predicates'\n\ninterface Props {\n  bucket: string\n  filter: Filter\n  keys: string[]\n  onChange: (filter: Filter) => any\n  onDelete: () => any\n  shouldValidate: boolean\n  values: (string | number)[]\n}\n\ninterface DispatchProps {\n  setValuesByKey: typeof setValuesByKey\n}\n\nconst FilterRow: FC<Props & DispatchProps> = ({\n  bucket,\n  filter: {key, equality, value},\n  keys,\n  onChange,\n  onDelete,\n  setValuesByKey,\n  shouldValidate,\n  values,\n}) => {\n  const keyErrorMessage =\n    shouldValidate && key.trim() === '' ? 'Key cannot be empty' : null\n  const equalityErrorMessage =\n    shouldValidate && equality.trim() === '' ? 'Equality cannot be empty' : null\n  const valueErrorMessage =\n    shouldValidate && value.trim() === '' ? 'Value cannot be empty' : null\n\n  const onChangeKey = (input: string) => onChange({key: input, equality, value})\n  const onKeySelect = (input: string) => {\n    setValuesByKey(bucket, input)\n    onChange({key: input, equality, value})\n  }\n  const onChangeValue = (input: string) =>\n    onChange({key, equality, value: input})\n\n  const onChangeEquality = (e: string) => onChange({key, equality: e, value})\n\n  return (\n    <div className=\"delete-data-filter\">\n      <Form.Element\n        label=\"Tag Key\"\n        required={true}\n        errorMessage={keyErrorMessage}\n      >\n        <SearchableDropdown\n          className=\"dwp-filter-dropdown\"\n          searchTerm={key}\n          emptyText=\"No Tags Found\"\n          searchPlaceholder=\"Search keys...\"\n          selectedOption={key}\n          onSelect={onKeySelect}\n          onChangeSearchTerm={onChangeKey}\n          testID=\"dwp-filter-key-input\"\n          buttonTestID=\"tag-selector--dropdown-button\"\n          menuTestID=\"tag-selector--dropdown-menu\"\n          options={keys}\n        />\n      </Form.Element>\n      <Form.Element\n        label=\"Equality Filter\"\n        required={true}\n        errorMessage={equalityErrorMessage}\n      >\n        <SelectDropdown\n          className=\"dwp-filter-dropdown\"\n          options={['=', '!=']}\n          selectedOption={equality}\n          onSelect={onChangeEquality}\n        />\n      </Form.Element>\n      <Form.Element\n        label=\"Tag Value\"\n        required={true}\n        errorMessage={valueErrorMessage}\n      >\n        <SearchableDropdown\n          className=\"dwp-filter-dropdown\"\n          searchTerm={value}\n          emptyText=\"No Tags Found\"\n          searchPlaceholder=\"Search values...\"\n          selectedOption={value}\n          onSelect={onChangeValue}\n          onChangeSearchTerm={onChangeValue}\n          testID=\"dwp-filter-value-input\"\n          buttonTestID=\"tag-selector--dropdown-button\"\n          menuTestID=\"tag-selector--dropdown-menu\"\n          options={values}\n        />\n      </Form.Element>\n      <Button\n        className=\"delete-data-filter--remove\"\n        shape={ButtonShape.Square}\n        icon={IconFont.Remove}\n        onClick={onDelete}\n      />\n    </div>\n  )\n}\n\nconst mdtp = {setValuesByKey}\n\nexport default connect<{}, DispatchProps>(\n  null,\n  mdtp\n)(FilterRow)\n","// Libraries\nimport React, {FunctionComponent} from 'react'\nimport {Button, IconFont, ButtonShape, Panel} from '@influxdata/clockface'\n\n// Components\nimport FilterRow from 'src/shared/components/DeleteDataForm/FilterRow'\n\n// Types\nimport {Filter} from 'src/types'\n\ninterface Props {\n  bucket: string\n  filters: Filter[]\n  keys: string[]\n  onDeleteFilter: (index: number) => any\n  onSetFilter: (filter: Filter, index: number) => any\n  shouldValidate: boolean\n  values: (string | number)[]\n}\n\nconst FilterEditor: FunctionComponent<Props> = ({\n  bucket,\n  filters,\n  keys,\n  onDeleteFilter,\n  onSetFilter,\n  shouldValidate,\n  values,\n}) => {\n  return (\n    <div className=\"delete-data-filters\">\n      <Button\n        text=\"Add Filter\"\n        testID=\"add-filter-btn\"\n        icon={IconFont.Plus}\n        shape={ButtonShape.StretchToFit}\n        className=\"delete-data-filters--new-filter\"\n        onClick={() =>\n          onSetFilter({key: '', equality: '=', value: ''}, filters.length)\n        }\n      />\n      {filters.length > 0 ? (\n        <div className=\"delete-data-filters--filters\">\n          {filters.map((filter, i) => (\n            <FilterRow\n              bucket={bucket}\n              key={i}\n              keys={keys}\n              filter={filter}\n              onChange={filter => onSetFilter(filter, i)}\n              onDelete={() => onDeleteFilter(i)}\n              shouldValidate={shouldValidate}\n              values={values}\n            />\n          ))}\n        </div>\n      ) : (\n        <Panel className=\"delete-data-filters--no-filters\">\n          <Panel.Body>\n            <p>\n              If no filters are specified, all data points in the selected time\n              range will be marked for deletion.\n            </p>\n          </Panel.Body>\n        </Panel>\n      )}\n    </div>\n  )\n}\n\nexport default FilterEditor\n","// Libraries\nimport React, {FC} from 'react'\nimport {BorderType, ComponentSize, Table} from '@influxdata/clockface'\n\ninterface Props {\n  bodyData: string[]\n  headers: string[]\n}\n\nconst PreviewDataTable: FC<Props> = ({bodyData, headers}) => {\n  return (\n    <Table\n      borders={BorderType.Vertical}\n      fontSize={ComponentSize.ExtraSmall}\n      cellPadding={ComponentSize.ExtraSmall}\n    >\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Columns</Table.HeaderCell>\n          <Table.HeaderCell>Sample Values</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {headers.map((header, i) => (\n          <Table.Row key={header}>\n            <Table.Cell>{header}</Table.Cell>\n            <Table.Cell>{bodyData[i]}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  )\n}\n\nexport default PreviewDataTable\n","// Libraries\nimport React, {useRef, useState, FC} from 'react'\n\n// Components\nimport {\n  Dropdown,\n  Popover,\n  PopoverPosition,\n  PopoverInteraction,\n  Appearance,\n} from '@influxdata/clockface'\nimport DateRangePicker from 'src/shared/components/dateRangePicker/DateRangePicker'\n\n// Types\nimport {CustomTimeRange} from 'src/types'\nimport {pastHourTimeRange} from 'src/shared/constants/timeRanges'\nimport {\n  convertTimeRangeToCustom,\n  getTimeRangeLabel,\n} from 'src/shared/utils/duration'\n\ninterface Props {\n  timeRange: CustomTimeRange\n  onSetTimeRange: (timeRange: CustomTimeRange) => void\n}\n\nconst TimeRangeDropdown: FC<Props> = ({timeRange, onSetTimeRange}) => {\n  const [pickerActive, setPickerActive] = useState(false)\n  const buttonRef = useRef<HTMLDivElement>(null)\n\n  let dropdownLabel = 'Select a Time Range'\n\n  if (timeRange) {\n    dropdownLabel = getTimeRangeLabel(timeRange)\n  }\n\n  const handleApplyTimeRange = (timeRange: CustomTimeRange) => {\n    onSetTimeRange(timeRange)\n    setPickerActive(false)\n  }\n\n  return (\n    <div ref={buttonRef}>\n      <Dropdown.Button onClick={() => setPickerActive(!pickerActive)}>\n        {dropdownLabel}\n      </Dropdown.Button>\n      <Popover\n        appearance={Appearance.Outline}\n        position={PopoverPosition.Below}\n        triggerRef={buttonRef}\n        visible={pickerActive}\n        showEvent={PopoverInteraction.None}\n        hideEvent={PopoverInteraction.None}\n        distanceFromTrigger={8}\n        testID=\"timerange-popover\"\n        enableDefaultStyles={false}\n        contents={() => (\n          <DateRangePicker\n            timeRange={timeRange || convertTimeRangeToCustom(pastHourTimeRange)}\n            onSetTimeRange={handleApplyTimeRange}\n            onClose={() => setPickerActive(false)}\n            position={{position: 'relative'}}\n          />\n        )}\n      />\n    </div>\n  )\n}\n\nexport default TimeRangeDropdown\n","// Types\nimport {PredicatesState, RemoteDataState} from 'src/types'\nimport {TestState} from 'src/shared/selectors/canDelete.test'\n\nexport const setCanDelete = (state: PredicatesState | TestState): boolean =>\n  state.isSerious &&\n  state.deletionStatus === RemoteDataState.NotStarted &&\n  state.filters.every(f => !!f.key && !!f.value && !!f.equality)\n","// Libraries\nimport React, {FC, useEffect, useState} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {\n  Columns,\n  ComponentSize,\n  Form,\n  Grid,\n  InfluxColors,\n  Panel,\n} from '@influxdata/clockface'\nimport {extractBoxedCol} from 'src/timeMachine/apis/queryBuilder'\n\n// Utils\nimport {runQuery} from 'src/shared/apis/query'\n\n// Components\nimport BucketsDropdown from 'src/shared/components/DeleteDataForm/BucketsDropdown'\nimport Checkbox from 'src/shared/components/Checkbox'\nimport DeleteButton from 'src/shared/components/DeleteDataForm/DeleteButton'\nimport FilterEditor from 'src/shared/components/DeleteDataForm/FilterEditor'\nimport FluxTablesTransform from 'src/shared/components/FluxTablesTransform'\nimport PreviewDataTable from 'src/shared/components/DeleteDataForm/PreviewDataTable'\nimport TimeRangeDropdown from 'src/shared/components/DeleteDataForm/TimeRangeDropdown'\n\n// Types\nimport {Filter, RemoteDataState, CustomTimeRange, AppState} from 'src/types'\n\n// Selectors\nimport {setCanDelete} from 'src/shared/selectors/canDelete'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Actions\nimport {\n  deleteFilter,\n  deleteWithPredicate,\n  executePreviewQuery,\n  resetFilters,\n  setFilter,\n  setIsSerious,\n  setBucketAndKeys,\n  setTimeRange,\n} from 'src/shared/actions/predicates'\n\ninterface OwnProps {\n  handleDismiss: () => void\n}\n\ninterface StateProps {\n  canDelete: boolean\n  deletionStatus: RemoteDataState\n  files: string[]\n  filters: Filter[]\n  isSerious: boolean\n  keys: string[]\n  timeRange: CustomTimeRange\n  values: (string | number)[]\n  bucketName: string\n  orgID: string\n}\n\ninterface DispatchProps {\n  deleteFilter: typeof deleteFilter\n  deleteWithPredicate: typeof deleteWithPredicate\n  executePreviewQuery: typeof executePreviewQuery\n  resetFilters: typeof resetFilters\n  setFilter: typeof setFilter\n  setIsSerious: typeof setIsSerious\n  setBucketAndKeys: typeof setBucketAndKeys\n  setTimeRange: typeof setTimeRange\n}\n\nexport type Props = StateProps & DispatchProps & OwnProps\n\nconst DeleteDataForm: FC<Props> = ({\n  canDelete,\n  deleteFilter,\n  deletionStatus,\n  deleteWithPredicate,\n  executePreviewQuery,\n  files,\n  filters,\n  handleDismiss,\n  isSerious,\n  keys,\n  resetFilters,\n  setFilter,\n  setIsSerious,\n  setBucketAndKeys,\n  setTimeRange,\n  timeRange,\n  values,\n  bucketName,\n  orgID,\n}) => {\n  const [count, setCount] = useState('0')\n  useEffect(() => {\n    // trigger the setBucketAndKeys if the bucketName hasn't been set\n    if (bucketName) {\n      setBucketAndKeys(bucketName)\n    }\n  })\n\n  useEffect(() => {\n    if (filters.every(filter => filter.key !== '' && filter.value !== '')) {\n      handleDeleteDataPreview()\n    }\n  }, [filters])\n\n  const formatPredicatesForPreview = (predicates: Filter[]) => {\n    let result = ''\n    predicates.forEach(predicate => {\n      const {key, equality, value} = predicate\n      result += `\\n|> filter(fn: (r) => r.${key} ${\n        equality === '=' ? '==' : '!='\n      } \"${value}\")`\n    })\n    return result\n  }\n\n  const handleDeleteDataPreview = async () => {\n    const {lower, upper} = timeRange\n\n    let query = `from(bucket: \"${name}\")\n      |> range(start: ${moment(lower).toISOString()}, stop: ${moment(\n      upper\n    ).toISOString()})`\n\n    if (filters.length > 0) {\n      query += ` ${formatPredicatesForPreview(filters)}`\n    }\n\n    const countQuery = `${query}\n      |> count()\n      |> keep(columns: [\"_value\"])\n      |> sum()\n    `\n\n    const rowQuery = `${query}\n      |> limit(n: 1)\n      |> yield(name: \"sample_data\")\n    `\n    const [total] = await extractBoxedCol(runQuery(orgID, countQuery), '_value')\n      .promise\n    executePreviewQuery(rowQuery)\n    setCount(total)\n  }\n\n  const handleDelete = () => {\n    deleteWithPredicate()\n    handleDismiss()\n  }\n\n  const handleBucketClick = (selectedBucketName: string) => {\n    setBucketAndKeys(selectedBucketName)\n    resetFilters()\n  }\n\n  const formatNumber = (num: string) => {\n    if (num) {\n      return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    }\n    return 0\n  }\n\n  return (\n    <Form className=\"delete-data-form\">\n      <Grid>\n        <Grid.Row>\n          <Grid.Column widthXS={Columns.Four}>\n            <Form.Element label=\"Target Bucket\">\n              <BucketsDropdown\n                bucketName={bucketName}\n                onSetBucketName={handleBucketClick}\n              />\n            </Form.Element>\n          </Grid.Column>\n          <Grid.Column widthXS={Columns.Eight}>\n            <Form.Element label=\"Time Range\">\n              <TimeRangeDropdown\n                timeRange={timeRange}\n                onSetTimeRange={setTimeRange}\n              />\n            </Form.Element>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column widthXS={Columns.Twelve}>\n            <FilterEditor\n              bucket={name}\n              filters={filters}\n              keys={keys}\n              onDeleteFilter={deleteFilter}\n              onSetFilter={setFilter}\n              shouldValidate={isSerious}\n              values={values}\n            />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row className=\"delete-data-preview\">\n          <Grid.Column widthXS={Columns.Twelve}>\n            <Panel>\n              <Panel.Header size={ComponentSize.ExtraSmall}>\n                <p className=\"preview-data-margins\">Preview Data</p>\n              </Panel.Header>\n              <Panel.Body size={ComponentSize.ExtraSmall}>\n                {files && files.length > 0 && files[0].length > 1 && (\n                  <FluxTablesTransform files={files}>\n                    {tables => {\n                      const [table] = tables\n                      if (table && table.data) {\n                        let [headers, bodyData] = table.data\n                        headers = headers.slice(3)\n                        bodyData = bodyData.slice(3)\n                        return (\n                          <PreviewDataTable\n                            headers={headers}\n                            bodyData={bodyData}\n                          />\n                        )\n                      }\n                      return <span />\n                    }}\n                  </FluxTablesTransform>\n                )}\n              </Panel.Body>\n            </Panel>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column widthXS={Columns.Twelve}>\n            <Panel className=\"delete-data-form--danger-zone\">\n              <Panel.Header>\n                <h5>\n                  Danger Zone! You're deleting{' '}\n                  <span style={{color: InfluxColors.Dreamsicle}}>\n                    {formatNumber(count)}\n                  </span>{' '}\n                  records\n                </h5>\n              </Panel.Header>\n              <Panel.Body className=\"delete-data-form--confirm\">\n                <Checkbox\n                  testID=\"delete-checkbox\"\n                  label=\"I understand that this cannot be undone.\"\n                  checked={isSerious}\n                  onSetChecked={isSerious => setIsSerious(isSerious)}\n                />\n                <DeleteButton\n                  status={deletionStatus}\n                  valid={canDelete}\n                  onClick={handleDelete}\n                />\n              </Panel.Body>\n            </Panel>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {predicates} = state\n  const {\n    bucketName,\n    deletionStatus,\n    files,\n    filters,\n    keys,\n    isSerious,\n    timeRange,\n    values,\n  } = predicates\n\n  return {\n    bucketName,\n    canDelete: setCanDelete(predicates),\n    deletionStatus,\n    files,\n    filters,\n    isSerious,\n    keys,\n    timeRange,\n    values,\n    orgID: getOrg(state).id,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  deleteFilter,\n  deleteWithPredicate,\n  resetFilters,\n  executePreviewQuery,\n  setFilter,\n  setIsSerious,\n  setBucketAndKeys,\n  setTimeRange,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(DeleteDataForm)\n","// Libraries\nimport React, {FunctionComponent, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {Overlay, SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\n\n// Components\nimport DeleteDataForm from 'src/shared/components/DeleteDataForm/DeleteDataForm'\n\n// Actions\nimport {\n  resetPredicateState,\n  setBucketAndKeys,\n} from 'src/shared/actions/predicates'\n\n// Types\nimport {Bucket, AppState, RemoteDataState, ResourceType} from 'src/types'\nimport {getAll} from 'src/resources/selectors'\n\ninterface StateProps {\n  buckets: Bucket[]\n}\n\ninterface DispatchProps {\n  resetPredicateState: typeof resetPredicateState\n  setBucketAndKeys: typeof setBucketAndKeys\n}\n\ntype Props = WithRouterProps & DispatchProps & StateProps\n\nconst DeleteDataOverlay: FunctionComponent<Props> = ({\n  buckets,\n  router,\n  params: {orgID, bucketID},\n  resetPredicateState,\n  setBucketAndKeys,\n}) => {\n  const bucket = buckets.find(bucket => bucket.id === bucketID)\n\n  useEffect(() => {\n    if (bucket) {\n      setBucketAndKeys(bucket.name)\n    }\n  }, [])\n\n  const handleDismiss = () => {\n    resetPredicateState()\n    router.push(`/orgs/${orgID}/load-data/buckets/`)\n  }\n\n  return (\n    <Overlay visible={true}>\n      <Overlay.Container maxWidth={600}>\n        <Overlay.Header title=\"Delete Data\" onDismiss={handleDismiss} />\n        <Overlay.Body>\n          <SpinnerContainer\n            spinnerComponent={<TechnoSpinner />}\n            loading={bucket ? RemoteDataState.Done : RemoteDataState.Loading}\n          >\n            <DeleteDataForm handleDismiss={handleDismiss} />\n          </SpinnerContainer>\n        </Overlay.Body>\n      </Overlay.Container>\n    </Overlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  return {\n    buckets: getAll<Bucket>(state, ResourceType.Buckets),\n  }\n}\n\nconst mdtp: DispatchProps = {\n  resetPredicateState,\n  setBucketAndKeys,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(DeleteDataOverlay))\n","// Libraries\nimport React, {FunctionComponent, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {get} from 'lodash'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport DeleteDataForm from 'src/shared/components/DeleteDataForm/DeleteDataForm'\nimport GetResources from 'src/resources/components/GetResources'\n\n// Utils\nimport {getActiveQuery, getActiveTimeMachine} from 'src/timeMachine/selectors'\nimport {convertTimeRangeToCustom} from 'src/shared/utils/duration'\n\n// Types\nimport {AppState, TimeRange, ResourceType} from 'src/types'\n\n// Actions\nimport {\n  resetPredicateState,\n  setTimeRange,\n  setBucketAndKeys,\n} from 'src/shared/actions/predicates'\n\ninterface StateProps {\n  bucketNameFromDE: string\n  timeRangeFromDE: TimeRange\n}\n\ninterface DispatchProps {\n  resetPredicateState: typeof resetPredicateState\n  setTimeRange: typeof setTimeRange\n  setBucketAndKeys: typeof setBucketAndKeys\n}\n\ntype Props = StateProps & WithRouterProps & DispatchProps\n\nconst DeleteDataOverlay: FunctionComponent<Props> = ({\n  router,\n  params: {orgID},\n  bucketNameFromDE,\n  timeRangeFromDE,\n  resetPredicateState,\n  setTimeRange,\n  setBucketAndKeys,\n}) => {\n  useEffect(() => {\n    if (bucketNameFromDE) {\n      setBucketAndKeys(bucketNameFromDE)\n    }\n  }, [bucketNameFromDE])\n\n  useEffect(() => {\n    if (timeRangeFromDE) {\n      setTimeRange(convertTimeRangeToCustom(timeRangeFromDE))\n    }\n  }, [timeRangeFromDE])\n\n  const handleDismiss = () => {\n    resetPredicateState()\n    router.push(`/orgs/${orgID}/data-explorer`)\n  }\n\n  return (\n    <Overlay visible={true}>\n      <Overlay.Container maxWidth={600}>\n        <Overlay.Header title=\"Delete Data\" onDismiss={handleDismiss} />\n        <Overlay.Body>\n          <GetResources resources={[ResourceType.Buckets]}>\n            <DeleteDataForm handleDismiss={handleDismiss} />\n          </GetResources>\n        </Overlay.Body>\n      </Overlay.Container>\n    </Overlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const activeQuery = getActiveQuery(state)\n  const bucketNameFromDE = get(activeQuery, 'builderConfig.buckets.0')\n\n  const {timeRange} = getActiveTimeMachine(state)\n\n  return {\n    bucketNameFromDE,\n    timeRangeFromDE: timeRange,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  resetPredicateState,\n  setTimeRange,\n  setBucketAndKeys,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(DeleteDataOverlay))\n","// Libraries\nimport React, {FunctionComponent} from 'react'\n\n// Components\nimport {SelectGroup, ButtonShape} from '@influxdata/clockface'\n\n// Actions\nimport {setActiveTab} from 'src/timeMachine/actions'\n\n// Types\nimport {TimeMachineTab, DashboardDraftQuery} from 'src/types'\n\ninterface Props {\n  setActiveTab: typeof setActiveTab\n  activeTab: TimeMachineTab\n  draftQueries: DashboardDraftQuery[]\n}\n\nconst CheckAlertingButton: FunctionComponent<Props> = ({\n  setActiveTab,\n  activeTab,\n}) => {\n  const handleClick = (nextTab: TimeMachineTab) => () => {\n    if (activeTab !== nextTab) {\n      setActiveTab(nextTab)\n    }\n  }\n\n  return (\n    <SelectGroup shape={ButtonShape.StretchToFit} style={{width: '300px'}}>\n      <SelectGroup.Option\n        name=\"query-mode\"\n        key=\"queries\"\n        id=\"queries\"\n        titleText=\"queries\"\n        value=\"queries\"\n        active={activeTab === 'queries'}\n        onClick={handleClick('queries')}\n      >\n        1. Define Query\n      </SelectGroup.Option>\n      <SelectGroup.Option\n        name=\"query-mode\"\n        key=\"alerting\"\n        id=\"alerting\"\n        testID=\"checkeo--header alerting-tab\"\n        titleText=\"alerting\"\n        value=\"alerting\"\n        active={activeTab === 'alerting'}\n        onClick={handleClick('alerting')}\n      >\n        2. Configure Check\n      </SelectGroup.Option>\n    </SelectGroup>\n  )\n}\n\nexport default CheckAlertingButton\n","// Libraries\nimport React, {FunctionComponent, useRef, RefObject} from 'react'\n\n// Components\nimport {\n  SquareButton,\n  ButtonRef,\n  ComponentColor,\n  ComponentSize,\n  ComponentStatus,\n  Icon,\n  IconFont,\n  Popover,\n  PopoverInteraction,\n  PopoverPosition,\n  Appearance,\n} from '@influxdata/clockface'\n\ninterface Props {\n  onSave: () => void\n  status: ComponentStatus\n  className: string\n  checkType: string\n  singleField: boolean\n  singleAggregateFunc: boolean\n  oneOrMoreThresholds: boolean\n}\n\nconst CheckEOSaveButton: FunctionComponent<Props> = ({\n  onSave,\n  status,\n  className,\n  checkType,\n  singleField,\n  singleAggregateFunc,\n  oneOrMoreThresholds,\n}) => {\n  const triggerRef: RefObject<ButtonRef> = useRef(null)\n\n  return (\n    <>\n      <Popover\n        triggerRef={triggerRef}\n        visible={status !== ComponentStatus.Default}\n        position={PopoverPosition.Below}\n        enableDefaultStyles={false}\n        showEvent={PopoverInteraction.None}\n        hideEvent={PopoverInteraction.None}\n        color={ComponentColor.Secondary}\n        appearance={Appearance.Outline}\n        contents={() => (\n          <div className=\"query-checklist--popover\">\n            <p>{`To create a ${checkType} check, you must select:`}</p>\n            <ul className=\"query-checklist--list\">\n              <QueryChecklistItem text=\"One field\" selected={singleField} />\n              {checkType === 'threshold' && (\n                <>\n                  <QueryChecklistItem\n                    text=\"One aggregate function\"\n                    selected={singleAggregateFunc}\n                  />\n                  <QueryChecklistItem\n                    text=\"One or more thresholds\"\n                    selected={oneOrMoreThresholds}\n                  />\n                </>\n              )}\n            </ul>\n          </div>\n        )}\n      />\n      <SquareButton\n        ref={triggerRef}\n        className={className}\n        icon={IconFont.Checkmark}\n        color={ComponentColor.Success}\n        size={ComponentSize.Small}\n        status={status}\n        onClick={onSave}\n        testID=\"save-cell--button\"\n      />\n    </>\n  )\n}\n\nexport default CheckEOSaveButton\n\ninterface ChecklistItemProps {\n  selected: boolean\n  text: string\n}\n\nconst QueryChecklistItem: FunctionComponent<ChecklistItemProps> = ({\n  selected,\n  text,\n}) => {\n  const className = selected\n    ? 'query-checklist--item valid'\n    : 'query-checklist--item error'\n  const icon = selected ? IconFont.Checkmark : IconFont.Remove\n\n  return (\n    <li className={className}>\n      <Icon glyph={icon} />\n      {text}\n    </li>\n  )\n}\n","// Libraries\nimport React, {useState, FC, MouseEvent} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport RenamablePageTitle from 'src/pageLayout/components/RenamablePageTitle'\nimport {\n  SquareButton,\n  ComponentSize,\n  ComponentStatus,\n  IconFont,\n  Page,\n} from '@influxdata/clockface'\nimport CheckAlertingButton from 'src/checks/components/CheckAlertingButton'\nimport CheckEOSaveButton from 'src/checks/components/CheckEOSaveButton'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\nimport {\n  isCheckSaveable,\n  isDraftQueryAlertable,\n} from 'src/timeMachine/utils/queryBuilder'\n\n// Actions\nimport {setActiveTab} from 'src/timeMachine/actions'\n\n// Constants\nimport {DEFAULT_CHECK_NAME, CHECK_NAME_MAX_LENGTH} from 'src/alerting/constants'\n\n// Types\nimport {\n  CheckType,\n  TimeMachineTab,\n  RemoteDataState,\n  AppState,\n  DashboardDraftQuery,\n  Threshold,\n} from 'src/types'\nimport {\n  createCheckFromTimeMachine,\n  updateCheckFromTimeMachine,\n} from 'src/checks/actions/thunks'\n\ninterface OwnProps {\n  name: string\n  onSetName: (name: string) => void\n  onCancel: () => void\n  onSave: typeof createCheckFromTimeMachine | typeof updateCheckFromTimeMachine\n}\n\ninterface StateProps {\n  activeTab: TimeMachineTab\n  draftQueries: DashboardDraftQuery[]\n  checkType: CheckType\n  thresholds: Threshold[]\n}\n\ninterface DispatchProps {\n  setActiveTab: typeof setActiveTab\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst saveButtonClass = 'veo-header--save-cell-button'\n\nconst CheckEOHeader: FC<Props> = ({\n  name,\n  onSetName,\n  onCancel,\n  onSave,\n  setActiveTab,\n  activeTab,\n  draftQueries,\n  checkType,\n  thresholds,\n}) => {\n  const [saveStatus, setSaveStatus] = useState(RemoteDataState.NotStarted)\n\n  const handleSave = () => {\n    if (saveStatus === RemoteDataState.Loading) {\n      return\n    }\n\n    setSaveStatus(RemoteDataState.Loading)\n    onSave()\n    setSaveStatus(RemoteDataState.NotStarted)\n  }\n\n  const handleClickOutsideTitle = (e: MouseEvent<HTMLElement>) => {\n    if ((e.target as Element).classList.contains(saveButtonClass)) {\n      handleSave()\n    }\n  }\n\n  const saveButtonStatus = () => {\n    if (!isCheckSaveable(draftQueries, checkType, thresholds)) {\n      return ComponentStatus.Disabled\n    }\n\n    if (saveStatus == RemoteDataState.Loading) {\n      return ComponentStatus.Loading\n    }\n\n    return ComponentStatus.Default\n  }\n\n  const {singleField, singleAggregateFunc} = isDraftQueryAlertable(draftQueries)\n  const oneOrMoreThresholds =\n    checkType === 'threshold' && thresholds && !!thresholds.length\n\n  return (\n    <Page.Header fullWidth={true}>\n      <Page.HeaderLeft>\n        <RenamablePageTitle\n          name={name}\n          onRename={onSetName}\n          placeholder={DEFAULT_CHECK_NAME}\n          maxLength={CHECK_NAME_MAX_LENGTH}\n          onClickOutside={handleClickOutsideTitle}\n        />\n      </Page.HeaderLeft>\n      <Page.HeaderCenter>\n        {activeTab !== 'customCheckQuery' && (\n          <CheckAlertingButton\n            activeTab={activeTab}\n            draftQueries={draftQueries}\n            setActiveTab={setActiveTab}\n          />\n        )}\n      </Page.HeaderCenter>\n      <Page.HeaderRight>\n        <SquareButton\n          icon={IconFont.Remove}\n          onClick={onCancel}\n          size={ComponentSize.Small}\n        />\n        <CheckEOSaveButton\n          status={saveButtonStatus()}\n          onSave={handleSave}\n          className={saveButtonClass}\n          checkType={checkType}\n          singleField={singleField}\n          singleAggregateFunc={singleAggregateFunc}\n          oneOrMoreThresholds={oneOrMoreThresholds}\n        />\n      </Page.HeaderRight>\n    </Page.Header>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {activeTab, draftQueries} = getActiveTimeMachine(state)\n  const {\n    alertBuilder: {type, thresholds},\n  } = state\n\n  return {activeTab, draftQueries, checkType: type, thresholds}\n}\n\nconst mdtp: DispatchProps = {\n  setActiveTab: setActiveTab,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(CheckEOHeader)\n","// Libraries\nimport React, {FunctionComponent, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Overlay, SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\nimport CheckEOHeader from 'src/checks/components/CheckEOHeader'\nimport TimeMachine from 'src/timeMachine/components/TimeMachine'\n\n// Actions\nimport {createCheckFromTimeMachine} from 'src/checks/actions/thunks'\nimport {setActiveTimeMachine} from 'src/timeMachine/actions'\nimport {\n  resetAlertBuilder,\n  updateName,\n  initializeAlertBuilder,\n} from 'src/alerting/actions/alertBuilder'\n\n// Utils\nimport {createView} from 'src/views/helpers'\n\n// Types\nimport {AppState, RemoteDataState, CheckViewProperties} from 'src/types'\n\ninterface DispatchProps {\n  onSetActiveTimeMachine: typeof setActiveTimeMachine\n  onSaveCheckFromTimeMachine: typeof createCheckFromTimeMachine\n  onResetAlertBuilder: typeof resetAlertBuilder\n  onUpdateAlertBuilderName: typeof updateName\n  onInitializeAlertBuilder: typeof initializeAlertBuilder\n}\n\ninterface StateProps {\n  checkName: string\n  status: RemoteDataState\n}\n\ntype Props = DispatchProps & StateProps & WithRouterProps\n\nconst NewCheckOverlay: FunctionComponent<Props> = ({\n  status,\n  params: {orgID},\n  checkName,\n  router,\n  onSaveCheckFromTimeMachine,\n  onSetActiveTimeMachine,\n  onResetAlertBuilder,\n  onUpdateAlertBuilderName,\n  onInitializeAlertBuilder,\n}) => {\n  useEffect(() => {\n    const view = createView<CheckViewProperties>('threshold')\n    onInitializeAlertBuilder('threshold')\n    onSetActiveTimeMachine('alerting', {\n      view,\n    })\n  }, [])\n\n  const handleClose = () => {\n    router.push(`/orgs/${orgID}/alerting`)\n    onResetAlertBuilder()\n  }\n\n  return (\n    <Overlay visible={true} className=\"veo-overlay\">\n      <div className=\"veo\">\n        <SpinnerContainer\n          spinnerComponent={<TechnoSpinner />}\n          loading={status || RemoteDataState.Loading}\n        >\n          <CheckEOHeader\n            key={checkName}\n            name={checkName}\n            onSetName={onUpdateAlertBuilderName}\n            onCancel={handleClose}\n            onSave={onSaveCheckFromTimeMachine}\n          />\n          <div className=\"veo-contents\">\n            <TimeMachine />\n          </div>\n        </SpinnerContainer>\n      </div>\n    </Overlay>\n  )\n}\n\nconst mstp = ({alertBuilder: {name, status}}: AppState): StateProps => {\n  return {checkName: name, status}\n}\n\nconst mdtp: DispatchProps = {\n  onSetActiveTimeMachine: setActiveTimeMachine,\n  onSaveCheckFromTimeMachine: createCheckFromTimeMachine,\n  onResetAlertBuilder: resetAlertBuilder,\n  onUpdateAlertBuilderName: updateName,\n  onInitializeAlertBuilder: initializeAlertBuilder,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(withRouter(NewCheckOverlay))\n","// Libraries\nimport React, {FunctionComponent, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Components\nimport {Overlay, SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\nimport CheckEOHeader from 'src/checks/components/CheckEOHeader'\nimport TimeMachine from 'src/timeMachine/components/TimeMachine'\n\n// Actions\nimport {createCheckFromTimeMachine} from 'src/checks/actions/thunks'\nimport {setActiveTimeMachine} from 'src/timeMachine/actions'\nimport {\n  resetAlertBuilder,\n  updateName,\n  initializeAlertBuilder,\n} from 'src/alerting/actions/alertBuilder'\n\n// Utils\nimport {createView} from 'src/views/helpers'\n\n// Types\nimport {AppState, RemoteDataState, CheckViewProperties} from 'src/types'\n\ninterface DispatchProps {\n  onSetActiveTimeMachine: typeof setActiveTimeMachine\n  onSaveCheckFromTimeMachine: typeof createCheckFromTimeMachine\n  onResetAlertBuilder: typeof resetAlertBuilder\n  onUpdateAlertBuilderName: typeof updateName\n  onInitializeAlertBuilder: typeof initializeAlertBuilder\n}\n\ninterface StateProps {\n  checkName: string\n  status: RemoteDataState\n}\n\ntype Props = DispatchProps & StateProps & WithRouterProps\n\nconst NewCheckOverlay: FunctionComponent<Props> = ({\n  params: {orgID},\n  status,\n  checkName,\n  router,\n  onSaveCheckFromTimeMachine,\n  onSetActiveTimeMachine,\n  onResetAlertBuilder,\n  onUpdateAlertBuilderName,\n  onInitializeAlertBuilder,\n}) => {\n  useEffect(() => {\n    const view = createView<CheckViewProperties>('deadman')\n    onInitializeAlertBuilder('deadman')\n    onSetActiveTimeMachine('alerting', {\n      view,\n    })\n  }, [])\n\n  const handleClose = () => {\n    router.push(`/orgs/${orgID}/alerting`)\n    onResetAlertBuilder()\n  }\n\n  return (\n    <Overlay visible={true} className=\"veo-overlay\">\n      <div className=\"veo\">\n        <SpinnerContainer\n          spinnerComponent={<TechnoSpinner />}\n          loading={status || RemoteDataState.Loading}\n        >\n          <CheckEOHeader\n            key={checkName}\n            name={checkName}\n            onSetName={onUpdateAlertBuilderName}\n            onCancel={handleClose}\n            onSave={onSaveCheckFromTimeMachine}\n          />\n          <div className=\"veo-contents\">\n            <TimeMachine />\n          </div>\n        </SpinnerContainer>\n      </div>\n    </Overlay>\n  )\n}\n\nconst mstp = ({alertBuilder: {name, status}}: AppState): StateProps => {\n  return {checkName: name, status}\n}\n\nconst mdtp: DispatchProps = {\n  onSetActiveTimeMachine: setActiveTimeMachine,\n  onSaveCheckFromTimeMachine: createCheckFromTimeMachine,\n  onResetAlertBuilder: resetAlertBuilder,\n  onUpdateAlertBuilderName: updateName,\n  onInitializeAlertBuilder: initializeAlertBuilder,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(withRouter(NewCheckOverlay))\n","// Libraries\nimport React, {FunctionComponent, useEffect} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\n\n// Components\nimport {Overlay, SpinnerContainer, TechnoSpinner} from '@influxdata/clockface'\nimport CheckEOHeader from 'src/checks/components/CheckEOHeader'\nimport TimeMachine from 'src/timeMachine/components/TimeMachine'\n\n// Utils\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\n\n// Actions\nimport {\n  updateCheckFromTimeMachine,\n  getCheckForTimeMachine,\n} from 'src/checks/actions/thunks'\nimport {executeQueries} from 'src/timeMachine/actions/queries'\nimport {resetAlertBuilder, updateName} from 'src/alerting/actions/alertBuilder'\n\n// Types\nimport {AppState, RemoteDataState, TimeMachineID, QueryView} from 'src/types'\n\ninterface DispatchProps {\n  onSaveCheckFromTimeMachine: typeof updateCheckFromTimeMachine\n  onGetCheckForTimeMachine: typeof getCheckForTimeMachine\n  onExecuteQueries: typeof executeQueries\n  onResetAlertBuilder: typeof resetAlertBuilder\n  onUpdateAlertBuilderName: typeof updateName\n}\n\ninterface StateProps {\n  view: QueryView | null\n  status: RemoteDataState\n  activeTimeMachineID: TimeMachineID\n  loadedCheckID: string\n  checkName: string\n}\n\ntype Props = WithRouterProps & DispatchProps & StateProps\n\nconst EditCheckEditorOverlay: FunctionComponent<Props> = ({\n  onUpdateAlertBuilderName,\n  onResetAlertBuilder,\n  onSaveCheckFromTimeMachine,\n  onExecuteQueries,\n  onGetCheckForTimeMachine,\n  activeTimeMachineID,\n  status,\n  router,\n  params: {checkID, orgID},\n  checkName,\n  loadedCheckID,\n  view,\n}) => {\n  useEffect(() => {\n    onGetCheckForTimeMachine(checkID)\n  }, [checkID])\n\n  useEffect(() => {\n    onExecuteQueries()\n  }, [get(view, 'properties.queries[0]', null)])\n\n  const handleClose = () => {\n    router.push(`/orgs/${orgID}/alerting`)\n    onResetAlertBuilder()\n  }\n\n  let loadingStatus = RemoteDataState.Loading\n\n  if (status === RemoteDataState.Error) {\n    loadingStatus = RemoteDataState.Error\n  }\n  if (\n    status === RemoteDataState.Done &&\n    activeTimeMachineID === 'alerting' &&\n    loadedCheckID === checkID\n  ) {\n    loadingStatus = RemoteDataState.Done\n  }\n\n  return (\n    <Overlay visible={true} className=\"veo-overlay\">\n      <div className=\"veo\">\n        <SpinnerContainer\n          spinnerComponent={<TechnoSpinner />}\n          loading={loadingStatus}\n        >\n          <CheckEOHeader\n            name={checkName}\n            onSetName={onUpdateAlertBuilderName}\n            onCancel={handleClose}\n            onSave={onSaveCheckFromTimeMachine}\n          />\n          <div className=\"veo-contents\">\n            <TimeMachine />\n          </div>\n        </SpinnerContainer>\n      </div>\n    </Overlay>\n  )\n}\n\nconst mstp = (state: AppState): StateProps => {\n  const {\n    timeMachines: {activeTimeMachineID},\n    alertBuilder: {status, name, id},\n  } = state\n\n  const {view} = getActiveTimeMachine(state)\n\n  return {\n    loadedCheckID: id,\n    checkName: name,\n    status,\n    activeTimeMachineID,\n    view,\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onGetCheckForTimeMachine: getCheckForTimeMachine,\n  onSaveCheckFromTimeMachine: updateCheckFromTimeMachine,\n  onExecuteQueries: executeQueries,\n  onResetAlertBuilder: resetAlertBuilder,\n  onUpdateAlertBuilderName: updateName,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(withRouter(EditCheckEditorOverlay))\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {Form, Grid, Columns} from '@influxdata/clockface'\nimport DurationInput from 'src/shared/components/DurationInput'\n\n// Types\nimport {RuleState} from './RuleOverlay.reducer'\nimport {DURATIONS} from 'src/timeMachine/constants/queryBuilder'\nimport {NotificationRuleDraft} from 'src/types'\nimport {CHECK_OFFSET_OPTIONS} from 'src/alerting/constants'\n\ninterface Props {\n  rule: RuleState\n  onChange: (key: keyof NotificationRuleDraft) => (value: string) => void\n}\n\nconst RuleSchedule: FC<Props> = ({rule, onChange}) => {\n  const {every, offset} = rule\n\n  return (\n    <Grid.Row>\n      <Grid.Column widthXS={Columns.Four}>\n        <Form.Element label=\"Schedule Every\">\n          <DurationInput\n            value={every || ''}\n            onSubmit={onChange('every')}\n            suggestions={DURATIONS}\n            placeholder=\"1d3h30s\"\n            testID=\"rule-schedule-every--input\"\n          />\n        </Form.Element>\n      </Grid.Column>\n\n      <Grid.Column widthXS={Columns.Four}>\n        <Form.Element label=\"Offset\">\n          <DurationInput\n            value={offset || ''}\n            onSubmit={onChange('offset')}\n            suggestions={CHECK_OFFSET_OPTIONS}\n            placeholder=\"10m\"\n            testID=\"rule-schedule-offset--input\"\n          />\n        </Form.Element>\n      </Grid.Column>\n    </Grid.Row>\n  )\n}\n\nexport default RuleSchedule\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {\n  Dropdown,\n  ComponentColor,\n  InfluxColors,\n  DropdownMenuTheme,\n} from '@influxdata/clockface'\n\n// Types\nimport {RuleStatusLevel} from 'src/types'\n\ntype LevelType = 'currentLevel' | 'previousLevel'\ntype ColorLevel = {hex: InfluxColors; display: string; value: RuleStatusLevel}\n\ninterface Props {\n  selectedLevel: RuleStatusLevel\n  otherLevel: RuleStatusLevel\n  type: LevelType\n  onClickLevel: (type: LevelType, level: RuleStatusLevel) => void\n}\n\nconst RuleLevelsDropdown: FC<Props> = ({\n  type,\n  selectedLevel,\n  otherLevel,\n  onClickLevel,\n}) => {\n  let levels: ColorLevel[] = [\n    {display: 'CRIT', hex: InfluxColors.Fire, value: 'CRIT'},\n    {display: 'INFO', hex: InfluxColors.Ocean, value: 'INFO'},\n    {display: 'WARN', hex: InfluxColors.Thunder, value: 'WARN'},\n    {display: 'OK', hex: InfluxColors.Viridian, value: 'OK'},\n    {display: 'ANY', hex: InfluxColors.Sidewalk, value: 'ANY'},\n  ]\n  if (otherLevel) {\n    levels = levels.filter(l => l.value !== otherLevel)\n  }\n\n  const selected = levels.find(l => l.value === selectedLevel)\n\n  if (!selected) {\n    throw new Error('Unknown level type provided to <LevelsDropdown/>')\n  }\n\n  const button = (active, onClick) => (\n    <Dropdown.Button\n      color={ComponentColor.Default}\n      active={active}\n      onClick={onClick}\n      testID={`levels--dropdown--button ${type}`}\n    >\n      <div className=\"color-dropdown--item\">\n        <div\n          className=\"color-dropdown--swatch\"\n          style={{backgroundColor: selected.hex}}\n        />\n        <div className=\"color-dropdown--name\">{selected.value}</div>\n      </div>\n    </Dropdown.Button>\n  )\n\n  const items = levels.map(({value, display, hex}) => (\n    <Dropdown.Item\n      key={value}\n      id={value}\n      value={value}\n      onClick={() => onClickLevel(type, value)}\n      testID={`levels--dropdown-item ${value}`}\n    >\n      <div className=\"color-dropdown--item\">\n        <div\n          className=\"color-dropdown--swatch\"\n          style={{backgroundColor: hex}}\n        />\n        <div className=\"color-dropdown--name\">{display}</div>\n      </div>\n    </Dropdown.Item>\n  ))\n\n  const menu = onCollapse => (\n    <Dropdown.Menu theme={DropdownMenuTheme.Onyx} onCollapse={onCollapse}>\n      {items}\n    </Dropdown.Menu>\n  )\n\n  return (\n    <Dropdown button={button} menu={menu} testID={`levels--dropdown ${type}`} />\n  )\n}\n\nexport default RuleLevelsDropdown\n","// Libraries\nimport {v4} from 'uuid'\nimport {omit} from 'lodash'\n\n// Types\nimport {NotificationRuleDraft} from 'src/types'\nimport {Action} from './RuleOverlay.actions'\n\nexport type LevelType = 'currentLevel' | 'previousLevel'\nexport type RuleState = NotificationRuleDraft\n\nexport const reducer = (state: RuleState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_RULE': {\n      const {rule} = action\n      return {...state, ...rule}\n    }\n\n    case 'SET_ACTIVE_SCHEDULE': {\n      const {schedule} = action\n      let newState: RuleState = state\n\n      if (schedule === 'every') {\n        newState = omit(state, 'cron')\n      }\n\n      if (schedule === 'cron') {\n        newState = omit(state, 'every')\n      }\n\n      return {...newState, [schedule]: ''}\n    }\n\n    case 'UPDATE_STATUS_RULES': {\n      const {statusRule} = action\n      const statusRules = state.statusRules.map(s => {\n        if (s.cid !== statusRule.cid) {\n          return s\n        }\n\n        return statusRule\n      })\n\n      return {...state, statusRules}\n    }\n\n    case 'ADD_TAG_RULE': {\n      const {tagRule} = action\n      return {\n        ...state,\n        tagRules: [...state.tagRules, {...tagRule, id: v4()}],\n      }\n    }\n\n    case 'UPDATE_TAG_RULES': {\n      const {tagRule} = action\n      const tagRules = state.tagRules.map(t => {\n        if (t.cid !== tagRule.cid) {\n          return t\n        }\n\n        return tagRule\n      })\n\n      return {...state, tagRules}\n    }\n\n    case 'DELETE_STATUS_RULE': {\n      const {statusRuleID} = action\n      const statusRules = state.statusRules.filter(s => {\n        return s.cid !== statusRuleID\n      })\n\n      return {\n        ...state,\n        statusRules,\n      }\n    }\n\n    case 'DELETE_TAG_RULE': {\n      const {tagRuleID} = action\n\n      const tagRules = state.tagRules.filter(tr => {\n        return tr.cid !== tagRuleID\n      })\n\n      return {...state, tagRules}\n    }\n\n    case 'UPDATE_STATUS_LEVEL': {\n      const {levelType, level, statusID} = action\n\n      const statusRules = state.statusRules.map(status => {\n        if (status.cid !== statusID) {\n          return status\n        }\n\n        const value = {\n          ...status.value,\n          [levelType]: level,\n        }\n\n        return {...status, value}\n      })\n\n      return {...state, statusRules}\n    }\n\n    case 'SET_TAG_RULE_OPERATOR': {\n      const {tagRuleID, operator} = action\n      const tagRules = state.tagRules.map(tagRule => {\n        if (tagRule.cid !== tagRuleID) {\n          return tagRule\n        }\n\n        return {\n          ...tagRule,\n          value: {\n            ...tagRule.value,\n            operator,\n          },\n        }\n      })\n\n      return {...state, tagRules}\n    }\n\n    default:\n      const neverAction: never = action\n\n      throw new Error(\n        `Unhandled action \"${\n          (neverAction as any).type\n        }\" in RuleOverlay.reducer.ts`\n      )\n  }\n}\n","// Libraries\nimport React, {\n  FC,\n  Dispatch,\n  createContext,\n  useReducer,\n  useRef,\n  useContext,\n} from 'react'\n\n// Reducer\nimport {Action} from './RuleOverlay.actions'\nimport {RuleState, reducer} from './RuleOverlay.reducer'\n\nconst RuleStateContext = createContext<RuleState>(null)\nconst RuleDispatchContext = createContext<Dispatch<Action>>(null)\n\nexport const useRuleState = (): RuleState => {\n  return useContext(RuleStateContext)\n}\n\nexport const useRuleDispatch = (): Dispatch<Action> => {\n  return useContext(RuleDispatchContext)\n}\n\nconst RuleOverlayProvider: FC<{initialState: RuleState}> = ({\n  initialState,\n  children,\n}) => {\n  const prevInitialStateRef = useRef(initialState)\n\n  const [state, dispatch] = useReducer((state: RuleState, action: Action) => {\n    if (prevInitialStateRef.current !== initialState) {\n      prevInitialStateRef.current = initialState\n\n      return initialState\n    }\n\n    return reducer(state, action)\n  }, initialState)\n\n  return (\n    <RuleStateContext.Provider value={state}>\n      <RuleDispatchContext.Provider value={dispatch}>\n        {children}\n      </RuleDispatchContext.Provider>\n    </RuleStateContext.Provider>\n  )\n}\n\nexport default RuleOverlayProvider\n","// Libraries\nimport React, {FC} from 'react'\n\n// Types\nimport {StatusRuleDraft} from 'src/types'\n\n// Components\nimport {Dropdown} from '@influxdata/clockface'\n\n// Utils\nimport {useRuleDispatch} from './RuleOverlayProvider'\nimport {\n  CHANGES,\n  changeStatusRule,\n  activeChange,\n} from 'src/notifications/rules/utils'\n\ninterface Props {\n  status: StatusRuleDraft\n}\n\nconst StatusChangeDropdown: FC<Props> = ({status}) => {\n  const dispatch = useRuleDispatch()\n\n  const statusChange = (s, c) =>\n    dispatch({\n      type: 'UPDATE_STATUS_RULES',\n      statusRule: changeStatusRule(s, c),\n    })\n\n  const items = CHANGES.map(change => (\n    <Dropdown.Item\n      key={change}\n      id={change}\n      value={change}\n      testID={`status-change--dropdown-item ${change}`}\n      onClick={() => statusChange(status, change)}\n    >\n      {change}\n    </Dropdown.Item>\n  ))\n\n  const buttonText = activeChange(status)\n\n  const button = (active, onClick) => (\n    <Dropdown.Button\n      testID=\"status-change--dropdown--button\"\n      active={active}\n      onClick={onClick}\n    >\n      {buttonText}\n    </Dropdown.Button>\n  )\n\n  const menu = onCollapse => (\n    <Dropdown.Menu onCollapse={onCollapse}>{items}</Dropdown.Menu>\n  )\n\n  return (\n    <Dropdown button={button} menu={menu} testID=\"status-change--dropdown\" />\n  )\n}\n\nexport default StatusChangeDropdown\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {\n  FlexBox,\n  TextBlock,\n  FlexDirection,\n  ComponentSize,\n} from '@influxdata/clockface'\nimport RuleLevelsDropdown from 'src/notifications/rules/components/RuleLevelsDropdown'\nimport StatusChangeDropdown from 'src/notifications/rules/components/StatusChangeDropdown'\nimport {LevelType} from 'src/notifications/rules/components/RuleOverlay.reducer'\n\n// Utils\nimport {useRuleDispatch} from './RuleOverlayProvider'\n\n// Types\nimport {StatusRuleDraft, RuleStatusLevel} from 'src/types'\n\ninterface Props {\n  status: StatusRuleDraft\n}\n\nconst StatusLevels: FC<Props> = ({status}) => {\n  const {currentLevel, previousLevel} = status.value\n  const dispatch = useRuleDispatch()\n\n  const onClickLevel = (levelType: LevelType, level: RuleStatusLevel) => {\n    dispatch({\n      type: 'UPDATE_STATUS_LEVEL',\n      statusID: status.cid,\n      levelType,\n      level,\n    })\n  }\n\n  return (\n    <FlexBox direction={FlexDirection.Row} margin={ComponentSize.Small}>\n      <TextBlock text=\"When status\" />\n      <FlexBox.Child grow={0} basis={140}>\n        <StatusChangeDropdown status={status} />\n      </FlexBox.Child>\n      {!!previousLevel && (\n        <FlexBox.Child grow={0} basis={140}>\n          <RuleLevelsDropdown\n            type=\"previousLevel\"\n            selectedLevel={previousLevel}\n            otherLevel={currentLevel}\n            onClickLevel={onClickLevel}\n          />\n        </FlexBox.Child>\n      )}\n      {!!previousLevel && <TextBlock text=\"to\" />}\n      <FlexBox.Child grow={0} basis={140}>\n        <RuleLevelsDropdown\n          type=\"currentLevel\"\n          selectedLevel={currentLevel}\n          otherLevel={previousLevel}\n          onClickLevel={onClickLevel}\n        />\n      </FlexBox.Child>\n    </FlexBox>\n  )\n}\n\nexport default StatusLevels\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {Panel, ComponentSize} from '@influxdata/clockface'\nimport StatusLevels from 'src/notifications/rules/components/StatusLevels'\n\n// Types\nimport {StatusRuleDraft} from 'src/types'\n\ninterface Props {\n  status: StatusRuleDraft\n}\n\nconst StatusRuleComponent: FC<Props> = ({status}) => {\n  return (\n    <Panel testID=\"status-rule\">\n      <Panel.Body size={ComponentSize.ExtraSmall}>\n        <StatusLevels status={status} />\n      </Panel.Body>\n    </Panel>\n  )\n}\n\nexport default StatusRuleComponent\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {Dropdown} from '@influxdata/clockface'\n\n// Types\nimport {TagRuleDraft} from 'src/types'\n\ninterface Props {\n  selectedOperator: Operator\n  onSelect: (operator: Operator) => void\n}\n\nexport type Operator = TagRuleDraft['value']['operator']\n\nconst operators: {operator: Operator; display: string}[] = [\n  {operator: 'equal', display: '=='},\n]\n\nconst TagRuleOperatorDropdown: FC<Props> = ({selectedOperator, onSelect}) => {\n  const items = operators.map(({operator, display}) => (\n    <Dropdown.Item\n      key={operator}\n      id={operator}\n      value={display}\n      testID={`tag-rule--dropdown-item ${operator}`}\n      onClick={() => onSelect(operator)}\n    >\n      {display}\n    </Dropdown.Item>\n  ))\n\n  const buttonText = operators.find(o => o.operator === selectedOperator)\n\n  const button = (active, onClick) => (\n    <Dropdown.Button\n      testID=\"tag-rule--dropdown--button\"\n      active={active}\n      onClick={onClick}\n    >\n      {buttonText.display}\n    </Dropdown.Button>\n  )\n\n  const menu = onCollapse => (\n    <Dropdown.Menu onCollapse={onCollapse}>{items}</Dropdown.Menu>\n  )\n\n  return <Dropdown menu={menu} button={button} testID=\"tag-rule--dropdown\" />\n}\n\nexport default TagRuleOperatorDropdown\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {\n  Input,\n  Panel,\n  DismissButton,\n  TextBlock,\n  FlexBox,\n  ComponentSize,\n  FlexDirection,\n  ComponentColor,\n  InfluxColors,\n} from '@influxdata/clockface'\n\nimport TagRuleOperatorDropdown, {\n  Operator,\n} from 'src/notifications/rules/components/TagRuleOperatorDropdown'\n\n// Utils\nimport {useRuleDispatch} from './RuleOverlayProvider'\n\n// Types\nimport {TagRuleDraft} from 'src/types'\n\ninterface Props {\n  tagRule: TagRuleDraft\n}\n\nconst TagRule: FC<Props> = ({tagRule}) => {\n  const {key, value, operator} = tagRule.value\n  const dispatch = useRuleDispatch()\n\n  const onChange = ({target}) => {\n    const {name, value} = target\n\n    const newValue = {\n      ...tagRule.value,\n      [name]: value,\n    }\n\n    dispatch({\n      type: 'UPDATE_TAG_RULES',\n      tagRule: {\n        ...tagRule,\n        value: newValue,\n      },\n    })\n  }\n\n  const onSelectOperator = (operator: Operator) => {\n    dispatch({\n      type: 'SET_TAG_RULE_OPERATOR',\n      tagRuleID: tagRule.cid,\n      operator,\n    })\n  }\n\n  const onDelete = () => {\n    dispatch({\n      type: 'DELETE_TAG_RULE',\n      tagRuleID: tagRule.cid,\n    })\n  }\n\n  return (\n    <Panel testID=\"tag-rule\">\n      <DismissButton onClick={onDelete} color={ComponentColor.Default} />\n      <Panel.Body size={ComponentSize.ExtraSmall}>\n        <FlexBox direction={FlexDirection.Row} margin={ComponentSize.Small}>\n          <TextBlock\n            text=\"AND\"\n            textColor={InfluxColors.Honeydew}\n            backgroundColor={InfluxColors.Pepper}\n          />\n          <TextBlock text=\"When\" />\n          <FlexBox.Child grow={1}>\n            <Input\n              testID=\"tag-rule-key--input\"\n              placeholder=\"Tag\"\n              value={key}\n              name=\"key\"\n              onChange={onChange}\n            />\n          </FlexBox.Child>\n          <FlexBox.Child grow={0} basis={60}>\n            <TagRuleOperatorDropdown\n              selectedOperator={operator}\n              onSelect={onSelectOperator}\n            />\n          </FlexBox.Child>\n          <FlexBox.Child grow={1}>\n            <Input\n              testID=\"tag-rule-key--input\"\n              placeholder=\"Value\"\n              value={value}\n              name=\"value\"\n              onChange={onChange}\n            />\n          </FlexBox.Child>\n        </FlexBox>\n      </Panel.Body>\n    </Panel>\n  )\n}\n\nexport default TagRule\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {\n  Grid,\n  Columns,\n  FlexBox,\n  FlexDirection,\n  ComponentSize,\n  ComponentColor,\n  AlignItems,\n} from '@influxdata/clockface'\nimport StatusRuleComponent from 'src/notifications/rules/components/StatusRule'\nimport TagRuleComponent from 'src/notifications/rules/components/TagRule'\nimport DashedButton from 'src/shared/components/dashed_button/DashedButton'\n\n// Utils\nimport {useRuleDispatch} from './RuleOverlayProvider'\n\n// Constants\nimport {newTagRuleDraft} from 'src/notifications/rules/utils'\n\n// Types\nimport {RuleState} from './RuleOverlay.reducer'\n\ninterface Props {\n  rule: RuleState\n}\n\nconst RuleConditions: FC<Props> = ({rule}) => {\n  const dispatch = useRuleDispatch()\n  const {statusRules, tagRules} = rule\n\n  const addTagRule = () => {\n    dispatch({\n      type: 'ADD_TAG_RULE',\n      tagRule: newTagRuleDraft(),\n    })\n  }\n\n  const statuses = statusRules.map(status => (\n    <StatusRuleComponent key={status.cid} status={status} />\n  ))\n\n  const tags = tagRules.map(tagRule => (\n    <TagRuleComponent key={tagRule.cid} tagRule={tagRule} />\n  ))\n\n  return (\n    <Grid.Row>\n      <Grid.Column widthSM={Columns.Two}>Conditions</Grid.Column>\n      <Grid.Column widthSM={Columns.Ten}>\n        <FlexBox\n          direction={FlexDirection.Column}\n          margin={ComponentSize.Small}\n          alignItems={AlignItems.Stretch}\n        >\n          {statuses}\n          {tags}\n          <DashedButton\n            text=\"+ Tag Filter\"\n            onClick={addTagRule}\n            color={ComponentColor.Primary}\n            size={ComponentSize.Small}\n          />\n        </FlexBox>\n      </Grid.Column>\n      <Grid.Column>\n        <hr />\n      </Grid.Column>\n    </Grid.Row>\n  )\n}\n\nexport default RuleConditions\n","// Libraries\nimport React, {FC} from 'react'\nimport {get} from 'lodash'\n\n// Components\nimport {Dropdown, ComponentStatus} from '@influxdata/clockface'\n\n// Types\nimport {NotificationEndpoint} from 'src/types'\n\ninterface Props {\n  selectedEndpointID: string\n  endpoints: NotificationEndpoint[]\n  onSelectEndpoint: (endpointID: string) => void\n}\n\nconst RuleEndpointDropdown: FC<Props> = ({\n  endpoints,\n  selectedEndpointID,\n  onSelectEndpoint,\n}) => {\n  if (!endpoints.length) {\n    const button = () => (\n      <Dropdown.Button status={ComponentStatus.Disabled} onClick={() => {}}>\n        No Endpoints Found\n      </Dropdown.Button>\n    )\n\n    const menu = () => null\n\n    return <Dropdown button={button} style={{width: '160px'}} menu={menu} />\n  }\n\n  const items = endpoints.map(({id, name}) => (\n    <Dropdown.Item\n      key={id}\n      id={id}\n      value={id}\n      testID={`endpoint--dropdown-item ${id}`}\n      onClick={() => onSelectEndpoint(id)}\n    >\n      {name}\n    </Dropdown.Item>\n  ))\n\n  const selectedEndpoint =\n    endpoints.find(e => e.id === selectedEndpointID) || endpoints[0]\n\n  const button = (active, onClick) => (\n    <Dropdown.Button\n      testID=\"endpoint--dropdown--button\"\n      active={active}\n      onClick={onClick}\n    >\n      {get(selectedEndpoint, 'name')}\n    </Dropdown.Button>\n  )\n\n  const menu = onCollapse => (\n    <Dropdown.Menu onCollapse={onCollapse}>{items}</Dropdown.Menu>\n  )\n\n  return (\n    <Dropdown\n      button={button}\n      menu={menu}\n      style={{width: '160px'}}\n      testID=\"endpoint-change--dropdown\"\n    />\n  )\n}\n\nexport default RuleEndpointDropdown\n","// Libraries\nimport React, {FC, ChangeEvent} from 'react'\n\n// Components\nimport {Form, TextArea} from '@influxdata/clockface'\n\ninterface Props {\n  channel: string\n  messageTemplate: string\n  onChange: (e: ChangeEvent) => void\n}\n\nconst SlackMessage: FC<Props> = ({messageTemplate, onChange}) => {\n  return (\n    <>\n      <Form.Element label=\"Message Template\">\n        <TextArea\n          name=\"messageTemplate\"\n          testID=\"slack-message-template--textarea\"\n          value={messageTemplate}\n          onChange={onChange}\n          rows={3}\n        />\n      </Form.Element>\n    </>\n  )\n}\n\nexport default SlackMessage\n","// Libraries\nimport React, {FC, ChangeEvent} from 'react'\n\n// Components\nimport {Form, Input, TextArea} from '@influxdata/clockface'\n\ninterface Props {\n  to: string\n  subjectTemplate\n  bodyTemplate: string\n  onChange: (e: ChangeEvent) => void\n}\n\nconst SMTPMessage: FC<Props> = ({\n  to,\n  subjectTemplate,\n  bodyTemplate,\n  onChange,\n}) => {\n  return (\n    <>\n      <Form.Element label=\"To\">\n        <Input value={to} name=\"to\" onChange={onChange} />\n      </Form.Element>\n      <Form.Element label=\"Subject\">\n        <Input\n          value={subjectTemplate}\n          name=\"subjectTemplate\"\n          onChange={onChange}\n        />\n      </Form.Element>\n      <Form.Element label=\"Body\">\n        <TextArea\n          name=\"bodyTemplate\"\n          value={bodyTemplate}\n          onChange={onChange}\n          rows={3}\n        />\n      </Form.Element>\n    </>\n  )\n}\n\nexport default SMTPMessage\n","// Libraries\nimport React, {FC, ChangeEvent} from 'react'\n\n// Components\nimport {Form, TextArea} from '@influxdata/clockface'\n\ninterface Props {\n  messageTemplate: string\n  onChange: (e: ChangeEvent) => void\n}\n\nconst PagerDutyMessage: FC<Props> = ({messageTemplate, onChange}) => {\n  return (\n    <Form.Element label=\"Message Template\">\n      <TextArea\n        name=\"messageTemplate\"\n        onChange={onChange}\n        value={messageTemplate}\n        rows={3}\n      />\n    </Form.Element>\n  )\n}\n\nexport default PagerDutyMessage\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport SlackMessage from './SlackMessage'\nimport SMTPMessage from './SMTPMessage'\nimport PagerDutyMessage from './PagerDutyMessage'\n\n// Utils\nimport {useRuleDispatch} from './RuleOverlayProvider'\n\n// Types\nimport {NotificationRuleDraft} from 'src/types'\n\ninterface Props {\n  rule: NotificationRuleDraft\n}\n\nconst RuleMessageContents: FC<Props> = ({rule}) => {\n  const dispatch = useRuleDispatch()\n  const onChange = ({target}) => {\n    const {name, value} = target\n\n    dispatch({\n      type: 'UPDATE_RULE',\n      rule: {\n        ...rule,\n        [name]: value,\n      },\n    })\n  }\n\n  switch (rule.type) {\n    case 'slack': {\n      const {messageTemplate, channel} = rule\n      return (\n        <SlackMessage\n          messageTemplate={messageTemplate}\n          channel={channel}\n          onChange={onChange}\n        />\n      )\n    }\n    case 'smtp': {\n      const {to, subjectTemplate, bodyTemplate} = rule\n      return (\n        <SMTPMessage\n          to={to}\n          onChange={onChange}\n          bodyTemplate={bodyTemplate}\n          subjectTemplate={subjectTemplate}\n        />\n      )\n    }\n    case 'pagerduty': {\n      const {messageTemplate} = rule\n      return (\n        <PagerDutyMessage\n          messageTemplate={messageTemplate}\n          onChange={onChange}\n        />\n      )\n    }\n    case 'http': {\n      return <></>\n    }\n\n    default:\n      throw new Error('Unexpected endpoint type in <RuleMessageContents/>.')\n  }\n}\n\nexport default RuleMessageContents\n","// Libraries\nimport React, {FC, useEffect} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Form, Panel, Grid, Columns} from '@influxdata/clockface'\nimport RuleEndpointDropdown from 'src/notifications/rules/components/RuleEndpointDropdown'\nimport RuleMessageContents from 'src/notifications/rules/components/RuleMessageContents'\n\n// Utils\nimport {getRuleVariantDefaults} from 'src/notifications/rules/utils'\nimport {getAll} from 'src/resources/selectors'\nimport {useRuleDispatch} from './RuleOverlayProvider'\n\n// Types\nimport {\n  NotificationEndpoint,\n  NotificationRuleDraft,\n  AppState,\n  ResourceType,\n} from 'src/types'\n\ninterface StateProps {\n  endpoints: NotificationEndpoint[]\n}\n\ninterface OwnProps {\n  rule: NotificationRuleDraft\n}\n\ntype Props = OwnProps & StateProps\n\nconst RuleMessage: FC<Props> = ({endpoints, rule}) => {\n  const dispatch = useRuleDispatch()\n\n  const onSelectEndpoint = endpointID => {\n    dispatch({\n      type: 'UPDATE_RULE',\n      rule: {\n        ...rule,\n        ...getRuleVariantDefaults(endpoints, endpointID),\n        endpointID,\n      },\n    })\n  }\n\n  useEffect(() => {\n    if (!rule.endpointID && endpoints.length) {\n      onSelectEndpoint(endpoints[0].id)\n    }\n  }, [])\n\n  return (\n    <Grid.Row>\n      <Grid.Column widthSM={Columns.Two}>Message</Grid.Column>\n      <Grid.Column widthSM={Columns.Ten}>\n        <Panel>\n          <Panel.Body>\n            <Form.Element label=\"Notification Endpoint\">\n              <RuleEndpointDropdown\n                endpoints={endpoints}\n                onSelectEndpoint={onSelectEndpoint}\n                selectedEndpointID={rule.endpointID}\n              />\n            </Form.Element>\n            <RuleMessageContents rule={rule} />\n          </Panel.Body>\n        </Panel>\n      </Grid.Column>\n    </Grid.Row>\n  )\n}\n\nconst mstp = (state: AppState) => {\n  const endpoints = getAll<NotificationEndpoint>(\n    state,\n    ResourceType.NotificationEndpoints\n  )\n\n  return {\n    endpoints,\n  }\n}\n\nexport default connect(mstp)(RuleMessage)\n","import React, {useState, FC} from 'react'\n\n// Components\nimport {\n  ComponentColor,\n  Form,\n  Button,\n  ComponentStatus,\n  Grid,\n  Columns,\n} from '@influxdata/clockface'\n\n// Utils\nimport {useRuleState} from './RuleOverlayProvider'\n\nimport {NotificationRuleDraft, RemoteDataState} from 'src/types'\n\ninterface Props {\n  saveButtonText: string\n  onSave: (draftRule: NotificationRuleDraft) => Promise<void>\n}\n\nconst RuleOverlayFooter: FC<Props> = ({saveButtonText, onSave}) => {\n  const rule = useRuleState()\n\n  const [saveStatus, setSaveStatus] = useState(RemoteDataState.NotStarted)\n  const [errorMessage, setErrorMessage] = useState<string>(null)\n\n  const handleSave = async () => {\n    if (saveStatus === RemoteDataState.Loading) {\n      return\n    }\n\n    try {\n      setSaveStatus(RemoteDataState.Loading)\n      setErrorMessage(null)\n\n      await onSave(rule)\n    } catch (e) {\n      setSaveStatus(RemoteDataState.Error)\n      setErrorMessage(e.message)\n    }\n  }\n\n  const buttonStatus =\n    saveStatus === RemoteDataState.Loading\n      ? ComponentStatus.Loading\n      : ComponentStatus.Default\n\n  return (\n    <>\n      <Grid.Row>\n        <Grid.Column widthXS={Columns.Twelve}>\n          {errorMessage && (\n            <div className=\"rule-overlay-footer--error\">{errorMessage}</div>\n          )}\n          <Form.Footer className=\"rule-overlay-footer\">\n            <Button\n              testID=\"rule-overlay-save--button\"\n              text={saveButtonText}\n              onClick={handleSave}\n              color={ComponentColor.Primary}\n              status={buttonStatus}\n            />\n          </Form.Footer>\n        </Grid.Column>\n      </Grid.Row>\n    </>\n  )\n}\n\nexport default RuleOverlayFooter\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {\n  Grid,\n  Panel,\n  Columns,\n  ComponentSize,\n  Form,\n  Input,\n} from '@influxdata/clockface'\nimport RuleSchedule from 'src/notifications/rules/components/RuleSchedule'\nimport RuleConditions from 'src/notifications/rules/components/RuleConditions'\nimport RuleMessage from 'src/notifications/rules/components/RuleMessage'\nimport RuleOverlayFooter from 'src/notifications/rules/components/RuleOverlayFooter'\n\n// Utils\nimport {useRuleState, useRuleDispatch} from './RuleOverlayProvider'\n\n// Types\nimport {NotificationRuleDraft} from 'src/types'\n\ninterface Props {\n  saveButtonText: string\n  onSave: (draftRule: NotificationRuleDraft) => Promise<void>\n}\n\nconst RuleOverlayContents: FC<Props> = ({saveButtonText, onSave}) => {\n  const rule = useRuleState()\n  const dispatch = useRuleDispatch()\n\n  const handleChange = e => {\n    const {name, value} = e.target\n\n    dispatch({\n      type: 'UPDATE_RULE',\n      rule: {...rule, [name]: value} as NotificationRuleDraft,\n    })\n  }\n\n  const handleChangeParameter = (key: keyof NotificationRuleDraft) => (\n    value: string\n  ) => {\n    dispatch({\n      type: 'UPDATE_RULE',\n      rule: {...rule, [key]: value} as NotificationRuleDraft,\n    })\n  }\n\n  return (\n    <Grid>\n      <Form>\n        <Grid.Row>\n          <Grid.Column widthSM={Columns.Two}>About</Grid.Column>\n          <Grid.Column widthSM={Columns.Ten}>\n            <Panel>\n              <Panel.Body size={ComponentSize.ExtraSmall}>\n                <Form.Element label=\"Name\">\n                  <Input\n                    testID=\"rule-name--input\"\n                    placeholder=\"Name this new rule\"\n                    value={rule.name}\n                    name=\"name\"\n                    onChange={handleChange}\n                  />\n                </Form.Element>\n                <RuleSchedule rule={rule} onChange={handleChangeParameter} />\n              </Panel.Body>\n            </Panel>\n          </Grid.Column>\n          <Grid.Column>\n            <hr />\n          </Grid.Column>\n        </Grid.Row>\n        <RuleConditions rule={rule} />\n        <RuleMessage rule={rule} />\n        <RuleOverlayFooter saveButtonText={saveButtonText} onSave={onSave} />\n      </Form>\n    </Grid>\n  )\n}\n\nexport default RuleOverlayContents\n","// Libraries\nimport React, {useMemo, FC} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Actions\nimport {createRule} from 'src/notifications/rules/actions/thunks'\n\n// Components\nimport RuleOverlayContents from 'src/notifications/rules/components/RuleOverlayContents'\nimport {Overlay} from '@influxdata/clockface'\n\n// Utils\nimport RuleOverlayProvider from 'src/notifications/rules/components/RuleOverlayProvider'\nimport {initRuleDraft} from 'src/notifications/rules/utils'\n\n// Types\nimport {NotificationRuleDraft} from 'src/types'\n\ninterface DispatchProps {\n  onCreateRule: (rule: Partial<NotificationRuleDraft>) => Promise<void>\n}\n\ntype Props = WithRouterProps & DispatchProps\n\nconst NewRuleOverlay: FC<Props> = ({params: {orgID}, router, onCreateRule}) => {\n  const handleDismiss = () => {\n    router.push(`/orgs/${orgID}/alerting`)\n  }\n\n  const handleCreateRule = async (rule: NotificationRuleDraft) => {\n    await onCreateRule(rule)\n\n    handleDismiss()\n  }\n\n  const initialState = useMemo(() => initRuleDraft(orgID), [orgID])\n\n  return (\n    <RuleOverlayProvider initialState={initialState}>\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={800}>\n          <Overlay.Header\n            title=\"Create a Notification Rule\"\n            onDismiss={handleDismiss}\n            testID=\"dismiss-overlay\"\n          />\n          <Overlay.Body>\n            <RuleOverlayContents\n              saveButtonText=\"Create Notification Rule\"\n              onSave={handleCreateRule}\n            />\n          </Overlay.Body>\n        </Overlay.Container>\n      </Overlay>\n    </RuleOverlayProvider>\n  )\n}\n\nconst mdtp = {\n  onCreateRule: createRule as any,\n}\n\nexport default connect<{}, DispatchProps>(\n  null,\n  mdtp\n)(withRouter<Props>(NewRuleOverlay))\n","// Libraries\nimport React, {FC} from 'react'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Constants\nimport {getNotificationRuleFailed} from 'src/shared/copy/notifications'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport RuleOverlayContents from 'src/notifications/rules/components/RuleOverlayContents'\n\n// Actions\nimport {updateRule} from 'src/notifications/rules/actions/thunks'\nimport {notify} from 'src/shared/actions/notifications'\n\n// Utils\nimport RuleOverlayProvider from './RuleOverlayProvider'\nimport {getByID} from 'src/resources/selectors'\n\n// Types\nimport {NotificationRuleDraft, AppState, ResourceType} from 'src/types'\n\ninterface StateProps {\n  stateRule: NotificationRuleDraft\n}\n\ninterface DispatchProps {\n  onNotify: typeof notify\n  onUpdateRule: typeof updateRule\n}\n\ntype Props = WithRouterProps & StateProps & DispatchProps\n\nconst EditRuleOverlay: FC<Props> = ({\n  params,\n  router,\n  stateRule,\n  onUpdateRule,\n  onNotify,\n}) => {\n  const handleDismiss = () => {\n    router.push(`/orgs/${params.orgID}/alerting`)\n  }\n\n  if (!stateRule) {\n    onNotify(getNotificationRuleFailed(params.ruleID))\n    handleDismiss()\n    return null\n  }\n\n  const handleUpdateRule = async (rule: NotificationRuleDraft) => {\n    await onUpdateRule(rule)\n\n    handleDismiss()\n  }\n\n  return (\n    <RuleOverlayProvider initialState={stateRule}>\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={800}>\n          <Overlay.Header\n            title=\"Edit this Notification Rule\"\n            onDismiss={handleDismiss}\n            testID=\"dismiss-overlay\"\n          />\n          <Overlay.Body>\n            <RuleOverlayContents\n              saveButtonText=\"Save Changes\"\n              onSave={handleUpdateRule}\n            />\n          </Overlay.Body>\n        </Overlay.Container>\n      </Overlay>\n    </RuleOverlayProvider>\n  )\n}\n\nconst mstp = (state: AppState, {params}: Props): StateProps => {\n  const {ruleID} = params\n\n  const stateRule = getByID<NotificationRuleDraft>(\n    state,\n    ResourceType.NotificationRules,\n    ruleID\n  )\n\n  return {\n    stateRule,\n  }\n}\n\nconst mdtp = {\n  onNotify: notify,\n  onUpdateRule: updateRule,\n}\n\nexport default connect<StateProps, DispatchProps>(\n  mstp,\n  mdtp\n)(withRouter<Props>(EditRuleOverlay))\n","import {omit} from 'lodash'\n\n// Types\nimport {NotificationEndpoint, NotificationEndpointBase} from 'src/types'\nimport {DEFAULT_ENDPOINT_URLS} from 'src/alerting/constants'\n\nexport type Action =\n  | {type: 'UPDATE_ENDPOINT'; endpoint: NotificationEndpoint}\n  | {type: 'UPDATE_ENDPOINT_TYPE'; endpoint: NotificationEndpoint}\n  | {type: 'DELETE_ENDPOINT'; endpointID: string}\n\nexport type EndpointState = NotificationEndpoint\n\nexport const reducer = (\n  state: EndpointState,\n  action: Action\n): EndpointState => {\n  switch (action.type) {\n    case 'UPDATE_ENDPOINT': {\n      const {endpoint} = action\n      return {...state, ...endpoint}\n    }\n    case 'UPDATE_ENDPOINT_TYPE': {\n      const {endpoint} = action\n      if (state.type != endpoint.type) {\n        const baseProps: NotificationEndpointBase = omit(endpoint, [\n          'url',\n          'token',\n          'username',\n          'password',\n          'method',\n          'authMethod',\n          'contentTemplate',\n          'headers',\n          'clientURL',\n          'routingKey',\n        ])\n\n        switch (endpoint.type) {\n          case 'pagerduty':\n            return {\n              ...baseProps,\n              type: 'pagerduty',\n              clientURL: `${location.origin}/orgs/${\n                baseProps.orgID\n              }/alert-history`,\n              routingKey: '',\n            }\n          case 'http':\n            return {\n              ...baseProps,\n              type: 'http',\n              method: 'POST',\n              authMethod: 'none',\n              url: DEFAULT_ENDPOINT_URLS.http,\n            }\n          case 'slack':\n            return {\n              ...baseProps,\n              type: 'slack',\n              url: DEFAULT_ENDPOINT_URLS.slack,\n              token: '',\n            }\n        }\n      }\n      return state\n    }\n    case 'DELETE_ENDPOINT': {\n      return state\n    }\n\n    default:\n      const neverAction: never = action\n\n      throw new Error(\n        `Unhandled action \"${\n          (neverAction as any).type\n        }\" in EndpointsOverlay.reducer.ts`\n      )\n  }\n}\n","// Libraries\nimport React, {\n  FC,\n  Dispatch,\n  createContext,\n  useReducer,\n  useRef,\n  useContext,\n} from 'react'\n\n// Reducer\nimport {EndpointState, Action, reducer} from './EndpointOverlay.reducer'\n\nconst EndpointStateContext = createContext<EndpointState>(null)\nconst EndpointDispatchContext = createContext<Dispatch<Action>>(null)\n\nexport const EndpointOverlayProvider: FC<{initialState: EndpointState}> = ({\n  initialState,\n  children,\n}) => {\n  const prevInitialStateRef = useRef(initialState)\n\n  const [state, dispatch] = useReducer(\n    (state: EndpointState, action: Action) => {\n      if (prevInitialStateRef.current !== initialState) {\n        prevInitialStateRef.current = initialState\n\n        return initialState\n      }\n\n      return reducer(state, action)\n    },\n    initialState\n  )\n\n  return (\n    <EndpointStateContext.Provider value={state}>\n      <EndpointDispatchContext.Provider value={dispatch}>\n        {children}\n      </EndpointDispatchContext.Provider>\n    </EndpointStateContext.Provider>\n  )\n}\n\nexport const useEndpointState = (): EndpointState => {\n  return useContext(EndpointStateContext)\n}\n\nexport const useEndpointDispatch = (): Dispatch<Action> => {\n  return useContext(EndpointDispatchContext)\n}\n\nexport const useEndpointReducer = (): [EndpointState, Dispatch<Action>] => {\n  return [useEndpointState(), useEndpointDispatch()]\n}\n","// Libraries\nimport React, {FC, ChangeEvent} from 'react'\n\n// Components\nimport {Input, FormElement, Panel, Grid, Columns} from '@influxdata/clockface'\n\ninterface Props {\n  url: string\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nconst EndpointOptionsSlack: FC<Props> = ({url, onChange}) => {\n  return (\n    <Panel>\n      <Panel.Header>\n        <h4>Slack Options</h4>\n      </Panel.Header>\n      <Panel.Body>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <FormElement label=\"Incoming Webhook URL\">\n                <Input\n                  name=\"url\"\n                  value={url}\n                  testID=\"slack-url\"\n                  onChange={onChange}\n                />\n              </FormElement>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Panel.Body>\n    </Panel>\n  )\n}\n\nexport default EndpointOptionsSlack\n","// Libraries\nimport React, {FC, ChangeEvent} from 'react'\n\n// Components\nimport {Input, FormElement, InputType, Panel, Grid} from '@influxdata/clockface'\n\ninterface Props {\n  clientURL: string\n  routingKey: string\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nconst EndpointOptionsPagerDuty: FC<Props> = ({\n  clientURL,\n  routingKey,\n  onChange,\n}) => {\n  return (\n    <Panel>\n      <Panel.Header>\n        <h4>Pagerduty Options</h4>\n      </Panel.Header>\n      <Panel.Body>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <FormElement label=\"Client URL\">\n                <Input\n                  name=\"clientURL\"\n                  value={clientURL}\n                  testID=\"pagerduty-url\"\n                  onChange={onChange}\n                />\n              </FormElement>\n            </Grid.Column>\n            <Grid.Column>\n              <FormElement label=\"Routing Key\">\n                <Input\n                  name=\"routingKey\"\n                  value={routingKey}\n                  testID=\"pagerduty-routing-key\"\n                  onChange={onChange}\n                  type={InputType.Password}\n                />\n              </FormElement>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Panel.Body>\n    </Panel>\n  )\n}\n\nexport default EndpointOptionsPagerDuty\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {Dropdown} from '@influxdata/clockface'\n\n// Types\nimport {HTTPMethodType} from 'src/types'\n\ninterface MethodType {\n  name: string\n  type: HTTPMethodType\n  id: HTTPMethodType\n}\n\ninterface Props {\n  selectedType: string\n  onSelectType: (type: HTTPMethodType) => void\n}\n\nconst types: MethodType[] = [{name: 'POST', type: 'POST', id: 'POST'}]\n\nconst MethodTypeDropdown: FC<Props> = ({selectedType, onSelectType}) => {\n  const items = types.map(({id, type, name}) => (\n    <Dropdown.Item\n      key={id}\n      id={id}\n      value={id}\n      testID={`http-method--dropdown-item ${type}`}\n      onClick={onSelectType}\n    >\n      {name}\n    </Dropdown.Item>\n  ))\n\n  const selected = types.find(t => t.type === selectedType)\n\n  if (!selected) {\n    throw new Error('Incorrect method type provided to <MethodTypeDropdown/>')\n  }\n\n  const button = (active, onClick) => (\n    <Dropdown.Button\n      testID=\"http-method--dropdown--button\"\n      active={active}\n      onClick={onClick}\n    >\n      {selected.name}\n    </Dropdown.Button>\n  )\n\n  const menu = onCollapse => (\n    <Dropdown.Menu onCollapse={onCollapse}>{items}</Dropdown.Menu>\n  )\n\n  return (\n    <Dropdown\n      button={button}\n      menu={menu}\n      testID=\"http-method-change--dropdown\"\n    />\n  )\n}\n\nexport default MethodTypeDropdown\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport {Dropdown} from '@influxdata/clockface'\n\n// Types\nimport {HTTPAuthMethodType} from 'src/types'\n\ninterface AuthMethodType {\n  name: string\n  type: HTTPAuthMethodType\n  id: HTTPAuthMethodType\n}\n\ninterface Props {\n  selectedType: string\n  onSelectType: (type: HTTPAuthMethodType) => void\n}\n\nconst types: AuthMethodType[] = [\n  {name: 'none', type: 'none', id: 'none'},\n  {name: 'basic', type: 'basic', id: 'basic'},\n  {name: 'bearer', type: 'bearer', id: 'bearer'},\n]\n\nconst AuthMethodTypeDropdown: FC<Props> = ({selectedType, onSelectType}) => {\n  const items = types.map(({id, type, name}) => (\n    <Dropdown.Item\n      key={id}\n      id={id}\n      value={id}\n      testID={`http-authMethod--dropdown-item ${type}`}\n      onClick={onSelectType}\n    >\n      {name}\n    </Dropdown.Item>\n  ))\n\n  const selected = types.find(t => t.type === selectedType)\n\n  if (!selected) {\n    throw new Error(\n      'Incorrect authMethod type provided to <AuthMethodTypeDropdown/>'\n    )\n  }\n\n  const button = (active, onClick) => (\n    <Dropdown.Button\n      testID=\"http-authMethod--dropdown--button\"\n      active={active}\n      onClick={onClick}\n    >\n      {selected.name}\n    </Dropdown.Button>\n  )\n\n  const menu = onCollapse => (\n    <Dropdown.Menu onCollapse={onCollapse}>{items}</Dropdown.Menu>\n  )\n\n  return (\n    <Dropdown\n      button={button}\n      menu={menu}\n      testID=\"http-authMethod-change--dropdown\"\n    />\n  )\n}\n\nexport default AuthMethodTypeDropdown\n","// Libraries\nimport React, {FC, ChangeEvent} from 'react'\n\n// Components\nimport {\n  Input,\n  FormElement,\n  InputType,\n  Panel,\n  Grid,\n  Columns,\n} from '@influxdata/clockface'\nimport MethodTypeDropdown from 'src/notifications/endpoints/components/MethodTypeDropdown'\nimport AuthMethodTypeDropdown from 'src/notifications/endpoints/components/AuthMethodTypeDropdown'\n\n// Types\nimport {HTTPNotificationEndpoint} from 'src/types'\n\ninterface Props {\n  url: string\n  token?: string\n  username?: string\n  password?: string\n  method?: HTTPNotificationEndpoint['method']\n  authMethod?: HTTPNotificationEndpoint['authMethod']\n  contentTemplate: string\n  onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  onChangeParameter: (key: string) => (value: string) => void\n}\n\nconst EndpointOptionsHTTP: FC<Props> = ({\n  url,\n  onChange,\n  token,\n  username,\n  password,\n  method,\n  authMethod,\n  onChangeParameter,\n}) => {\n  return (\n    <Panel>\n      <Panel.Header>\n        <h4>HTTP Options</h4>\n      </Panel.Header>\n      <Panel.Body>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthSM={Columns.Six}>\n              <FormElement label=\"HTTP Method\">\n                <MethodTypeDropdown\n                  onSelectType={onChangeParameter('method')}\n                  selectedType={method}\n                />\n              </FormElement>\n            </Grid.Column>\n            <Grid.Column widthSM={Columns.Six}>\n              <FormElement label=\"Auth Method\">\n                <AuthMethodTypeDropdown\n                  onSelectType={onChangeParameter('authMethod')}\n                  selectedType={authMethod}\n                />\n              </FormElement>\n            </Grid.Column>\n            <Grid.Column widthXS={Columns.Twelve}>\n              <FormElement label=\"URL\">\n                <Input\n                  name=\"url\"\n                  value={url}\n                  onChange={onChange}\n                  required={true}\n                  testID=\"http-url\"\n                />\n              </FormElement>\n            </Grid.Column>\n\n            {authMethod === 'bearer' && (\n              <Grid.Column widthXS={Columns.Twelve}>\n                <FormElement label=\"Token\">\n                  <Input\n                    name=\"token\"\n                    value={token}\n                    onChange={onChange}\n                    type={InputType.Password}\n                    testID=\"http-bearer-token\"\n                  />\n                </FormElement>\n              </Grid.Column>\n            )}\n            {authMethod === 'basic' && (\n              <>\n                <Grid.Column widthSM={Columns.Six}>\n                  <FormElement label=\"Username\">\n                    <Input\n                      name=\"username\"\n                      value={username}\n                      onChange={onChange}\n                      type={\n                        username && username.includes('secret: ')\n                          ? InputType.Password\n                          : InputType.Text\n                      }\n                      testID=\"http-username\"\n                    />\n                  </FormElement>\n                </Grid.Column>\n                <Grid.Column widthSM={Columns.Six}>\n                  <FormElement label=\"Password\">\n                    <Input\n                      name=\"password\"\n                      value={password}\n                      type={InputType.Password}\n                      onChange={onChange}\n                      testID=\"http-password\"\n                    />\n                  </FormElement>\n                </Grid.Column>\n              </>\n            )}\n          </Grid.Row>\n        </Grid>\n      </Panel.Body>\n    </Panel>\n  )\n}\n\nexport default EndpointOptionsHTTP\n","// Libraries\nimport React, {FC, ChangeEvent} from 'react'\n\n// Components\nimport EndpointOptionsSlack from './EndpointOptionsSlack'\nimport EndpointOptionsPagerDuty from './EndpointOptionsPagerDuty'\nimport EndpointOptionsHTTP from './EndpointOptionsHTTP'\n\n// Types\nimport {\n  NotificationEndpoint,\n  SlackNotificationEndpoint,\n  PagerDutyNotificationEndpoint,\n  HTTPNotificationEndpoint,\n} from 'src/types'\n\ninterface Props {\n  endpoint: NotificationEndpoint\n  onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  onChangeParameter: (key: string) => (value: string) => void\n}\n\nconst EndpointOptions: FC<Props> = ({\n  endpoint,\n  onChange,\n  onChangeParameter,\n}) => {\n  switch (endpoint.type) {\n    case 'slack': {\n      const {url} = endpoint as SlackNotificationEndpoint\n      return <EndpointOptionsSlack url={url} onChange={onChange} />\n    }\n    case 'pagerduty': {\n      const {clientURL, routingKey} = endpoint as PagerDutyNotificationEndpoint\n      return (\n        <EndpointOptionsPagerDuty\n          clientURL={clientURL}\n          routingKey={routingKey}\n          onChange={onChange}\n        />\n      )\n    }\n    case 'http': {\n      const {\n        url,\n        token,\n        username,\n        password,\n        method,\n        authMethod,\n        contentTemplate,\n      } = endpoint as HTTPNotificationEndpoint\n      return (\n        <EndpointOptionsHTTP\n          onChange={onChange}\n          onChangeParameter={onChangeParameter}\n          url={url}\n          token={token}\n          username={username}\n          password={password}\n          method={method}\n          authMethod={authMethod}\n          contentTemplate={contentTemplate}\n        />\n      )\n    }\n\n    default:\n      throw new Error(\n        `Unknown endpoint type for endpoint: ${JSON.stringify(\n          endpoint,\n          null,\n          2\n        )}`\n      )\n  }\n}\n\nexport default EndpointOptions\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Dropdown} from '@influxdata/clockface'\n\n// Utils\nimport {extractBlockedEndpoints} from 'src/cloud/utils/limits'\n\n// Types\nimport {NotificationEndpointType, AppState} from 'src/types'\n\ninterface EndpointType {\n  id: NotificationEndpointType\n  type: NotificationEndpointType\n  name: string\n}\n\ninterface StateProps {\n  blockedEndpoints: string[]\n}\n\ninterface OwnProps {\n  selectedType: string\n  onSelectType: (type: NotificationEndpointType) => void\n}\n\ntype Props = OwnProps & StateProps\n\nconst types: EndpointType[] = [\n  {name: 'HTTP', type: 'http', id: 'http'},\n  {name: 'Slack', type: 'slack', id: 'slack'},\n  {name: 'Pagerduty', type: 'pagerduty', id: 'pagerduty'},\n]\n\nconst EndpointTypeDropdown: FC<Props> = ({\n  selectedType,\n  onSelectType,\n  blockedEndpoints,\n}) => {\n  const items = types\n    .filter(({type}) => !blockedEndpoints.includes(type))\n    .map(({id, type, name}) => (\n      <Dropdown.Item\n        key={id}\n        id={id}\n        value={id}\n        testID={`endpoint--dropdown-item ${type}`}\n        onClick={onSelectType}\n      >\n        {name}\n      </Dropdown.Item>\n    ))\n\n  const selected = types.find(t => t.type === selectedType)\n\n  if (!selected) {\n    throw new Error(\n      'Incorrect endpoint type provided to <EndpointTypeDropdown/>'\n    )\n  }\n\n  const button = (active, onClick) => (\n    <Dropdown.Button\n      testID=\"endpoint--dropdown--button\"\n      active={active}\n      onClick={onClick}\n    >\n      {selected.name}\n    </Dropdown.Button>\n  )\n\n  const menu = onCollapse => (\n    <Dropdown.Menu onCollapse={onCollapse}>{items}</Dropdown.Menu>\n  )\n\n  return (\n    <Dropdown button={button} menu={menu} testID=\"endpoint-change--dropdown\" />\n  )\n}\n\nconst mstp = ({cloud: {limits}}: AppState): StateProps => {\n  return {\n    blockedEndpoints: extractBlockedEndpoints(limits),\n  }\n}\n\nexport default connect<StateProps>(mstp)(EndpointTypeDropdown)\n","// Libraries\nimport React, {useState, FC} from 'react'\n\n// Components\nimport {\n  Button,\n  ComponentColor,\n  ComponentStatus,\n  Overlay,\n} from '@influxdata/clockface'\n\n// Hooks\nimport {useEndpointState} from './EndpointOverlayProvider'\n\n// Types\nimport {NotificationEndpoint, RemoteDataState} from 'src/types'\n\ninterface Props {\n  saveButtonText: string\n  onSave: (endpoint: NotificationEndpoint) => void\n  onCancel: () => void\n  onSetErrorMessage: (error: string) => void\n}\n\nconst EndpointOverlayFooter: FC<Props> = ({\n  saveButtonText,\n  onSave,\n  onCancel,\n  onSetErrorMessage,\n}) => {\n  const endpoint = useEndpointState()\n\n  const [saveStatus, setSaveStatus] = useState(RemoteDataState.NotStarted)\n\n  const handleSave = () => {\n    if (saveStatus === RemoteDataState.Loading) {\n      return\n    }\n\n    try {\n      setSaveStatus(RemoteDataState.Loading)\n      onSetErrorMessage(null)\n\n      onSave(endpoint)\n    } catch (e) {\n      setSaveStatus(RemoteDataState.Error)\n      onSetErrorMessage(e.message)\n    }\n  }\n\n  const buttonStatus =\n    saveStatus === RemoteDataState.Loading\n      ? ComponentStatus.Loading\n      : ComponentStatus.Default\n\n  return (\n    <Overlay.Footer>\n      <Button\n        testID=\"endpoint-cancel--button\"\n        onClick={onCancel}\n        text=\"Cancel\"\n      />\n      <Button\n        testID=\"endpoint-save--button\"\n        onClick={handleSave}\n        text={saveButtonText}\n        status={buttonStatus}\n        color={ComponentColor.Primary}\n      />\n    </Overlay.Footer>\n  )\n}\n\nexport default EndpointOverlayFooter\n","// Libraries\nimport React, {FC, ChangeEvent, useState} from 'react'\n\n// Components\nimport {\n  Grid,\n  Form,\n  Input,\n  TextArea,\n  Overlay,\n  Columns,\n  Alert,\n  ComponentColor,\n  IconFont,\n} from '@influxdata/clockface'\nimport EndpointOptions from 'src/notifications/endpoints/components/EndpointOptions'\nimport EndpointTypeDropdown from 'src/notifications/endpoints/components/EndpointTypeDropdown'\nimport EndpointOverlayFooter from 'src/notifications/endpoints/components/EndpointOverlayFooter'\n\n// Hooks\nimport {useEndpointReducer} from './EndpointOverlayProvider'\n\n// Types\nimport {NotificationEndpointType, NotificationEndpoint} from 'src/types'\n\ninterface Props {\n  onSave: (endpoint: NotificationEndpoint) => void\n  onCancel: () => void\n  saveButtonText: string\n}\n\nconst EndpointOverlayContents: FC<Props> = ({\n  onSave,\n  saveButtonText,\n  onCancel,\n}) => {\n  const [endpoint, dispatch] = useEndpointReducer()\n  const [errorMessage, setErrorMessage] = useState<string>(null)\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const {name, value} = e.target\n    dispatch({\n      type: 'UPDATE_ENDPOINT',\n      endpoint: {...endpoint, [name]: value},\n    })\n  }\n\n  const handleChangeParameter = (key: string) => (value: string) => {\n    dispatch({\n      type: 'UPDATE_ENDPOINT',\n      endpoint: {...endpoint, [key]: value},\n    })\n  }\n\n  const handleSelectType = (type: NotificationEndpointType) => {\n    dispatch({\n      type: 'UPDATE_ENDPOINT_TYPE',\n      endpoint: {...endpoint, type} as NotificationEndpoint,\n    })\n  }\n\n  return (\n    <Form>\n      <Overlay.Body>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column widthSM={Columns.Six}>\n              <Form.Element label=\"Destination\">\n                <EndpointTypeDropdown\n                  onSelectType={handleSelectType}\n                  selectedType={endpoint.type}\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthSM={Columns.Six}>\n              <Form.Element label=\"Name\">\n                <Input\n                  testID=\"endpoint-name--input\"\n                  placeholder=\"Name this endpoint\"\n                  value={endpoint.name}\n                  name=\"name\"\n                  onChange={handleChange}\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthSM={Columns.Twelve}>\n              <Form.Element label=\"Description\">\n                <TextArea\n                  rows={1}\n                  className=\"endpoint-description--textarea\"\n                  testID=\"endpoint-description--textarea\"\n                  name=\"description\"\n                  value={endpoint.description}\n                  onChange={handleChange}\n                />\n              </Form.Element>\n            </Grid.Column>\n            <Grid.Column widthSM={Columns.Twelve}>\n              <EndpointOptions\n                endpoint={endpoint}\n                onChange={handleChange}\n                onChangeParameter={handleChangeParameter}\n              />\n            </Grid.Column>\n            <Grid.Column\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                minHeight: '43px',\n              }}\n            >\n              {errorMessage && (\n                <Alert\n                  color={ComponentColor.Danger}\n                  icon={IconFont.AlertTriangle}\n                  style={{width: 'auto', marginTop: '8px'}}\n                >\n                  {errorMessage}\n                </Alert>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Overlay.Body>\n      <EndpointOverlayFooter\n        onSave={onSave}\n        onCancel={onCancel}\n        saveButtonText={saveButtonText}\n        onSetErrorMessage={setErrorMessage}\n      />\n    </Form>\n  )\n}\n\nexport default EndpointOverlayContents\n","// Libraries\nimport React, {FC, useMemo} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Actions\nimport {createEndpoint} from 'src/notifications/endpoints/actions/thunks'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport {EndpointOverlayProvider} from 'src/notifications/endpoints/components/EndpointOverlayProvider'\nimport EndpointOverlayContents from 'src/notifications/endpoints/components/EndpointOverlayContents'\n\n// Constants\nimport {NEW_ENDPOINT_DRAFT} from 'src/alerting/constants'\nimport {NotificationEndpoint} from 'src/types'\n\ninterface DispatchProps {\n  onCreateEndpoint: typeof createEndpoint\n}\n\ntype Props = WithRouterProps & DispatchProps\n\nconst NewRuleOverlay: FC<Props> = ({params, router, onCreateEndpoint}) => {\n  const {orgID} = params\n  const handleDismiss = () => {\n    router.push(`/orgs/${params.orgID}/alerting`)\n  }\n\n  const handleCreateEndpoint = (endpoint: NotificationEndpoint) => {\n    onCreateEndpoint(endpoint)\n    handleDismiss()\n  }\n\n  const initialState = useMemo(() => ({...NEW_ENDPOINT_DRAFT, orgID}), [orgID])\n\n  return (\n    <EndpointOverlayProvider initialState={initialState}>\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={666}>\n          <Overlay.Header\n            title=\"Create a Notification Endpoint\"\n            onDismiss={handleDismiss}\n          />\n          <EndpointOverlayContents\n            onSave={handleCreateEndpoint}\n            onCancel={handleDismiss}\n            saveButtonText=\"Create Notification Endpoint\"\n          />\n        </Overlay.Container>\n      </Overlay>\n    </EndpointOverlayProvider>\n  )\n}\n\nconst mdtp = {\n  onCreateEndpoint: createEndpoint,\n}\n\nexport default connect<null, DispatchProps>(\n  null,\n  mdtp\n)(withRouter<Props>(NewRuleOverlay))\n","// Libraries\nimport React, {FC} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter, WithRouterProps} from 'react-router'\n\n// Constants\nimport {getEndpointFailed} from 'src/shared/copy/notifications'\n\n// Actions\nimport {updateEndpoint} from 'src/notifications/endpoints/actions/thunks'\nimport {notify} from 'src/shared/actions/notifications'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\nimport {EndpointOverlayProvider} from 'src/notifications/endpoints/components/EndpointOverlayProvider'\nimport EndpointOverlayContents from 'src/notifications/endpoints/components/EndpointOverlayContents'\n\n// Types\nimport {NotificationEndpoint, AppState, ResourceType} from 'src/types'\n\n// Utils\nimport {getByID} from 'src/resources/selectors'\n\ninterface DispatchProps {\n  onUpdateEndpoint: typeof updateEndpoint\n  onNotify: typeof notify\n}\n\ninterface StateProps {\n  endpoint: NotificationEndpoint\n}\n\ntype Props = WithRouterProps & DispatchProps & StateProps\n\nconst EditEndpointOverlay: FC<Props> = ({\n  params,\n  router,\n  onUpdateEndpoint,\n  onNotify,\n  endpoint,\n}) => {\n  const handleDismiss = () => {\n    router.push(`/orgs/${params.orgID}/alerting`)\n  }\n\n  if (!endpoint) {\n    onNotify(getEndpointFailed(params.endpointID))\n    handleDismiss()\n    return null\n  }\n\n  const handleEditEndpoint = (endpoint: NotificationEndpoint) => {\n    onUpdateEndpoint(endpoint)\n\n    handleDismiss()\n  }\n\n  return (\n    <EndpointOverlayProvider initialState={endpoint}>\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={600}>\n          <Overlay.Header\n            title=\"Edit a Notification Endpoint\"\n            onDismiss={handleDismiss}\n          />\n          <Overlay.Body />\n          <EndpointOverlayContents\n            onSave={handleEditEndpoint}\n            onCancel={handleDismiss}\n            saveButtonText=\"Edit Notification Endpoint\"\n          />\n        </Overlay.Container>\n      </Overlay>\n    </EndpointOverlayProvider>\n  )\n}\n\nconst mdtp = {\n  onUpdateEndpoint: updateEndpoint,\n  onNotify: notify,\n}\n\nconst mstp = (state: AppState, {params}: Props): StateProps => {\n  const endpoint = getByID<NotificationEndpoint>(\n    state,\n    ResourceType.NotificationEndpoints,\n    params.endpointID\n  )\n\n  return {endpoint}\n}\n\nexport default withRouter<Props>(\n  connect<StateProps, DispatchProps, Props>(\n    mstp,\n    mdtp\n  )(EditEndpointOverlay)\n)\n","// Libraries\nimport React, {FC} from 'react'\nimport {FunnelPage, Button, ComponentColor} from '@influxdata/clockface'\nimport {withRouter, WithRouterProps} from 'react-router'\nimport {connect} from 'react-redux'\n\n// Types\nimport {AppState} from 'src/types'\n\ninterface DispatchProps {\n  me: AppState['me']\n}\n\ntype Props = DispatchProps & WithRouterProps\n\nconst NoOrgsPage: FC<Props> = ({router, me}) => {\n  const handleClick = () => {\n    router.push('/signin')\n  }\n\n  return (\n    <FunnelPage>\n      <div className=\"cf-funnel-page--logo\" data-testid=\"funnel-page--logo\">\n        <img\n          src=\"https://influxdata.github.io/branding/img/downloads/influxdata-logo--full--white-alpha.png\"\n          width=\"170\"\n        />\n      </div>\n      <h1 className=\"cf-funnel-page--title\">Whoops!</h1>\n      <p className=\"cf-funnel-page--subtitle\">\n        You don't belong to an organization.\n        <br />\n        Add user <strong>{`\"${me.name}\"`}</strong> to an organization to\n        continue\n      </p>\n      <Button\n        text=\"Sign In\"\n        color={ComponentColor.Primary}\n        onClick={handleClick}\n      />\n    </FunnelPage>\n  )\n}\n\nconst mstp = ({me}: AppState) => {\n  return {me}\n}\n\nexport default connect(mstp)(withRouter(NoOrgsPage))\n","// Libraries\nimport React, {Component, ComponentClass} from 'react'\nimport {withRouter, WithRouterProps, InjectedRouter} from 'react-router'\nimport {connect} from 'react-redux'\nimport {OverlayID} from 'src/overlays/reducers/overlays'\n\n// Actions\nimport {showOverlay, dismissOverlay} from 'src/overlays/actions/overlays'\n\n// NOTE: i dont know what is wrong with the type definition of react-router\n// but it doesn't include params on an injected router upon route resolution\ninterface RealInjectedRouter extends InjectedRouter {\n  params: WithRouterProps['params']\n}\n\nexport type OverlayDismissalWithRoute = (router: RealInjectedRouter) => void\n\ninterface OwnProps {\n  overlayID: OverlayID\n  onClose: OverlayDismissalWithRoute\n}\n\ninterface DispatchProps {\n  onShowOverlay: typeof showOverlay\n  onDismissOverlay: typeof dismissOverlay\n}\n\ntype OverlayHandlerProps = OwnProps & DispatchProps & WithRouterProps\n\nclass OverlayHandler extends Component<OverlayHandlerProps> {\n  public componentWillUnmount() {\n    this.props.onDismissOverlay()\n  }\n\n  public render() {\n    const closer = () => {\n      this.props.onClose(this.props.router as RealInjectedRouter)\n    }\n    const {overlayID, params, onShowOverlay} = this.props\n    onShowOverlay(overlayID, params, closer)\n    return null\n  }\n}\n\nconst mdtp: DispatchProps = {\n  onShowOverlay: showOverlay,\n  onDismissOverlay: dismissOverlay,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(withRouter<OwnProps>(OverlayHandler))\n\ninterface RouteOverlayProps {\n  overlayID: string\n}\n\nexport function RouteOverlay<P>(\n  WrappedComponent: ComponentClass<P & RouteOverlayProps>,\n  overlayID: string,\n  onClose?: OverlayDismissalWithRoute\n): ComponentClass<P> {\n  return class extends Component<P & RouteOverlayProps> {\n    public render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          onClose={onClose}\n          overlayID={overlayID}\n        />\n      )\n    }\n  }\n}\n","import 'babel-polyfill'\nimport 'abortcontroller-polyfill/dist/polyfill-patch-fetch'\n\nimport React, {PureComponent} from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {Router, Route, useRouterHistory, IndexRoute} from 'react-router'\nimport {createHistory, History} from 'history'\n\nimport {CLOUD} from 'src/shared/constants'\nimport configureStore from 'src/store/configureStore'\nimport {loadLocalStorage} from 'src/localStorage'\n\nimport {getRootNode} from 'src/utils/nodes'\nimport {getBrowserBasepath} from 'src/utils/basepath'\n\n// Components\nimport App from 'src/App'\nimport GetOrganizations from 'src/shared/containers/GetOrganizations'\nimport Setup from 'src/Setup'\nimport Signin from 'src/Signin'\nimport SigninPage from 'src/onboarding/containers/SigninPage'\nimport Logout from 'src/Logout'\nimport TaskPage from 'src/tasks/containers/TaskPage'\nimport TasksPage from 'src/tasks/containers/TasksPage'\nimport TaskRunsPage from 'src/tasks/components/TaskRunsPage'\nimport TaskEditPage from 'src/tasks/containers/TaskEditPage'\nimport DashboardContainer from 'src/dashboards/components/DashboardContainer'\nimport DashboardsIndex from 'src/dashboards/components/dashboard_index/DashboardsIndex'\nimport DashboardExportOverlay from 'src/dashboards/components/DashboardExportOverlay'\nimport DashboardImportOverlay from 'src/dashboards/components/DashboardImportOverlay'\nimport CreateFromTemplateOverlay from 'src/templates/components/createFromTemplateOverlay/CreateFromTemplateOverlay'\nimport CreateVariableOverlay from 'src/variables/components/CreateVariableOverlay'\nimport DataExplorerPage from 'src/dataExplorer/components/DataExplorerPage'\nimport SaveAsOverlay from 'src/dataExplorer/components/SaveAsOverlay'\nimport {MePage} from 'src/me'\nimport NotFound from 'src/shared/components/NotFound'\nimport GetLinks from 'src/shared/containers/GetLinks'\nimport GetMe from 'src/shared/containers/GetMe'\nimport UnauthenticatedApp from 'src/shared/containers/UnauthenticatedApp'\nimport TaskExportOverlay from 'src/tasks/components/TaskExportOverlay'\nimport TaskImportOverlay from 'src/tasks/components/TaskImportOverlay'\nimport EditVEO from 'src/dashboards/components/EditVEO'\nimport NewVEO from 'src/dashboards/components/NewVEO'\nimport OnboardingWizardPage from 'src/onboarding/containers/OnboardingWizardPage'\nimport BucketsIndex from 'src/buckets/containers/BucketsIndex'\nimport TemplatesIndex from 'src/templates/containers/TemplatesIndex'\nimport TelegrafsPage from 'src/telegrafs/containers/TelegrafsPage'\nimport ClientLibrariesPage from 'src/clientLibraries/containers/ClientLibrariesPage'\nimport ClientCSharpOverlay from 'src/clientLibraries/components/ClientCSharpOverlay'\nimport ClientGoOverlay from 'src/clientLibraries/components/ClientGoOverlay'\nimport ClientJavaOverlay from 'src/clientLibraries/components/ClientJavaOverlay'\nimport ClientJSOverlay from 'src/clientLibraries/components/ClientJSOverlay'\nimport ClientPythonOverlay from 'src/clientLibraries/components/ClientPythonOverlay'\nimport ClientRubyOverlay from 'src/clientLibraries/components/ClientRubyOverlay'\nimport TemplateImportOverlay from 'src/templates/components/TemplateImportOverlay'\nimport TemplateExportOverlay from 'src/templates/components/TemplateExportOverlay'\nimport VariablesIndex from 'src/variables/containers/VariablesIndex'\nimport ScrapersIndex from 'src/scrapers/containers/ScrapersIndex'\nimport VariableImportOverlay from 'src/variables/components/VariableImportOverlay'\nimport VariableExportOverlay from 'src/variables/components/VariableExportOverlay'\nimport SetOrg from 'src/shared/containers/SetOrg'\nimport RouteToOrg from 'src/shared/containers/RouteToOrg'\nimport CreateOrgOverlay from 'src/organizations/components/CreateOrgOverlay'\nimport CreateScraperOverlay from 'src/scrapers/components/CreateScraperOverlay'\nimport TokensIndex from 'src/authorizations/containers/TokensIndex'\nimport MembersIndex from 'src/members/containers/MembersIndex'\nimport LabelsIndex from 'src/labels/containers/LabelsIndex'\nimport TemplateViewOverlay from 'src/templates/components/TemplateViewOverlay'\nimport LineProtocolWizard from 'src/dataLoaders/components/lineProtocolWizard/LineProtocolWizard'\nimport CollectorsWizard from 'src/dataLoaders/components/collectorsWizard/CollectorsWizard'\nimport TelegrafInstructionsOverlay from 'src/telegrafs/components/TelegrafInstructionsOverlay'\nimport OrgProfilePage from 'src/organizations/containers/OrgProfilePage'\nimport RenameOrgOverlay from 'src/organizations/components/RenameOrgOverlay'\nimport UpdateBucketOverlay from 'src/buckets/components/UpdateBucketOverlay'\nimport RenameBucketOverlay from 'src/buckets/components/RenameBucketOverlay'\nimport RenameVariableOverlay from 'src/variables/components/RenameVariableOverlay'\nimport UpdateVariableOverlay from 'src/variables/components/UpdateVariableOverlay'\nimport TaskImportFromTemplateOverlay from 'src/tasks/components/TaskImportFromTemplateOverlay'\nimport StaticTemplateViewOverlay from 'src/templates/components/StaticTemplateViewOverlay'\nimport CheckHistory from 'src/checks/components/CheckHistory'\nimport AlertingIndex from 'src/alerting/components/AlertingIndex'\nimport AlertHistoryIndex from 'src/alerting/components/AlertHistoryIndex'\nimport BucketsDeleteDataOverlay from 'src/shared/components/DeleteDataOverlay'\nimport DEDeleteDataOverlay from 'src/dataExplorer/components/DeleteDataOverlay'\nimport NewThresholdCheckEO from 'src/checks/components/NewThresholdCheckEO'\nimport NewDeadmanCheckEO from 'src/checks/components/NewDeadmanCheckEO'\nimport EditCheckEO from 'src/checks/components/EditCheckEO'\nimport NewRuleOverlay from 'src/notifications/rules/components/NewRuleOverlay'\nimport EditRuleOverlay from 'src/notifications/rules/components/EditRuleOverlay'\nimport NewEndpointOverlay from 'src/notifications/endpoints/components/NewEndpointOverlay'\nimport EditEndpointOverlay from 'src/notifications/endpoints/components/EditEndpointOverlay'\nimport NoOrgsPage from 'src/organizations/containers/NoOrgsPage'\n\n// Overlays\nimport OverlayHandler, {\n  RouteOverlay,\n} from 'src/overlays/components/RouteOverlay'\nconst AddNoteOverlay = RouteOverlay(OverlayHandler, 'add-note', router => {\n  router.push(\n    `/orgs/${router.params.orgID}/dashboards/${router.params.dashboardID}`\n  )\n})\nconst EditNoteOverlay = RouteOverlay(OverlayHandler, 'edit-note', router => {\n  router.push(\n    `/orgs/${router.params.orgID}/dashboards/${router.params.dashboardID}`\n  )\n})\nconst AllAccessTokenOverlay = RouteOverlay(\n  OverlayHandler,\n  'add-master-token',\n  router => {\n    router.push(`/orgs/${router.params.orgID}/load-data/tokens`)\n  }\n)\nconst BucketsTokenOverlay = RouteOverlay(\n  OverlayHandler,\n  'add-token',\n  router => {\n    router.push(`/orgs/${router.params.orgID}/load-data/tokens`)\n  }\n)\nconst TelegrafConfigOverlay = RouteOverlay(\n  OverlayHandler,\n  'telegraf-config',\n  router => {\n    router.push(`/orgs/${router.params.orgID}/load-data/telegrafs`)\n  }\n)\nconst TelegrafOutputOverlay = RouteOverlay(\n  OverlayHandler,\n  'telegraf-output',\n  router => {\n    router.push(`/orgs/${router.params.orgID}/load-data/telegrafs`)\n  }\n)\n\n// Actions\nimport {disablePresentationMode} from 'src/shared/actions/app'\n\n// Styles\nimport 'src/style/chronograf.scss'\nimport '@influxdata/clockface/dist/index.css'\n\nconst rootNode = getRootNode()\nconst basepath = getBrowserBasepath()\n\ndeclare global {\n  interface Window {\n    basepath: string\n  }\n}\n\n// Older method used for pre-IE 11 compatibility\nwindow.basepath = basepath\n\nconst history: History = useRouterHistory(createHistory)({\n  basename: basepath, // this is written in when available by the URL prefixer middleware\n})\n\nexport const store = configureStore(loadLocalStorage(), history)\nconst {dispatch} = store\n\nif (window['Cypress']) {\n  window['store'] = store\n}\n\nhistory.listen(() => {\n  dispatch(disablePresentationMode())\n})\n\nwindow.addEventListener('keyup', event => {\n  const escapeKeyCode = 27\n  // fallback for browsers that don't support event.key\n  if (event.key === 'Escape' || event.keyCode === escapeKeyCode) {\n    dispatch(disablePresentationMode())\n  }\n})\n\nclass Root extends PureComponent {\n  public render() {\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Route component={GetLinks}>\n            <Route component={Setup}>\n              <Route path=\"/onboarding\">\n                <Route path=\":stepID\" component={OnboardingWizardPage} />\n                <Route\n                  path=\":stepID/:substepID\"\n                  component={OnboardingWizardPage}\n                />\n                <Route component={UnauthenticatedApp}>\n                  <Route path=\"/signin\" component={SigninPage} />\n                  <Route path=\"/logout\" component={Logout} />\n                </Route>\n              </Route>\n              <Route component={Signin}>\n                <Route component={GetMe}>\n                  <Route component={GetOrganizations}>\n                    <Route path=\"/\">\n                      <Route path=\"no-orgs\" component={NoOrgsPage} />\n                      <IndexRoute component={RouteToOrg} />\n                      <Route path=\"orgs\" component={App}>\n                        <Route path=\"new\" component={CreateOrgOverlay} />\n                        <Route path=\":orgID\" component={SetOrg}>\n                          <IndexRoute component={MePage} />\n                          <Route path=\"tasks\" component={TasksPage}>\n                            <Route\n                              path=\":id/export\"\n                              component={TaskExportOverlay}\n                            />\n                            <Route\n                              path=\"import\"\n                              component={TaskImportOverlay}\n                            />\n                            <Route\n                              path=\"import/template\"\n                              component={TaskImportFromTemplateOverlay}\n                            />\n                          </Route>\n                          <Route\n                            path=\"tasks/:id/runs\"\n                            component={TaskRunsPage}\n                          />\n                          <Route path=\"tasks/new\" component={TaskPage} />\n                          <Route path=\"tasks/:id\" component={TaskEditPage} />\n                          <Route\n                            path=\"data-explorer\"\n                            component={DataExplorerPage}\n                          >\n                            <Route path=\"save\" component={SaveAsOverlay} />\n                            <Route\n                              path=\"delete-data\"\n                              component={DEDeleteDataOverlay}\n                            />\n                          </Route>\n                          <Route path=\"dashboards\" component={DashboardsIndex}>\n                            <Route\n                              path=\"import\"\n                              component={DashboardImportOverlay}\n                            />\n                            <Route\n                              path=\"import/template\"\n                              component={CreateFromTemplateOverlay}\n                            />\n                            <Route\n                              path=\":dashboardID/export\"\n                              component={DashboardExportOverlay}\n                            />\n                          </Route>\n                          <Route\n                            path=\"dashboards/:dashboardID\"\n                            component={DashboardContainer}\n                          >\n                            <Route path=\"cells\">\n                              <Route path=\"new\" component={NewVEO} />\n                              <Route path=\":cellID/edit\" component={EditVEO} />\n                            </Route>\n                            <Route path=\"notes\">\n                              <Route path=\"new\" component={AddNoteOverlay} />\n                              <Route\n                                path=\":cellID/edit\"\n                                component={EditNoteOverlay}\n                              />\n                            </Route>\n                          </Route>\n                          <Route path=\"me\" component={MePage} />\n                          <Route path=\"load-data\">\n                            <IndexRoute component={BucketsIndex} />\n                            <Route path=\"tokens\" component={TokensIndex}>\n                              <Route path=\"generate\">\n                                <Route\n                                  path=\"all-access\"\n                                  component={AllAccessTokenOverlay}\n                                />\n                                <Route\n                                  path=\"buckets\"\n                                  component={BucketsTokenOverlay}\n                                />\n                              </Route>\n                            </Route>\n                            <Route path=\"buckets\" component={BucketsIndex}>\n                              <Route path=\":bucketID\">\n                                <Route\n                                  path=\"line-protocols/new\"\n                                  component={LineProtocolWizard}\n                                />\n                                <Route\n                                  path=\"telegrafs/new\"\n                                  component={CollectorsWizard}\n                                />\n                                <Route\n                                  path=\"scrapers/new\"\n                                  component={CreateScraperOverlay}\n                                />\n                                <Route\n                                  path=\"edit\"\n                                  component={UpdateBucketOverlay}\n                                />\n                                <Route\n                                  path=\"delete-data\"\n                                  component={BucketsDeleteDataOverlay}\n                                />\n                                <Route\n                                  path=\"rename\"\n                                  component={RenameBucketOverlay}\n                                />\n                              </Route>\n                            </Route>\n                            <Route path=\"telegrafs\" component={TelegrafsPage}>\n                              <Route\n                                path=\":id/view\"\n                                component={TelegrafConfigOverlay}\n                              />\n                              <Route\n                                path=\":id/instructions\"\n                                component={TelegrafInstructionsOverlay}\n                              />\n                              <Route\n                                path=\"output\"\n                                component={TelegrafOutputOverlay}\n                              />\n                              <Route path=\"new\" component={CollectorsWizard} />\n                            </Route>\n                            <Route path=\"scrapers\" component={ScrapersIndex}>\n                              <Route\n                                path=\"new\"\n                                component={CreateScraperOverlay}\n                              />\n                            </Route>\n                            <Route\n                              path=\"client-libraries\"\n                              component={ClientLibrariesPage}\n                            >\n                              <Route\n                                path=\"csharp\"\n                                component={ClientCSharpOverlay}\n                              />\n                              <Route path=\"go\" component={ClientGoOverlay} />\n                              <Route\n                                path=\"java\"\n                                component={ClientJavaOverlay}\n                              />\n                              <Route\n                                path=\"javascript-node\"\n                                component={ClientJSOverlay}\n                              />\n                              <Route\n                                path=\"python\"\n                                component={ClientPythonOverlay}\n                              />\n                              <Route\n                                path=\"ruby\"\n                                component={ClientRubyOverlay}\n                              />\n                            </Route>\n                          </Route>\n                          <Route path=\"settings\">\n                            {CLOUD ? (\n                              <IndexRoute component={VariablesIndex} />\n                            ) : (\n                              <>\n                                <IndexRoute component={MembersIndex} />\n                                <Route\n                                  path=\"members\"\n                                  component={MembersIndex}\n                                />\n                              </>\n                            )}\n\n                            <Route path=\"templates\" component={TemplatesIndex}>\n                              <Route\n                                path=\"import\"\n                                component={TemplateImportOverlay}\n                              />\n                              <Route\n                                path=\":id/export\"\n                                component={TemplateExportOverlay}\n                              />\n                              <Route\n                                path=\":id/view\"\n                                component={TemplateViewOverlay}\n                              />\n                              <Route\n                                path=\":id/static/view\"\n                                component={StaticTemplateViewOverlay}\n                              />\n                            </Route>\n                            <Route path=\"variables\" component={VariablesIndex}>\n                              <Route\n                                path=\"import\"\n                                component={VariableImportOverlay}\n                              />\n                              <Route\n                                path=\":id/export\"\n                                component={VariableExportOverlay}\n                              />\n                              <Route\n                                path=\"new\"\n                                component={CreateVariableOverlay}\n                              />\n                              <Route\n                                path=\":id/rename\"\n                                component={RenameVariableOverlay}\n                              />\n                              <Route\n                                path=\":id/edit\"\n                                component={UpdateVariableOverlay}\n                              />\n                            </Route>\n                            <Route path=\"labels\" component={LabelsIndex} />\n                            <Route path=\"profile\" component={OrgProfilePage}>\n                              <Route\n                                path=\"rename\"\n                                component={RenameOrgOverlay}\n                              />\n                            </Route>\n                          </Route>\n                          <Route path=\"alerting\" component={AlertingIndex}>\n                            <Route\n                              path=\"checks/new-threshold\"\n                              component={NewThresholdCheckEO}\n                            />\n                            <Route\n                              path=\"checks/new-deadman\"\n                              component={NewDeadmanCheckEO}\n                            />\n                            <Route\n                              path=\"checks/:checkID/edit\"\n                              component={EditCheckEO}\n                            />\n                            <Route\n                              path=\"rules/new\"\n                              component={NewRuleOverlay}\n                            />\n                            <Route\n                              path=\"rules/:ruleID/edit\"\n                              component={EditRuleOverlay}\n                            />\n                            <Route\n                              path=\"endpoints/new\"\n                              component={NewEndpointOverlay}\n                            />\n                            <Route\n                              path=\"endpoints/:endpointID/edit\"\n                              component={EditEndpointOverlay}\n                            />\n                          </Route>\n                          <Route\n                            path=\"alert-history\"\n                            component={AlertHistoryIndex}\n                          />\n                          <Route\n                            path=\"checks/:checkID\"\n                            component={CheckHistory}\n                          />\n                        </Route>\n                      </Route>\n                    </Route>\n                  </Route>\n                </Route>\n              </Route>\n            </Route>\n          </Route>\n          <Route path=\"*\" component={NotFound} />\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nif (rootNode) {\n  render(<Root />, rootNode)\n}\n","import {get} from 'lodash'\nimport {ASSET_LIMIT_ERROR_STATUS} from 'src/cloud/constants/index'\nimport {LimitsState} from 'src/cloud/reducers/limits'\nimport {LimitStatus} from 'src/cloud/actions/limits'\n\nexport const isLimitError = (error): boolean => {\n  return get(error, 'response.status', '') === ASSET_LIMIT_ERROR_STATUS\n}\n\nexport const extractBucketLimits = (limits: LimitsState): LimitStatus => {\n  return get(limits, 'buckets.limitStatus')\n}\nexport const extractBucketMax = (limits: LimitsState): number => {\n  return get(limits, 'buckets.maxAllowed') || Infinity // if maxAllowed == 0, there are no limits on asset\n}\n\nexport const extractBucketMaxRetentionSeconds = (\n  limits: LimitsState\n): number => {\n  return get(limits, 'buckets.maxRetentionSeconds', null)\n}\n\nexport const extractDashboardLimits = (limits: LimitsState): LimitStatus => {\n  return get(limits, 'dashboards.limitStatus')\n}\nexport const extractDashboardMax = (limits: LimitsState): number => {\n  return get(limits, 'dashboards.maxAllowed') || Infinity\n}\n\nexport const extractTaskLimits = (limits: LimitsState): LimitStatus => {\n  return get(limits, 'tasks.limitStatus')\n}\nexport const extractTaskMax = (limits: LimitsState): number => {\n  return get(limits, 'tasks.maxAllowed') || Infinity\n}\n\nexport const extractChecksMax = (limits: LimitsState): number => {\n  return get(limits, 'checks.maxAllowed') || Infinity\n}\n\nexport const extractRulesMax = (limits: LimitsState): number => {\n  return get(limits, 'rules.maxAllowed') || Infinity\n}\nexport const extractBlockedRules = (limits: LimitsState): string[] => {\n  return get(limits, 'rules.blocked') || []\n}\n\nexport const extractEndpointsMax = (limits: LimitsState): number => {\n  return get(limits, 'endpoints.maxAllowed') || Infinity\n}\nexport const extractBlockedEndpoints = (limits: LimitsState): string[] => {\n  return get(limits, 'endpoints.blocked') || []\n}\n\nexport const extractMonitoringLimitStatus = (\n  limits: LimitsState\n): LimitStatus => {\n  const statuses = [\n    get(limits, 'rules.limitStatus'),\n    get(limits, 'endpoints.limitStatus'),\n    get(limits, 'checks.limitStatus'),\n  ]\n\n  if (statuses.includes(LimitStatus.EXCEEDED)) {\n    return LimitStatus.EXCEEDED\n  }\n\n  return LimitStatus.OK\n}\n\nexport const extractLimitedMonitoringResources = (\n  limits: LimitsState\n): string => {\n  const rateLimitedResources = []\n\n  if (get(limits, 'checks.limitStatus') === LimitStatus.EXCEEDED) {\n    rateLimitedResources.push('checks')\n  }\n\n  if (get(limits, 'rules.limitStatus') === LimitStatus.EXCEEDED) {\n    rateLimitedResources.push('rules')\n  }\n\n  if (get(limits, 'endpoints.limitStatus') === LimitStatus.EXCEEDED) {\n    rateLimitedResources.push('endpoints')\n  }\n\n  return rateLimitedResources.join(', ')\n}\n\nexport const extractRateLimitStatus = (limits: LimitsState): LimitStatus => {\n  const statuses = [\n    get(limits, 'rate.writeKBs.limitStatus'),\n    get(limits, 'rate.readKBs.limitStatus'),\n    get(limits, 'rate.cardinality.limitStatus'),\n  ]\n\n  if (statuses.includes(LimitStatus.EXCEEDED)) {\n    return LimitStatus.EXCEEDED\n  }\n\n  return LimitStatus.OK\n}\n\nexport const extractRateLimitResources = (limits: LimitsState): string[] => {\n  const rateLimitedResources = []\n\n  if (get(limits, 'rate.readKBs.limitStatus') === LimitStatus.EXCEEDED) {\n    rateLimitedResources.push('read')\n  }\n\n  if (get(limits, 'rate.writeKBs.limitStatus') === LimitStatus.EXCEEDED) {\n    rateLimitedResources.push('write')\n  }\n\n  if (get(limits, 'rate.cardinality.limitStatus') === LimitStatus.EXCEEDED) {\n    rateLimitedResources.push('cardinality')\n  }\n\n  return rateLimitedResources\n}\n","var map = {\n\t\"./af\": 600,\n\t\"./af.js\": 600,\n\t\"./ar\": 601,\n\t\"./ar-dz\": 602,\n\t\"./ar-dz.js\": 602,\n\t\"./ar-kw\": 603,\n\t\"./ar-kw.js\": 603,\n\t\"./ar-ly\": 604,\n\t\"./ar-ly.js\": 604,\n\t\"./ar-ma\": 605,\n\t\"./ar-ma.js\": 605,\n\t\"./ar-sa\": 606,\n\t\"./ar-sa.js\": 606,\n\t\"./ar-tn\": 607,\n\t\"./ar-tn.js\": 607,\n\t\"./ar.js\": 601,\n\t\"./az\": 608,\n\t\"./az.js\": 608,\n\t\"./be\": 609,\n\t\"./be.js\": 609,\n\t\"./bg\": 610,\n\t\"./bg.js\": 610,\n\t\"./bm\": 611,\n\t\"./bm.js\": 611,\n\t\"./bn\": 612,\n\t\"./bn.js\": 612,\n\t\"./bo\": 613,\n\t\"./bo.js\": 613,\n\t\"./br\": 614,\n\t\"./br.js\": 614,\n\t\"./bs\": 615,\n\t\"./bs.js\": 615,\n\t\"./ca\": 616,\n\t\"./ca.js\": 616,\n\t\"./cs\": 617,\n\t\"./cs.js\": 617,\n\t\"./cv\": 618,\n\t\"./cv.js\": 618,\n\t\"./cy\": 619,\n\t\"./cy.js\": 619,\n\t\"./da\": 620,\n\t\"./da.js\": 620,\n\t\"./de\": 621,\n\t\"./de-at\": 622,\n\t\"./de-at.js\": 622,\n\t\"./de-ch\": 623,\n\t\"./de-ch.js\": 623,\n\t\"./de.js\": 621,\n\t\"./dv\": 624,\n\t\"./dv.js\": 624,\n\t\"./el\": 625,\n\t\"./el.js\": 625,\n\t\"./en-au\": 626,\n\t\"./en-au.js\": 626,\n\t\"./en-ca\": 627,\n\t\"./en-ca.js\": 627,\n\t\"./en-gb\": 628,\n\t\"./en-gb.js\": 628,\n\t\"./en-ie\": 629,\n\t\"./en-ie.js\": 629,\n\t\"./en-il\": 630,\n\t\"./en-il.js\": 630,\n\t\"./en-nz\": 631,\n\t\"./en-nz.js\": 631,\n\t\"./eo\": 632,\n\t\"./eo.js\": 632,\n\t\"./es\": 633,\n\t\"./es-do\": 634,\n\t\"./es-do.js\": 634,\n\t\"./es-us\": 635,\n\t\"./es-us.js\": 635,\n\t\"./es.js\": 633,\n\t\"./et\": 636,\n\t\"./et.js\": 636,\n\t\"./eu\": 637,\n\t\"./eu.js\": 637,\n\t\"./fa\": 638,\n\t\"./fa.js\": 638,\n\t\"./fi\": 639,\n\t\"./fi.js\": 639,\n\t\"./fo\": 640,\n\t\"./fo.js\": 640,\n\t\"./fr\": 641,\n\t\"./fr-ca\": 642,\n\t\"./fr-ca.js\": 642,\n\t\"./fr-ch\": 643,\n\t\"./fr-ch.js\": 643,\n\t\"./fr.js\": 641,\n\t\"./fy\": 644,\n\t\"./fy.js\": 644,\n\t\"./gd\": 645,\n\t\"./gd.js\": 645,\n\t\"./gl\": 646,\n\t\"./gl.js\": 646,\n\t\"./gom-latn\": 647,\n\t\"./gom-latn.js\": 647,\n\t\"./gu\": 648,\n\t\"./gu.js\": 648,\n\t\"./he\": 649,\n\t\"./he.js\": 649,\n\t\"./hi\": 650,\n\t\"./hi.js\": 650,\n\t\"./hr\": 651,\n\t\"./hr.js\": 651,\n\t\"./hu\": 652,\n\t\"./hu.js\": 652,\n\t\"./hy-am\": 653,\n\t\"./hy-am.js\": 653,\n\t\"./id\": 654,\n\t\"./id.js\": 654,\n\t\"./is\": 655,\n\t\"./is.js\": 655,\n\t\"./it\": 656,\n\t\"./it.js\": 656,\n\t\"./ja\": 657,\n\t\"./ja.js\": 657,\n\t\"./jv\": 658,\n\t\"./jv.js\": 658,\n\t\"./ka\": 659,\n\t\"./ka.js\": 659,\n\t\"./kk\": 660,\n\t\"./kk.js\": 660,\n\t\"./km\": 661,\n\t\"./km.js\": 661,\n\t\"./kn\": 662,\n\t\"./kn.js\": 662,\n\t\"./ko\": 663,\n\t\"./ko.js\": 663,\n\t\"./ky\": 664,\n\t\"./ky.js\": 664,\n\t\"./lb\": 665,\n\t\"./lb.js\": 665,\n\t\"./lo\": 666,\n\t\"./lo.js\": 666,\n\t\"./lt\": 667,\n\t\"./lt.js\": 667,\n\t\"./lv\": 668,\n\t\"./lv.js\": 668,\n\t\"./me\": 669,\n\t\"./me.js\": 669,\n\t\"./mi\": 670,\n\t\"./mi.js\": 670,\n\t\"./mk\": 671,\n\t\"./mk.js\": 671,\n\t\"./ml\": 672,\n\t\"./ml.js\": 672,\n\t\"./mn\": 673,\n\t\"./mn.js\": 673,\n\t\"./mr\": 674,\n\t\"./mr.js\": 674,\n\t\"./ms\": 675,\n\t\"./ms-my\": 676,\n\t\"./ms-my.js\": 676,\n\t\"./ms.js\": 675,\n\t\"./mt\": 677,\n\t\"./mt.js\": 677,\n\t\"./my\": 678,\n\t\"./my.js\": 678,\n\t\"./nb\": 679,\n\t\"./nb.js\": 679,\n\t\"./ne\": 680,\n\t\"./ne.js\": 680,\n\t\"./nl\": 681,\n\t\"./nl-be\": 682,\n\t\"./nl-be.js\": 682,\n\t\"./nl.js\": 681,\n\t\"./nn\": 683,\n\t\"./nn.js\": 683,\n\t\"./pa-in\": 684,\n\t\"./pa-in.js\": 684,\n\t\"./pl\": 685,\n\t\"./pl.js\": 685,\n\t\"./pt\": 686,\n\t\"./pt-br\": 687,\n\t\"./pt-br.js\": 687,\n\t\"./pt.js\": 686,\n\t\"./ro\": 688,\n\t\"./ro.js\": 688,\n\t\"./ru\": 689,\n\t\"./ru.js\": 689,\n\t\"./sd\": 690,\n\t\"./sd.js\": 690,\n\t\"./se\": 691,\n\t\"./se.js\": 691,\n\t\"./si\": 692,\n\t\"./si.js\": 692,\n\t\"./sk\": 693,\n\t\"./sk.js\": 693,\n\t\"./sl\": 694,\n\t\"./sl.js\": 694,\n\t\"./sq\": 695,\n\t\"./sq.js\": 695,\n\t\"./sr\": 696,\n\t\"./sr-cyrl\": 697,\n\t\"./sr-cyrl.js\": 697,\n\t\"./sr.js\": 696,\n\t\"./ss\": 698,\n\t\"./ss.js\": 698,\n\t\"./sv\": 699,\n\t\"./sv.js\": 699,\n\t\"./sw\": 700,\n\t\"./sw.js\": 700,\n\t\"./ta\": 701,\n\t\"./ta.js\": 701,\n\t\"./te\": 702,\n\t\"./te.js\": 702,\n\t\"./tet\": 703,\n\t\"./tet.js\": 703,\n\t\"./tg\": 704,\n\t\"./tg.js\": 704,\n\t\"./th\": 705,\n\t\"./th.js\": 705,\n\t\"./tl-ph\": 706,\n\t\"./tl-ph.js\": 706,\n\t\"./tlh\": 707,\n\t\"./tlh.js\": 707,\n\t\"./tr\": 708,\n\t\"./tr.js\": 708,\n\t\"./tzl\": 709,\n\t\"./tzl.js\": 709,\n\t\"./tzm\": 710,\n\t\"./tzm-latn\": 711,\n\t\"./tzm-latn.js\": 711,\n\t\"./tzm.js\": 710,\n\t\"./ug-cn\": 712,\n\t\"./ug-cn.js\": 712,\n\t\"./uk\": 713,\n\t\"./uk.js\": 713,\n\t\"./ur\": 714,\n\t\"./ur.js\": 714,\n\t\"./uz\": 715,\n\t\"./uz-latn\": 716,\n\t\"./uz-latn.js\": 716,\n\t\"./uz.js\": 715,\n\t\"./vi\": 717,\n\t\"./vi.js\": 717,\n\t\"./x-pseudo\": 718,\n\t\"./x-pseudo.js\": 718,\n\t\"./yo\": 719,\n\t\"./yo.js\": 719,\n\t\"./zh-cn\": 720,\n\t\"./zh-cn.js\": 720,\n\t\"./zh-hk\": 721,\n\t\"./zh-hk.js\": 721,\n\t\"./zh-tw\": 722,\n\t\"./zh-tw.js\": 722\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1095;","/* \ntslint:disable no-console \ntslint:disable max-classes-per-file\n*/\n\n// Libraries\nimport React, {Component, ErrorInfo} from 'react'\n\n// Components\nimport DefaultErrorMessage from 'src/shared/components/DefaultErrorMessage'\n\n// Utils\nimport {reportError, parseComponentName} from 'src/shared/utils/errors'\n\n// Types\nimport {ErrorMessageComponent} from 'src/types'\n\nexport function ErrorHandlingWith(Error: ErrorMessageComponent) {\n  return <P, S, T extends {new (...args: any[]): Component<P, S>}>(\n    constructor: T\n  ) => {\n    class Wrapped extends constructor {\n      public static get displayName(): string {\n        return constructor.name\n      }\n\n      private error: Error = null\n\n      public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.error = error\n        this.forceUpdate()\n\n        reportError(error, {component: parseComponentName(errorInfo)})\n      }\n\n      public render() {\n        if (this.error) {\n          return <Error error={this.error} />\n        }\n\n        return super.render()\n      }\n    }\n\n    return Wrapped\n  }\n}\n\nexport const ErrorHandling = ErrorHandlingWith(DefaultErrorMessage)\n","import {FunctionComponent} from 'react'\nimport {CLOUD, CLOUD_BILLING_VISIBLE} from 'src/shared/constants'\n\nexport const OSS_FLAGS = {\n  deleteWithPredicate: false,\n  downloadCellCSV: false,\n  telegrafEditor: false,\n  customCheckQuery: false,\n  matchingNotificationRules: false,\n}\n\nexport const CLOUD_FLAGS = {\n  deleteWithPredicate: false,\n  multiUser: false,\n  cloudBilling: CLOUD_BILLING_VISIBLE, // should be visible in dev and acceptance, but not in cloud\n  downloadCellCSV: false,\n  telegrafEditor: false,\n  customCheckQuery: false,\n  matchingNotificationRules: false,\n}\n\nexport const isFlagEnabled = (flagName: string, equals?: string | boolean) => {\n  let localStorageFlags\n  let _equals = equals\n\n  try {\n    localStorageFlags = JSON.parse(window.localStorage.featureFlags)\n  } catch {\n    localStorageFlags = {}\n  }\n\n  if (_equals === undefined) {\n    _equals = true\n  }\n\n  if (localStorageFlags.hasOwnProperty(flagName)) {\n    return localStorageFlags[flagName] === _equals\n  }\n\n  if (CLOUD) {\n    if (CLOUD_FLAGS.hasOwnProperty(flagName)) {\n      return CLOUD_FLAGS[flagName] === _equals\n    }\n\n    return false\n  }\n\n  if (OSS_FLAGS.hasOwnProperty(flagName)) {\n    return OSS_FLAGS[flagName] === _equals\n  }\n\n  return false\n}\n\n// type influx.toggleFeature('myFlag') to disable / enable any feature flag\nexport const FeatureFlag: FunctionComponent<{\n  name: string\n  equals?: string | boolean\n}> = ({name, equals, children}) => {\n  if (!isFlagEnabled(name, equals)) {\n    return null\n  }\n\n  return children as any\n}\n\nexport const getUserFlags = function getUserFlags() {\n  const flagKeys = CLOUD ? Object.keys(CLOUD_FLAGS) : Object.keys(OSS_FLAGS)\n\n  const flags = {}\n  flagKeys.forEach(key => {\n    flags[key] = isFlagEnabled(key)\n  })\n\n  return flags\n}\n\n/* eslint-disable no-console */\nconst list = () => {\n  console.log('Currently Available Feature Flags')\n  console.table(getUserFlags())\n}\n/* eslint-enable no-console */\n\nconst reset = () => {\n  const featureFlags = JSON.parse(window.localStorage.featureFlags || '{}')\n\n  if (CLOUD) {\n    Object.keys(featureFlags).forEach(k => {\n      if (!CLOUD_FLAGS.hasOwnProperty(k)) {\n        delete featureFlags[k]\n      } else {\n        featureFlags[k] = CLOUD_FLAGS[k]\n      }\n    })\n  } else {\n    Object.keys(featureFlags).forEach(k => {\n      if (!OSS_FLAGS.hasOwnProperty(k)) {\n        delete featureFlags[k]\n      } else {\n        featureFlags[k] = OSS_FLAGS[k]\n      }\n    })\n  }\n\n  window.localStorage.featureFlags = JSON.stringify(featureFlags)\n}\n\nexport const set = (flagName: string, value: string | boolean) => {\n  const featureFlags = JSON.parse(window.localStorage.featureFlags || '{}')\n\n  featureFlags[flagName] = value\n\n  window.localStorage.featureFlags = JSON.stringify(featureFlags)\n\n  return featureFlags[flagName]\n}\n\nexport const toggleLocalStorageFlag = (flagName: string) => {\n  const featureFlags = JSON.parse(window.localStorage.featureFlags || '{}')\n\n  featureFlags[flagName] = !featureFlags[flagName]\n\n  window.localStorage.featureFlags = JSON.stringify(featureFlags)\n\n  return featureFlags[flagName]\n}\n\n// Expose utility in dev tools console for convenience\nconst w: any = window\n\nw.influx = {toggleFeature: toggleLocalStorageFlag, list, reset, set}\n","// Libraries\nimport {normalize} from 'normalizr'\n\n// APIs\nimport {client} from 'src/utils/api'\nimport {createDashboardFromTemplate} from 'src/dashboards/actions/thunks'\nimport {createVariableFromTemplate} from 'src/variables/actions/thunks'\nimport {createTaskFromTemplate} from 'src/tasks/actions/thunks'\n\n// Schemas\nimport {templateSchema, arrayOfTemplates} from 'src/schemas/templates'\n\n// Actions\nimport {notify, Action as NotifyAction} from 'src/shared/actions/notifications'\nimport {\n  addTemplateSummary,\n  populateTemplateSummaries,\n  setExportTemplate,\n  setTemplatesStatus,\n  removeTemplateSummary,\n  setTemplateSummary,\n  Action as TemplateAction,\n} from 'src/templates/actions/creators'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\nimport {staticTemplates} from 'src/templates/constants/defaultTemplates'\n\n// Types\nimport {Dispatch} from 'react'\nimport {DocumentCreate, TemplateType} from '@influxdata/influx'\nimport {\n  RemoteDataState,\n  GetState,\n  DashboardTemplate,\n  VariableTemplate,\n  TemplateSummary,\n  TemplateSummaryEntities,\n  Label,\n  Template,\n  TaskTemplate,\n} from 'src/types'\n\n// Utils\nimport {templateToExport} from 'src/shared/utils/resourceToTemplate'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getLabels} from 'src/resources/selectors'\n\ntype Action = TemplateAction | NotifyAction\n\nexport const getTemplateByID = async (id: string): Promise<Template> => {\n  const template: Template = (await client.templates.get(id)) as any\n  return template\n}\n\nexport const getTemplates = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n): Promise<void> => {\n  const org = getOrg(getState())\n  dispatch(setTemplatesStatus(RemoteDataState.Loading))\n  const items = await client.templates.getAll(org.id)\n  const templateSummaries = normalize<\n    TemplateSummary,\n    TemplateSummaryEntities,\n    string[]\n  >(items, arrayOfTemplates)\n  dispatch(populateTemplateSummaries(templateSummaries))\n}\n\nexport const createTemplate = (template: DocumentCreate) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const org = getOrg(getState())\n    const item = await client.templates.create({...template, orgID: org.id})\n    const templateSummary = normalize<\n      TemplateSummary,\n      TemplateSummaryEntities,\n      string\n    >(item, templateSchema)\n    dispatch(addTemplateSummary(templateSummary))\n    dispatch(notify(copy.importTemplateSucceeded()))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.importTemplateFailed(error)))\n  }\n}\n\nexport const createTemplateFromResource = (\n  resource: DocumentCreate,\n  resourceName: string\n) => async (dispatch: Dispatch<Action>, getState: GetState) => {\n  try {\n    const org = getOrg(getState())\n    await client.templates.create({...resource, orgID: org.id})\n    dispatch(notify(copy.resourceSavedAsTemplate(resourceName)))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.saveResourceAsTemplateFailed(resourceName, error)))\n  }\n}\n\nexport const updateTemplate = (id: string, props: TemplateSummary) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n): Promise<void> => {\n  setTemplateSummary(id, RemoteDataState.Loading)\n  const state = getState()\n  const labels = getLabels(state, props.labels)\n\n  try {\n    const item = await client.templates.update(id, {...props, labels})\n    const templateSummary = normalize<\n      TemplateSummary,\n      TemplateSummaryEntities,\n      string\n    >(item, templateSchema)\n\n    dispatch(setTemplateSummary(id, RemoteDataState.Done, templateSummary))\n    dispatch(notify(copy.updateTemplateSucceeded()))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.updateTemplateFailed(error)))\n  }\n}\n\nexport const convertToTemplate = (id: string) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    dispatch(setExportTemplate(RemoteDataState.Loading))\n\n    const templateDocument = await client.templates.get(id)\n    const template = templateToExport(templateDocument)\n\n    dispatch(setExportTemplate(RemoteDataState.Done, template))\n  } catch (error) {\n    dispatch(setExportTemplate(RemoteDataState.Error))\n    dispatch(notify(copy.createTemplateFailed(error)))\n  }\n}\n\nexport const clearExportTemplate = () => (dispatch: Dispatch<Action>) => {\n  dispatch(setExportTemplate(RemoteDataState.NotStarted, null))\n}\n\nexport const deleteTemplate = (templateID: string) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    await client.templates.delete(templateID)\n    dispatch(removeTemplateSummary(templateID))\n    dispatch(notify(copy.deleteTemplateSuccess()))\n  } catch (e) {\n    console.error(e)\n    dispatch(notify(copy.deleteTemplateFailed(e)))\n  }\n}\n\nexport const cloneTemplate = (templateID: string) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const org = getOrg(getState())\n    const createdTemplate = await client.templates.clone(templateID, org.id)\n    const templateSummary = normalize<\n      TemplateSummary,\n      TemplateSummaryEntities,\n      string\n    >(createdTemplate, templateSchema)\n\n    dispatch(addTemplateSummary(templateSummary))\n    dispatch(notify(copy.cloneTemplateSuccess()))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.cloneTemplateFailed(error)))\n  }\n}\n\nconst createFromTemplate = (template: Template) => dispatch => {\n  const {\n    content: {\n      data: {type},\n    },\n  } = template\n\n  try {\n    switch (type) {\n      case TemplateType.Dashboard:\n        return dispatch(\n          createDashboardFromTemplate(template as DashboardTemplate)\n        )\n      case TemplateType.Task:\n        return dispatch(createTaskFromTemplate(template as TaskTemplate))\n      case TemplateType.Variable:\n        return dispatch(\n          createVariableFromTemplate(template as VariableTemplate)\n        )\n      default:\n        throw new Error(`Cannot create template: ${type}`)\n    }\n  } catch (e) {\n    console.error(e)\n    dispatch(notify(copy.createResourceFromTemplateFailed(e)))\n  }\n}\n\nexport const createResourceFromStaticTemplate = (name: string) => dispatch => {\n  const template = staticTemplates[name]\n  dispatch(createFromTemplate(template))\n}\n\nexport const createResourceFromTemplate = (templateID: string) => async (\n  dispatch\n): Promise<void> => {\n  const template: Template = (await client.templates.get(templateID)) as any\n\n  dispatch(createFromTemplate(template))\n}\n\nexport const addTemplateLabelsAsync = (\n  templateID: string,\n  labels: Label[]\n) => async (dispatch: Dispatch<Action>): Promise<void> => {\n  try {\n    await client.templates.addLabels(templateID, labels.map(l => l.id))\n    const item = await client.templates.get(templateID)\n    const templateSummary = normalize<\n      TemplateSummary,\n      TemplateSummaryEntities,\n      string\n    >(item, templateSchema)\n\n    dispatch(\n      setTemplateSummary(templateID, RemoteDataState.Done, templateSummary)\n    )\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.addTemplateLabelFailed()))\n  }\n}\n\nexport const removeTemplateLabelsAsync = (\n  templateID: string,\n  labels: Label[]\n) => async (dispatch: Dispatch<Action>): Promise<void> => {\n  try {\n    await client.templates.removeLabels(templateID, labels.map(l => l.id))\n    const item = await client.templates.get(templateID)\n    const templateSummary = normalize<\n      TemplateSummary,\n      TemplateSummaryEntities,\n      string\n    >(item, templateSchema)\n\n    dispatch(\n      setTemplateSummary(templateID, RemoteDataState.Done, templateSummary)\n    )\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.removeTemplateLabelFailed()))\n  }\n}\n","// Libraries\nimport {get} from 'lodash'\n\n// APIs\nimport {postQueryAst} from 'src/client'\n\n// Types\nimport {Package, ImportDeclaration, Statement} from 'src/types/ast'\n\nexport const insertPreambleInScript = async (\n  script: string,\n  preamble: string\n) => {\n  if (!script.includes('import')) {\n    return `${preamble}\\n\\n${script}`\n  }\n\n  // TODO: Replace this with `import {parse} from '@influxdata/flux-parser'`\n  // when the Flux team adds location.source data to the rust implementation\n  // https://github.com/influxdata/influxdb/issues/14467\n  const resp = await postQueryAst({data: {query: script}})\n\n  if (resp.status !== 200) {\n    throw new Error(resp.data.message)\n  }\n\n  const ast = resp.data.ast as Package\n\n  const imports: ImportDeclaration[] = get(ast, 'files.0.imports', [])\n  const body: Statement[] = get(ast, 'files.0.body', [])\n\n  const importsText = imports.map(d => d.location.source).join('\\n')\n  const bodyText = body.map(d => d.location.source).join('\\n\\n')\n\n  const result = `${importsText}\\n${preamble}\\n\\n${bodyText}`\n\n  return result\n}\n","// Libraries\nimport {push, goBack} from 'react-router-redux'\nimport {Dispatch} from 'react'\nimport {normalize} from 'normalizr'\n\n// APIs\nimport * as api from 'src/client'\nimport {createTaskFromTemplate as createTaskFromTemplateAJAX} from 'src/templates/api'\n\n// Schemas\nimport {taskSchema, arrayOfTasks} from 'src/schemas/tasks'\n\n// Actions\nimport {setExportTemplate} from 'src/templates/actions/creators'\nimport {notify, Action as NotifyAction} from 'src/shared/actions/notifications'\nimport {\n  addTask,\n  setTasks,\n  editTask,\n  setCurrentTask,\n  setAllTaskOptions,\n  setRuns,\n  setLogs,\n  clearTask,\n  removeTask,\n  setNewScript,\n  clearCurrentTask,\n  Action as TaskAction,\n} from 'src/tasks/actions/creators'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\n\n// Types\nimport {\n  Label,\n  TaskTemplate,\n  Task,\n  GetState,\n  TaskSchedule,\n  RemoteDataState,\n  TaskEntities,\n} from 'src/types'\n\n// Utils\nimport {getErrorMessage} from 'src/utils/api'\nimport {insertPreambleInScript} from 'src/shared/utils/insertPreambleInScript'\nimport {taskToTemplate} from 'src/shared/utils/resourceToTemplate'\nimport {isLimitError} from 'src/cloud/utils/limits'\nimport {checkTaskLimits} from 'src/cloud/actions/limits'\nimport {getOrg} from 'src/organizations/selectors'\n\ntype Action = TaskAction | ExternalActions | ReturnType<typeof getTasks>\ntype ExternalActions = NotifyAction | ReturnType<typeof checkTaskLimits>\n\n// Thunks\nexport const getTasks = () => async (\n  dispatch: Dispatch<TaskAction | NotifyAction>,\n  getState: GetState\n): Promise<void> => {\n  try {\n    dispatch(setTasks(RemoteDataState.Loading))\n\n    const org = getOrg(getState())\n    const resp = await api.getTasks({query: {orgID: org.id}})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const tasks = normalize<Task, TaskEntities, string[]>(\n      resp.data.tasks,\n      arrayOfTasks\n    )\n\n    dispatch(setTasks(RemoteDataState.Done, tasks))\n  } catch (error) {\n    dispatch(setTasks(RemoteDataState.Error))\n    const message = getErrorMessage(error)\n    console.error(error)\n    dispatch(notify(copy.tasksFetchFailed(message)))\n  }\n}\n\nexport const addTaskLabel = (taskID: string, label: Label) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    const postResp = await api.postTasksLabel({\n      taskID,\n      data: {labelID: label.id},\n    })\n\n    if (postResp.status !== 201) {\n      throw new Error(postResp.data.message)\n    }\n\n    const resp = await api.getTask({taskID})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const task = normalize<Task, TaskEntities, string>(resp.data, taskSchema)\n\n    dispatch(editTask(task))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.addTaskLabelFailed()))\n  }\n}\n\nexport const deleteTaskLabel = (taskID: string, label: Label) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    const deleteResp = await api.deleteTasksLabel({taskID, labelID: label.id})\n    if (deleteResp.status !== 204) {\n      throw new Error(deleteResp.data.message)\n    }\n\n    const resp = await api.getTask({taskID})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const task = normalize<Task, TaskEntities, string>(resp.data, taskSchema)\n\n    dispatch(editTask(task))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.removeTaskLabelFailed()))\n  }\n}\n\nexport const updateTaskStatus = (task: Task) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    const resp = await api.patchTask({\n      taskID: task.id,\n      data: {status: task.status},\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const normTask = normalize<Task, TaskEntities, string>(\n      resp.data,\n      taskSchema\n    )\n\n    dispatch(editTask(normTask))\n    dispatch(notify(copy.taskUpdateSuccess()))\n  } catch (e) {\n    console.error(e)\n    const message = getErrorMessage(e)\n    dispatch(notify(copy.taskUpdateFailed(message)))\n  }\n}\n\nexport const updateTaskName = (name: string, taskID: string) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    const resp = await api.patchTask({taskID, data: {name}})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const normTask = normalize<Task, TaskEntities, string>(\n      resp.data,\n      taskSchema\n    )\n\n    dispatch(editTask(normTask))\n    dispatch(notify(copy.taskUpdateSuccess()))\n  } catch (e) {\n    console.error(e)\n    const message = getErrorMessage(e)\n    dispatch(notify(copy.taskUpdateFailed(message)))\n  }\n}\n\nexport const deleteTask = (taskID: string) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    const resp = await api.deleteTask({taskID})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeTask(taskID))\n    dispatch(notify(copy.taskDeleteSuccess()))\n  } catch (e) {\n    console.error(e)\n    const message = getErrorMessage(e)\n    dispatch(notify(copy.taskDeleteFailed(message)))\n  }\n}\n\nexport const cloneTask = (task: Task) => async (dispatch: Dispatch<Action>) => {\n  try {\n    const resp = await api.getTask({taskID: task.id})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const newTask = await api.postTask({data: resp.data})\n\n    if (newTask.status !== 201) {\n      throw new Error(newTask.data.message)\n    }\n\n    const normTask = normalize<Task, TaskEntities, string>(\n      resp.data,\n      taskSchema\n    )\n\n    dispatch(notify(copy.taskCloneSuccess(task.name)))\n    dispatch(addTask(normTask))\n    dispatch(checkTaskLimits())\n  } catch (error) {\n    console.error(error)\n    if (isLimitError(error)) {\n      dispatch(notify(copy.resourceLimitReached('tasks')))\n    } else {\n      const message = getErrorMessage(error)\n      dispatch(notify(copy.taskCloneFailed(task.name, message)))\n    }\n  }\n}\n\nexport const selectTaskByID = (id: string) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    const resp = await api.getTask({taskID: id})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const task = normalize<Task, TaskEntities, string>(resp.data, taskSchema)\n\n    dispatch(setCurrentTask(task))\n  } catch (error) {\n    console.error(error)\n    dispatch(goToTasks())\n    const message = getErrorMessage(error)\n    dispatch(notify(copy.taskNotFound(message)))\n  }\n}\n\nexport const setAllTaskOptionsByID = (taskID: string) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    const resp = await api.getTask({taskID})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const task = normalize<Task, TaskEntities, string>(resp.data, taskSchema)\n\n    dispatch(setAllTaskOptions(task))\n  } catch (error) {\n    console.error(error)\n    dispatch(goToTasks())\n    const message = getErrorMessage(error)\n    dispatch(notify(copy.taskNotFound(message)))\n  }\n}\n\nexport const selectTask = (taskID: string) => (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  const org = getOrg(getState())\n\n  dispatch(push(`/orgs/${org.id}/tasks/${taskID}`))\n}\n\nexport const goToTasks = () => (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  const org = getOrg(getState())\n\n  dispatch(push(`/orgs/${org.id}/tasks`))\n}\n\nexport const cancel = () => (dispatch: Dispatch<Action>) => {\n  dispatch(clearCurrentTask())\n  dispatch(goBack())\n}\n\nexport const updateScript = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const state = getState()\n    const {\n      tasks: {currentScript: script, currentTask: task, taskOptions},\n    } = state.resources\n\n    const updatedTask: Partial<Task> & {\n      name: string\n      flux: string\n      token: string\n    } = {\n      flux: script,\n      name: taskOptions.name,\n      offset: taskOptions.offset,\n      token: null,\n    }\n\n    if (taskOptions.taskScheduleType === TaskSchedule.interval) {\n      updatedTask.every = taskOptions.interval\n      updatedTask.cron = null\n    } else {\n      updatedTask.cron = taskOptions.cron\n      updatedTask.every = null\n    }\n\n    const resp = await api.patchTask({taskID: task.id, data: updatedTask})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(goToTasks())\n    dispatch(clearCurrentTask())\n    dispatch(notify(copy.taskUpdateSuccess()))\n  } catch (error) {\n    console.error(error)\n    const message = getErrorMessage(error)\n    dispatch(notify(copy.taskUpdateFailed(message)))\n  }\n}\n\nexport const saveNewScript = (script: string, preamble: string) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const fluxScript = await insertPreambleInScript(script, preamble)\n    const org = getOrg(getState())\n    const resp = await api.postTask({data: {orgID: org.id, flux: fluxScript}})\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(setNewScript(''))\n    dispatch(clearTask())\n    dispatch(goToTasks())\n    dispatch(notify(copy.taskCreatedSuccess()))\n    dispatch(checkTaskLimits())\n  } catch (error) {\n    console.error(error)\n    if (isLimitError(error)) {\n      dispatch(notify(copy.resourceLimitReached('tasks')))\n    } else {\n      const message = getErrorMessage(error)\n      dispatch(notify(copy.taskNotCreated(message)))\n    }\n  }\n}\n\nexport const getRuns = (taskID: string) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    dispatch(setRuns([], RemoteDataState.Loading))\n    dispatch(selectTaskByID(taskID))\n    const resp = await api.getTasksRuns({taskID})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const runsWithDuration = resp.data.runs.map(run => {\n      const finished = new Date(run.finishedAt)\n      const started = new Date(run.startedAt)\n\n      return {\n        ...run,\n        duration: `${runDuration(finished, started)}`,\n      }\n    })\n\n    dispatch(setRuns(runsWithDuration, RemoteDataState.Done))\n  } catch (error) {\n    console.error(error)\n    const message = getErrorMessage(error)\n    dispatch(notify(copy.taskGetFailed(message)))\n    dispatch(setRuns([], RemoteDataState.Error))\n  }\n}\n\nexport const runTask = (taskID: string) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    const resp = await api.postTasksRun({taskID})\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(notify(copy.taskRunSuccess()))\n  } catch (error) {\n    const message = getErrorMessage(error)\n    dispatch(notify(copy.taskRunFailed(message)))\n    console.error(error)\n  }\n}\n\nexport const getLogs = (taskID: string, runID: string) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    const resp = await api.getTasksRunsLogs({taskID, runID})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n    dispatch(setLogs(resp.data.events))\n  } catch (error) {\n    console.error(error)\n    dispatch(setLogs([]))\n  }\n}\n\nexport const convertToTemplate = (taskID: string) => async (\n  dispatch,\n  getState: GetState\n): Promise<void> => {\n  try {\n    dispatch(setExportTemplate(RemoteDataState.Loading))\n    const resp = await api.getTask({taskID})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const {entities, result} = normalize<Task, TaskEntities, string>(\n      resp.data,\n      taskSchema\n    )\n\n    const taskTemplate = taskToTemplate(getState(), entities.tasks[result])\n\n    dispatch(setExportTemplate(RemoteDataState.Done, taskTemplate))\n  } catch (error) {\n    dispatch(setExportTemplate(RemoteDataState.Error))\n    dispatch(notify(copy.createTemplateFailed(error)))\n  }\n}\n\nexport const createTaskFromTemplate = (template: TaskTemplate) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const org = getOrg(getState())\n\n    await createTaskFromTemplateAJAX(template, org.id)\n\n    dispatch(getTasks())\n    dispatch(notify(copy.importTaskSucceeded()))\n    dispatch(checkTaskLimits())\n  } catch (error) {\n    if (isLimitError(error)) {\n      dispatch(notify(copy.resourceLimitReached('tasks')))\n    } else {\n      dispatch(notify(copy.importTaskFailed(error)))\n    }\n  }\n}\n\nexport const runDuration = (finishedAt: Date, startedAt: Date): string => {\n  let timeTag = 'seconds'\n\n  if (isNaN(finishedAt.getTime()) || isNaN(startedAt.getTime())) {\n    return ''\n  }\n  let diff = (finishedAt.getTime() - startedAt.getTime()) / 1000\n\n  if (diff > 60) {\n    diff = Math.round(diff / 60)\n    timeTag = 'minutes'\n  }\n\n  return diff + ' ' + timeTag\n}\n","// Types\nimport {\n  TelegrafPluginInputCpu,\n  TelegrafPluginInputDisk,\n  TelegrafPluginInputDiskio,\n  TelegrafPluginInputDocker,\n  TelegrafPluginInputFile,\n  TelegrafPluginInputKernel,\n  TelegrafPluginInputKubernetes,\n  TelegrafPluginInputLogParser,\n  TelegrafPluginInputMem,\n  TelegrafPluginInputNet,\n  TelegrafPluginInputNetResponse,\n  TelegrafPluginInputNginx,\n  TelegrafPluginInputProcesses,\n  TelegrafPluginInputProcstat,\n  TelegrafPluginInputPrometheus,\n  TelegrafPluginInputRedis,\n  TelegrafPluginInputSyslog,\n  TelegrafPluginInputSwap,\n  TelegrafPluginInputSystem,\n  TelegrafPluginInputTail,\n  TelegrafPluginOutputFile,\n  TelegrafPluginOutputInfluxDBV2,\n  TelegrafPluginInputDockerConfig,\n  TelegrafPluginInputFileConfig,\n  TelegrafPluginInputKubernetesConfig,\n  TelegrafPluginInputLogParserConfig,\n  TelegrafPluginInputProcstatConfig,\n  TelegrafPluginInputPrometheusConfig,\n  TelegrafPluginInputRedisConfig,\n  TelegrafPluginInputSyslogConfig,\n  TelegrafPluginOutputFileConfig,\n  TelegrafPluginOutputInfluxDBV2Config,\n} from '@influxdata/influx'\nimport {RemoteDataState} from 'src/types'\nimport {WritePrecision} from '@influxdata/influx'\n\nexport enum DataLoaderStep {\n  'Configure',\n}\n\nexport enum CollectorsStep {\n  'Select',\n  'Configure',\n  'Verify',\n}\n\nexport enum LineProtocolStep {\n  'Configure',\n  'Verify',\n}\n\ninterface ScraperTarget {\n  bucket: string\n  url: string\n  name: string\n  id?: string\n}\n\nexport interface DataLoadersState {\n  telegrafPlugins: TelegrafPlugin[]\n  pluginBundles: BundleName[]\n  type: DataLoaderType\n  activeLPTab: LineProtocolTab\n  telegrafConfigID: string\n  lpStatus: RemoteDataState\n  lpError: string\n  lineProtocolBody: string\n  precision: WritePrecision\n  scraperTarget: ScraperTarget\n  telegrafConfigName: string\n  telegrafConfigDescription: string\n  token: string\n}\n\nexport enum ConfigurationState {\n  Unconfigured = 'unconfigured',\n  InvalidConfiguration = 'invalid',\n  Configured = 'configured',\n}\n\nexport enum DataLoaderType {\n  CSV = 'CSV',\n  Streaming = 'Streaming',\n  LineProtocol = 'Line Protocol',\n  Scraping = 'Scraping',\n  Empty = '',\n}\n\nexport type PluginConfig =\n  | TelegrafPluginInputDockerConfig\n  | TelegrafPluginInputFileConfig\n  | TelegrafPluginInputKubernetesConfig\n  | TelegrafPluginInputLogParserConfig\n  | TelegrafPluginInputProcstatConfig\n  | TelegrafPluginInputPrometheusConfig\n  | TelegrafPluginInputRedisConfig\n  | TelegrafPluginInputSyslogConfig\n  | TelegrafPluginOutputFileConfig\n  | TelegrafPluginOutputInfluxDBV2Config\n\nexport type Plugin =\n  | TelegrafPluginInputCpu\n  | TelegrafPluginInputDisk\n  | TelegrafPluginInputDiskio\n  | TelegrafPluginInputDocker\n  | TelegrafPluginInputFile\n  | TelegrafPluginInputKernel\n  | TelegrafPluginInputKubernetes\n  | TelegrafPluginInputLogParser\n  | TelegrafPluginInputMem\n  | TelegrafPluginInputNet\n  | TelegrafPluginInputNetResponse\n  | TelegrafPluginInputNginx\n  | TelegrafPluginInputProcesses\n  | TelegrafPluginInputProcstat\n  | TelegrafPluginInputPrometheus\n  | TelegrafPluginInputRedis\n  | TelegrafPluginInputSyslog\n  | TelegrafPluginInputSwap\n  | TelegrafPluginInputSystem\n  | TelegrafPluginInputTail\n  | TelegrafPluginOutputFile\n  | TelegrafPluginOutputInfluxDBV2\n\nexport interface TelegrafPlugin {\n  name: TelegrafPluginName\n  configured: ConfigurationState\n  active: boolean\n  plugin?: Plugin\n  templateID?: string\n}\n\nexport enum BundleName {\n  System = 'System',\n  Docker = 'Docker',\n  Kubernetes = 'Kubernetes',\n  Nginx = 'NGINX',\n  Redis = 'Redis',\n}\n\nexport type TelegrafPluginName =\n  | TelegrafPluginInputCpu.NameEnum.Cpu\n  | TelegrafPluginInputDisk.NameEnum.Disk\n  | TelegrafPluginInputDiskio.NameEnum.Diskio\n  | TelegrafPluginInputDocker.NameEnum.Docker\n  | TelegrafPluginInputFile.NameEnum.File\n  | TelegrafPluginInputKernel.NameEnum.Kernel\n  | TelegrafPluginInputKubernetes.NameEnum.Kubernetes\n  | TelegrafPluginInputLogParser.NameEnum.Logparser\n  | TelegrafPluginInputMem.NameEnum.Mem\n  | TelegrafPluginInputNet.NameEnum.Net\n  | TelegrafPluginInputNetResponse.NameEnum.NetResponse\n  | TelegrafPluginInputNginx.NameEnum.Nginx\n  | TelegrafPluginInputProcesses.NameEnum.Processes\n  | TelegrafPluginInputProcstat.NameEnum.Procstat\n  | TelegrafPluginInputPrometheus.NameEnum.Prometheus\n  | TelegrafPluginInputRedis.NameEnum.Redis\n  | TelegrafPluginInputSyslog.NameEnum.Syslog\n  | TelegrafPluginInputSwap.NameEnum.Swap\n  | TelegrafPluginInputSystem.NameEnum.System\n  | TelegrafPluginInputTail.NameEnum.Tail\n  | TelegrafPluginOutputFile.NameEnum.File\n  | TelegrafPluginOutputInfluxDBV2.NameEnum.InfluxdbV2\n\nexport enum LineProtocolTab {\n  UploadFile = 'Upload File',\n  EnterManually = 'Enter Manually',\n  EnterURL = 'Enter URL',\n}\n\nexport enum LineProtocolStatus {\n  ImportData = 'importData',\n  Loading = 'loading',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport enum Precision {\n  Milliseconds = 'Milliseconds',\n  Seconds = 'Seconds',\n  Microseconds = 'Microseconds',\n  Nanoseconds = 'Nanoseconds',\n}\n\nexport enum ConfigFieldType {\n  String = 'string',\n  StringArray = 'string array',\n  Uri = 'uri',\n  UriArray = 'uri array',\n}\n\nexport interface ConfigFields {\n  [field: string]: {\n    type: ConfigFieldType\n    isRequired: boolean\n  }\n}\n\nexport interface TelegrafPluginInfo {\n  [name: string]: {\n    fields: ConfigFields\n    defaults: Plugin\n    templateID?: string\n  }\n}\n\nexport type Substep = number | 'streaming' | 'config'\n","// Libraries\nimport {normalize} from 'normalizr'\n\n// Actions\nimport {notify} from 'src/shared/actions/notifications'\nimport {setExportTemplate} from 'src/templates/actions/creators'\nimport {\n  setValues,\n  setVariables,\n  setVariable,\n  removeVariable,\n} from 'src/variables/actions/creators'\n\n// Schemas\nimport {variableSchema, arrayOfVariables} from 'src/schemas/variables'\n\n// APIs\nimport * as api from 'src/client'\nimport {hydrateVars} from 'src/variables/utils/hydrateVars'\nimport {createVariableFromTemplate as createVariableFromTemplateAJAX} from 'src/templates/api'\n\n// Utils\nimport {getValueSelections, extractVariablesList} from 'src/variables/selectors'\nimport {CancelBox} from 'src/types/promises'\nimport {variableToTemplate} from 'src/shared/utils/resourceToTemplate'\nimport {findDependentVariables} from 'src/variables/utils/exportVariables'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getLabels} from 'src/resources/selectors'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\n\n// Types\nimport {Dispatch} from 'react'\nimport {\n  GetState,\n  RemoteDataState,\n  VariableTemplate,\n  Label,\n  Variable,\n  VariableEntities,\n  VariableValuesByID,\n} from 'src/types'\nimport {Action as NotifyAction} from 'src/shared/actions/notifications'\nimport {\n  Action as VariableAction,\n  EditorAction,\n} from 'src/variables/actions/creators'\n\ntype Action = VariableAction | EditorAction | NotifyAction\n\nexport const getVariables = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    dispatch(setVariables(RemoteDataState.Loading))\n    const org = getOrg(getState())\n    const resp = await api.getVariables({query: {orgID: org.id}})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const variables = normalize<Variable, VariableEntities, string[]>(\n      resp.data.variables,\n      arrayOfVariables\n    )\n\n    dispatch(setVariables(RemoteDataState.Done, variables))\n  } catch (error) {\n    console.error(error)\n    dispatch(setVariables(RemoteDataState.Error))\n    dispatch(notify(copy.getVariablesFailed()))\n  }\n}\n\nexport const getVariable = (id: string) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    dispatch(setVariable(id, RemoteDataState.Loading))\n\n    const resp = await api.getVariable({variableID: id})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const variable = normalize<Variable, VariableEntities, string>(\n      resp.data,\n      variableSchema\n    )\n\n    dispatch(setVariable(id, RemoteDataState.Done, variable))\n  } catch (error) {\n    console.error(error)\n    dispatch(setVariable(id, RemoteDataState.Error))\n    dispatch(notify(copy.getVariableFailed()))\n  }\n}\n\nexport const createVariable = (\n  variable: Pick<Variable, 'name' | 'arguments'>\n) => async (dispatch: Dispatch<Action>, getState: GetState) => {\n  try {\n    const org = getOrg(getState())\n    const resp = await api.postVariable({\n      data: {\n        ...variable,\n        orgID: org.id,\n      },\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const createdVar = normalize<Variable, VariableEntities, string>(\n      resp.data,\n      variableSchema\n    )\n\n    dispatch(setVariable(resp.data.id, RemoteDataState.Done, createdVar))\n    dispatch(notify(copy.createVariableSuccess(variable.name)))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.createVariableFailed(error.message)))\n  }\n}\n\nexport const createVariableFromTemplate = (\n  template: VariableTemplate\n) => async (dispatch: Dispatch<Action>, getState: GetState) => {\n  try {\n    const state = getState()\n    const org = getOrg(state)\n    const resp = await createVariableFromTemplateAJAX(template, org.id)\n\n    const createdVar = normalize<Variable, VariableEntities, string>(\n      resp,\n      variableSchema\n    )\n\n    dispatch(setVariable(resp.id, RemoteDataState.Done, createdVar))\n    dispatch(notify(copy.createVariableSuccess(resp.name)))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.createVariableFailed(error.message)))\n  }\n}\n\nexport const updateVariable = (id: string, props: Variable) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    dispatch(setVariable(id, RemoteDataState.Loading))\n\n    const state = getState()\n    const labels = getLabels(state, props.labels)\n\n    const resp = await api.patchVariable({\n      variableID: id,\n      data: {\n        ...props,\n        labels,\n      },\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const variable = normalize<Variable, VariableEntities, string>(\n      resp.data,\n      variableSchema\n    )\n\n    dispatch(setVariable(id, RemoteDataState.Done, variable))\n    dispatch(notify(copy.updateVariableSuccess(resp.data.name)))\n  } catch (error) {\n    console.error(error)\n    dispatch(setVariable(id, RemoteDataState.Error))\n    dispatch(notify(copy.updateVariableFailed(error.message)))\n  }\n}\n\nexport const deleteVariable = (id: string) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    dispatch(setVariable(id, RemoteDataState.Loading))\n    const resp = await api.deleteVariable({variableID: id})\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n    dispatch(removeVariable(id))\n    dispatch(notify(copy.deleteVariableSuccess()))\n  } catch (error) {\n    console.error(error)\n    dispatch(setVariable(id, RemoteDataState.Done))\n    dispatch(notify(copy.deleteVariableFailed(error.message)))\n  }\n}\n\ninterface PendingValueRequests {\n  [contextID: string]: CancelBox<VariableValuesByID>\n}\n\nconst pendingValueRequests: PendingValueRequests = {}\n\nexport const refreshVariableValues = (\n  contextID: string,\n  variables: Variable[]\n) => async (dispatch: Dispatch<Action>, getState: GetState): Promise<void> => {\n  dispatch(setValues(contextID, RemoteDataState.Loading))\n\n  try {\n    const state = getState()\n    const org = getOrg(state)\n    const url = state.links.query.self\n    const selections = getValueSelections(state, contextID)\n    const allVariables = extractVariablesList(state)\n\n    if (pendingValueRequests[contextID]) {\n      pendingValueRequests[contextID].cancel()\n    }\n\n    pendingValueRequests[contextID] = hydrateVars(variables, allVariables, {\n      url,\n      orgID: org.id,\n      selections,\n    })\n\n    const values = await pendingValueRequests[contextID].promise\n\n    dispatch(setValues(contextID, RemoteDataState.Done, values))\n  } catch (error) {\n    if (error.name === 'CancellationError') {\n      return\n    }\n\n    console.error(error)\n    dispatch(setValues(contextID, RemoteDataState.Error))\n  }\n}\n\nexport const convertToTemplate = (variableID: string) => async (\n  dispatch,\n  getState: GetState\n): Promise<void> => {\n  try {\n    dispatch(setExportTemplate(RemoteDataState.Loading))\n    const state = getState()\n    const org = getOrg(state)\n    const resp = await api.getVariable({variableID})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const allVariables = await api.getVariables({query: {orgID: org.id}})\n\n    if (allVariables.status !== 200) {\n      throw new Error(allVariables.data.message)\n    }\n\n    const normVariable = normalize<Variable, VariableEntities, string>(\n      resp.data,\n      variableSchema\n    )\n\n    const normVariables = normalize<Variable, VariableEntities, string>(\n      allVariables.data.variables,\n      arrayOfVariables\n    )\n\n    const variable = normVariable.entities.variables[normVariable.result]\n    const variables = Object.values(normVariables.entities.variables)\n\n    const dependencies = findDependentVariables(variable, variables)\n    const variableTemplate = variableToTemplate(state, variable, dependencies)\n\n    dispatch(setExportTemplate(RemoteDataState.Done, variableTemplate))\n  } catch (error) {\n    dispatch(setExportTemplate(RemoteDataState.Error))\n    dispatch(notify(copy.createTemplateFailed(error)))\n  }\n}\n\nexport const addVariableLabelAsync = (\n  variableID: string,\n  label: Label\n) => async (dispatch): Promise<void> => {\n  try {\n    const posted = await api.postVariablesLabel({\n      variableID,\n      data: {labelID: label.id},\n    })\n\n    if (posted.status !== 201) {\n      throw new Error(posted.data.message)\n    }\n\n    const resp = await api.getVariable({variableID})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const variable = normalize<Variable, VariableEntities, string>(\n      resp.data,\n      variableSchema\n    )\n\n    dispatch(setVariable(variableID, RemoteDataState.Done, variable))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.addVariableLabelFailed()))\n  }\n}\n\nexport const removeVariableLabelAsync = (\n  variableID: string,\n  label: Label\n) => async (dispatch: Dispatch<Action>) => {\n  try {\n    const deleted = await api.deleteVariablesLabel({\n      variableID,\n      labelID: label.id,\n    })\n\n    if (deleted.status !== 204) {\n      throw new Error(deleted.data.message)\n    }\n\n    const resp = await api.getVariable({variableID})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const variable = normalize<Variable, VariableEntities, string>(\n      resp.data,\n      variableSchema\n    )\n\n    dispatch(setVariable(variableID, RemoteDataState.Done, variable))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.removeVariableLabelFailed()))\n  }\n}\n","// Actions\nimport {executeQueries} from 'src/timeMachine/actions/queries'\n\n// Types\nimport {\n  RemoteDataState,\n  CheckTagSet,\n  Threshold,\n  CheckStatusLevel,\n  CheckType,\n  Check,\n} from 'src/types'\n\nexport type Action =\n  | ReturnType<typeof resetAlertBuilder>\n  | ReturnType<typeof initializeAlertBuilder>\n  | ReturnType<typeof convertCheckToCustom>\n  | ReturnType<typeof setAlertBuilderCheck>\n  | ReturnType<typeof setAlertBuilderCheckStatus>\n  | ReturnType<typeof changeCheckType>\n  | ReturnType<typeof setEvery>\n  | ReturnType<typeof setOffset>\n  | ReturnType<typeof setStaleTime>\n  | ReturnType<typeof setTimeSince>\n  | ReturnType<typeof setLevel>\n  | ReturnType<typeof setStatusMessageTemplate>\n  | ReturnType<typeof editTagSetByIndex>\n  | ReturnType<typeof removeTagSet>\n  | ReturnType<typeof updateThreshold>\n  | ReturnType<typeof updateThresholds>\n  | ReturnType<typeof removeThreshold>\n  | ReturnType<typeof updateName>\n\nexport const resetAlertBuilder = () => ({\n  type: 'RESET_ALERT_BUILDER' as 'RESET_ALERT_BUILDER',\n})\n\nexport const initializeAlertBuilder = (type: CheckType) => ({\n  type: 'INIT_ALERT_BUILDER' as 'INIT_ALERT_BUILDER',\n  payload: {type},\n})\n\nexport const convertCheckToCustom = () => ({\n  type: 'CONVERT_CHECK_TO_CUSTOM' as 'CONVERT_CHECK_TO_CUSTOM',\n})\n\nexport const setAlertBuilderCheck = (check: Check) => ({\n  type: 'SET_ALERT_BUILDER_CHECK' as 'SET_ALERT_BUILDER_CHECK',\n  payload: {check},\n})\n\nexport const setAlertBuilderCheckStatus = (status: RemoteDataState) => ({\n  type: 'SET_ALERT_BUILDER_STATUS' as 'SET_ALERT_BUILDER_STATUS',\n  payload: {status},\n})\n\nexport const changeCheckType = (toType: CheckType) => ({\n  type: 'SET_ALERT_BUILDER_TYPE' as 'SET_ALERT_BUILDER_TYPE',\n  payload: {toType},\n})\n\nexport const setEvery = (every: string) => ({\n  type: 'SET_ALERT_BUILDER_EVERY' as 'SET_ALERT_BUILDER_EVERY',\n  payload: {every},\n})\n\nexport const setOffset = (offset: string) => ({\n  type: 'SET_ALERT_BUILDER_OFFSET' as 'SET_ALERT_BUILDER_OFFSET',\n  payload: {offset},\n})\n\nexport const setStaleTime = (staleTime: string) => ({\n  type: 'SET_ALERT_BUILDER_STALETIME' as 'SET_ALERT_BUILDER_STALETIME',\n  payload: {staleTime},\n})\n\nexport const setTimeSince = (timeSince: string) => ({\n  type: 'SET_ALERT_BUILDER_TIMESINCE' as 'SET_ALERT_BUILDER_TIMESINCE',\n  payload: {timeSince},\n})\n\nexport const setLevel = (level: CheckStatusLevel) => ({\n  type: 'SET_ALERT_BUILDER_LEVEL' as 'SET_ALERT_BUILDER_LEVEL',\n  payload: {level},\n})\n\nexport const setStatusMessageTemplate = (statusMessageTemplate: string) => ({\n  type: 'SET_ALERT_BUILDER_MESSAGE_TEMPLATE' as 'SET_ALERT_BUILDER_MESSAGE_TEMPLATE',\n  payload: {statusMessageTemplate},\n})\n\nexport const editTagSetByIndex = (\n  index: number,\n  tagSet: Required<CheckTagSet>\n) => ({\n  type: 'EDIT_ALERT_BUILDER_TAGSET' as 'EDIT_ALERT_BUILDER_TAGSET',\n  payload: {index, tagSet},\n})\n\nexport const removeTagSet = (index: number) => ({\n  type: 'REMOVE_ALERT_BUILDER_TAGSET' as 'REMOVE_ALERT_BUILDER_TAGSET',\n  payload: {index},\n})\n\nexport const updateThreshold = (threshold: Threshold) => ({\n  type: 'UPDATE_ALERT_BUILDER_THRESHOLD' as 'UPDATE_ALERT_BUILDER_THRESHOLD',\n  payload: {threshold},\n})\n\nexport const updateThresholds = (thresholds: Threshold[]) => ({\n  type: 'UPDATE_ALERT_BUILDER_THRESHOLDS' as 'UPDATE_ALERT_BUILDER_THRESHOLDS',\n  payload: {thresholds},\n})\n\nexport const removeThreshold = (level: CheckStatusLevel) => ({\n  type: 'REMOVE_ALERT_BUILDER_THRESHOLD' as 'REMOVE_ALERT_BUILDER_THRESHOLD',\n  payload: {level},\n})\n\nexport const updateName = (name: string) => ({\n  type: 'UPDATE_ALERT_BUILDER_NAME' as 'UPDATE_ALERT_BUILDER_NAME',\n  payload: {name},\n})\n\nexport const selectCheckEvery = (every: string) => dispatch => {\n  dispatch(setEvery(every))\n  dispatch(executeQueries())\n}\n","module.exports = __webpack_public_path__ + \"1a2551f58d.png\";","// extracted by mini-css-extract-plugin","import {TimeRange, SelectableDurationTimeRange} from 'src/types'\n\nexport const TIME_RANGE_FORMAT = 'YYYY-MM-DD HH:mm'\n\nexport const CUSTOM_TIME_RANGE_LABEL = 'Custom Time Range' as 'Custom Time Range'\n\nexport const pastHourTimeRange: SelectableDurationTimeRange = {\n  seconds: 3600,\n  lower: 'now() - 1h',\n  upper: null,\n  label: 'Past 1h',\n  duration: '1h',\n  type: 'selectable-duration',\n  windowPeriod: 10000, // 10s\n}\n\nexport const pastThirtyDaysTimeRange: SelectableDurationTimeRange = {\n  seconds: 2592000,\n  lower: 'now() - 30d',\n  upper: null,\n  label: 'Past 30d',\n  duration: '30d',\n  type: 'selectable-duration',\n  windowPeriod: 3600000, // 1h\n}\n\nexport const pastFifteenMinTimeRange: SelectableDurationTimeRange = {\n  seconds: 900,\n  lower: 'now() - 15m',\n  upper: null,\n  label: 'Past 15m',\n  duration: '15m',\n  type: 'selectable-duration',\n  windowPeriod: 10000, // 10s\n}\n\nexport const CUSTOM_TIME_RANGE: {label: string; type: 'custom'} = {\n  label: 'Custom Time Range' as 'Custom Time Range',\n  type: 'custom',\n}\n\nexport const SELECTABLE_TIME_RANGES: SelectableDurationTimeRange[] = [\n  {\n    seconds: 300,\n    lower: 'now() - 5m',\n    upper: null,\n    label: 'Past 5m',\n    duration: '5m',\n    type: 'selectable-duration',\n    windowPeriod: 10000, // 10s\n  },\n  pastFifteenMinTimeRange,\n  pastHourTimeRange,\n  {\n    seconds: 21600,\n    lower: 'now() - 6h',\n    upper: null,\n    label: 'Past 6h',\n    duration: '6h',\n    type: 'selectable-duration',\n    windowPeriod: 60000, // 1m\n  },\n  {\n    seconds: 43200,\n    lower: 'now() - 12h',\n    upper: null,\n    label: 'Past 12h',\n    duration: '12h',\n    type: 'selectable-duration',\n    windowPeriod: 120000, // 2m\n  },\n  {\n    seconds: 86400,\n    lower: 'now() - 24h',\n    upper: null,\n    label: 'Past 24h',\n    duration: '24h',\n    type: 'selectable-duration',\n    windowPeriod: 300000, // 5m\n  },\n  {\n    seconds: 172800,\n    lower: 'now() - 2d',\n    upper: null,\n    label: 'Past 2d',\n    duration: '2d',\n    type: 'selectable-duration',\n    windowPeriod: 600000, // 10m\n  },\n  {\n    seconds: 604800,\n    lower: 'now() - 7d',\n    upper: null,\n    label: 'Past 7d',\n    duration: '7d',\n    type: 'selectable-duration',\n    windowPeriod: 1800000, // 30 min\n  },\n  pastThirtyDaysTimeRange,\n]\n\nexport const DEFAULT_TIME_RANGE: TimeRange = pastHourTimeRange\n","// Types\nimport {RemoteDataState, LabelEntities} from 'src/types'\nimport {Action as NotifyAction} from 'src/shared/actions/notifications'\nimport {NormalizedSchema} from 'normalizr'\n\nexport type Action =\n  | ReturnType<typeof removeLabel>\n  | ReturnType<typeof setLabel>\n  | ReturnType<typeof setLabels>\n  | NotifyAction\n\nexport const SET_LABELS = 'SET_LABELS'\nexport const SET_LABEL = 'SET_LABEL'\nexport const REMOVE_LABEL = 'REMOVE_LABEL'\nexport const SET_LABEL_ON_RESOURCE = 'SET_LABEL_ON_RESOURCE'\n\ntype LabelsSchema<R extends string | string[]> = NormalizedSchema<\n  LabelEntities,\n  R\n>\n\nexport const setLabels = (\n  status: RemoteDataState,\n  schema?: LabelsSchema<string[]>\n) =>\n  ({\n    type: SET_LABELS,\n    status,\n    schema,\n  } as const)\n\nexport const setLabel = (\n  id: string,\n  status: RemoteDataState,\n  schema?: LabelsSchema<string>\n) =>\n  ({\n    type: SET_LABEL,\n    id,\n    status,\n    schema,\n  } as const)\n\nexport const removeLabel = (id: string) =>\n  ({\n    type: REMOVE_LABEL,\n    id,\n  } as const)\n\nexport const setLabelOnResource = (\n  resourceID: string,\n  schema: LabelsSchema<string>\n) =>\n  ({\n    type: SET_LABEL_ON_RESOURCE,\n    resourceID,\n    schema,\n  } as const)\n","// Libraries\nimport {schema} from 'normalizr'\nimport {omit} from 'lodash'\n\n// Types\nimport {Cell, Dashboard, RemoteDataState, ResourceType, View} from 'src/types'\nimport {CellsWithViewProperties} from 'src/client'\n\n// Utils\nimport {defaultView} from 'src/views/helpers'\nimport {arrayOfLabels} from './labels'\n\n/* Views */\n\n// Defines the schema for the \"views\" resource\nexport const viewsFromCells = (\n  cells: CellsWithViewProperties,\n  dashboardID: string\n): View[] => {\n  return cells.map(cell => {\n    const {properties, id, name} = cell\n\n    return {\n      id,\n      ...defaultView(name),\n      cellID: id,\n      properties,\n      dashboardID,\n    }\n  })\n}\n\nexport const viewSchema = new schema.Entity(ResourceType.Views)\nexport const arrayOfViews = [viewSchema]\n\n/* Cells */\n\n// Defines the schema for the \"cells\" resource\nexport const cellSchema = new schema.Entity(\n  ResourceType.Cells,\n  {},\n  {\n    processStrategy: (cell: Cell, parent: Dashboard) => {\n      return {\n        ...omit<Cell>(cell, 'properties'),\n        dashboardID: cell.dashboardID ? cell.dashboardID : parent.id,\n        status: RemoteDataState.Done,\n      }\n    },\n  }\n)\nexport const arrayOfCells = [cellSchema]\n\n/* Dashboards */\n\n// Defines the schema for the \"dashboards\" resource\nexport const dashboardSchema = new schema.Entity(\n  ResourceType.Dashboards,\n  {\n    labels: arrayOfLabels,\n    cells: arrayOfCells,\n    views: arrayOfViews,\n  },\n  {\n    processStrategy: (dashboard: Dashboard) => addDashboardDefaults(dashboard),\n  }\n)\nexport const arrayOfDashboards = [dashboardSchema]\n\nexport const addDashboardDefaults = (dashboard: Dashboard): Dashboard => {\n  return {\n    ...dashboard,\n    id: dashboard.id || '',\n    name: dashboard.name || '',\n    orgID: dashboard.orgID || '',\n    meta: addDashboardMetaDefaults(dashboard.meta),\n    status: RemoteDataState.Done,\n  }\n}\n\nconst addDashboardMetaDefaults = (meta: Dashboard['meta']) => {\n  if (!meta) {\n    return {}\n  }\n\n  if (!meta.updatedAt) {\n    return {...meta, updatedAt: new Date().toDateString()}\n  }\n\n  return meta\n}\n","// Libraries\nimport {parse} from '@influxdata/flux-parser'\nimport {get, isEmpty} from 'lodash'\n\n// API\nimport {\n  runQuery,\n  RunQueryResult,\n  RunQuerySuccessResult,\n} from 'src/shared/apis/query'\nimport {runStatusesQuery} from 'src/alerting/utils/statusEvents'\n\n// Actions\nimport {selectValue, setValues} from 'src/variables/actions/creators'\nimport {refreshVariableValues} from 'src/variables/actions/thunks'\nimport {notify} from 'src/shared/actions/notifications'\n\n// Constants\nimport {rateLimitReached, resultTooLarge} from 'src/shared/copy/notifications'\n\n// Utils\nimport {\n  getActiveTimeMachine,\n  getVariableAssignments,\n  getActiveQuery,\n} from 'src/timeMachine/selectors'\nimport {filterUnusedVars} from 'src/shared/utils/filterUnusedVars'\nimport {checkQueryResult} from 'src/shared/utils/checkQueryResult'\nimport {\n  extractVariablesList,\n  getVariable,\n  getHydratedVariables,\n} from 'src/variables/selectors'\nimport {getWindowVars} from 'src/variables/utils/getWindowVars'\nimport {buildVarsOption} from 'src/variables/utils/buildVarsOption'\n\n// Types\nimport {CancelBox} from 'src/types/promises'\nimport {GetState, RemoteDataState, StatusRow} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\nexport type Action = SaveDraftQueriesAction | SetQueryResults\n\ninterface SetQueryResults {\n  type: 'SET_QUERY_RESULTS'\n  payload: {\n    status: RemoteDataState\n    files?: string[]\n    fetchDuration?: number\n    errorMessage?: string\n    statuses?: StatusRow[][]\n  }\n}\n\nconst setQueryResults = (\n  status: RemoteDataState,\n  files?: string[],\n  fetchDuration?: number,\n  errorMessage?: string,\n  statuses?: StatusRow[][]\n): SetQueryResults => ({\n  type: 'SET_QUERY_RESULTS',\n  payload: {\n    status,\n    files,\n    fetchDuration,\n    errorMessage,\n    statuses,\n  },\n})\n\nexport const refreshTimeMachineVariableValues = (\n  prevContextID?: string\n) => async (dispatch, getState: GetState) => {\n  const state = getState()\n  const contextID = state.timeMachines.activeTimeMachineID\n\n  if (prevContextID) {\n    const values = get(\n      state,\n      `resources.variables.values.${prevContextID}.values`,\n      {}\n    )\n    if (!isEmpty(values)) {\n      dispatch(setValues(contextID, RemoteDataState.Done, values))\n      return\n    }\n  }\n  // Find variables currently used by queries in the TimeMachine\n  const {view, draftQueries} = getActiveTimeMachine(getState())\n  const draftView = {\n    ...view,\n    properties: {...view.properties, queries: draftQueries},\n  }\n  const variables = extractVariablesList(getState())\n  const variablesInUse = filterUnusedVars(variables, [view, draftView])\n\n  // Find variables whose values have already been loaded by the TimeMachine\n  // (regardless of whether these variables are currently being used)\n  const hydratedVariables = getHydratedVariables(getState(), contextID)\n\n  // Refresh values for all variables with existing values and in use variables\n  const variablesToRefresh = variables.filter(\n    v => variablesInUse.includes(v) || hydratedVariables.includes(v)\n  )\n\n  await dispatch(refreshVariableValues(contextID, variablesToRefresh))\n}\n\nlet pendingResults: Array<CancelBox<RunQueryResult>> = []\nlet pendingCheckStatuses: CancelBox<StatusRow[][]> = null\n\nexport const executeQueries = (dashboardID?: string) => async (\n  dispatch,\n  getState: GetState\n) => {\n  const state = getState()\n  const {view} = getActiveTimeMachine(state)\n  const queries = view.properties.queries.filter(({text}) => !!text.trim())\n  const {\n    alertBuilder: {id: checkID},\n  } = state\n\n  if (!queries.length) {\n    dispatch(setQueryResults(RemoteDataState.Done, [], null))\n  }\n\n  try {\n    dispatch(setQueryResults(RemoteDataState.Loading, [], null))\n\n    await dispatch(refreshTimeMachineVariableValues(dashboardID))\n\n    const variableAssignments = getVariableAssignments(state)\n    const orgID = getOrg(state).id\n\n    const startTime = Date.now()\n\n    pendingResults.forEach(({cancel}) => cancel())\n\n    pendingResults = queries.map(({text}) => {\n      const windowVars = getWindowVars(text, variableAssignments)\n      const extern = buildVarsOption([...variableAssignments, ...windowVars])\n\n      return runQuery(orgID, text, extern)\n    })\n\n    const results = await Promise.all(pendingResults.map(r => r.promise))\n    const duration = Date.now() - startTime\n\n    let statuses = [[]] as StatusRow[][]\n    if (checkID) {\n      const extern = buildVarsOption(variableAssignments)\n      pendingCheckStatuses = runStatusesQuery(orgID, checkID, extern)\n      statuses = await pendingCheckStatuses.promise\n    }\n\n    for (const result of results) {\n      if (result.type === 'UNKNOWN_ERROR') {\n        throw new Error(result.message)\n      }\n\n      if (result.type === 'RATE_LIMIT_ERROR') {\n        dispatch(notify(rateLimitReached(result.retryAfter)))\n\n        throw new Error(result.message)\n      }\n\n      if (result.didTruncate) {\n        dispatch(notify(resultTooLarge(result.bytesRead)))\n      }\n\n      checkQueryResult(result.csv)\n    }\n\n    const files = (results as RunQuerySuccessResult[]).map(r => r.csv)\n    dispatch(\n      setQueryResults(RemoteDataState.Done, files, duration, null, statuses)\n    )\n  } catch (e) {\n    if (e.name === 'CancellationError') {\n      return\n    }\n\n    console.error(e)\n    dispatch(setQueryResults(RemoteDataState.Error, null, null, e.message))\n  }\n}\n\ninterface SaveDraftQueriesAction {\n  type: 'SAVE_DRAFT_QUERIES'\n}\n\nconst saveDraftQueries = (): SaveDraftQueriesAction => ({\n  type: 'SAVE_DRAFT_QUERIES',\n})\n\nexport const saveAndExecuteQueries = () => dispatch => {\n  dispatch(saveDraftQueries())\n  dispatch(executeQueries())\n}\n\nexport const executeCheckQuery = () => async (dispatch, getState: GetState) => {\n  const state = getState()\n  const {text} = getActiveQuery(state)\n  const {id: orgID} = getOrg(state)\n\n  if (text == '') {\n    dispatch(setQueryResults(RemoteDataState.Done, [], null))\n  }\n\n  try {\n    dispatch(setQueryResults(RemoteDataState.Loading, null, null, null))\n\n    const startTime = Date.now()\n\n    const extern = parse(\n      'import \"influxdata/influxdb/monitor\"\\noption monitor.write = yield'\n    )\n\n    const result = await runQuery(orgID, text, extern).promise\n    const duration = Date.now() - startTime\n\n    if (result.type === 'UNKNOWN_ERROR') {\n      throw new Error(result.message)\n    }\n\n    if (result.type === 'RATE_LIMIT_ERROR') {\n      dispatch(notify(rateLimitReached(result.retryAfter)))\n\n      throw new Error(result.message)\n    }\n\n    if (result.didTruncate) {\n      dispatch(notify(resultTooLarge(result.bytesRead)))\n    }\n\n    checkQueryResult(result.csv)\n\n    const file = result.csv\n\n    dispatch(setQueryResults(RemoteDataState.Done, [file], duration, null))\n  } catch (e) {\n    if (e.name === 'CancellationError') {\n      return\n    }\n\n    console.error(e)\n    dispatch(setQueryResults(RemoteDataState.Error, null, null, e.message))\n  }\n}\n\nexport const addVariableToTimeMachine = (variableID: string) => async (\n  dispatch,\n  getState: GetState\n) => {\n  const contextID = getState().timeMachines.activeTimeMachineID\n\n  const variable = getVariable(getState(), variableID)\n  const variables = getHydratedVariables(getState(), contextID)\n\n  if (!variables.includes(variable)) {\n    variables.push(variable)\n  }\n\n  await dispatch(refreshVariableValues(contextID, variables))\n}\n\nexport const selectVariableValue = (\n  variableID: string,\n  selectedValue: string\n) => (dispatch, getState: GetState) => {\n  const contextID = getState().timeMachines.activeTimeMachineID\n\n  dispatch(selectValue(contextID, variableID, selectedValue))\n  dispatch(executeQueries())\n}\n","// This file is generated by [oats][0] and should not be edited by hand.\n//\n// [0]: https://github.com/influxdata/oats\n\nexport interface Error {\n  readonly code:\n    | 'internal error'\n    | 'not found'\n    | 'conflict'\n    | 'invalid'\n    | 'unprocessable entity'\n    | 'empty value'\n    | 'unavailable'\n    | 'forbidden'\n    | 'too many requests'\n    | 'unauthorized'\n    | 'method not allowed'\n  readonly message: string\n}\n\nexport interface Routes {\n  authorizations?: string\n  buckets?: string\n  dashboards?: string\n  external?: {\n    statusFeed?: string\n  }\n  variables?: string\n  me?: string\n  orgs?: string\n  query?: {\n    self?: string\n    ast?: string\n    analyze?: string\n    suggestions?: string\n  }\n  setup?: string\n  signin?: string\n  signout?: string\n  sources?: string\n  system?: {\n    metrics?: string\n    debug?: string\n    health?: string\n  }\n  tasks?: string\n  telegrafs?: string\n  users?: string\n  write?: string\n}\n\nexport interface IsOnboarding {\n  allowed?: boolean\n}\n\nexport interface OnboardingRequest {\n  username: string\n  password: string\n  org: string\n  bucket: string\n  retentionPeriodHrs?: number\n}\n\nexport interface OnboardingResponse {\n  user?: User\n  org?: Organization\n  bucket?: Bucket\n  auth?: Authorization\n}\n\nexport interface User {\n  readonly id?: string\n  oauthID?: string\n  name: string\n  status?: 'active' | 'inactive'\n  readonly links?: {\n    self?: string\n    logs?: string\n  }\n}\n\nexport interface Organization {\n  readonly links?: {\n    self?: Link\n    members?: Link\n    owners?: Link\n    labels?: Link\n    secrets?: Link\n    buckets?: Link\n    tasks?: Link\n    dashboards?: Link\n    logs?: Link\n  }\n  readonly id?: string\n  name: string\n  description?: string\n  readonly createdAt?: string\n  readonly updatedAt?: string\n  status?: 'active' | 'inactive'\n}\n\nexport type Link = string\n\nexport interface Bucket {\n  readonly links?: {\n    labels?: Link\n    logs?: Link\n    members?: Link\n    org?: Link\n    owners?: Link\n    self?: Link\n    write?: Link\n  }\n  readonly id?: string\n  readonly type?: 'user' | 'system'\n  name: string\n  description?: string\n  orgID?: string\n  rp?: string\n  readonly createdAt?: string\n  readonly updatedAt?: string\n  retentionRules: RetentionRules\n  labels?: Labels\n}\n\nexport type RetentionRules = RetentionRule[]\n\nexport interface RetentionRule {\n  type: 'expire'\n  everySeconds: number\n}\n\nexport type Labels = Label[]\n\nexport interface Label {\n  readonly id?: string\n  readonly orgID?: string\n  name?: string\n  properties?: any\n}\n\nexport type Authorization = AuthorizationUpdateRequest & {\n  readonly createdAt?: string\n  readonly updatedAt?: string\n  orgID?: string\n  permissions?: Permission[]\n  readonly id?: string\n  readonly token?: string\n  readonly userID?: string\n  readonly user?: string\n  readonly org?: string\n  readonly links?: {\n    readonly self?: Link\n    readonly user?: Link\n  }\n}\n\nexport interface AuthorizationUpdateRequest {\n  status?: 'active' | 'inactive'\n  description?: string\n}\n\nexport interface Permission {\n  action: 'read' | 'write'\n  resource: {\n    type:\n      | 'authorizations'\n      | 'buckets'\n      | 'dashboards'\n      | 'orgs'\n      | 'sources'\n      | 'tasks'\n      | 'telegrafs'\n      | 'users'\n      | 'variables'\n      | 'scrapers'\n      | 'secrets'\n      | 'labels'\n      | 'views'\n      | 'documents'\n      | 'notificationRules'\n      | 'notificationEndpoints'\n      | 'checks'\n    id?: string\n    name?: string\n    orgID?: string\n    org?: string\n  }\n}\n\nexport interface Documents {\n  documents?: DocumentListEntry[]\n}\n\nexport interface DocumentListEntry {\n  readonly id: string\n  meta: DocumentMeta\n  labels?: Labels\n  readonly links?: {\n    self?: Link\n  }\n}\n\nexport interface DocumentMeta {\n  name: string\n  type?: string\n  templateID?: string\n  description?: string\n  version: string\n  readonly createdAt?: string\n  readonly updatedAt?: string\n}\n\nexport interface DocumentCreate {\n  meta: DocumentMeta\n  content: any\n  org?: string\n  orgID?: string\n  labels?: string[]\n}\n\nexport interface Document {\n  readonly id: string\n  meta: DocumentMeta\n  content: any\n  labels?: Labels\n  readonly links?: {\n    self?: Link\n  }\n}\n\nexport interface DocumentUpdate {\n  meta?: DocumentMeta\n  content?: any\n}\n\nexport interface LabelsResponse {\n  labels?: Labels\n  links?: Links\n}\n\nexport interface Links {\n  next?: Link\n  self: Link\n  prev?: Link\n}\n\nexport interface LabelMapping {\n  labelID?: string\n}\n\nexport interface LabelResponse {\n  label?: Label\n  links?: Links\n}\n\nexport interface TelegrafPlugins {\n  version?: string\n  os?: string\n  plugins?: TelegrafPlugin[]\n}\n\nexport interface TelegrafPlugin {\n  type?: string\n  name?: string\n  description?: string\n  config?: string\n}\n\nexport interface Telegrafs {\n  configurations?: Telegraf[]\n}\n\nexport type Telegraf = TelegrafRequest & {\n  readonly id?: string\n  readonly links?: {\n    self?: Link\n    labels?: Link\n    members?: Link\n    owners?: Link\n  }\n  readonly labels?: Labels\n}\n\nexport interface TelegrafRequest {\n  name?: string\n  description?: string\n  metadata?: {\n    buckets?: string[]\n  }\n  config?: string\n  orgID?: string\n}\n\nexport interface ResourceMembers {\n  links?: {\n    self?: string\n  }\n  users?: ResourceMember[]\n}\n\nexport type ResourceMember = User & {\n  role?: 'member'\n}\n\nexport interface AddResourceMemberRequestBody {\n  id: string\n  name?: string\n}\n\nexport interface ResourceOwners {\n  links?: {\n    self?: string\n  }\n  users?: ResourceOwner[]\n}\n\nexport type ResourceOwner = User & {\n  role?: 'owner'\n}\n\nexport interface ScraperTargetResponses {\n  configurations?: ScraperTargetResponse[]\n}\n\nexport type ScraperTargetResponse = ScraperTargetRequest & {\n  readonly id?: string\n  org?: string\n  bucket?: string\n  readonly links?: {\n    self?: Link\n    members?: Link\n    owners?: Link\n    bucket?: Link\n    organization?: Link\n  }\n}\n\nexport interface ScraperTargetRequest {\n  name?: string\n  type?: 'prometheus'\n  url?: string\n  orgID?: string\n  bucketID?: string\n}\n\nexport interface Variables {\n  variables?: Variable[]\n}\n\nexport interface Variable {\n  readonly links?: {\n    self?: string\n    org?: string\n    labels?: string\n  }\n  readonly id?: string\n  orgID: string\n  name: string\n  description?: string\n  selected?: string[]\n  labels?: Labels\n  arguments: VariableProperties\n  createdAt?: string\n  updatedAt?: string\n}\n\nexport type VariableProperties =\n  | QueryVariableProperties\n  | ConstantVariableProperties\n  | MapVariableProperties\n\nexport interface QueryVariableProperties {\n  type?: 'query'\n  values?: {\n    query?: string\n    language?: string\n  }\n}\n\nexport interface ConstantVariableProperties {\n  type?: 'constant'\n  values?: string[]\n}\n\nexport interface MapVariableProperties {\n  type?: 'map'\n  values?: any\n}\n\nexport interface LineProtocolError {\n  readonly code:\n    | 'internal error'\n    | 'not found'\n    | 'conflict'\n    | 'invalid'\n    | 'empty value'\n    | 'unavailable'\n  readonly message: string\n  readonly op: string\n  readonly err: string\n  readonly line?: number\n}\n\nexport interface LineProtocolLengthError {\n  readonly code: 'invalid'\n  readonly message: string\n  readonly maxLength: number\n}\n\nexport interface DeletePredicateRequest {\n  start: string\n  stop: string\n  predicate?: string\n}\n\nexport interface Ready {\n  status?: 'ready'\n  started?: string\n  up?: string\n}\n\nexport interface HealthCheck {\n  name: string\n  message?: string\n  checks?: HealthCheck[]\n  status: 'pass' | 'fail'\n}\n\nexport interface Sources {\n  links?: {\n    self?: string\n  }\n  sources?: Source[]\n}\n\nexport interface Source {\n  links?: {\n    self?: string\n    query?: string\n    health?: string\n    buckets?: string\n  }\n  id?: string\n  orgID?: string\n  default?: boolean\n  name?: string\n  type?: 'v1' | 'v2' | 'self'\n  url?: string\n  insecureSkipVerify?: boolean\n  telegraf?: string\n  token?: string\n  username?: string\n  password?: string\n  sharedSecret?: string\n  metaUrl?: string\n  defaultRP?: string\n  readonly languages?: Array<'flux' | 'influxql'>\n}\n\nexport interface Buckets {\n  readonly links?: Links\n  buckets?: Bucket[]\n}\n\nexport interface LabelCreateRequest {\n  orgID: string\n  name?: string\n  properties?: any\n}\n\nexport interface LabelUpdate {\n  name?: string\n  properties?: any\n}\n\nexport interface Dashboards {\n  links?: Links\n  dashboards?: Dashboard[]\n}\n\nexport type Dashboard = CreateDashboardRequest & {\n  links?: {\n    self?: Link\n    cells?: Link\n    members?: Link\n    owners?: Link\n    logs?: Link\n    labels?: Link\n    org?: Link\n  }\n  readonly id?: string\n  meta?: {\n    createdAt?: string\n    updatedAt?: string\n  }\n  cells?: Cells\n  labels?: Labels\n}\n\nexport interface CreateDashboardRequest {\n  orgID: string\n  name: string\n  description?: string\n}\n\nexport type Cells = Cell[]\n\nexport interface Cell {\n  id?: string\n  links?: {\n    self?: string\n    view?: string\n  }\n  x?: number\n  y?: number\n  w?: number\n  h?: number\n  viewID?: string\n}\n\nexport type DashboardWithViewProperties = CreateDashboardRequest & {\n  links?: {\n    self?: Link\n    cells?: Link\n    members?: Link\n    owners?: Link\n    logs?: Link\n    labels?: Link\n    org?: Link\n  }\n  readonly id?: string\n  meta?: {\n    createdAt?: string\n    updatedAt?: string\n  }\n  cells?: CellsWithViewProperties\n  labels?: Labels\n}\n\nexport type CellsWithViewProperties = CellWithViewProperties[]\n\nexport type CellWithViewProperties = Cell & {\n  name?: string\n  properties?: ViewProperties\n}\n\nexport type ViewProperties =\n  | LinePlusSingleStatProperties\n  | XYViewProperties\n  | SingleStatViewProperties\n  | HistogramViewProperties\n  | GaugeViewProperties\n  | TableViewProperties\n  | MarkdownViewProperties\n  | CheckViewProperties\n  | ScatterViewProperties\n  | HeatmapViewProperties\n\nexport interface LinePlusSingleStatProperties {\n  type: 'line-plus-single-stat'\n  queries: DashboardQuery[]\n  colors: DashboardColor[]\n  shape: 'chronograf-v2'\n  note: string\n  showNoteWhenEmpty: boolean\n  axes: Axes\n  legend: Legend\n  xColumn?: string\n  yColumn?: string\n  shadeBelow?: boolean\n  position: 'overlaid' | 'stacked'\n  prefix: string\n  suffix: string\n  decimalPlaces: DecimalPlaces\n}\n\nexport interface DashboardQuery {\n  text?: string\n  editMode?: QueryEditMode\n  name?: string\n  builderConfig?: BuilderConfig\n}\n\nexport type QueryEditMode = 'builder' | 'advanced'\n\nexport interface BuilderConfig {\n  buckets?: string[]\n  tags?: BuilderTagsType[]\n  functions?: BuilderFunctionsType[]\n  aggregateWindow?: {\n    period?: string\n  }\n}\n\nexport interface BuilderTagsType {\n  key?: string\n  values?: string[]\n  aggregateFunctionType?: BuilderAggregateFunctionType\n}\n\nexport type BuilderAggregateFunctionType = 'filter' | 'group'\n\nexport interface BuilderFunctionsType {\n  name?: string\n}\n\nexport interface DashboardColor {\n  id: string\n  type: 'min' | 'max' | 'threshold' | 'scale' | 'text' | 'background'\n  hex: string\n  name: string\n  value: number\n}\n\nexport interface Axes {\n  x: Axis\n  y: Axis\n}\n\nexport interface Axis {\n  bounds?: string[]\n  label?: string\n  prefix?: string\n  suffix?: string\n  base?: '' | '2' | '10'\n  scale?: AxisScale\n}\n\nexport type AxisScale = 'log' | 'linear'\n\nexport interface Legend {\n  type?: 'static'\n  orientation?: 'top' | 'bottom' | 'left' | 'right'\n}\n\nexport interface DecimalPlaces {\n  isEnforced?: boolean\n  digits?: number\n}\n\nexport interface XYViewProperties {\n  timeFormat?: string\n  type: 'xy'\n  queries: DashboardQuery[]\n  colors: DashboardColor[]\n  shape: 'chronograf-v2'\n  note: string\n  showNoteWhenEmpty: boolean\n  axes: Axes\n  legend: Legend\n  xColumn?: string\n  yColumn?: string\n  shadeBelow?: boolean\n  position: 'overlaid' | 'stacked'\n  geom: XYGeom\n}\n\nexport type XYGeom = 'line' | 'step' | 'stacked' | 'bar' | 'monotoneX'\n\nexport interface SingleStatViewProperties {\n  type: 'single-stat'\n  queries: DashboardQuery[]\n  colors: DashboardColor[]\n  shape: 'chronograf-v2'\n  note: string\n  showNoteWhenEmpty: boolean\n  prefix: string\n  tickPrefix: string\n  suffix: string\n  tickSuffix: string\n  legend: Legend\n  decimalPlaces: DecimalPlaces\n}\n\nexport interface HistogramViewProperties {\n  type: 'histogram'\n  queries: DashboardQuery[]\n  colors: DashboardColor[]\n  shape: 'chronograf-v2'\n  note: string\n  showNoteWhenEmpty: boolean\n  xColumn: string\n  fillColumns: string[]\n  xDomain: number[]\n  xAxisLabel: string\n  position: 'overlaid' | 'stacked'\n  binCount: number\n}\n\nexport interface GaugeViewProperties {\n  type: 'gauge'\n  queries: DashboardQuery[]\n  colors: DashboardColor[]\n  shape: 'chronograf-v2'\n  note: string\n  showNoteWhenEmpty: boolean\n  prefix: string\n  tickPrefix: string\n  suffix: string\n  tickSuffix: string\n  legend: Legend\n  decimalPlaces: DecimalPlaces\n}\n\nexport interface TableViewProperties {\n  type: 'table'\n  queries: DashboardQuery[]\n  colors: DashboardColor[]\n  shape: 'chronograf-v2'\n  note: string\n  showNoteWhenEmpty: boolean\n  tableOptions: {\n    verticalTimeAxis?: boolean\n    sortBy?: RenamableField\n    wrapping?: 'truncate' | 'wrap' | 'single-line'\n    fixFirstColumn?: boolean\n  }\n  fieldOptions: RenamableField[]\n  timeFormat: string\n  decimalPlaces: DecimalPlaces\n}\n\nexport interface RenamableField {\n  readonly internalName?: string\n  displayName?: string\n  visible?: boolean\n}\n\nexport interface MarkdownViewProperties {\n  type: 'markdown'\n  shape: 'chronograf-v2'\n  note: string\n}\n\nexport interface CheckViewProperties {\n  type: 'check'\n  shape: 'chronograf-v2'\n  checkID: string\n  check?: Check\n  queries: DashboardQuery[]\n  colors: string[]\n}\n\nexport type Check = CheckDiscriminator\n\nexport type CheckDiscriminator =\n  | (DeadmanCheck & {type: string})\n  | (ThresholdCheck & {type: string})\n  | (CustomCheck & {type: string})\n\nexport type DeadmanCheck = CheckBase & {\n  type: 'deadman'\n  timeSince?: string\n  staleTime?: string\n  reportZero?: boolean\n  level?: CheckStatusLevel\n  every?: string\n  offset?: string\n  tags?: Array<{\n    key?: string\n    value?: string\n  }>\n  statusMessageTemplate?: string\n}\n\nexport interface CheckBase {\n  readonly id?: string\n  name: string\n  orgID: string\n  readonly ownerID?: string\n  readonly createdAt?: string\n  readonly updatedAt?: string\n  query: DashboardQuery\n  status?: TaskStatusType\n  description?: string\n  readonly latestCompleted?: string\n  readonly lastRunStatus?: 'failed' | 'success' | 'canceled'\n  readonly lastRunError?: string\n  labels?: Labels\n  readonly links?: {\n    self?: Link\n    labels?: Link\n    members?: Link\n    owners?: Link\n    query?: Link\n  }\n}\n\nexport type TaskStatusType = 'active' | 'inactive'\n\nexport type CheckStatusLevel = 'UNKNOWN' | 'OK' | 'INFO' | 'CRIT' | 'WARN'\n\nexport type ThresholdCheck = CheckBase & {\n  type: 'threshold'\n  thresholds?: Threshold[]\n  every?: string\n  offset?: string\n  tags?: Array<{\n    key?: string\n    value?: string\n  }>\n  statusMessageTemplate?: string\n}\n\nexport type Threshold =\n  | (GreaterThreshold & {type: string})\n  | (LesserThreshold & {type: string})\n  | (RangeThreshold & {type: string})\n\nexport type GreaterThreshold = ThresholdBase & {\n  type: 'greater'\n  value: number\n}\n\nexport interface ThresholdBase {\n  level?: CheckStatusLevel\n  allValues?: boolean\n}\n\nexport type LesserThreshold = ThresholdBase & {\n  type: 'lesser'\n  value: number\n}\n\nexport type RangeThreshold = ThresholdBase & {\n  type: 'range'\n  min: number\n  max: number\n  within: boolean\n}\n\nexport type CustomCheck = CheckBase & {\n  type: 'custom'\n}\n\nexport interface ScatterViewProperties {\n  timeFormat?: string\n  type: 'scatter'\n  queries: DashboardQuery[]\n  colors: string[]\n  shape: 'chronograf-v2'\n  note: string\n  showNoteWhenEmpty: boolean\n  xColumn: string\n  yColumn: string\n  fillColumns: string[]\n  symbolColumns: string[]\n  xDomain: number[]\n  yDomain: number[]\n  xAxisLabel: string\n  yAxisLabel: string\n  xPrefix: string\n  xSuffix: string\n  yPrefix: string\n  ySuffix: string\n}\n\nexport interface HeatmapViewProperties {\n  timeFormat?: string\n  type: 'heatmap'\n  queries: DashboardQuery[]\n  colors: string[]\n  shape: 'chronograf-v2'\n  note: string\n  showNoteWhenEmpty: boolean\n  xColumn: string\n  yColumn: string\n  xDomain: number[]\n  yDomain: number[]\n  xAxisLabel: string\n  yAxisLabel: string\n  xPrefix: string\n  xSuffix: string\n  yPrefix: string\n  ySuffix: string\n  binSize: number\n}\n\nexport interface CreateCell {\n  name?: string\n  x?: number\n  y?: number\n  w?: number\n  h?: number\n  usingView?: string\n}\n\nexport interface CellUpdate {\n  x?: number\n  y?: number\n  w?: number\n  h?: number\n}\n\nexport interface View {\n  readonly links?: {\n    self?: string\n  }\n  readonly id?: string\n  name: string\n  properties: ViewProperties\n}\n\nexport interface OperationLogs {\n  logs?: OperationLog[]\n  links?: Links\n}\n\nexport interface OperationLog {\n  description?: string\n  time?: string\n  userID?: string\n  links?: {\n    user?: Link\n  }\n}\n\nexport interface LanguageRequest {\n  query: string\n}\n\nexport interface ASTResponse {\n  ast?: Package\n}\n\nexport interface Package {\n  type?: NodeType\n  path?: string\n  package?: string\n  files?: File[]\n}\n\nexport type NodeType = string\n\nexport interface File {\n  type?: NodeType\n  name?: string\n  package?: PackageClause\n  imports?: ImportDeclaration[]\n  body?: Statement[]\n}\n\nexport interface PackageClause {\n  type?: NodeType\n  name?: Identifier\n}\n\nexport interface Identifier {\n  type?: NodeType\n  name?: string\n}\n\nexport interface ImportDeclaration {\n  type?: NodeType\n  as?: Identifier\n  path?: StringLiteral\n}\n\nexport interface StringLiteral {\n  type?: NodeType\n  value?: string\n}\n\nexport type Statement =\n  | BadStatement\n  | VariableAssignment\n  | MemberAssignment\n  | ExpressionStatement\n  | ReturnStatement\n  | OptionStatement\n  | BuiltinStatement\n  | TestStatement\n\nexport interface BadStatement {\n  type?: NodeType\n  text?: string\n}\n\nexport interface VariableAssignment {\n  type?: NodeType\n  id?: Identifier\n  init?: Expression\n}\n\nexport type Expression =\n  | ArrayExpression\n  | FunctionExpression\n  | BinaryExpression\n  | CallExpression\n  | ConditionalExpression\n  | LogicalExpression\n  | MemberExpression\n  | IndexExpression\n  | ObjectExpression\n  | ParenExpression\n  | PipeExpression\n  | UnaryExpression\n  | BooleanLiteral\n  | DateTimeLiteral\n  | DurationLiteral\n  | FloatLiteral\n  | IntegerLiteral\n  | PipeLiteral\n  | RegexpLiteral\n  | StringLiteral\n  | UnsignedIntegerLiteral\n  | Identifier\n\nexport interface ArrayExpression {\n  type?: NodeType\n  elements?: Expression[]\n}\n\nexport interface FunctionExpression {\n  type?: NodeType\n  params?: Property[]\n  body?: Node\n}\n\nexport interface Property {\n  type?: NodeType\n  key?: PropertyKey\n  value?: Expression\n}\n\nexport type PropertyKey = Identifier | StringLiteral\n\nexport type Node = Expression | Block\n\nexport interface Block {\n  type?: NodeType\n  body?: Statement[]\n}\n\nexport interface BinaryExpression {\n  type?: NodeType\n  operator?: string\n  left?: Expression\n  right?: Expression\n}\n\nexport interface CallExpression {\n  type?: NodeType\n  callee?: Expression\n  arguments?: Expression[]\n}\n\nexport interface ConditionalExpression {\n  type?: NodeType\n  test?: Expression\n  alternate?: Expression\n  consequent?: Expression\n}\n\nexport interface LogicalExpression {\n  type?: NodeType\n  operator?: string\n  left?: Expression\n  right?: Expression\n}\n\nexport interface MemberExpression {\n  type?: NodeType\n  object?: Expression\n  property?: PropertyKey\n}\n\nexport interface IndexExpression {\n  type?: NodeType\n  array?: Expression\n  index?: Expression\n}\n\nexport interface ObjectExpression {\n  type?: NodeType\n  properties?: Property[]\n}\n\nexport interface ParenExpression {\n  type?: NodeType\n  expression?: Expression\n}\n\nexport interface PipeExpression {\n  type?: NodeType\n  argument?: Expression\n  call?: CallExpression\n}\n\nexport interface UnaryExpression {\n  type?: NodeType\n  operator?: string\n  argument?: Expression\n}\n\nexport interface BooleanLiteral {\n  type?: NodeType\n  value?: boolean\n}\n\nexport interface DateTimeLiteral {\n  type?: NodeType\n  value?: string\n}\n\nexport interface DurationLiteral {\n  type?: NodeType\n  values?: Duration[]\n}\n\nexport interface Duration {\n  type?: NodeType\n  magnitude?: number\n  unit?: string\n}\n\nexport interface FloatLiteral {\n  type?: NodeType\n  value?: number\n}\n\nexport interface IntegerLiteral {\n  type?: NodeType\n  value?: string\n}\n\nexport interface PipeLiteral {\n  type?: NodeType\n}\n\nexport interface RegexpLiteral {\n  type?: NodeType\n  value?: string\n}\n\nexport interface UnsignedIntegerLiteral {\n  type?: NodeType\n  value?: string\n}\n\nexport interface MemberAssignment {\n  type?: NodeType\n  member?: MemberExpression\n  init?: Expression\n}\n\nexport interface ExpressionStatement {\n  type?: NodeType\n  expression?: Expression\n}\n\nexport interface ReturnStatement {\n  type?: NodeType\n  argument?: Expression\n}\n\nexport interface OptionStatement {\n  type?: NodeType\n  assignment?: VariableAssignment | MemberAssignment\n}\n\nexport interface BuiltinStatement {\n  type?: NodeType\n  id?: Identifier\n}\n\nexport interface TestStatement {\n  type?: NodeType\n  assignment?: VariableAssignment\n}\n\nexport interface FluxSuggestions {\n  funcs?: FluxSuggestion[]\n}\n\nexport interface FluxSuggestion {\n  name?: string\n  params?: any\n}\n\nexport interface Authorizations {\n  readonly links?: Links\n  authorizations?: Authorization[]\n}\n\nexport interface Query {\n  extern?: File\n  query: string\n  type?: 'flux'\n  dialect?: Dialect\n}\n\nexport interface Dialect {\n  header?: boolean\n  delimiter?: string\n  annotations?: Array<'group' | 'datatype' | 'default'>\n  commentPrefix?: string\n  dateTimeFormat?: 'RFC3339' | 'RFC3339Nano'\n}\n\nexport interface AnalyzeQueryResponse {\n  errors?: Array<{\n    line?: number\n    column?: number\n    character?: number\n    message?: string\n  }>\n}\n\nexport interface InfluxQLQuery {\n  query: string\n  type?: 'influxql'\n  bucket?: string\n}\n\nexport interface PostBucketRequest {\n  orgID?: string\n  name: string\n  description?: string\n  rp?: string\n  retentionRules: RetentionRules\n}\n\nexport interface Organizations {\n  links?: Links\n  orgs?: Organization[]\n}\n\nexport type SecretKeysResponse = SecretKeys & {\n  readonly links?: {\n    self?: string\n    org?: string\n  }\n}\n\nexport interface SecretKeys {\n  secrets?: string[]\n}\n\nexport type Secrets = any\n\nexport interface PkgCreate {\n  orgIDs?: string[]\n  resources?: {\n    id: string\n    kind:\n      | 'bucket'\n      | 'check'\n      | 'dashboard'\n      | 'label'\n      | 'notification_endpoint'\n      | 'notification_rule'\n      | 'task'\n      | 'telegraf'\n      | 'variable'\n    name?: string\n  }\n}\n\nexport type Pkg = Array<{\n  apiVersion?: string\n  kind?:\n    | 'Bucket'\n    | 'CheckDeadman'\n    | 'CheckThreshold'\n    | 'Dashboard'\n    | 'Label'\n    | 'NotificationEndpointHTTP'\n    | 'NotificationEndpointPagerDuty'\n    | 'NotificationEndpointSlack'\n    | 'NotificationRule'\n    | 'NotificationEndpointHTTP'\n    | 'Task'\n    | 'Telegraf'\n    | 'Variable'\n  meta?: {\n    name?: string\n  }\n  spec?: any\n}>\n\nexport interface PkgApply {\n  dryRun?: boolean\n  orgID?: string\n  package?: Pkg\n  packages?: Pkg[]\n  secrets?: any\n  remotes?: Array<{\n    url: string\n    contentType?: string\n  }>\n}\n\nexport interface PkgSummary {\n  summary?: {\n    buckets?: Array<{\n      id?: string\n      orgID?: string\n      name?: string\n      description?: string\n      retentionPeriod?: number\n      labelAssociations?: PkgSummaryLabel[]\n    }>\n    checks?: Array<\n      CheckDiscriminator & {\n        labelAssociations?: PkgSummaryLabel[]\n      }\n    >\n    labels?: PkgSummaryLabel[]\n    dashboards?: Array<{\n      id?: string\n      orgID?: string\n      name?: string\n      description?: string\n      labelAssociations?: PkgSummaryLabel[]\n      charts?: PkgChart[]\n    }>\n    labelMappings?: Array<{\n      resourceName?: string\n      resourceID?: string\n      resourceType?: string\n      labelName?: string\n      labelID?: string\n    }>\n    missingEnvRefs?: string[]\n    missingSecrets?: string[]\n    notificationEndpoints?: Array<\n      NotificationEndpointDiscrimator & {\n        labelAssociations?: PkgSummaryLabel[]\n      }\n    >\n    notificationRules?: Array<{\n      name?: string\n      description?: string\n      endpointName?: string\n      endpointID?: string\n      endpointType?: string\n      every?: string\n      offset?: string\n      messageTemplate?: string\n      status?: string\n      statusRules?: Array<{\n        currentLevel?: string\n        previousLevel?: string\n      }>\n      tagRules?: Array<{\n        key?: string\n        value?: string\n        operator?: string\n      }>\n      labelAssociations?: PkgSummaryLabel[]\n    }>\n    tasks?: Array<{\n      id?: string\n      name?: string\n      cron?: string\n      description?: string\n      every?: string\n      offset?: string\n      query?: string\n      status?: string\n    }>\n    telegrafConfigs?: Array<\n      TelegrafRequest & {\n        labelAssociations?: PkgSummaryLabel[]\n      }\n    >\n    variables?: Array<{\n      id?: string\n      orgID?: string\n      name?: string\n      description?: string\n      arguments?: VariableProperties\n      labelAssociations?: PkgSummaryLabel[]\n    }>\n  }\n  diff?: {\n    buckets?: Array<{\n      id?: string\n      name?: string\n      new?: {\n        description?: string\n        retentionRules?: RetentionRules\n      }\n      old?: {\n        description?: string\n        retentionRules?: RetentionRules\n      }\n    }>\n    checks?: Array<{\n      id?: string\n      name?: string\n      new?: CheckDiscriminator\n      old?: CheckDiscriminator\n    }>\n    dashboards?: Array<{\n      name?: string\n      description?: string\n      charts?: PkgChart[]\n    }>\n    labels?: Array<{\n      id?: string\n      name?: string\n      new?: {\n        color?: string\n        description?: string\n      }\n      old?: {\n        color?: string\n        description?: string\n      }\n    }>\n    labelMappings?: Array<{\n      isNew?: boolean\n      resourceType?: string\n      resourceID?: string\n      resourceName?: string\n      labelID?: string\n      labelName?: string\n    }>\n    notificationEndpoints?: Array<{\n      id?: string\n      name?: string\n      new?: NotificationEndpointDiscrimator\n      old?: NotificationEndpointDiscrimator\n    }>\n    notificationRules?: Array<{\n      name?: string\n      description?: string\n      endpointName?: string\n      endpointID?: string\n      endpointType?: string\n      every?: string\n      offset?: string\n      messageTemplate?: string\n      status?: string\n      statusRules?: Array<{\n        currentLevel?: string\n        previousLevel?: string\n      }>\n      tagRules?: Array<{\n        key?: string\n        value?: string\n        operator?: string\n      }>\n    }>\n    tasks?: Array<{\n      name?: string\n      cron?: string\n      description?: string\n      every?: string\n      offset?: string\n      query?: string\n      status?: string\n    }>\n    telegrafConfigs?: TelegrafRequest[]\n    variables?: Array<{\n      id?: string\n      name?: string\n      new?: {\n        description?: string\n        args?: VariableProperties\n      }\n      old?: {\n        description?: string\n        args?: VariableProperties\n      }\n    }>\n  }\n  errors?: Array<{\n    kind?: string\n    reason?: string\n    fields?: string[]\n    indexes?: number[]\n  }>\n}\n\nexport interface PkgSummaryLabel {\n  id?: string\n  orgID?: string\n  name?: string\n  description?: string\n  retentionPeriod?: string\n}\n\nexport interface PkgChart {\n  xPos?: number\n  yPos?: number\n  height?: number\n  width?: number\n  properties?: ViewProperties\n}\n\nexport type NotificationEndpointDiscrimator =\n  | (SlackNotificationEndpoint & {type: string})\n  | (PagerDutyNotificationEndpoint & {type: string})\n  | (HTTPNotificationEndpoint & {type: string})\n\nexport type SlackNotificationEndpoint = NotificationEndpointBase & {\n  url?: string\n  token?: string\n}\n\nexport interface NotificationEndpointBase {\n  id?: string\n  orgID?: string\n  userID?: string\n  readonly createdAt?: string\n  readonly updatedAt?: string\n  description?: string\n  name: string\n  status?: 'active' | 'inactive'\n  labels?: Labels\n  readonly links?: {\n    self?: Link\n    labels?: Link\n    members?: Link\n    owners?: Link\n  }\n  type: NotificationEndpointType\n}\n\nexport type NotificationEndpointType = 'slack' | 'pagerduty' | 'http'\n\nexport type PagerDutyNotificationEndpoint = NotificationEndpointBase & {\n  clientURL?: string\n  routingKey: string\n}\n\nexport type HTTPNotificationEndpoint = NotificationEndpointBase & {\n  url: string\n  username?: string\n  password?: string\n  token?: string\n  method: 'POST' | 'GET' | 'PUT'\n  authMethod: 'none' | 'basic' | 'bearer'\n  contentTemplate?: string\n  headers?: any\n}\n\nexport interface Tasks {\n  readonly links?: Links\n  tasks?: Task[]\n}\n\nexport interface Task {\n  readonly id: string\n  type?: string\n  orgID: string\n  org?: string\n  name: string\n  description?: string\n  status?: TaskStatusType\n  labels?: Labels\n  authorizationID?: string\n  flux: string\n  every?: string\n  cron?: string\n  offset?: string\n  readonly latestCompleted?: string\n  readonly lastRunStatus?: 'failed' | 'success' | 'canceled'\n  readonly lastRunError?: string\n  readonly createdAt?: string\n  readonly updatedAt?: string\n  readonly links?: {\n    self?: Link\n    owners?: Link\n    members?: Link\n    runs?: Link\n    logs?: Link\n    labels?: Link\n  }\n}\n\nexport interface TaskCreateRequest {\n  orgID?: string\n  org?: string\n  status?: TaskStatusType\n  flux: string\n  description?: string\n}\n\nexport interface TaskUpdateRequest {\n  status?: TaskStatusType\n  flux?: string\n  name?: string\n  every?: string\n  cron?: string\n  offset?: string\n  description?: string\n}\n\nexport interface Runs {\n  links?: Links\n  runs?: Run[]\n}\n\nexport interface Run {\n  readonly id?: string\n  readonly taskID?: string\n  readonly status?: 'scheduled' | 'started' | 'failed' | 'success' | 'canceled'\n  scheduledFor?: string\n  readonly log?: Array<{\n    runID?: string\n    time?: string\n    message?: string\n  }>\n  readonly startedAt?: string\n  readonly finishedAt?: string\n  readonly requestedAt?: string\n  readonly links?: {\n    self?: string\n    task?: string\n    logs?: string\n    retry?: string\n  }\n}\n\nexport interface RunManually {\n  scheduledFor?: string\n}\n\nexport interface Logs {\n  readonly events?: LogEvent[]\n}\n\nexport interface LogEvent {\n  readonly time?: string\n  readonly message?: string\n}\n\nexport interface PasswordResetBody {\n  password: string\n}\n\nexport interface Users {\n  links?: {\n    self?: string\n  }\n  users?: User[]\n}\n\nexport interface Checks {\n  checks?: Check[]\n  links?: Links\n}\n\nexport type PostCheck = CheckDiscriminator\n\nexport interface CheckPatch {\n  name?: string\n  description?: string\n  status?: 'active' | 'inactive'\n}\n\nexport interface NotificationRules {\n  notificationRules?: NotificationRule[]\n  links?: Links\n}\n\nexport type NotificationRule = NotificationRuleDiscriminator\n\nexport type NotificationRuleDiscriminator =\n  | (SlackNotificationRule & {type: string})\n  | (SMTPNotificationRule & {type: string})\n  | (PagerDutyNotificationRule & {type: string})\n  | (HTTPNotificationRule & {type: string})\n\nexport type SlackNotificationRule = NotificationRuleBase &\n  SlackNotificationRuleBase\n\nexport interface NotificationRuleBase {\n  readonly latestCompleted?: string\n  readonly lastRunStatus?: 'failed' | 'success' | 'canceled'\n  readonly lastRunError?: string\n  readonly id: string\n  endpointID: string\n  orgID: string\n  readonly ownerID?: string\n  readonly createdAt?: string\n  readonly updatedAt?: string\n  status: TaskStatusType\n  name: string\n  sleepUntil?: string\n  every?: string\n  offset?: string\n  runbookLink?: string\n  limitEvery?: number\n  limit?: number\n  tagRules: TagRule[]\n  description?: string\n  statusRules: StatusRule[]\n  labels?: Labels\n  readonly links?: {\n    self?: Link\n    labels?: Link\n    members?: Link\n    owners?: Link\n    query?: Link\n  }\n}\n\nexport interface TagRule {\n  key?: string\n  value?: string\n  operator?: 'equal' | 'notequal' | 'equalregex' | 'notequalregex'\n}\n\nexport interface StatusRule {\n  currentLevel?: RuleStatusLevel\n  previousLevel?: RuleStatusLevel\n  count?: number\n  period?: string\n}\n\nexport type RuleStatusLevel =\n  | 'UNKNOWN'\n  | 'OK'\n  | 'INFO'\n  | 'CRIT'\n  | 'WARN'\n  | 'ANY'\n\nexport interface SlackNotificationRuleBase {\n  type: 'slack'\n  channel?: string\n  messageTemplate: string\n}\n\nexport type SMTPNotificationRule = NotificationRuleBase &\n  SMTPNotificationRuleBase\n\nexport interface SMTPNotificationRuleBase {\n  type: 'smtp'\n  subjectTemplate: string\n  bodyTemplate?: string\n  to: string\n}\n\nexport type PagerDutyNotificationRule = NotificationRuleBase &\n  PagerDutyNotificationRuleBase\n\nexport interface PagerDutyNotificationRuleBase {\n  type: 'pagerduty'\n  messageTemplate: string\n}\n\nexport type HTTPNotificationRule = NotificationRuleBase &\n  HTTPNotificationRuleBase\n\nexport interface HTTPNotificationRuleBase {\n  type: 'http'\n  url?: string\n}\n\nexport type PostNotificationRule = NotificationRuleDiscriminator\n\nexport interface FluxResponse {\n  flux?: string\n}\n\nexport interface NotificationRuleUpdate {\n  name?: string\n  description?: string\n  status?: 'active' | 'inactive'\n}\n\nexport interface NotificationEndpoints {\n  notificationEndpoints?: NotificationEndpoint[]\n  links?: Links\n}\n\nexport type NotificationEndpoint = NotificationEndpointDiscrimator\n\nexport type PostNotificationEndpoint = NotificationEndpointDiscrimator\n\nexport interface NotificationEndpointUpdate {\n  name?: string\n  description?: string\n  status?: 'active' | 'inactive'\n}\n\ninterface RequestOptions {\n  signal?: AbortSignal\n}\n\nexport type RequestHandler = (\n  url: string,\n  query: string,\n  init: RequestInit\n) => {url: string; query: string; init: RequestInit}\nexport type ResponseHandler = (\n  status: number,\n  headers: Headers,\n  data: any\n) => {status: number; headers: Headers; data: any}\n\nconst RequestContext = function(\n  requestHandler: RequestHandler,\n  responseHandler: ResponseHandler\n) {\n  this.requestHandler = requestHandler\n  this.responseHandler = responseHandler\n}\n\nRequestContext.prototype.request = async function(\n  method: string,\n  url: string,\n  params: any = {},\n  options: RequestOptions = {}\n): Promise<any> {\n  const requestHeaders = new Headers(params.headers)\n  const contentType = requestHeaders.get('Content-Type') || ''\n\n  if (params.auth) {\n    const credentials = btoa(`${params.auth.username}:${params.auth.password}`)\n\n    requestHeaders.append('Authorization', `Basic ${credentials}`)\n  }\n\n  const body =\n    params.data && contentType.includes('json')\n      ? JSON.stringify(params.data)\n      : params.data\n\n  const query = params.query ? `?${new URLSearchParams(params.query)}` : ''\n\n  const {\n    url: middlewareUrl,\n    query: middlewareQuery,\n    init,\n  } = this.requestHandler(url, query, {\n    method,\n    body,\n    credentials: 'same-origin',\n    signal: options.signal,\n    headers: requestHeaders,\n  })\n\n  const response = await fetch(`${middlewareUrl}${middlewareQuery}`, init)\n\n  const {status, headers} = response\n  const responseContentType = headers.get('Content-Type') || ''\n\n  let data\n\n  if (responseContentType.includes('json')) {\n    data = await response.json()\n  } else if (responseContentType.includes('octet-stream')) {\n    data = await response.blob()\n  } else if (responseContentType.includes('text')) {\n    data = await response.text()\n  }\n\n  return this.responseHandler(status, headers, data)\n}\n\nRequestContext.prototype.setRequestHandler = function(\n  requestHandler: RequestHandler\n) {\n  this.requestHandler = requestHandler\n}\n\nRequestContext.prototype.setResponseHandler = function(\n  responseHandler: ResponseHandler\n) {\n  this.responseHandler = responseHandler\n}\n\nconst rc = new RequestContext(\n  (url, query, init) => {\n    return {url, query, init}\n  },\n  (status, headers, data) => {\n    return {status, headers, data}\n  }\n)\nconst request = rc.request.bind(rc)\n\nexport const setRequestHandler = rc.setRequestHandler.bind(rc)\nexport const setResponseHandler = rc.setResponseHandler.bind(rc)\n\nexport interface PostSigninParams {\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n\n  auth: {\n    username: string\n    password: string\n  }\n}\n\ntype PostSigninResult =\n  | PostSigninNoContentResult\n  | PostSigninUnauthorizedResult\n  | PostSigninForbiddenResult\n  | PostSigninDefaultResult\n\ninterface PostSigninNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface PostSigninUnauthorizedResult {\n  status: 401\n  headers: Headers\n  data: Error\n}\n\ninterface PostSigninForbiddenResult {\n  status: 403\n  headers: Headers\n  data: Error\n}\n\ninterface PostSigninDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postSignin = (\n  params: PostSigninParams,\n  options: RequestOptions = {}\n): Promise<PostSigninResult> =>\n  request('POST', '/api/v2/signin', params, options) as Promise<\n    PostSigninResult\n  >\n\nexport interface PostSignoutParams {\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostSignoutResult =\n  | PostSignoutNoContentResult\n  | PostSignoutUnauthorizedResult\n  | PostSignoutDefaultResult\n\ninterface PostSignoutNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface PostSignoutUnauthorizedResult {\n  status: 401\n  headers: Headers\n  data: Error\n}\n\ninterface PostSignoutDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postSignout = (\n  params: PostSignoutParams,\n  options: RequestOptions = {}\n): Promise<PostSignoutResult> =>\n  request('POST', '/api/v2/signout', params, options) as Promise<\n    PostSignoutResult\n  >\n\nexport interface GetParams {\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetResult = GetDefaultResult\n\ninterface GetDefaultResult {\n  status: 500\n  headers: Headers\n  data: Routes\n}\n\nexport const get = (\n  params: GetParams,\n  options: RequestOptions = {}\n): Promise<GetResult> =>\n  request('GET', '/api/v2/', params, options) as Promise<GetResult>\n\nexport interface GetSetupParams {\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetSetupResult = GetSetupOKResult\n\ninterface GetSetupOKResult {\n  status: 200\n  headers: Headers\n  data: IsOnboarding\n}\n\nexport const getSetup = (\n  params: GetSetupParams,\n  options: RequestOptions = {}\n): Promise<GetSetupResult> =>\n  request('GET', '/api/v2/setup', params, options) as Promise<GetSetupResult>\n\nexport interface PostSetupParams {\n  data: OnboardingRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostSetupResult = PostSetupCreatedResult\n\ninterface PostSetupCreatedResult {\n  status: 201\n  headers: Headers\n  data: OnboardingResponse\n}\n\nexport const postSetup = (\n  params: PostSetupParams,\n  options: RequestOptions = {}\n): Promise<PostSetupResult> =>\n  request(\n    'POST',\n    '/api/v2/setup',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostSetupResult>\n\nexport interface GetDocumentsTemplatesParams {\n  query?: {\n    org?: string\n    orgID?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDocumentsTemplatesResult =\n  | GetDocumentsTemplatesOKResult\n  | GetDocumentsTemplatesDefaultResult\n\ninterface GetDocumentsTemplatesOKResult {\n  status: 200\n  headers: Headers\n  data: Documents\n}\n\ninterface GetDocumentsTemplatesDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDocumentsTemplates = (\n  params: GetDocumentsTemplatesParams,\n  options: RequestOptions = {}\n): Promise<GetDocumentsTemplatesResult> =>\n  request('GET', '/api/v2/documents/templates', params, options) as Promise<\n    GetDocumentsTemplatesResult\n  >\n\nexport interface PostDocumentsTemplateParams {\n  data: DocumentCreate\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostDocumentsTemplateResult =\n  | PostDocumentsTemplateCreatedResult\n  | PostDocumentsTemplateDefaultResult\n\ninterface PostDocumentsTemplateCreatedResult {\n  status: 201\n  headers: Headers\n  data: Document\n}\n\ninterface PostDocumentsTemplateDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postDocumentsTemplate = (\n  params: PostDocumentsTemplateParams,\n  options: RequestOptions = {}\n): Promise<PostDocumentsTemplateResult> =>\n  request(\n    'POST',\n    '/api/v2/documents/templates',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostDocumentsTemplateResult>\n\nexport interface GetDocumentsTemplateParams {\n  templateID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDocumentsTemplateResult =\n  | GetDocumentsTemplateOKResult\n  | GetDocumentsTemplateDefaultResult\n\ninterface GetDocumentsTemplateOKResult {\n  status: 200\n  headers: Headers\n  data: Document\n}\n\ninterface GetDocumentsTemplateDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDocumentsTemplate = (\n  params: GetDocumentsTemplateParams,\n  options: RequestOptions = {}\n): Promise<GetDocumentsTemplateResult> =>\n  request(\n    'GET',\n    `/api/v2/documents/templates/${params.templateID}`,\n    params,\n    options\n  ) as Promise<GetDocumentsTemplateResult>\n\nexport interface PutDocumentsTemplateParams {\n  templateID: string\n\n  data: DocumentUpdate\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PutDocumentsTemplateResult =\n  | PutDocumentsTemplateOKResult\n  | PutDocumentsTemplateDefaultResult\n\ninterface PutDocumentsTemplateOKResult {\n  status: 200\n  headers: Headers\n  data: Document\n}\n\ninterface PutDocumentsTemplateDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const putDocumentsTemplate = (\n  params: PutDocumentsTemplateParams,\n  options: RequestOptions = {}\n): Promise<PutDocumentsTemplateResult> =>\n  request(\n    'PUT',\n    `/api/v2/documents/templates/${params.templateID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PutDocumentsTemplateResult>\n\nexport interface DeleteDocumentsTemplateParams {\n  templateID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteDocumentsTemplateResult =\n  | DeleteDocumentsTemplateNoContentResult\n  | DeleteDocumentsTemplateDefaultResult\n\ninterface DeleteDocumentsTemplateNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteDocumentsTemplateDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteDocumentsTemplate = (\n  params: DeleteDocumentsTemplateParams,\n  options: RequestOptions = {}\n): Promise<DeleteDocumentsTemplateResult> =>\n  request(\n    'DELETE',\n    `/api/v2/documents/templates/${params.templateID}`,\n    params,\n    options\n  ) as Promise<DeleteDocumentsTemplateResult>\n\nexport interface GetDocumentsTemplatesLabelsParams {\n  templateID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDocumentsTemplatesLabelsResult =\n  | GetDocumentsTemplatesLabelsOKResult\n  | GetDocumentsTemplatesLabelsDefaultResult\n\ninterface GetDocumentsTemplatesLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetDocumentsTemplatesLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDocumentsTemplatesLabels = (\n  params: GetDocumentsTemplatesLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetDocumentsTemplatesLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/documents/templates/${params.templateID}/labels`,\n    params,\n    options\n  ) as Promise<GetDocumentsTemplatesLabelsResult>\n\nexport interface PostDocumentsTemplatesLabelParams {\n  templateID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostDocumentsTemplatesLabelResult =\n  | PostDocumentsTemplatesLabelCreatedResult\n  | PostDocumentsTemplatesLabelDefaultResult\n\ninterface PostDocumentsTemplatesLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostDocumentsTemplatesLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postDocumentsTemplatesLabel = (\n  params: PostDocumentsTemplatesLabelParams,\n  options: RequestOptions = {}\n): Promise<PostDocumentsTemplatesLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/documents/templates/${params.templateID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostDocumentsTemplatesLabelResult>\n\nexport interface DeleteDocumentsTemplatesLabelParams {\n  templateID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteDocumentsTemplatesLabelResult =\n  | DeleteDocumentsTemplatesLabelNoContentResult\n  | DeleteDocumentsTemplatesLabelNotFoundResult\n  | DeleteDocumentsTemplatesLabelDefaultResult\n\ninterface DeleteDocumentsTemplatesLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteDocumentsTemplatesLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteDocumentsTemplatesLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteDocumentsTemplatesLabel = (\n  params: DeleteDocumentsTemplatesLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteDocumentsTemplatesLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/documents/templates/${params.templateID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteDocumentsTemplatesLabelResult>\n\nexport interface GetTelegrafPluginsParams {\n  query?: {\n    type?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTelegrafPluginsResult =\n  | GetTelegrafPluginsOKResult\n  | GetTelegrafPluginsDefaultResult\n\ninterface GetTelegrafPluginsOKResult {\n  status: 200\n  headers: Headers\n  data: TelegrafPlugins\n}\n\ninterface GetTelegrafPluginsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTelegrafPlugins = (\n  params: GetTelegrafPluginsParams,\n  options: RequestOptions = {}\n): Promise<GetTelegrafPluginsResult> =>\n  request('GET', '/api/v2/telegraf/plugins', params, options) as Promise<\n    GetTelegrafPluginsResult\n  >\n\nexport interface GetTelegrafsParams {\n  query?: {\n    orgID?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTelegrafsResult = GetTelegrafsOKResult | GetTelegrafsDefaultResult\n\ninterface GetTelegrafsOKResult {\n  status: 200\n  headers: Headers\n  data: Telegrafs\n}\n\ninterface GetTelegrafsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTelegrafs = (\n  params: GetTelegrafsParams,\n  options: RequestOptions = {}\n): Promise<GetTelegrafsResult> =>\n  request('GET', '/api/v2/telegrafs', params, options) as Promise<\n    GetTelegrafsResult\n  >\n\nexport interface PostTelegrafParams {\n  data: TelegrafRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTelegrafResult = PostTelegrafCreatedResult | PostTelegrafDefaultResult\n\ninterface PostTelegrafCreatedResult {\n  status: 201\n  headers: Headers\n  data: Telegraf\n}\n\ninterface PostTelegrafDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTelegraf = (\n  params: PostTelegrafParams,\n  options: RequestOptions = {}\n): Promise<PostTelegrafResult> =>\n  request(\n    'POST',\n    '/api/v2/telegrafs',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostTelegrafResult>\n\nexport interface GetTelegrafParams {\n  telegrafID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n    Accept?: string\n  }\n}\n\ntype GetTelegrafResult = GetTelegrafOKResult | GetTelegrafDefaultResult\n\ninterface GetTelegrafOKResult {\n  status: 200\n  headers: Headers\n  data: Telegraf\n}\n\ninterface GetTelegrafDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTelegraf = (\n  params: GetTelegrafParams,\n  options: RequestOptions = {}\n): Promise<GetTelegrafResult> =>\n  request(\n    'GET',\n    `/api/v2/telegrafs/${params.telegrafID}`,\n    params,\n    options\n  ) as Promise<GetTelegrafResult>\n\nexport interface PutTelegrafParams {\n  telegrafID: string\n\n  data: TelegrafRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PutTelegrafResult = PutTelegrafOKResult | PutTelegrafDefaultResult\n\ninterface PutTelegrafOKResult {\n  status: 200\n  headers: Headers\n  data: Telegraf\n}\n\ninterface PutTelegrafDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const putTelegraf = (\n  params: PutTelegrafParams,\n  options: RequestOptions = {}\n): Promise<PutTelegrafResult> =>\n  request(\n    'PUT',\n    `/api/v2/telegrafs/${params.telegrafID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PutTelegrafResult>\n\nexport interface DeleteTelegrafParams {\n  telegrafID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteTelegrafResult =\n  | DeleteTelegrafNoContentResult\n  | DeleteTelegrafDefaultResult\n\ninterface DeleteTelegrafNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteTelegrafDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteTelegraf = (\n  params: DeleteTelegrafParams,\n  options: RequestOptions = {}\n): Promise<DeleteTelegrafResult> =>\n  request(\n    'DELETE',\n    `/api/v2/telegrafs/${params.telegrafID}`,\n    params,\n    options\n  ) as Promise<DeleteTelegrafResult>\n\nexport interface GetTelegrafsLabelsParams {\n  telegrafID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTelegrafsLabelsResult =\n  | GetTelegrafsLabelsOKResult\n  | GetTelegrafsLabelsDefaultResult\n\ninterface GetTelegrafsLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetTelegrafsLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTelegrafsLabels = (\n  params: GetTelegrafsLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetTelegrafsLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/telegrafs/${params.telegrafID}/labels`,\n    params,\n    options\n  ) as Promise<GetTelegrafsLabelsResult>\n\nexport interface PostTelegrafsLabelParams {\n  telegrafID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTelegrafsLabelResult =\n  | PostTelegrafsLabelCreatedResult\n  | PostTelegrafsLabelDefaultResult\n\ninterface PostTelegrafsLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostTelegrafsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTelegrafsLabel = (\n  params: PostTelegrafsLabelParams,\n  options: RequestOptions = {}\n): Promise<PostTelegrafsLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/telegrafs/${params.telegrafID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostTelegrafsLabelResult>\n\nexport interface DeleteTelegrafsLabelParams {\n  telegrafID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteTelegrafsLabelResult =\n  | DeleteTelegrafsLabelNoContentResult\n  | DeleteTelegrafsLabelNotFoundResult\n  | DeleteTelegrafsLabelDefaultResult\n\ninterface DeleteTelegrafsLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteTelegrafsLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteTelegrafsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteTelegrafsLabel = (\n  params: DeleteTelegrafsLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteTelegrafsLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/telegrafs/${params.telegrafID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteTelegrafsLabelResult>\n\nexport interface GetTelegrafsMembersParams {\n  telegrafID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTelegrafsMembersResult =\n  | GetTelegrafsMembersOKResult\n  | GetTelegrafsMembersDefaultResult\n\ninterface GetTelegrafsMembersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceMembers\n}\n\ninterface GetTelegrafsMembersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTelegrafsMembers = (\n  params: GetTelegrafsMembersParams,\n  options: RequestOptions = {}\n): Promise<GetTelegrafsMembersResult> =>\n  request(\n    'GET',\n    `/api/v2/telegrafs/${params.telegrafID}/members`,\n    params,\n    options\n  ) as Promise<GetTelegrafsMembersResult>\n\nexport interface PostTelegrafsMemberParams {\n  telegrafID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTelegrafsMemberResult =\n  | PostTelegrafsMemberCreatedResult\n  | PostTelegrafsMemberDefaultResult\n\ninterface PostTelegrafsMemberCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceMember\n}\n\ninterface PostTelegrafsMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTelegrafsMember = (\n  params: PostTelegrafsMemberParams,\n  options: RequestOptions = {}\n): Promise<PostTelegrafsMemberResult> =>\n  request(\n    'POST',\n    `/api/v2/telegrafs/${params.telegrafID}/members`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostTelegrafsMemberResult>\n\nexport interface DeleteTelegrafsMemberParams {\n  userID: string\n  telegrafID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteTelegrafsMemberResult =\n  | DeleteTelegrafsMemberNoContentResult\n  | DeleteTelegrafsMemberDefaultResult\n\ninterface DeleteTelegrafsMemberNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteTelegrafsMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteTelegrafsMember = (\n  params: DeleteTelegrafsMemberParams,\n  options: RequestOptions = {}\n): Promise<DeleteTelegrafsMemberResult> =>\n  request(\n    'DELETE',\n    `/api/v2/telegrafs/${params.telegrafID}/members/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteTelegrafsMemberResult>\n\nexport interface GetTelegrafsOwnersParams {\n  telegrafID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTelegrafsOwnersResult =\n  | GetTelegrafsOwnersOKResult\n  | GetTelegrafsOwnersDefaultResult\n\ninterface GetTelegrafsOwnersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceOwners\n}\n\ninterface GetTelegrafsOwnersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTelegrafsOwners = (\n  params: GetTelegrafsOwnersParams,\n  options: RequestOptions = {}\n): Promise<GetTelegrafsOwnersResult> =>\n  request(\n    'GET',\n    `/api/v2/telegrafs/${params.telegrafID}/owners`,\n    params,\n    options\n  ) as Promise<GetTelegrafsOwnersResult>\n\nexport interface PostTelegrafsOwnerParams {\n  telegrafID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTelegrafsOwnerResult =\n  | PostTelegrafsOwnerCreatedResult\n  | PostTelegrafsOwnerDefaultResult\n\ninterface PostTelegrafsOwnerCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceOwner\n}\n\ninterface PostTelegrafsOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTelegrafsOwner = (\n  params: PostTelegrafsOwnerParams,\n  options: RequestOptions = {}\n): Promise<PostTelegrafsOwnerResult> =>\n  request(\n    'POST',\n    `/api/v2/telegrafs/${params.telegrafID}/owners`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostTelegrafsOwnerResult>\n\nexport interface DeleteTelegrafsOwnerParams {\n  userID: string\n  telegrafID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteTelegrafsOwnerResult =\n  | DeleteTelegrafsOwnerNoContentResult\n  | DeleteTelegrafsOwnerDefaultResult\n\ninterface DeleteTelegrafsOwnerNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteTelegrafsOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteTelegrafsOwner = (\n  params: DeleteTelegrafsOwnerParams,\n  options: RequestOptions = {}\n): Promise<DeleteTelegrafsOwnerResult> =>\n  request(\n    'DELETE',\n    `/api/v2/telegrafs/${params.telegrafID}/owners/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteTelegrafsOwnerResult>\n\nexport interface GetScrapersParams {\n  query?: {\n    name?: string\n    id?: any\n    orgID?: string\n    org?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetScrapersResult = GetScrapersOKResult\n\ninterface GetScrapersOKResult {\n  status: 200\n  headers: Headers\n  data: ScraperTargetResponses\n}\n\nexport const getScrapers = (\n  params: GetScrapersParams,\n  options: RequestOptions = {}\n): Promise<GetScrapersResult> =>\n  request('GET', '/api/v2/scrapers', params, options) as Promise<\n    GetScrapersResult\n  >\n\nexport interface PostScraperParams {\n  data: ScraperTargetRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostScraperResult = PostScraperCreatedResult | PostScraperDefaultResult\n\ninterface PostScraperCreatedResult {\n  status: 201\n  headers: Headers\n  data: ScraperTargetResponse\n}\n\ninterface PostScraperDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postScraper = (\n  params: PostScraperParams,\n  options: RequestOptions = {}\n): Promise<PostScraperResult> =>\n  request(\n    'POST',\n    '/api/v2/scrapers',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostScraperResult>\n\nexport interface GetScraperParams {\n  scraperTargetID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetScraperResult = GetScraperOKResult | GetScraperDefaultResult\n\ninterface GetScraperOKResult {\n  status: 200\n  headers: Headers\n  data: ScraperTargetResponse\n}\n\ninterface GetScraperDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getScraper = (\n  params: GetScraperParams,\n  options: RequestOptions = {}\n): Promise<GetScraperResult> =>\n  request(\n    'GET',\n    `/api/v2/scrapers/${params.scraperTargetID}`,\n    params,\n    options\n  ) as Promise<GetScraperResult>\n\nexport interface PatchScraperParams {\n  scraperTargetID: string\n\n  data: ScraperTargetRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchScraperResult = PatchScraperOKResult | PatchScraperDefaultResult\n\ninterface PatchScraperOKResult {\n  status: 200\n  headers: Headers\n  data: ScraperTargetResponse\n}\n\ninterface PatchScraperDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchScraper = (\n  params: PatchScraperParams,\n  options: RequestOptions = {}\n): Promise<PatchScraperResult> =>\n  request(\n    'PATCH',\n    `/api/v2/scrapers/${params.scraperTargetID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchScraperResult>\n\nexport interface DeleteScraperParams {\n  scraperTargetID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteScraperResult =\n  | DeleteScraperNoContentResult\n  | DeleteScraperDefaultResult\n\ninterface DeleteScraperNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteScraperDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteScraper = (\n  params: DeleteScraperParams,\n  options: RequestOptions = {}\n): Promise<DeleteScraperResult> =>\n  request(\n    'DELETE',\n    `/api/v2/scrapers/${params.scraperTargetID}`,\n    params,\n    options\n  ) as Promise<DeleteScraperResult>\n\nexport interface GetScrapersLabelsParams {\n  scraperTargetID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetScrapersLabelsResult =\n  | GetScrapersLabelsOKResult\n  | GetScrapersLabelsDefaultResult\n\ninterface GetScrapersLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetScrapersLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getScrapersLabels = (\n  params: GetScrapersLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetScrapersLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/scrapers/${params.scraperTargetID}/labels`,\n    params,\n    options\n  ) as Promise<GetScrapersLabelsResult>\n\nexport interface PostScrapersLabelParams {\n  scraperTargetID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostScrapersLabelResult =\n  | PostScrapersLabelCreatedResult\n  | PostScrapersLabelDefaultResult\n\ninterface PostScrapersLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostScrapersLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postScrapersLabel = (\n  params: PostScrapersLabelParams,\n  options: RequestOptions = {}\n): Promise<PostScrapersLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/scrapers/${params.scraperTargetID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostScrapersLabelResult>\n\nexport interface PatchScrapersLabelParams {\n  scraperTargetID: string\n  labelID: string\n\n  data: Label\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchScrapersLabelResult =\n  | PatchScrapersLabelOKResult\n  | PatchScrapersLabelNotFoundResult\n  | PatchScrapersLabelDefaultResult\n\ninterface PatchScrapersLabelOKResult {\n  status: 200\n  headers: Headers\n  data: any\n}\n\ninterface PatchScrapersLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PatchScrapersLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchScrapersLabel = (\n  params: PatchScrapersLabelParams,\n  options: RequestOptions = {}\n): Promise<PatchScrapersLabelResult> =>\n  request(\n    'PATCH',\n    `/api/v2/scrapers/${params.scraperTargetID}/labels/${params.labelID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchScrapersLabelResult>\n\nexport interface DeleteScrapersLabelParams {\n  scraperTargetID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteScrapersLabelResult =\n  | DeleteScrapersLabelNoContentResult\n  | DeleteScrapersLabelNotFoundResult\n  | DeleteScrapersLabelDefaultResult\n\ninterface DeleteScrapersLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteScrapersLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteScrapersLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteScrapersLabel = (\n  params: DeleteScrapersLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteScrapersLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/scrapers/${params.scraperTargetID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteScrapersLabelResult>\n\nexport interface GetScrapersMembersParams {\n  scraperTargetID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetScrapersMembersResult =\n  | GetScrapersMembersOKResult\n  | GetScrapersMembersDefaultResult\n\ninterface GetScrapersMembersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceMembers\n}\n\ninterface GetScrapersMembersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getScrapersMembers = (\n  params: GetScrapersMembersParams,\n  options: RequestOptions = {}\n): Promise<GetScrapersMembersResult> =>\n  request(\n    'GET',\n    `/api/v2/scrapers/${params.scraperTargetID}/members`,\n    params,\n    options\n  ) as Promise<GetScrapersMembersResult>\n\nexport interface PostScrapersMemberParams {\n  scraperTargetID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostScrapersMemberResult =\n  | PostScrapersMemberCreatedResult\n  | PostScrapersMemberDefaultResult\n\ninterface PostScrapersMemberCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceMember\n}\n\ninterface PostScrapersMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postScrapersMember = (\n  params: PostScrapersMemberParams,\n  options: RequestOptions = {}\n): Promise<PostScrapersMemberResult> =>\n  request(\n    'POST',\n    `/api/v2/scrapers/${params.scraperTargetID}/members`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostScrapersMemberResult>\n\nexport interface DeleteScrapersMemberParams {\n  userID: string\n  scraperTargetID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteScrapersMemberResult =\n  | DeleteScrapersMemberNoContentResult\n  | DeleteScrapersMemberDefaultResult\n\ninterface DeleteScrapersMemberNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteScrapersMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteScrapersMember = (\n  params: DeleteScrapersMemberParams,\n  options: RequestOptions = {}\n): Promise<DeleteScrapersMemberResult> =>\n  request(\n    'DELETE',\n    `/api/v2/scrapers/${params.scraperTargetID}/members/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteScrapersMemberResult>\n\nexport interface GetScrapersOwnersParams {\n  scraperTargetID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetScrapersOwnersResult =\n  | GetScrapersOwnersOKResult\n  | GetScrapersOwnersDefaultResult\n\ninterface GetScrapersOwnersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceOwners\n}\n\ninterface GetScrapersOwnersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getScrapersOwners = (\n  params: GetScrapersOwnersParams,\n  options: RequestOptions = {}\n): Promise<GetScrapersOwnersResult> =>\n  request(\n    'GET',\n    `/api/v2/scrapers/${params.scraperTargetID}/owners`,\n    params,\n    options\n  ) as Promise<GetScrapersOwnersResult>\n\nexport interface PostScrapersOwnerParams {\n  scraperTargetID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostScrapersOwnerResult =\n  | PostScrapersOwnerCreatedResult\n  | PostScrapersOwnerDefaultResult\n\ninterface PostScrapersOwnerCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceOwner\n}\n\ninterface PostScrapersOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postScrapersOwner = (\n  params: PostScrapersOwnerParams,\n  options: RequestOptions = {}\n): Promise<PostScrapersOwnerResult> =>\n  request(\n    'POST',\n    `/api/v2/scrapers/${params.scraperTargetID}/owners`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostScrapersOwnerResult>\n\nexport interface DeleteScrapersOwnerParams {\n  userID: string\n  scraperTargetID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteScrapersOwnerResult =\n  | DeleteScrapersOwnerNoContentResult\n  | DeleteScrapersOwnerDefaultResult\n\ninterface DeleteScrapersOwnerNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteScrapersOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteScrapersOwner = (\n  params: DeleteScrapersOwnerParams,\n  options: RequestOptions = {}\n): Promise<DeleteScrapersOwnerResult> =>\n  request(\n    'DELETE',\n    `/api/v2/scrapers/${params.scraperTargetID}/owners/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteScrapersOwnerResult>\n\nexport interface GetVariablesParams {\n  query?: {\n    org?: string\n    orgID?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetVariablesResult =\n  | GetVariablesOKResult\n  | GetVariablesBadRequestResult\n  | GetVariablesDefaultResult\n\ninterface GetVariablesOKResult {\n  status: 200\n  headers: Headers\n  data: Variables\n}\n\ninterface GetVariablesBadRequestResult {\n  status: 400\n  headers: Headers\n  data: Error\n}\n\ninterface GetVariablesDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getVariables = (\n  params: GetVariablesParams,\n  options: RequestOptions = {}\n): Promise<GetVariablesResult> =>\n  request('GET', '/api/v2/variables', params, options) as Promise<\n    GetVariablesResult\n  >\n\nexport interface PostVariableParams {\n  data: Variable\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostVariableResult = PostVariableCreatedResult | PostVariableDefaultResult\n\ninterface PostVariableCreatedResult {\n  status: 201\n  headers: Headers\n  data: Variable\n}\n\ninterface PostVariableDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postVariable = (\n  params: PostVariableParams,\n  options: RequestOptions = {}\n): Promise<PostVariableResult> =>\n  request(\n    'POST',\n    '/api/v2/variables',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostVariableResult>\n\nexport interface GetVariableParams {\n  variableID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetVariableResult =\n  | GetVariableOKResult\n  | GetVariableNotFoundResult\n  | GetVariableDefaultResult\n\ninterface GetVariableOKResult {\n  status: 200\n  headers: Headers\n  data: Variable\n}\n\ninterface GetVariableNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface GetVariableDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getVariable = (\n  params: GetVariableParams,\n  options: RequestOptions = {}\n): Promise<GetVariableResult> =>\n  request(\n    'GET',\n    `/api/v2/variables/${params.variableID}`,\n    params,\n    options\n  ) as Promise<GetVariableResult>\n\nexport interface PutVariableParams {\n  variableID: string\n\n  data: Variable\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PutVariableResult = PutVariableOKResult | PutVariableDefaultResult\n\ninterface PutVariableOKResult {\n  status: 200\n  headers: Headers\n  data: Variable\n}\n\ninterface PutVariableDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const putVariable = (\n  params: PutVariableParams,\n  options: RequestOptions = {}\n): Promise<PutVariableResult> =>\n  request(\n    'PUT',\n    `/api/v2/variables/${params.variableID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PutVariableResult>\n\nexport interface PatchVariableParams {\n  variableID: string\n\n  data: Variable\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchVariableResult = PatchVariableOKResult | PatchVariableDefaultResult\n\ninterface PatchVariableOKResult {\n  status: 200\n  headers: Headers\n  data: Variable\n}\n\ninterface PatchVariableDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchVariable = (\n  params: PatchVariableParams,\n  options: RequestOptions = {}\n): Promise<PatchVariableResult> =>\n  request(\n    'PATCH',\n    `/api/v2/variables/${params.variableID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchVariableResult>\n\nexport interface DeleteVariableParams {\n  variableID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteVariableResult =\n  | DeleteVariableNoContentResult\n  | DeleteVariableDefaultResult\n\ninterface DeleteVariableNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteVariableDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteVariable = (\n  params: DeleteVariableParams,\n  options: RequestOptions = {}\n): Promise<DeleteVariableResult> =>\n  request(\n    'DELETE',\n    `/api/v2/variables/${params.variableID}`,\n    params,\n    options\n  ) as Promise<DeleteVariableResult>\n\nexport interface GetVariablesLabelsParams {\n  variableID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetVariablesLabelsResult =\n  | GetVariablesLabelsOKResult\n  | GetVariablesLabelsDefaultResult\n\ninterface GetVariablesLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetVariablesLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getVariablesLabels = (\n  params: GetVariablesLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetVariablesLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/variables/${params.variableID}/labels`,\n    params,\n    options\n  ) as Promise<GetVariablesLabelsResult>\n\nexport interface PostVariablesLabelParams {\n  variableID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostVariablesLabelResult =\n  | PostVariablesLabelCreatedResult\n  | PostVariablesLabelDefaultResult\n\ninterface PostVariablesLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostVariablesLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postVariablesLabel = (\n  params: PostVariablesLabelParams,\n  options: RequestOptions = {}\n): Promise<PostVariablesLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/variables/${params.variableID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostVariablesLabelResult>\n\nexport interface DeleteVariablesLabelParams {\n  variableID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteVariablesLabelResult =\n  | DeleteVariablesLabelNoContentResult\n  | DeleteVariablesLabelNotFoundResult\n  | DeleteVariablesLabelDefaultResult\n\ninterface DeleteVariablesLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteVariablesLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteVariablesLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteVariablesLabel = (\n  params: DeleteVariablesLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteVariablesLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/variables/${params.variableID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteVariablesLabelResult>\n\nexport interface PostWriteParams {\n  data: string\n\n  query: {\n    org: string\n    orgID?: string\n    bucket: string\n    precision?: any\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n    'Content-Encoding'?: string\n    'Content-Type'?: string\n    'Content-Length'?: number\n    Accept?: string\n  }\n}\n\ntype PostWriteResult =\n  | PostWriteNoContentResult\n  | PostWriteBadRequestResult\n  | PostWriteUnauthorizedResult\n  | PostWriteForbiddenResult\n  | PostWritePayloadTooLargeResult\n  | PostWriteTooManyRequestsResult\n  | PostWriteServiceUnavailableResult\n  | PostWriteDefaultResult\n\ninterface PostWriteNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface PostWriteBadRequestResult {\n  status: 400\n  headers: Headers\n  data: LineProtocolError\n}\n\ninterface PostWriteUnauthorizedResult {\n  status: 401\n  headers: Headers\n  data: Error\n}\n\ninterface PostWriteForbiddenResult {\n  status: 403\n  headers: Headers\n  data: Error\n}\n\ninterface PostWritePayloadTooLargeResult {\n  status: 413\n  headers: Headers\n  data: LineProtocolLengthError\n}\n\ninterface PostWriteTooManyRequestsResult {\n  status: 429\n  headers: Headers\n  data: any\n}\n\ninterface PostWriteServiceUnavailableResult {\n  status: 503\n  headers: Headers\n  data: any\n}\n\ninterface PostWriteDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postWrite = (\n  params: PostWriteParams,\n  options: RequestOptions = {}\n): Promise<PostWriteResult> =>\n  request(\n    'POST',\n    '/api/v2/write',\n    {...params, headers: {...params.headers, 'Content-Type': 'text/plain'}},\n    options\n  ) as Promise<PostWriteResult>\n\nexport interface PostDeleteParams {\n  data: DeletePredicateRequest\n\n  query?: {\n    org?: string\n    bucket?: string\n    orgID?: string\n    bucketID?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostDeleteResult =\n  | PostDeleteNoContentResult\n  | PostDeleteBadRequestResult\n  | PostDeleteForbiddenResult\n  | PostDeleteNotFoundResult\n  | PostDeleteDefaultResult\n\ninterface PostDeleteNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface PostDeleteBadRequestResult {\n  status: 400\n  headers: Headers\n  data: Error\n}\n\ninterface PostDeleteForbiddenResult {\n  status: 403\n  headers: Headers\n  data: Error\n}\n\ninterface PostDeleteNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PostDeleteDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postDelete = (\n  params: PostDeleteParams,\n  options: RequestOptions = {}\n): Promise<PostDeleteResult> =>\n  request(\n    'POST',\n    '/api/v2/delete',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostDeleteResult>\n\nexport interface GetReadyParams {\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetReadyResult = GetReadyOKResult | GetReadyDefaultResult\n\ninterface GetReadyOKResult {\n  status: 200\n  headers: Headers\n  data: Ready\n}\n\ninterface GetReadyDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getReady = (\n  params: GetReadyParams,\n  options: RequestOptions = {}\n): Promise<GetReadyResult> =>\n  request('GET', '/api/v2/ready', params, options) as Promise<GetReadyResult>\n\nexport interface GetHealthParams {\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetHealthResult =\n  | GetHealthOKResult\n  | GetHealthServiceUnavailableResult\n  | GetHealthDefaultResult\n\ninterface GetHealthOKResult {\n  status: 200\n  headers: Headers\n  data: HealthCheck\n}\n\ninterface GetHealthServiceUnavailableResult {\n  status: 503\n  headers: Headers\n  data: HealthCheck\n}\n\ninterface GetHealthDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getHealth = (\n  params: GetHealthParams,\n  options: RequestOptions = {}\n): Promise<GetHealthResult> =>\n  request('GET', '/api/v2/health', params, options) as Promise<GetHealthResult>\n\nexport interface GetSourcesParams {\n  query?: {\n    org?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetSourcesResult = GetSourcesOKResult | GetSourcesDefaultResult\n\ninterface GetSourcesOKResult {\n  status: 200\n  headers: Headers\n  data: Sources\n}\n\ninterface GetSourcesDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getSources = (\n  params: GetSourcesParams,\n  options: RequestOptions = {}\n): Promise<GetSourcesResult> =>\n  request('GET', '/api/v2/sources', params, options) as Promise<\n    GetSourcesResult\n  >\n\nexport interface PostSourceParams {\n  data: Source\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostSourceResult = PostSourceCreatedResult | PostSourceDefaultResult\n\ninterface PostSourceCreatedResult {\n  status: 201\n  headers: Headers\n  data: Source\n}\n\ninterface PostSourceDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postSource = (\n  params: PostSourceParams,\n  options: RequestOptions = {}\n): Promise<PostSourceResult> =>\n  request(\n    'POST',\n    '/api/v2/sources',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostSourceResult>\n\nexport interface GetSourceParams {\n  sourceID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetSourceResult =\n  | GetSourceOKResult\n  | GetSourceNotFoundResult\n  | GetSourceDefaultResult\n\ninterface GetSourceOKResult {\n  status: 200\n  headers: Headers\n  data: Source\n}\n\ninterface GetSourceNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface GetSourceDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getSource = (\n  params: GetSourceParams,\n  options: RequestOptions = {}\n): Promise<GetSourceResult> =>\n  request(\n    'GET',\n    `/api/v2/sources/${params.sourceID}`,\n    params,\n    options\n  ) as Promise<GetSourceResult>\n\nexport interface PatchSourceParams {\n  sourceID: string\n\n  data: Source\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchSourceResult =\n  | PatchSourceOKResult\n  | PatchSourceNotFoundResult\n  | PatchSourceDefaultResult\n\ninterface PatchSourceOKResult {\n  status: 200\n  headers: Headers\n  data: Source\n}\n\ninterface PatchSourceNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PatchSourceDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchSource = (\n  params: PatchSourceParams,\n  options: RequestOptions = {}\n): Promise<PatchSourceResult> =>\n  request(\n    'PATCH',\n    `/api/v2/sources/${params.sourceID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchSourceResult>\n\nexport interface DeleteSourceParams {\n  sourceID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteSourceResult =\n  | DeleteSourceNoContentResult\n  | DeleteSourceNotFoundResult\n  | DeleteSourceDefaultResult\n\ninterface DeleteSourceNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteSourceNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteSourceDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteSource = (\n  params: DeleteSourceParams,\n  options: RequestOptions = {}\n): Promise<DeleteSourceResult> =>\n  request(\n    'DELETE',\n    `/api/v2/sources/${params.sourceID}`,\n    params,\n    options\n  ) as Promise<DeleteSourceResult>\n\nexport interface GetSourcesHealthParams {\n  sourceID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetSourcesHealthResult =\n  | GetSourcesHealthOKResult\n  | GetSourcesHealthServiceUnavailableResult\n  | GetSourcesHealthDefaultResult\n\ninterface GetSourcesHealthOKResult {\n  status: 200\n  headers: Headers\n  data: HealthCheck\n}\n\ninterface GetSourcesHealthServiceUnavailableResult {\n  status: 503\n  headers: Headers\n  data: HealthCheck\n}\n\ninterface GetSourcesHealthDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getSourcesHealth = (\n  params: GetSourcesHealthParams,\n  options: RequestOptions = {}\n): Promise<GetSourcesHealthResult> =>\n  request(\n    'GET',\n    `/api/v2/sources/${params.sourceID}/health`,\n    params,\n    options\n  ) as Promise<GetSourcesHealthResult>\n\nexport interface GetSourcesBucketsParams {\n  sourceID: string\n\n  query?: {\n    org?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetSourcesBucketsResult =\n  | GetSourcesBucketsOKResult\n  | GetSourcesBucketsNotFoundResult\n  | GetSourcesBucketsDefaultResult\n\ninterface GetSourcesBucketsOKResult {\n  status: 200\n  headers: Headers\n  data: Buckets\n}\n\ninterface GetSourcesBucketsNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface GetSourcesBucketsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getSourcesBuckets = (\n  params: GetSourcesBucketsParams,\n  options: RequestOptions = {}\n): Promise<GetSourcesBucketsResult> =>\n  request(\n    'GET',\n    `/api/v2/sources/${params.sourceID}/buckets`,\n    params,\n    options\n  ) as Promise<GetSourcesBucketsResult>\n\nexport interface GetLabelsParams {\n  query?: {\n    orgID?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetLabelsResult = GetLabelsOKResult | GetLabelsDefaultResult\n\ninterface GetLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getLabels = (\n  params: GetLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetLabelsResult> =>\n  request('GET', '/api/v2/labels', params, options) as Promise<GetLabelsResult>\n\nexport interface PostLabelParams {\n  data: LabelCreateRequest\n}\n\ntype PostLabelResult = PostLabelCreatedResult | PostLabelDefaultResult\n\ninterface PostLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postLabel = (\n  params: PostLabelParams,\n  options: RequestOptions = {}\n): Promise<PostLabelResult> =>\n  request(\n    'POST',\n    '/api/v2/labels',\n    {...params, headers: {'Content-Type': 'application/json'}},\n    options\n  ) as Promise<PostLabelResult>\n\nexport interface GetLabelParams {\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetLabelResult = GetLabelOKResult | GetLabelDefaultResult\n\ninterface GetLabelOKResult {\n  status: 200\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface GetLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getLabel = (\n  params: GetLabelParams,\n  options: RequestOptions = {}\n): Promise<GetLabelResult> =>\n  request(\n    'GET',\n    `/api/v2/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<GetLabelResult>\n\nexport interface PatchLabelParams {\n  labelID: string\n\n  data: LabelUpdate\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchLabelResult =\n  | PatchLabelOKResult\n  | PatchLabelNotFoundResult\n  | PatchLabelDefaultResult\n\ninterface PatchLabelOKResult {\n  status: 200\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PatchLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PatchLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchLabel = (\n  params: PatchLabelParams,\n  options: RequestOptions = {}\n): Promise<PatchLabelResult> =>\n  request(\n    'PATCH',\n    `/api/v2/labels/${params.labelID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchLabelResult>\n\nexport interface DeleteLabelParams {\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteLabelResult =\n  | DeleteLabelNoContentResult\n  | DeleteLabelNotFoundResult\n  | DeleteLabelDefaultResult\n\ninterface DeleteLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteLabel = (\n  params: DeleteLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteLabelResult>\n\nexport interface GetDashboardsParams {\n  query?: {\n    owner?: string\n    sortBy?: string\n    id?: any\n    orgID?: string\n    org?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDashboardsResult = GetDashboardsOKResult | GetDashboardsDefaultResult\n\ninterface GetDashboardsOKResult {\n  status: 200\n  headers: Headers\n  data: Dashboards\n}\n\ninterface GetDashboardsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDashboards = (\n  params: GetDashboardsParams,\n  options: RequestOptions = {}\n): Promise<GetDashboardsResult> =>\n  request('GET', '/api/v2/dashboards', params, options) as Promise<\n    GetDashboardsResult\n  >\n\nexport interface PostDashboardParams {\n  data: CreateDashboardRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostDashboardResult =\n  | PostDashboardCreatedResult\n  | PostDashboardDefaultResult\n\ninterface PostDashboardCreatedResult {\n  status: 201\n  headers: Headers\n  data: Dashboard | DashboardWithViewProperties\n}\n\ninterface PostDashboardDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postDashboard = (\n  params: PostDashboardParams,\n  options: RequestOptions = {}\n): Promise<PostDashboardResult> =>\n  request(\n    'POST',\n    '/api/v2/dashboards',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostDashboardResult>\n\nexport interface GetDashboardParams {\n  dashboardID: string\n\n  query?: {\n    include?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDashboardResult =\n  | GetDashboardOKResult\n  | GetDashboardNotFoundResult\n  | GetDashboardDefaultResult\n\ninterface GetDashboardOKResult {\n  status: 200\n  headers: Headers\n  data: Dashboard | DashboardWithViewProperties\n}\n\ninterface GetDashboardNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface GetDashboardDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDashboard = (\n  params: GetDashboardParams,\n  options: RequestOptions = {}\n): Promise<GetDashboardResult> =>\n  request(\n    'GET',\n    `/api/v2/dashboards/${params.dashboardID}`,\n    params,\n    options\n  ) as Promise<GetDashboardResult>\n\nexport interface PatchDashboardParams {\n  dashboardID: string\n\n  data: Dashboard\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchDashboardResult =\n  | PatchDashboardOKResult\n  | PatchDashboardNotFoundResult\n  | PatchDashboardDefaultResult\n\ninterface PatchDashboardOKResult {\n  status: 200\n  headers: Headers\n  data: Dashboard\n}\n\ninterface PatchDashboardNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PatchDashboardDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchDashboard = (\n  params: PatchDashboardParams,\n  options: RequestOptions = {}\n): Promise<PatchDashboardResult> =>\n  request(\n    'PATCH',\n    `/api/v2/dashboards/${params.dashboardID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchDashboardResult>\n\nexport interface DeleteDashboardParams {\n  dashboardID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteDashboardResult =\n  | DeleteDashboardNoContentResult\n  | DeleteDashboardNotFoundResult\n  | DeleteDashboardDefaultResult\n\ninterface DeleteDashboardNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteDashboardNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteDashboardDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteDashboard = (\n  params: DeleteDashboardParams,\n  options: RequestOptions = {}\n): Promise<DeleteDashboardResult> =>\n  request(\n    'DELETE',\n    `/api/v2/dashboards/${params.dashboardID}`,\n    params,\n    options\n  ) as Promise<DeleteDashboardResult>\n\nexport interface PostDashboardsCellParams {\n  dashboardID: string\n\n  data: CreateCell\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostDashboardsCellResult =\n  | PostDashboardsCellCreatedResult\n  | PostDashboardsCellNotFoundResult\n  | PostDashboardsCellDefaultResult\n\ninterface PostDashboardsCellCreatedResult {\n  status: 201\n  headers: Headers\n  data: Cell\n}\n\ninterface PostDashboardsCellNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PostDashboardsCellDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postDashboardsCell = (\n  params: PostDashboardsCellParams,\n  options: RequestOptions = {}\n): Promise<PostDashboardsCellResult> =>\n  request(\n    'POST',\n    `/api/v2/dashboards/${params.dashboardID}/cells`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostDashboardsCellResult>\n\nexport interface PutDashboardsCellsParams {\n  dashboardID: string\n\n  data: Cells\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PutDashboardsCellsResult =\n  | PutDashboardsCellsCreatedResult\n  | PutDashboardsCellsNotFoundResult\n  | PutDashboardsCellsDefaultResult\n\ninterface PutDashboardsCellsCreatedResult {\n  status: 201\n  headers: Headers\n  data: Dashboard\n}\n\ninterface PutDashboardsCellsNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PutDashboardsCellsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const putDashboardsCells = (\n  params: PutDashboardsCellsParams,\n  options: RequestOptions = {}\n): Promise<PutDashboardsCellsResult> =>\n  request(\n    'PUT',\n    `/api/v2/dashboards/${params.dashboardID}/cells`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PutDashboardsCellsResult>\n\nexport interface PatchDashboardsCellParams {\n  dashboardID: string\n  cellID: string\n\n  data: CellUpdate\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchDashboardsCellResult =\n  | PatchDashboardsCellOKResult\n  | PatchDashboardsCellNotFoundResult\n  | PatchDashboardsCellDefaultResult\n\ninterface PatchDashboardsCellOKResult {\n  status: 200\n  headers: Headers\n  data: Cell\n}\n\ninterface PatchDashboardsCellNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PatchDashboardsCellDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchDashboardsCell = (\n  params: PatchDashboardsCellParams,\n  options: RequestOptions = {}\n): Promise<PatchDashboardsCellResult> =>\n  request(\n    'PATCH',\n    `/api/v2/dashboards/${params.dashboardID}/cells/${params.cellID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchDashboardsCellResult>\n\nexport interface DeleteDashboardsCellParams {\n  dashboardID: string\n  cellID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteDashboardsCellResult =\n  | DeleteDashboardsCellNoContentResult\n  | DeleteDashboardsCellNotFoundResult\n  | DeleteDashboardsCellDefaultResult\n\ninterface DeleteDashboardsCellNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteDashboardsCellNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteDashboardsCellDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteDashboardsCell = (\n  params: DeleteDashboardsCellParams,\n  options: RequestOptions = {}\n): Promise<DeleteDashboardsCellResult> =>\n  request(\n    'DELETE',\n    `/api/v2/dashboards/${params.dashboardID}/cells/${params.cellID}`,\n    params,\n    options\n  ) as Promise<DeleteDashboardsCellResult>\n\nexport interface GetDashboardsCellsViewParams {\n  dashboardID: string\n  cellID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDashboardsCellsViewResult =\n  | GetDashboardsCellsViewOKResult\n  | GetDashboardsCellsViewNotFoundResult\n  | GetDashboardsCellsViewDefaultResult\n\ninterface GetDashboardsCellsViewOKResult {\n  status: 200\n  headers: Headers\n  data: View\n}\n\ninterface GetDashboardsCellsViewNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface GetDashboardsCellsViewDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDashboardsCellsView = (\n  params: GetDashboardsCellsViewParams,\n  options: RequestOptions = {}\n): Promise<GetDashboardsCellsViewResult> =>\n  request(\n    'GET',\n    `/api/v2/dashboards/${params.dashboardID}/cells/${params.cellID}/view`,\n    params,\n    options\n  ) as Promise<GetDashboardsCellsViewResult>\n\nexport interface PatchDashboardsCellsViewParams {\n  dashboardID: string\n  cellID: string\n\n  data: View\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchDashboardsCellsViewResult =\n  | PatchDashboardsCellsViewOKResult\n  | PatchDashboardsCellsViewNotFoundResult\n  | PatchDashboardsCellsViewDefaultResult\n\ninterface PatchDashboardsCellsViewOKResult {\n  status: 200\n  headers: Headers\n  data: View\n}\n\ninterface PatchDashboardsCellsViewNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PatchDashboardsCellsViewDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchDashboardsCellsView = (\n  params: PatchDashboardsCellsViewParams,\n  options: RequestOptions = {}\n): Promise<PatchDashboardsCellsViewResult> =>\n  request(\n    'PATCH',\n    `/api/v2/dashboards/${params.dashboardID}/cells/${params.cellID}/view`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchDashboardsCellsViewResult>\n\nexport interface GetDashboardsLabelsParams {\n  dashboardID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDashboardsLabelsResult =\n  | GetDashboardsLabelsOKResult\n  | GetDashboardsLabelsDefaultResult\n\ninterface GetDashboardsLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetDashboardsLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDashboardsLabels = (\n  params: GetDashboardsLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetDashboardsLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/dashboards/${params.dashboardID}/labels`,\n    params,\n    options\n  ) as Promise<GetDashboardsLabelsResult>\n\nexport interface PostDashboardsLabelParams {\n  dashboardID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostDashboardsLabelResult =\n  | PostDashboardsLabelCreatedResult\n  | PostDashboardsLabelDefaultResult\n\ninterface PostDashboardsLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostDashboardsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postDashboardsLabel = (\n  params: PostDashboardsLabelParams,\n  options: RequestOptions = {}\n): Promise<PostDashboardsLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/dashboards/${params.dashboardID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostDashboardsLabelResult>\n\nexport interface DeleteDashboardsLabelParams {\n  dashboardID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteDashboardsLabelResult =\n  | DeleteDashboardsLabelNoContentResult\n  | DeleteDashboardsLabelNotFoundResult\n  | DeleteDashboardsLabelDefaultResult\n\ninterface DeleteDashboardsLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteDashboardsLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteDashboardsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteDashboardsLabel = (\n  params: DeleteDashboardsLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteDashboardsLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/dashboards/${params.dashboardID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteDashboardsLabelResult>\n\nexport interface GetDashboardsMembersParams {\n  dashboardID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDashboardsMembersResult =\n  | GetDashboardsMembersOKResult\n  | GetDashboardsMembersDefaultResult\n\ninterface GetDashboardsMembersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceMembers\n}\n\ninterface GetDashboardsMembersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDashboardsMembers = (\n  params: GetDashboardsMembersParams,\n  options: RequestOptions = {}\n): Promise<GetDashboardsMembersResult> =>\n  request(\n    'GET',\n    `/api/v2/dashboards/${params.dashboardID}/members`,\n    params,\n    options\n  ) as Promise<GetDashboardsMembersResult>\n\nexport interface PostDashboardsMemberParams {\n  dashboardID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostDashboardsMemberResult =\n  | PostDashboardsMemberCreatedResult\n  | PostDashboardsMemberDefaultResult\n\ninterface PostDashboardsMemberCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceMember\n}\n\ninterface PostDashboardsMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postDashboardsMember = (\n  params: PostDashboardsMemberParams,\n  options: RequestOptions = {}\n): Promise<PostDashboardsMemberResult> =>\n  request(\n    'POST',\n    `/api/v2/dashboards/${params.dashboardID}/members`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostDashboardsMemberResult>\n\nexport interface DeleteDashboardsMemberParams {\n  userID: string\n  dashboardID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteDashboardsMemberResult =\n  | DeleteDashboardsMemberNoContentResult\n  | DeleteDashboardsMemberDefaultResult\n\ninterface DeleteDashboardsMemberNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteDashboardsMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteDashboardsMember = (\n  params: DeleteDashboardsMemberParams,\n  options: RequestOptions = {}\n): Promise<DeleteDashboardsMemberResult> =>\n  request(\n    'DELETE',\n    `/api/v2/dashboards/${params.dashboardID}/members/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteDashboardsMemberResult>\n\nexport interface GetDashboardsOwnersParams {\n  dashboardID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDashboardsOwnersResult =\n  | GetDashboardsOwnersOKResult\n  | GetDashboardsOwnersDefaultResult\n\ninterface GetDashboardsOwnersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceOwners\n}\n\ninterface GetDashboardsOwnersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDashboardsOwners = (\n  params: GetDashboardsOwnersParams,\n  options: RequestOptions = {}\n): Promise<GetDashboardsOwnersResult> =>\n  request(\n    'GET',\n    `/api/v2/dashboards/${params.dashboardID}/owners`,\n    params,\n    options\n  ) as Promise<GetDashboardsOwnersResult>\n\nexport interface PostDashboardsOwnerParams {\n  dashboardID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostDashboardsOwnerResult =\n  | PostDashboardsOwnerCreatedResult\n  | PostDashboardsOwnerDefaultResult\n\ninterface PostDashboardsOwnerCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceOwner\n}\n\ninterface PostDashboardsOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postDashboardsOwner = (\n  params: PostDashboardsOwnerParams,\n  options: RequestOptions = {}\n): Promise<PostDashboardsOwnerResult> =>\n  request(\n    'POST',\n    `/api/v2/dashboards/${params.dashboardID}/owners`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostDashboardsOwnerResult>\n\nexport interface DeleteDashboardsOwnerParams {\n  userID: string\n  dashboardID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteDashboardsOwnerResult =\n  | DeleteDashboardsOwnerNoContentResult\n  | DeleteDashboardsOwnerDefaultResult\n\ninterface DeleteDashboardsOwnerNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteDashboardsOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteDashboardsOwner = (\n  params: DeleteDashboardsOwnerParams,\n  options: RequestOptions = {}\n): Promise<DeleteDashboardsOwnerResult> =>\n  request(\n    'DELETE',\n    `/api/v2/dashboards/${params.dashboardID}/owners/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteDashboardsOwnerResult>\n\nexport interface GetDashboardsLogsParams {\n  dashboardID: string\n\n  query?: {\n    offset?: number\n    limit?: number\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetDashboardsLogsResult =\n  | GetDashboardsLogsOKResult\n  | GetDashboardsLogsDefaultResult\n\ninterface GetDashboardsLogsOKResult {\n  status: 200\n  headers: Headers\n  data: OperationLogs\n}\n\ninterface GetDashboardsLogsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getDashboardsLogs = (\n  params: GetDashboardsLogsParams,\n  options: RequestOptions = {}\n): Promise<GetDashboardsLogsResult> =>\n  request(\n    'GET',\n    `/api/v2/dashboards/${params.dashboardID}/logs`,\n    params,\n    options\n  ) as Promise<GetDashboardsLogsResult>\n\nexport interface PostQueryAstParams {\n  data?: LanguageRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n    'Content-Type'?: string\n  }\n}\n\ntype PostQueryAstResult = PostQueryAstOKResult | PostQueryAstDefaultResult\n\ninterface PostQueryAstOKResult {\n  status: 200\n  headers: Headers\n  data: ASTResponse\n}\n\ninterface PostQueryAstDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postQueryAst = (\n  params: PostQueryAstParams,\n  options: RequestOptions = {}\n): Promise<PostQueryAstResult> =>\n  request(\n    'POST',\n    '/api/v2/query/ast',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostQueryAstResult>\n\nexport interface GetQuerySuggestionsParams {\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetQuerySuggestionsResult =\n  | GetQuerySuggestionsOKResult\n  | GetQuerySuggestionsDefaultResult\n\ninterface GetQuerySuggestionsOKResult {\n  status: 200\n  headers: Headers\n  data: FluxSuggestions\n}\n\ninterface GetQuerySuggestionsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getQuerySuggestions = (\n  params: GetQuerySuggestionsParams,\n  options: RequestOptions = {}\n): Promise<GetQuerySuggestionsResult> =>\n  request('GET', '/api/v2/query/suggestions', params, options) as Promise<\n    GetQuerySuggestionsResult\n  >\n\nexport interface GetQuerySuggestionParams {\n  name: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetQuerySuggestionResult =\n  | GetQuerySuggestionOKResult\n  | GetQuerySuggestionDefaultResult\n\ninterface GetQuerySuggestionOKResult {\n  status: 200\n  headers: Headers\n  data: FluxSuggestion\n}\n\ninterface GetQuerySuggestionDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getQuerySuggestion = (\n  params: GetQuerySuggestionParams,\n  options: RequestOptions = {}\n): Promise<GetQuerySuggestionResult> =>\n  request(\n    'GET',\n    `/api/v2/query/suggestions/${params.name}`,\n    params,\n    options\n  ) as Promise<GetQuerySuggestionResult>\n\nexport interface GetAuthorizationsParams {\n  query?: {\n    userID?: string\n    user?: string\n    orgID?: string\n    org?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetAuthorizationsResult =\n  | GetAuthorizationsOKResult\n  | GetAuthorizationsDefaultResult\n\ninterface GetAuthorizationsOKResult {\n  status: 200\n  headers: Headers\n  data: Authorizations\n}\n\ninterface GetAuthorizationsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getAuthorizations = (\n  params: GetAuthorizationsParams,\n  options: RequestOptions = {}\n): Promise<GetAuthorizationsResult> =>\n  request('GET', '/api/v2/authorizations', params, options) as Promise<\n    GetAuthorizationsResult\n  >\n\nexport interface PostAuthorizationParams {\n  data: Authorization\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostAuthorizationResult =\n  | PostAuthorizationCreatedResult\n  | PostAuthorizationBadRequestResult\n  | PostAuthorizationDefaultResult\n\ninterface PostAuthorizationCreatedResult {\n  status: 201\n  headers: Headers\n  data: Authorization\n}\n\ninterface PostAuthorizationBadRequestResult {\n  status: 400\n  headers: Headers\n  data: Error\n}\n\ninterface PostAuthorizationDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postAuthorization = (\n  params: PostAuthorizationParams,\n  options: RequestOptions = {}\n): Promise<PostAuthorizationResult> =>\n  request(\n    'POST',\n    '/api/v2/authorizations',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostAuthorizationResult>\n\nexport interface GetAuthorizationParams {\n  authID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetAuthorizationResult =\n  | GetAuthorizationOKResult\n  | GetAuthorizationDefaultResult\n\ninterface GetAuthorizationOKResult {\n  status: 200\n  headers: Headers\n  data: Authorization\n}\n\ninterface GetAuthorizationDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getAuthorization = (\n  params: GetAuthorizationParams,\n  options: RequestOptions = {}\n): Promise<GetAuthorizationResult> =>\n  request(\n    'GET',\n    `/api/v2/authorizations/${params.authID}`,\n    params,\n    options\n  ) as Promise<GetAuthorizationResult>\n\nexport interface PatchAuthorizationParams {\n  authID: string\n\n  data: AuthorizationUpdateRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchAuthorizationResult =\n  | PatchAuthorizationOKResult\n  | PatchAuthorizationDefaultResult\n\ninterface PatchAuthorizationOKResult {\n  status: 200\n  headers: Headers\n  data: Authorization\n}\n\ninterface PatchAuthorizationDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchAuthorization = (\n  params: PatchAuthorizationParams,\n  options: RequestOptions = {}\n): Promise<PatchAuthorizationResult> =>\n  request(\n    'PATCH',\n    `/api/v2/authorizations/${params.authID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchAuthorizationResult>\n\nexport interface DeleteAuthorizationParams {\n  authID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteAuthorizationResult =\n  | DeleteAuthorizationNoContentResult\n  | DeleteAuthorizationDefaultResult\n\ninterface DeleteAuthorizationNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteAuthorizationDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteAuthorization = (\n  params: DeleteAuthorizationParams,\n  options: RequestOptions = {}\n): Promise<DeleteAuthorizationResult> =>\n  request(\n    'DELETE',\n    `/api/v2/authorizations/${params.authID}`,\n    params,\n    options\n  ) as Promise<DeleteAuthorizationResult>\n\nexport interface PostQueryAnalyzeParams {\n  data?: Query\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n    'Content-Type'?: string\n  }\n}\n\ntype PostQueryAnalyzeResult =\n  | PostQueryAnalyzeOKResult\n  | PostQueryAnalyzeDefaultResult\n\ninterface PostQueryAnalyzeOKResult {\n  status: 200\n  headers: Headers\n  data: AnalyzeQueryResponse\n}\n\ninterface PostQueryAnalyzeDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postQueryAnalyze = (\n  params: PostQueryAnalyzeParams,\n  options: RequestOptions = {}\n): Promise<PostQueryAnalyzeResult> =>\n  request(\n    'POST',\n    '/api/v2/query/analyze',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostQueryAnalyzeResult>\n\nexport interface PostQueryParams {\n  data?: Query | InfluxQLQuery\n\n  query?: {\n    org?: string\n    orgID?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n    'Accept-Encoding'?: string\n    'Content-Type'?: string\n  }\n}\n\ntype PostQueryResult =\n  | PostQueryOKResult\n  | PostQueryTooManyRequestsResult\n  | PostQueryDefaultResult\n\ninterface PostQueryOKResult {\n  status: 200\n  headers: Headers\n  data: string\n}\n\ninterface PostQueryTooManyRequestsResult {\n  status: 429\n  headers: Headers\n  data: any\n}\n\ninterface PostQueryDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postQuery = (\n  params: PostQueryParams,\n  options: RequestOptions = {}\n): Promise<PostQueryResult> =>\n  request(\n    'POST',\n    '/api/v2/query',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostQueryResult>\n\nexport interface GetBucketsParams {\n  query?: {\n    offset?: number\n    limit?: number\n    org?: string\n    orgID?: string\n    name?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetBucketsResult = GetBucketsOKResult | GetBucketsDefaultResult\n\ninterface GetBucketsOKResult {\n  status: 200\n  headers: Headers\n  data: Buckets\n}\n\ninterface GetBucketsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getBuckets = (\n  params: GetBucketsParams,\n  options: RequestOptions = {}\n): Promise<GetBucketsResult> =>\n  request('GET', '/api/v2/buckets', params, options) as Promise<\n    GetBucketsResult\n  >\n\nexport interface PostBucketParams {\n  data: PostBucketRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostBucketResult =\n  | PostBucketCreatedResult\n  | PostBucketUnprocessableEntityResult\n  | PostBucketDefaultResult\n\ninterface PostBucketCreatedResult {\n  status: 201\n  headers: Headers\n  data: Bucket\n}\n\ninterface PostBucketUnprocessableEntityResult {\n  status: 422\n  headers: Headers\n  data: Error\n}\n\ninterface PostBucketDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postBucket = (\n  params: PostBucketParams,\n  options: RequestOptions = {}\n): Promise<PostBucketResult> =>\n  request(\n    'POST',\n    '/api/v2/buckets',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostBucketResult>\n\nexport interface GetBucketParams {\n  bucketID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetBucketResult = GetBucketOKResult | GetBucketDefaultResult\n\ninterface GetBucketOKResult {\n  status: 200\n  headers: Headers\n  data: Bucket\n}\n\ninterface GetBucketDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getBucket = (\n  params: GetBucketParams,\n  options: RequestOptions = {}\n): Promise<GetBucketResult> =>\n  request(\n    'GET',\n    `/api/v2/buckets/${params.bucketID}`,\n    params,\n    options\n  ) as Promise<GetBucketResult>\n\nexport interface PatchBucketParams {\n  bucketID: string\n\n  data: Bucket\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchBucketResult = PatchBucketOKResult | PatchBucketDefaultResult\n\ninterface PatchBucketOKResult {\n  status: 200\n  headers: Headers\n  data: Bucket\n}\n\ninterface PatchBucketDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchBucket = (\n  params: PatchBucketParams,\n  options: RequestOptions = {}\n): Promise<PatchBucketResult> =>\n  request(\n    'PATCH',\n    `/api/v2/buckets/${params.bucketID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchBucketResult>\n\nexport interface DeleteBucketParams {\n  bucketID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteBucketResult =\n  | DeleteBucketNoContentResult\n  | DeleteBucketNotFoundResult\n  | DeleteBucketDefaultResult\n\ninterface DeleteBucketNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteBucketNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteBucketDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteBucket = (\n  params: DeleteBucketParams,\n  options: RequestOptions = {}\n): Promise<DeleteBucketResult> =>\n  request(\n    'DELETE',\n    `/api/v2/buckets/${params.bucketID}`,\n    params,\n    options\n  ) as Promise<DeleteBucketResult>\n\nexport interface GetBucketsLabelsParams {\n  bucketID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetBucketsLabelsResult =\n  | GetBucketsLabelsOKResult\n  | GetBucketsLabelsDefaultResult\n\ninterface GetBucketsLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetBucketsLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getBucketsLabels = (\n  params: GetBucketsLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetBucketsLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/buckets/${params.bucketID}/labels`,\n    params,\n    options\n  ) as Promise<GetBucketsLabelsResult>\n\nexport interface PostBucketsLabelParams {\n  bucketID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostBucketsLabelResult =\n  | PostBucketsLabelCreatedResult\n  | PostBucketsLabelDefaultResult\n\ninterface PostBucketsLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostBucketsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postBucketsLabel = (\n  params: PostBucketsLabelParams,\n  options: RequestOptions = {}\n): Promise<PostBucketsLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/buckets/${params.bucketID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostBucketsLabelResult>\n\nexport interface DeleteBucketsLabelParams {\n  bucketID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteBucketsLabelResult =\n  | DeleteBucketsLabelNoContentResult\n  | DeleteBucketsLabelNotFoundResult\n  | DeleteBucketsLabelDefaultResult\n\ninterface DeleteBucketsLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteBucketsLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteBucketsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteBucketsLabel = (\n  params: DeleteBucketsLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteBucketsLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/buckets/${params.bucketID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteBucketsLabelResult>\n\nexport interface GetBucketsMembersParams {\n  bucketID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetBucketsMembersResult =\n  | GetBucketsMembersOKResult\n  | GetBucketsMembersDefaultResult\n\ninterface GetBucketsMembersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceMembers\n}\n\ninterface GetBucketsMembersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getBucketsMembers = (\n  params: GetBucketsMembersParams,\n  options: RequestOptions = {}\n): Promise<GetBucketsMembersResult> =>\n  request(\n    'GET',\n    `/api/v2/buckets/${params.bucketID}/members`,\n    params,\n    options\n  ) as Promise<GetBucketsMembersResult>\n\nexport interface PostBucketsMemberParams {\n  bucketID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostBucketsMemberResult =\n  | PostBucketsMemberCreatedResult\n  | PostBucketsMemberDefaultResult\n\ninterface PostBucketsMemberCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceMember\n}\n\ninterface PostBucketsMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postBucketsMember = (\n  params: PostBucketsMemberParams,\n  options: RequestOptions = {}\n): Promise<PostBucketsMemberResult> =>\n  request(\n    'POST',\n    `/api/v2/buckets/${params.bucketID}/members`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostBucketsMemberResult>\n\nexport interface DeleteBucketsMemberParams {\n  userID: string\n  bucketID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteBucketsMemberResult =\n  | DeleteBucketsMemberNoContentResult\n  | DeleteBucketsMemberDefaultResult\n\ninterface DeleteBucketsMemberNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteBucketsMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteBucketsMember = (\n  params: DeleteBucketsMemberParams,\n  options: RequestOptions = {}\n): Promise<DeleteBucketsMemberResult> =>\n  request(\n    'DELETE',\n    `/api/v2/buckets/${params.bucketID}/members/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteBucketsMemberResult>\n\nexport interface GetBucketsOwnersParams {\n  bucketID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetBucketsOwnersResult =\n  | GetBucketsOwnersOKResult\n  | GetBucketsOwnersDefaultResult\n\ninterface GetBucketsOwnersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceOwners\n}\n\ninterface GetBucketsOwnersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getBucketsOwners = (\n  params: GetBucketsOwnersParams,\n  options: RequestOptions = {}\n): Promise<GetBucketsOwnersResult> =>\n  request(\n    'GET',\n    `/api/v2/buckets/${params.bucketID}/owners`,\n    params,\n    options\n  ) as Promise<GetBucketsOwnersResult>\n\nexport interface PostBucketsOwnerParams {\n  bucketID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostBucketsOwnerResult =\n  | PostBucketsOwnerCreatedResult\n  | PostBucketsOwnerDefaultResult\n\ninterface PostBucketsOwnerCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceOwner\n}\n\ninterface PostBucketsOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postBucketsOwner = (\n  params: PostBucketsOwnerParams,\n  options: RequestOptions = {}\n): Promise<PostBucketsOwnerResult> =>\n  request(\n    'POST',\n    `/api/v2/buckets/${params.bucketID}/owners`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostBucketsOwnerResult>\n\nexport interface DeleteBucketsOwnerParams {\n  userID: string\n  bucketID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteBucketsOwnerResult =\n  | DeleteBucketsOwnerNoContentResult\n  | DeleteBucketsOwnerDefaultResult\n\ninterface DeleteBucketsOwnerNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteBucketsOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteBucketsOwner = (\n  params: DeleteBucketsOwnerParams,\n  options: RequestOptions = {}\n): Promise<DeleteBucketsOwnerResult> =>\n  request(\n    'DELETE',\n    `/api/v2/buckets/${params.bucketID}/owners/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteBucketsOwnerResult>\n\nexport interface GetBucketsLogsParams {\n  bucketID: string\n\n  query?: {\n    offset?: number\n    limit?: number\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetBucketsLogsResult = GetBucketsLogsOKResult | GetBucketsLogsDefaultResult\n\ninterface GetBucketsLogsOKResult {\n  status: 200\n  headers: Headers\n  data: OperationLogs\n}\n\ninterface GetBucketsLogsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getBucketsLogs = (\n  params: GetBucketsLogsParams,\n  options: RequestOptions = {}\n): Promise<GetBucketsLogsResult> =>\n  request(\n    'GET',\n    `/api/v2/buckets/${params.bucketID}/logs`,\n    params,\n    options\n  ) as Promise<GetBucketsLogsResult>\n\nexport interface GetOrgsParams {\n  query?: {\n    org?: string\n    orgID?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetOrgsResult = GetOrgsOKResult | GetOrgsDefaultResult\n\ninterface GetOrgsOKResult {\n  status: 200\n  headers: Headers\n  data: Organizations\n}\n\ninterface GetOrgsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getOrgs = (\n  params: GetOrgsParams,\n  options: RequestOptions = {}\n): Promise<GetOrgsResult> =>\n  request('GET', '/api/v2/orgs', params, options) as Promise<GetOrgsResult>\n\nexport interface PostOrgParams {\n  data: Organization\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostOrgResult = PostOrgCreatedResult | PostOrgDefaultResult\n\ninterface PostOrgCreatedResult {\n  status: 201\n  headers: Headers\n  data: Organization\n}\n\ninterface PostOrgDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postOrg = (\n  params: PostOrgParams,\n  options: RequestOptions = {}\n): Promise<PostOrgResult> =>\n  request(\n    'POST',\n    '/api/v2/orgs',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostOrgResult>\n\nexport interface GetOrgParams {\n  orgID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetOrgResult = GetOrgOKResult | GetOrgDefaultResult\n\ninterface GetOrgOKResult {\n  status: 200\n  headers: Headers\n  data: Organization\n}\n\ninterface GetOrgDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getOrg = (\n  params: GetOrgParams,\n  options: RequestOptions = {}\n): Promise<GetOrgResult> =>\n  request('GET', `/api/v2/orgs/${params.orgID}`, params, options) as Promise<\n    GetOrgResult\n  >\n\nexport interface PatchOrgParams {\n  orgID: string\n\n  data: Organization\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchOrgResult = PatchOrgOKResult | PatchOrgDefaultResult\n\ninterface PatchOrgOKResult {\n  status: 200\n  headers: Headers\n  data: Organization\n}\n\ninterface PatchOrgDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchOrg = (\n  params: PatchOrgParams,\n  options: RequestOptions = {}\n): Promise<PatchOrgResult> =>\n  request(\n    'PATCH',\n    `/api/v2/orgs/${params.orgID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchOrgResult>\n\nexport interface DeleteOrgParams {\n  orgID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteOrgResult =\n  | DeleteOrgNoContentResult\n  | DeleteOrgNotFoundResult\n  | DeleteOrgDefaultResult\n\ninterface DeleteOrgNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteOrgNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteOrgDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteOrg = (\n  params: DeleteOrgParams,\n  options: RequestOptions = {}\n): Promise<DeleteOrgResult> =>\n  request('DELETE', `/api/v2/orgs/${params.orgID}`, params, options) as Promise<\n    DeleteOrgResult\n  >\n\nexport interface GetOrgsLabelsParams {\n  orgID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetOrgsLabelsResult = GetOrgsLabelsOKResult | GetOrgsLabelsDefaultResult\n\ninterface GetOrgsLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetOrgsLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getOrgsLabels = (\n  params: GetOrgsLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetOrgsLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/orgs/${params.orgID}/labels`,\n    params,\n    options\n  ) as Promise<GetOrgsLabelsResult>\n\nexport interface PostOrgsLabelParams {\n  orgID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostOrgsLabelResult =\n  | PostOrgsLabelCreatedResult\n  | PostOrgsLabelDefaultResult\n\ninterface PostOrgsLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostOrgsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postOrgsLabel = (\n  params: PostOrgsLabelParams,\n  options: RequestOptions = {}\n): Promise<PostOrgsLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/orgs/${params.orgID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostOrgsLabelResult>\n\nexport interface DeleteOrgsLabelParams {\n  orgID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteOrgsLabelResult =\n  | DeleteOrgsLabelNoContentResult\n  | DeleteOrgsLabelNotFoundResult\n  | DeleteOrgsLabelDefaultResult\n\ninterface DeleteOrgsLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteOrgsLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteOrgsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteOrgsLabel = (\n  params: DeleteOrgsLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteOrgsLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/orgs/${params.orgID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteOrgsLabelResult>\n\nexport interface GetOrgsSecretsParams {\n  orgID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetOrgsSecretsResult = GetOrgsSecretsOKResult | GetOrgsSecretsDefaultResult\n\ninterface GetOrgsSecretsOKResult {\n  status: 200\n  headers: Headers\n  data: SecretKeysResponse\n}\n\ninterface GetOrgsSecretsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getOrgsSecrets = (\n  params: GetOrgsSecretsParams,\n  options: RequestOptions = {}\n): Promise<GetOrgsSecretsResult> =>\n  request(\n    'GET',\n    `/api/v2/orgs/${params.orgID}/secrets`,\n    params,\n    options\n  ) as Promise<GetOrgsSecretsResult>\n\nexport interface PatchOrgsSecretsParams {\n  orgID: string\n\n  data: Secrets\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchOrgsSecretsResult =\n  | PatchOrgsSecretsNoContentResult\n  | PatchOrgsSecretsDefaultResult\n\ninterface PatchOrgsSecretsNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface PatchOrgsSecretsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchOrgsSecrets = (\n  params: PatchOrgsSecretsParams,\n  options: RequestOptions = {}\n): Promise<PatchOrgsSecretsResult> =>\n  request(\n    'PATCH',\n    `/api/v2/orgs/${params.orgID}/secrets`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchOrgsSecretsResult>\n\nexport interface PostOrgsSecretsDeleteParams {\n  orgID: string\n\n  data: SecretKeys\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostOrgsSecretsDeleteResult =\n  | PostOrgsSecretsDeleteNoContentResult\n  | PostOrgsSecretsDeleteDefaultResult\n\ninterface PostOrgsSecretsDeleteNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface PostOrgsSecretsDeleteDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postOrgsSecretsDelete = (\n  params: PostOrgsSecretsDeleteParams,\n  options: RequestOptions = {}\n): Promise<PostOrgsSecretsDeleteResult> =>\n  request(\n    'POST',\n    `/api/v2/orgs/${params.orgID}/secrets/delete`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostOrgsSecretsDeleteResult>\n\nexport interface GetOrgsMembersParams {\n  orgID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetOrgsMembersResult =\n  | GetOrgsMembersOKResult\n  | GetOrgsMembersNotFoundResult\n  | GetOrgsMembersDefaultResult\n\ninterface GetOrgsMembersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceMembers\n}\n\ninterface GetOrgsMembersNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface GetOrgsMembersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getOrgsMembers = (\n  params: GetOrgsMembersParams,\n  options: RequestOptions = {}\n): Promise<GetOrgsMembersResult> =>\n  request(\n    'GET',\n    `/api/v2/orgs/${params.orgID}/members`,\n    params,\n    options\n  ) as Promise<GetOrgsMembersResult>\n\nexport interface PostOrgsMemberParams {\n  orgID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostOrgsMemberResult =\n  | PostOrgsMemberCreatedResult\n  | PostOrgsMemberDefaultResult\n\ninterface PostOrgsMemberCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceMember\n}\n\ninterface PostOrgsMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postOrgsMember = (\n  params: PostOrgsMemberParams,\n  options: RequestOptions = {}\n): Promise<PostOrgsMemberResult> =>\n  request(\n    'POST',\n    `/api/v2/orgs/${params.orgID}/members`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostOrgsMemberResult>\n\nexport interface DeleteOrgsMemberParams {\n  userID: string\n  orgID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteOrgsMemberResult =\n  | DeleteOrgsMemberNoContentResult\n  | DeleteOrgsMemberDefaultResult\n\ninterface DeleteOrgsMemberNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteOrgsMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteOrgsMember = (\n  params: DeleteOrgsMemberParams,\n  options: RequestOptions = {}\n): Promise<DeleteOrgsMemberResult> =>\n  request(\n    'DELETE',\n    `/api/v2/orgs/${params.orgID}/members/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteOrgsMemberResult>\n\nexport interface GetOrgsOwnersParams {\n  orgID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetOrgsOwnersResult =\n  | GetOrgsOwnersOKResult\n  | GetOrgsOwnersNotFoundResult\n  | GetOrgsOwnersDefaultResult\n\ninterface GetOrgsOwnersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceOwners\n}\n\ninterface GetOrgsOwnersNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface GetOrgsOwnersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getOrgsOwners = (\n  params: GetOrgsOwnersParams,\n  options: RequestOptions = {}\n): Promise<GetOrgsOwnersResult> =>\n  request(\n    'GET',\n    `/api/v2/orgs/${params.orgID}/owners`,\n    params,\n    options\n  ) as Promise<GetOrgsOwnersResult>\n\nexport interface PostOrgsOwnerParams {\n  orgID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostOrgsOwnerResult =\n  | PostOrgsOwnerCreatedResult\n  | PostOrgsOwnerDefaultResult\n\ninterface PostOrgsOwnerCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceOwner\n}\n\ninterface PostOrgsOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postOrgsOwner = (\n  params: PostOrgsOwnerParams,\n  options: RequestOptions = {}\n): Promise<PostOrgsOwnerResult> =>\n  request(\n    'POST',\n    `/api/v2/orgs/${params.orgID}/owners`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostOrgsOwnerResult>\n\nexport interface DeleteOrgsOwnerParams {\n  userID: string\n  orgID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteOrgsOwnerResult =\n  | DeleteOrgsOwnerNoContentResult\n  | DeleteOrgsOwnerDefaultResult\n\ninterface DeleteOrgsOwnerNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteOrgsOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteOrgsOwner = (\n  params: DeleteOrgsOwnerParams,\n  options: RequestOptions = {}\n): Promise<DeleteOrgsOwnerResult> =>\n  request(\n    'DELETE',\n    `/api/v2/orgs/${params.orgID}/owners/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteOrgsOwnerResult>\n\nexport interface GetOrgsLogsParams {\n  orgID: string\n\n  query?: {\n    offset?: number\n    limit?: number\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetOrgsLogsResult = GetOrgsLogsOKResult | GetOrgsLogsDefaultResult\n\ninterface GetOrgsLogsOKResult {\n  status: 200\n  headers: Headers\n  data: OperationLogs\n}\n\ninterface GetOrgsLogsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getOrgsLogs = (\n  params: GetOrgsLogsParams,\n  options: RequestOptions = {}\n): Promise<GetOrgsLogsResult> =>\n  request(\n    'GET',\n    `/api/v2/orgs/${params.orgID}/logs`,\n    params,\n    options\n  ) as Promise<GetOrgsLogsResult>\n\nexport interface PostPackageParams {\n  data?: PkgCreate\n}\n\ntype PostPackageResult = PostPackageOKResult | PostPackageDefaultResult\n\ninterface PostPackageOKResult {\n  status: 200\n  headers: Headers\n  data: Pkg\n}\n\ninterface PostPackageDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postPackage = (\n  params: PostPackageParams,\n  options: RequestOptions = {}\n): Promise<PostPackageResult> =>\n  request(\n    'POST',\n    '/api/v2/packages',\n    {...params, headers: {'Content-Type': 'application/json'}},\n    options\n  ) as Promise<PostPackageResult>\n\nexport interface PostPackagesApplyParams {\n  data: PkgApply\n}\n\ntype PostPackagesApplyResult =\n  | PostPackagesApplyOKResult\n  | PostPackagesApplyCreatedResult\n  | PostPackagesApplyDefaultResult\n\ninterface PostPackagesApplyOKResult {\n  status: 200\n  headers: Headers\n  data: PkgSummary\n}\n\ninterface PostPackagesApplyCreatedResult {\n  status: 201\n  headers: Headers\n  data: PkgSummary\n}\n\ninterface PostPackagesApplyDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postPackagesApply = (\n  params: PostPackagesApplyParams,\n  options: RequestOptions = {}\n): Promise<PostPackagesApplyResult> =>\n  request(\n    'POST',\n    '/api/v2/packages/apply',\n    {...params, headers: {'Content-Type': 'application/json'}},\n    options\n  ) as Promise<PostPackagesApplyResult>\n\nexport interface GetTasksParams {\n  query?: {\n    name?: string\n    after?: string\n    user?: string\n    org?: string\n    orgID?: string\n    status?: string\n    limit?: number\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTasksResult = GetTasksOKResult | GetTasksDefaultResult\n\ninterface GetTasksOKResult {\n  status: 200\n  headers: Headers\n  data: Tasks\n}\n\ninterface GetTasksDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTasks = (\n  params: GetTasksParams,\n  options: RequestOptions = {}\n): Promise<GetTasksResult> =>\n  request('GET', '/api/v2/tasks', params, options) as Promise<GetTasksResult>\n\nexport interface PostTaskParams {\n  data: TaskCreateRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTaskResult = PostTaskCreatedResult | PostTaskDefaultResult\n\ninterface PostTaskCreatedResult {\n  status: 201\n  headers: Headers\n  data: Task\n}\n\ninterface PostTaskDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTask = (\n  params: PostTaskParams,\n  options: RequestOptions = {}\n): Promise<PostTaskResult> =>\n  request(\n    'POST',\n    '/api/v2/tasks',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostTaskResult>\n\nexport interface GetTaskParams {\n  taskID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTaskResult = GetTaskOKResult | GetTaskDefaultResult\n\ninterface GetTaskOKResult {\n  status: 200\n  headers: Headers\n  data: Task\n}\n\ninterface GetTaskDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTask = (\n  params: GetTaskParams,\n  options: RequestOptions = {}\n): Promise<GetTaskResult> =>\n  request('GET', `/api/v2/tasks/${params.taskID}`, params, options) as Promise<\n    GetTaskResult\n  >\n\nexport interface PatchTaskParams {\n  taskID: string\n\n  data: TaskUpdateRequest\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchTaskResult = PatchTaskOKResult | PatchTaskDefaultResult\n\ninterface PatchTaskOKResult {\n  status: 200\n  headers: Headers\n  data: Task\n}\n\ninterface PatchTaskDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchTask = (\n  params: PatchTaskParams,\n  options: RequestOptions = {}\n): Promise<PatchTaskResult> =>\n  request(\n    'PATCH',\n    `/api/v2/tasks/${params.taskID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchTaskResult>\n\nexport interface DeleteTaskParams {\n  taskID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteTaskResult = DeleteTaskNoContentResult | DeleteTaskDefaultResult\n\ninterface DeleteTaskNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteTaskDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteTask = (\n  params: DeleteTaskParams,\n  options: RequestOptions = {}\n): Promise<DeleteTaskResult> =>\n  request(\n    'DELETE',\n    `/api/v2/tasks/${params.taskID}`,\n    params,\n    options\n  ) as Promise<DeleteTaskResult>\n\nexport interface GetTasksRunsParams {\n  taskID: string\n\n  query?: {\n    after?: string\n    limit?: number\n    afterTime?: string\n    beforeTime?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTasksRunsResult = GetTasksRunsOKResult | GetTasksRunsDefaultResult\n\ninterface GetTasksRunsOKResult {\n  status: 200\n  headers: Headers\n  data: Runs\n}\n\ninterface GetTasksRunsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTasksRuns = (\n  params: GetTasksRunsParams,\n  options: RequestOptions = {}\n): Promise<GetTasksRunsResult> =>\n  request(\n    'GET',\n    `/api/v2/tasks/${params.taskID}/runs`,\n    params,\n    options\n  ) as Promise<GetTasksRunsResult>\n\nexport interface PostTasksRunParams {\n  taskID: string\n\n  data?: RunManually\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTasksRunResult = PostTasksRunCreatedResult | PostTasksRunDefaultResult\n\ninterface PostTasksRunCreatedResult {\n  status: 201\n  headers: Headers\n  data: Run\n}\n\ninterface PostTasksRunDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTasksRun = (\n  params: PostTasksRunParams,\n  options: RequestOptions = {}\n): Promise<PostTasksRunResult> =>\n  request(\n    'POST',\n    `/api/v2/tasks/${params.taskID}/runs`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostTasksRunResult>\n\nexport interface GetTasksRunParams {\n  taskID: string\n  runID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTasksRunResult = GetTasksRunOKResult | GetTasksRunDefaultResult\n\ninterface GetTasksRunOKResult {\n  status: 200\n  headers: Headers\n  data: Run\n}\n\ninterface GetTasksRunDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTasksRun = (\n  params: GetTasksRunParams,\n  options: RequestOptions = {}\n): Promise<GetTasksRunResult> =>\n  request(\n    'GET',\n    `/api/v2/tasks/${params.taskID}/runs/${params.runID}`,\n    params,\n    options\n  ) as Promise<GetTasksRunResult>\n\nexport interface DeleteTasksRunParams {\n  taskID: string\n  runID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteTasksRunResult =\n  | DeleteTasksRunNoContentResult\n  | DeleteTasksRunDefaultResult\n\ninterface DeleteTasksRunNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteTasksRunDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteTasksRun = (\n  params: DeleteTasksRunParams,\n  options: RequestOptions = {}\n): Promise<DeleteTasksRunResult> =>\n  request(\n    'DELETE',\n    `/api/v2/tasks/${params.taskID}/runs/${params.runID}`,\n    params,\n    options\n  ) as Promise<DeleteTasksRunResult>\n\nexport interface PostTasksRunsRetryParams {\n  taskID: string\n  runID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTasksRunsRetryResult =\n  | PostTasksRunsRetryOKResult\n  | PostTasksRunsRetryDefaultResult\n\ninterface PostTasksRunsRetryOKResult {\n  status: 200\n  headers: Headers\n  data: Run\n}\n\ninterface PostTasksRunsRetryDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTasksRunsRetry = (\n  params: PostTasksRunsRetryParams,\n  options: RequestOptions = {}\n): Promise<PostTasksRunsRetryResult> =>\n  request(\n    'POST',\n    `/api/v2/tasks/${params.taskID}/runs/${params.runID}/retry`,\n    params,\n    options\n  ) as Promise<PostTasksRunsRetryResult>\n\nexport interface GetTasksLogsParams {\n  taskID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTasksLogsResult = GetTasksLogsOKResult | GetTasksLogsDefaultResult\n\ninterface GetTasksLogsOKResult {\n  status: 200\n  headers: Headers\n  data: Logs\n}\n\ninterface GetTasksLogsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTasksLogs = (\n  params: GetTasksLogsParams,\n  options: RequestOptions = {}\n): Promise<GetTasksLogsResult> =>\n  request(\n    'GET',\n    `/api/v2/tasks/${params.taskID}/logs`,\n    params,\n    options\n  ) as Promise<GetTasksLogsResult>\n\nexport interface GetTasksRunsLogsParams {\n  taskID: string\n  runID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTasksRunsLogsResult =\n  | GetTasksRunsLogsOKResult\n  | GetTasksRunsLogsDefaultResult\n\ninterface GetTasksRunsLogsOKResult {\n  status: 200\n  headers: Headers\n  data: Logs\n}\n\ninterface GetTasksRunsLogsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTasksRunsLogs = (\n  params: GetTasksRunsLogsParams,\n  options: RequestOptions = {}\n): Promise<GetTasksRunsLogsResult> =>\n  request(\n    'GET',\n    `/api/v2/tasks/${params.taskID}/runs/${params.runID}/logs`,\n    params,\n    options\n  ) as Promise<GetTasksRunsLogsResult>\n\nexport interface GetTasksLabelsParams {\n  taskID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTasksLabelsResult = GetTasksLabelsOKResult | GetTasksLabelsDefaultResult\n\ninterface GetTasksLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetTasksLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTasksLabels = (\n  params: GetTasksLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetTasksLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/tasks/${params.taskID}/labels`,\n    params,\n    options\n  ) as Promise<GetTasksLabelsResult>\n\nexport interface PostTasksLabelParams {\n  taskID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTasksLabelResult =\n  | PostTasksLabelCreatedResult\n  | PostTasksLabelDefaultResult\n\ninterface PostTasksLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostTasksLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTasksLabel = (\n  params: PostTasksLabelParams,\n  options: RequestOptions = {}\n): Promise<PostTasksLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/tasks/${params.taskID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostTasksLabelResult>\n\nexport interface DeleteTasksLabelParams {\n  taskID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteTasksLabelResult =\n  | DeleteTasksLabelNoContentResult\n  | DeleteTasksLabelNotFoundResult\n  | DeleteTasksLabelDefaultResult\n\ninterface DeleteTasksLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteTasksLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteTasksLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteTasksLabel = (\n  params: DeleteTasksLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteTasksLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/tasks/${params.taskID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteTasksLabelResult>\n\nexport interface GetMeParams {\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetMeResult = GetMeOKResult | GetMeDefaultResult\n\ninterface GetMeOKResult {\n  status: 200\n  headers: Headers\n  data: User\n}\n\ninterface GetMeDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getMe = (\n  params: GetMeParams,\n  options: RequestOptions = {}\n): Promise<GetMeResult> =>\n  request('GET', '/api/v2/me', params, options) as Promise<GetMeResult>\n\nexport interface PutMePasswordParams {\n  data: PasswordResetBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n\n  auth: {\n    username: string\n    password: string\n  }\n}\n\ntype PutMePasswordResult =\n  | PutMePasswordNoContentResult\n  | PutMePasswordDefaultResult\n\ninterface PutMePasswordNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface PutMePasswordDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const putMePassword = (\n  params: PutMePasswordParams,\n  options: RequestOptions = {}\n): Promise<PutMePasswordResult> =>\n  request(\n    'PUT',\n    '/api/v2/me/password',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PutMePasswordResult>\n\nexport interface GetTasksMembersParams {\n  taskID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTasksMembersResult =\n  | GetTasksMembersOKResult\n  | GetTasksMembersDefaultResult\n\ninterface GetTasksMembersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceMembers\n}\n\ninterface GetTasksMembersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTasksMembers = (\n  params: GetTasksMembersParams,\n  options: RequestOptions = {}\n): Promise<GetTasksMembersResult> =>\n  request(\n    'GET',\n    `/api/v2/tasks/${params.taskID}/members`,\n    params,\n    options\n  ) as Promise<GetTasksMembersResult>\n\nexport interface PostTasksMemberParams {\n  taskID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTasksMemberResult =\n  | PostTasksMemberCreatedResult\n  | PostTasksMemberDefaultResult\n\ninterface PostTasksMemberCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceMember\n}\n\ninterface PostTasksMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTasksMember = (\n  params: PostTasksMemberParams,\n  options: RequestOptions = {}\n): Promise<PostTasksMemberResult> =>\n  request(\n    'POST',\n    `/api/v2/tasks/${params.taskID}/members`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostTasksMemberResult>\n\nexport interface DeleteTasksMemberParams {\n  userID: string\n  taskID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteTasksMemberResult =\n  | DeleteTasksMemberNoContentResult\n  | DeleteTasksMemberDefaultResult\n\ninterface DeleteTasksMemberNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteTasksMemberDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteTasksMember = (\n  params: DeleteTasksMemberParams,\n  options: RequestOptions = {}\n): Promise<DeleteTasksMemberResult> =>\n  request(\n    'DELETE',\n    `/api/v2/tasks/${params.taskID}/members/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteTasksMemberResult>\n\nexport interface GetTasksOwnersParams {\n  taskID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetTasksOwnersResult = GetTasksOwnersOKResult | GetTasksOwnersDefaultResult\n\ninterface GetTasksOwnersOKResult {\n  status: 200\n  headers: Headers\n  data: ResourceOwners\n}\n\ninterface GetTasksOwnersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getTasksOwners = (\n  params: GetTasksOwnersParams,\n  options: RequestOptions = {}\n): Promise<GetTasksOwnersResult> =>\n  request(\n    'GET',\n    `/api/v2/tasks/${params.taskID}/owners`,\n    params,\n    options\n  ) as Promise<GetTasksOwnersResult>\n\nexport interface PostTasksOwnerParams {\n  taskID: string\n\n  data: AddResourceMemberRequestBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostTasksOwnerResult =\n  | PostTasksOwnerCreatedResult\n  | PostTasksOwnerDefaultResult\n\ninterface PostTasksOwnerCreatedResult {\n  status: 201\n  headers: Headers\n  data: ResourceOwner\n}\n\ninterface PostTasksOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postTasksOwner = (\n  params: PostTasksOwnerParams,\n  options: RequestOptions = {}\n): Promise<PostTasksOwnerResult> =>\n  request(\n    'POST',\n    `/api/v2/tasks/${params.taskID}/owners`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostTasksOwnerResult>\n\nexport interface DeleteTasksOwnerParams {\n  userID: string\n  taskID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteTasksOwnerResult =\n  | DeleteTasksOwnerNoContentResult\n  | DeleteTasksOwnerDefaultResult\n\ninterface DeleteTasksOwnerNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteTasksOwnerDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteTasksOwner = (\n  params: DeleteTasksOwnerParams,\n  options: RequestOptions = {}\n): Promise<DeleteTasksOwnerResult> =>\n  request(\n    'DELETE',\n    `/api/v2/tasks/${params.taskID}/owners/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteTasksOwnerResult>\n\nexport interface GetUsersParams {\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetUsersResult = GetUsersOKResult | GetUsersDefaultResult\n\ninterface GetUsersOKResult {\n  status: 200\n  headers: Headers\n  data: Users\n}\n\ninterface GetUsersDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getUsers = (\n  params: GetUsersParams,\n  options: RequestOptions = {}\n): Promise<GetUsersResult> =>\n  request('GET', '/api/v2/users', params, options) as Promise<GetUsersResult>\n\nexport interface PostUserParams {\n  data: User\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostUserResult = PostUserCreatedResult | PostUserDefaultResult\n\ninterface PostUserCreatedResult {\n  status: 201\n  headers: Headers\n  data: User\n}\n\ninterface PostUserDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postUser = (\n  params: PostUserParams,\n  options: RequestOptions = {}\n): Promise<PostUserResult> =>\n  request(\n    'POST',\n    '/api/v2/users',\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostUserResult>\n\nexport interface GetUserParams {\n  userID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetUserResult = GetUserOKResult | GetUserDefaultResult\n\ninterface GetUserOKResult {\n  status: 200\n  headers: Headers\n  data: User\n}\n\ninterface GetUserDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getUser = (\n  params: GetUserParams,\n  options: RequestOptions = {}\n): Promise<GetUserResult> =>\n  request('GET', `/api/v2/users/${params.userID}`, params, options) as Promise<\n    GetUserResult\n  >\n\nexport interface PatchUserParams {\n  userID: string\n\n  data: User\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchUserResult = PatchUserOKResult | PatchUserDefaultResult\n\ninterface PatchUserOKResult {\n  status: 200\n  headers: Headers\n  data: User\n}\n\ninterface PatchUserDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchUser = (\n  params: PatchUserParams,\n  options: RequestOptions = {}\n): Promise<PatchUserResult> =>\n  request(\n    'PATCH',\n    `/api/v2/users/${params.userID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchUserResult>\n\nexport interface DeleteUserParams {\n  userID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteUserResult = DeleteUserNoContentResult | DeleteUserDefaultResult\n\ninterface DeleteUserNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteUserDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteUser = (\n  params: DeleteUserParams,\n  options: RequestOptions = {}\n): Promise<DeleteUserResult> =>\n  request(\n    'DELETE',\n    `/api/v2/users/${params.userID}`,\n    params,\n    options\n  ) as Promise<DeleteUserResult>\n\nexport interface PutUsersPasswordParams {\n  userID: string\n\n  data: PasswordResetBody\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n\n  auth: {\n    username: string\n    password: string\n  }\n}\n\ntype PutUsersPasswordResult =\n  | PutUsersPasswordNoContentResult\n  | PutUsersPasswordDefaultResult\n\ninterface PutUsersPasswordNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface PutUsersPasswordDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const putUsersPassword = (\n  params: PutUsersPasswordParams,\n  options: RequestOptions = {}\n): Promise<PutUsersPasswordResult> =>\n  request(\n    'PUT',\n    `/api/v2/users/${params.userID}/password`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PutUsersPasswordResult>\n\nexport interface GetUsersLogsParams {\n  userID: string\n\n  query?: {\n    offset?: number\n    limit?: number\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetUsersLogsResult = GetUsersLogsOKResult | GetUsersLogsDefaultResult\n\ninterface GetUsersLogsOKResult {\n  status: 200\n  headers: Headers\n  data: OperationLogs\n}\n\ninterface GetUsersLogsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getUsersLogs = (\n  params: GetUsersLogsParams,\n  options: RequestOptions = {}\n): Promise<GetUsersLogsResult> =>\n  request(\n    'GET',\n    `/api/v2/users/${params.userID}/logs`,\n    params,\n    options\n  ) as Promise<GetUsersLogsResult>\n\nexport interface GetChecksParams {\n  query: {\n    offset?: number\n    limit?: number\n    orgID: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetChecksResult = GetChecksOKResult | GetChecksDefaultResult\n\ninterface GetChecksOKResult {\n  status: 200\n  headers: Headers\n  data: Checks\n}\n\ninterface GetChecksDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getChecks = (\n  params: GetChecksParams,\n  options: RequestOptions = {}\n): Promise<GetChecksResult> =>\n  request('GET', '/api/v2/checks', params, options) as Promise<GetChecksResult>\n\nexport interface PostCheckParams {\n  data: PostCheck\n}\n\ntype PostCheckResult = PostCheckCreatedResult | PostCheckDefaultResult\n\ninterface PostCheckCreatedResult {\n  status: 201\n  headers: Headers\n  data: Check\n}\n\ninterface PostCheckDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postCheck = (\n  params: PostCheckParams,\n  options: RequestOptions = {}\n): Promise<PostCheckResult> =>\n  request(\n    'POST',\n    '/api/v2/checks',\n    {...params, headers: {'Content-Type': 'application/json'}},\n    options\n  ) as Promise<PostCheckResult>\n\nexport interface GetCheckParams {\n  checkID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetCheckResult = GetCheckOKResult | GetCheckDefaultResult\n\ninterface GetCheckOKResult {\n  status: 200\n  headers: Headers\n  data: Check\n}\n\ninterface GetCheckDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getCheck = (\n  params: GetCheckParams,\n  options: RequestOptions = {}\n): Promise<GetCheckResult> =>\n  request(\n    'GET',\n    `/api/v2/checks/${params.checkID}`,\n    params,\n    options\n  ) as Promise<GetCheckResult>\n\nexport interface PutCheckParams {\n  checkID: string\n\n  data: Check\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PutCheckResult =\n  | PutCheckOKResult\n  | PutCheckNotFoundResult\n  | PutCheckDefaultResult\n\ninterface PutCheckOKResult {\n  status: 200\n  headers: Headers\n  data: Check\n}\n\ninterface PutCheckNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PutCheckDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const putCheck = (\n  params: PutCheckParams,\n  options: RequestOptions = {}\n): Promise<PutCheckResult> =>\n  request(\n    'PUT',\n    `/api/v2/checks/${params.checkID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PutCheckResult>\n\nexport interface PatchCheckParams {\n  checkID: string\n\n  data: CheckPatch\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchCheckResult =\n  | PatchCheckOKResult\n  | PatchCheckNotFoundResult\n  | PatchCheckDefaultResult\n\ninterface PatchCheckOKResult {\n  status: 200\n  headers: Headers\n  data: Check\n}\n\ninterface PatchCheckNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PatchCheckDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchCheck = (\n  params: PatchCheckParams,\n  options: RequestOptions = {}\n): Promise<PatchCheckResult> =>\n  request(\n    'PATCH',\n    `/api/v2/checks/${params.checkID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchCheckResult>\n\nexport interface DeleteCheckParams {\n  checkID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteCheckResult =\n  | DeleteCheckNoContentResult\n  | DeleteCheckNotFoundResult\n  | DeleteCheckDefaultResult\n\ninterface DeleteCheckNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteCheckNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteCheckDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteCheck = (\n  params: DeleteCheckParams,\n  options: RequestOptions = {}\n): Promise<DeleteCheckResult> =>\n  request(\n    'DELETE',\n    `/api/v2/checks/${params.checkID}`,\n    params,\n    options\n  ) as Promise<DeleteCheckResult>\n\nexport interface GetChecksLabelsParams {\n  checkID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetChecksLabelsResult =\n  | GetChecksLabelsOKResult\n  | GetChecksLabelsDefaultResult\n\ninterface GetChecksLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetChecksLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getChecksLabels = (\n  params: GetChecksLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetChecksLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/checks/${params.checkID}/labels`,\n    params,\n    options\n  ) as Promise<GetChecksLabelsResult>\n\nexport interface PostChecksLabelParams {\n  checkID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostChecksLabelResult =\n  | PostChecksLabelCreatedResult\n  | PostChecksLabelDefaultResult\n\ninterface PostChecksLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostChecksLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postChecksLabel = (\n  params: PostChecksLabelParams,\n  options: RequestOptions = {}\n): Promise<PostChecksLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/checks/${params.checkID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostChecksLabelResult>\n\nexport interface DeleteChecksLabelParams {\n  checkID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteChecksLabelResult =\n  | DeleteChecksLabelNoContentResult\n  | DeleteChecksLabelNotFoundResult\n  | DeleteChecksLabelDefaultResult\n\ninterface DeleteChecksLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteChecksLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteChecksLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteChecksLabel = (\n  params: DeleteChecksLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteChecksLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/checks/${params.checkID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteChecksLabelResult>\n\nexport interface GetNotificationRulesParams {\n  query: {\n    offset?: number\n    limit?: number\n    orgID: string\n    checkID?: string\n    tag?: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetNotificationRulesResult =\n  | GetNotificationRulesOKResult\n  | GetNotificationRulesDefaultResult\n\ninterface GetNotificationRulesOKResult {\n  status: 200\n  headers: Headers\n  data: NotificationRules\n}\n\ninterface GetNotificationRulesDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getNotificationRules = (\n  params: GetNotificationRulesParams,\n  options: RequestOptions = {}\n): Promise<GetNotificationRulesResult> =>\n  request('GET', '/api/v2/notificationRules', params, options) as Promise<\n    GetNotificationRulesResult\n  >\n\nexport interface PostNotificationRuleParams {\n  data: PostNotificationRule\n}\n\ntype PostNotificationRuleResult =\n  | PostNotificationRuleCreatedResult\n  | PostNotificationRuleDefaultResult\n\ninterface PostNotificationRuleCreatedResult {\n  status: 201\n  headers: Headers\n  data: NotificationRule\n}\n\ninterface PostNotificationRuleDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postNotificationRule = (\n  params: PostNotificationRuleParams,\n  options: RequestOptions = {}\n): Promise<PostNotificationRuleResult> =>\n  request(\n    'POST',\n    '/api/v2/notificationRules',\n    {...params, headers: {'Content-Type': 'application/json'}},\n    options\n  ) as Promise<PostNotificationRuleResult>\n\nexport interface GetChecksQueryParams {\n  checkID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetChecksQueryResult =\n  | GetChecksQueryOKResult\n  | GetChecksQueryBadRequestResult\n  | GetChecksQueryNotFoundResult\n  | GetChecksQueryDefaultResult\n\ninterface GetChecksQueryOKResult {\n  status: 200\n  headers: Headers\n  data: FluxResponse\n}\n\ninterface GetChecksQueryBadRequestResult {\n  status: 400\n  headers: Headers\n  data: Error\n}\n\ninterface GetChecksQueryNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface GetChecksQueryDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getChecksQuery = (\n  params: GetChecksQueryParams,\n  options: RequestOptions = {}\n): Promise<GetChecksQueryResult> =>\n  request(\n    'GET',\n    `/api/v2/checks/${params.checkID}/query`,\n    params,\n    options\n  ) as Promise<GetChecksQueryResult>\n\nexport interface GetNotificationRuleParams {\n  ruleID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetNotificationRuleResult =\n  | GetNotificationRuleOKResult\n  | GetNotificationRuleDefaultResult\n\ninterface GetNotificationRuleOKResult {\n  status: 200\n  headers: Headers\n  data: NotificationRule\n}\n\ninterface GetNotificationRuleDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getNotificationRule = (\n  params: GetNotificationRuleParams,\n  options: RequestOptions = {}\n): Promise<GetNotificationRuleResult> =>\n  request(\n    'GET',\n    `/api/v2/notificationRules/${params.ruleID}`,\n    params,\n    options\n  ) as Promise<GetNotificationRuleResult>\n\nexport interface PutNotificationRuleParams {\n  ruleID: string\n\n  data: NotificationRule\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PutNotificationRuleResult =\n  | PutNotificationRuleOKResult\n  | PutNotificationRuleNotFoundResult\n  | PutNotificationRuleDefaultResult\n\ninterface PutNotificationRuleOKResult {\n  status: 200\n  headers: Headers\n  data: NotificationRule\n}\n\ninterface PutNotificationRuleNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PutNotificationRuleDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const putNotificationRule = (\n  params: PutNotificationRuleParams,\n  options: RequestOptions = {}\n): Promise<PutNotificationRuleResult> =>\n  request(\n    'PUT',\n    `/api/v2/notificationRules/${params.ruleID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PutNotificationRuleResult>\n\nexport interface PatchNotificationRuleParams {\n  ruleID: string\n\n  data: NotificationRuleUpdate\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchNotificationRuleResult =\n  | PatchNotificationRuleOKResult\n  | PatchNotificationRuleNotFoundResult\n  | PatchNotificationRuleDefaultResult\n\ninterface PatchNotificationRuleOKResult {\n  status: 200\n  headers: Headers\n  data: NotificationRule\n}\n\ninterface PatchNotificationRuleNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PatchNotificationRuleDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchNotificationRule = (\n  params: PatchNotificationRuleParams,\n  options: RequestOptions = {}\n): Promise<PatchNotificationRuleResult> =>\n  request(\n    'PATCH',\n    `/api/v2/notificationRules/${params.ruleID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchNotificationRuleResult>\n\nexport interface DeleteNotificationRuleParams {\n  ruleID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteNotificationRuleResult =\n  | DeleteNotificationRuleNoContentResult\n  | DeleteNotificationRuleNotFoundResult\n  | DeleteNotificationRuleDefaultResult\n\ninterface DeleteNotificationRuleNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteNotificationRuleNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteNotificationRuleDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteNotificationRule = (\n  params: DeleteNotificationRuleParams,\n  options: RequestOptions = {}\n): Promise<DeleteNotificationRuleResult> =>\n  request(\n    'DELETE',\n    `/api/v2/notificationRules/${params.ruleID}`,\n    params,\n    options\n  ) as Promise<DeleteNotificationRuleResult>\n\nexport interface GetNotificationRulesLabelsParams {\n  ruleID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetNotificationRulesLabelsResult =\n  | GetNotificationRulesLabelsOKResult\n  | GetNotificationRulesLabelsDefaultResult\n\ninterface GetNotificationRulesLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetNotificationRulesLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getNotificationRulesLabels = (\n  params: GetNotificationRulesLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetNotificationRulesLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/notificationRules/${params.ruleID}/labels`,\n    params,\n    options\n  ) as Promise<GetNotificationRulesLabelsResult>\n\nexport interface PostNotificationRulesLabelParams {\n  ruleID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostNotificationRulesLabelResult =\n  | PostNotificationRulesLabelCreatedResult\n  | PostNotificationRulesLabelDefaultResult\n\ninterface PostNotificationRulesLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostNotificationRulesLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postNotificationRulesLabel = (\n  params: PostNotificationRulesLabelParams,\n  options: RequestOptions = {}\n): Promise<PostNotificationRulesLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/notificationRules/${params.ruleID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostNotificationRulesLabelResult>\n\nexport interface DeleteNotificationRulesLabelParams {\n  ruleID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteNotificationRulesLabelResult =\n  | DeleteNotificationRulesLabelNoContentResult\n  | DeleteNotificationRulesLabelNotFoundResult\n  | DeleteNotificationRulesLabelDefaultResult\n\ninterface DeleteNotificationRulesLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteNotificationRulesLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteNotificationRulesLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteNotificationRulesLabel = (\n  params: DeleteNotificationRulesLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteNotificationRulesLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/notificationRules/${params.ruleID}/labels/${params.labelID}`,\n    params,\n    options\n  ) as Promise<DeleteNotificationRulesLabelResult>\n\nexport interface GetNotificationRulesQueryParams {\n  ruleID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetNotificationRulesQueryResult =\n  | GetNotificationRulesQueryOKResult\n  | GetNotificationRulesQueryBadRequestResult\n  | GetNotificationRulesQueryNotFoundResult\n  | GetNotificationRulesQueryDefaultResult\n\ninterface GetNotificationRulesQueryOKResult {\n  status: 200\n  headers: Headers\n  data: FluxResponse\n}\n\ninterface GetNotificationRulesQueryBadRequestResult {\n  status: 400\n  headers: Headers\n  data: Error\n}\n\ninterface GetNotificationRulesQueryNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface GetNotificationRulesQueryDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getNotificationRulesQuery = (\n  params: GetNotificationRulesQueryParams,\n  options: RequestOptions = {}\n): Promise<GetNotificationRulesQueryResult> =>\n  request(\n    'GET',\n    `/api/v2/notificationRules/${params.ruleID}/query`,\n    params,\n    options\n  ) as Promise<GetNotificationRulesQueryResult>\n\nexport interface GetNotificationEndpointsParams {\n  query: {\n    offset?: number\n    limit?: number\n    orgID: string\n  }\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetNotificationEndpointsResult =\n  | GetNotificationEndpointsOKResult\n  | GetNotificationEndpointsDefaultResult\n\ninterface GetNotificationEndpointsOKResult {\n  status: 200\n  headers: Headers\n  data: NotificationEndpoints\n}\n\ninterface GetNotificationEndpointsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getNotificationEndpoints = (\n  params: GetNotificationEndpointsParams,\n  options: RequestOptions = {}\n): Promise<GetNotificationEndpointsResult> =>\n  request('GET', '/api/v2/notificationEndpoints', params, options) as Promise<\n    GetNotificationEndpointsResult\n  >\n\nexport interface PostNotificationEndpointParams {\n  data: PostNotificationEndpoint\n}\n\ntype PostNotificationEndpointResult =\n  | PostNotificationEndpointCreatedResult\n  | PostNotificationEndpointDefaultResult\n\ninterface PostNotificationEndpointCreatedResult {\n  status: 201\n  headers: Headers\n  data: NotificationEndpoint\n}\n\ninterface PostNotificationEndpointDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postNotificationEndpoint = (\n  params: PostNotificationEndpointParams,\n  options: RequestOptions = {}\n): Promise<PostNotificationEndpointResult> =>\n  request(\n    'POST',\n    '/api/v2/notificationEndpoints',\n    {...params, headers: {'Content-Type': 'application/json'}},\n    options\n  ) as Promise<PostNotificationEndpointResult>\n\nexport interface GetNotificationEndpointParams {\n  endpointID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetNotificationEndpointResult =\n  | GetNotificationEndpointOKResult\n  | GetNotificationEndpointDefaultResult\n\ninterface GetNotificationEndpointOKResult {\n  status: 200\n  headers: Headers\n  data: NotificationEndpoint\n}\n\ninterface GetNotificationEndpointDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getNotificationEndpoint = (\n  params: GetNotificationEndpointParams,\n  options: RequestOptions = {}\n): Promise<GetNotificationEndpointResult> =>\n  request(\n    'GET',\n    `/api/v2/notificationEndpoints/${params.endpointID}`,\n    params,\n    options\n  ) as Promise<GetNotificationEndpointResult>\n\nexport interface PutNotificationEndpointParams {\n  endpointID: string\n\n  data: NotificationEndpoint\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PutNotificationEndpointResult =\n  | PutNotificationEndpointOKResult\n  | PutNotificationEndpointNotFoundResult\n  | PutNotificationEndpointDefaultResult\n\ninterface PutNotificationEndpointOKResult {\n  status: 200\n  headers: Headers\n  data: NotificationEndpoint\n}\n\ninterface PutNotificationEndpointNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PutNotificationEndpointDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const putNotificationEndpoint = (\n  params: PutNotificationEndpointParams,\n  options: RequestOptions = {}\n): Promise<PutNotificationEndpointResult> =>\n  request(\n    'PUT',\n    `/api/v2/notificationEndpoints/${params.endpointID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PutNotificationEndpointResult>\n\nexport interface PatchNotificationEndpointParams {\n  endpointID: string\n\n  data: NotificationEndpointUpdate\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PatchNotificationEndpointResult =\n  | PatchNotificationEndpointOKResult\n  | PatchNotificationEndpointNotFoundResult\n  | PatchNotificationEndpointDefaultResult\n\ninterface PatchNotificationEndpointOKResult {\n  status: 200\n  headers: Headers\n  data: NotificationEndpoint\n}\n\ninterface PatchNotificationEndpointNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface PatchNotificationEndpointDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const patchNotificationEndpoint = (\n  params: PatchNotificationEndpointParams,\n  options: RequestOptions = {}\n): Promise<PatchNotificationEndpointResult> =>\n  request(\n    'PATCH',\n    `/api/v2/notificationEndpoints/${params.endpointID}`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PatchNotificationEndpointResult>\n\nexport interface DeleteNotificationEndpointParams {\n  endpointID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteNotificationEndpointResult =\n  | DeleteNotificationEndpointNoContentResult\n  | DeleteNotificationEndpointNotFoundResult\n  | DeleteNotificationEndpointDefaultResult\n\ninterface DeleteNotificationEndpointNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteNotificationEndpointNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteNotificationEndpointDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteNotificationEndpoint = (\n  params: DeleteNotificationEndpointParams,\n  options: RequestOptions = {}\n): Promise<DeleteNotificationEndpointResult> =>\n  request(\n    'DELETE',\n    `/api/v2/notificationEndpoints/${params.endpointID}`,\n    params,\n    options\n  ) as Promise<DeleteNotificationEndpointResult>\n\nexport interface GetNotificationEndpointsLabelsParams {\n  endpointID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype GetNotificationEndpointsLabelsResult =\n  | GetNotificationEndpointsLabelsOKResult\n  | GetNotificationEndpointsLabelsDefaultResult\n\ninterface GetNotificationEndpointsLabelsOKResult {\n  status: 200\n  headers: Headers\n  data: LabelsResponse\n}\n\ninterface GetNotificationEndpointsLabelsDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const getNotificationEndpointsLabels = (\n  params: GetNotificationEndpointsLabelsParams,\n  options: RequestOptions = {}\n): Promise<GetNotificationEndpointsLabelsResult> =>\n  request(\n    'GET',\n    `/api/v2/notificationEndpoints/${params.endpointID}/labels`,\n    params,\n    options\n  ) as Promise<GetNotificationEndpointsLabelsResult>\n\nexport interface PostNotificationEndpointsLabelParams {\n  endpointID: string\n\n  data: LabelMapping\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype PostNotificationEndpointsLabelResult =\n  | PostNotificationEndpointsLabelCreatedResult\n  | PostNotificationEndpointsLabelDefaultResult\n\ninterface PostNotificationEndpointsLabelCreatedResult {\n  status: 201\n  headers: Headers\n  data: LabelResponse\n}\n\ninterface PostNotificationEndpointsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const postNotificationEndpointsLabel = (\n  params: PostNotificationEndpointsLabelParams,\n  options: RequestOptions = {}\n): Promise<PostNotificationEndpointsLabelResult> =>\n  request(\n    'POST',\n    `/api/v2/notificationEndpoints/${params.endpointID}/labels`,\n    {\n      ...params,\n      headers: {...params.headers, 'Content-Type': 'application/json'},\n    },\n    options\n  ) as Promise<PostNotificationEndpointsLabelResult>\n\nexport interface DeleteNotificationEndpointsLabelParams {\n  endpointID: string\n  labelID: string\n\n  headers?: {\n    'Zap-Trace-Span'?: string\n  }\n}\n\ntype DeleteNotificationEndpointsLabelResult =\n  | DeleteNotificationEndpointsLabelNoContentResult\n  | DeleteNotificationEndpointsLabelNotFoundResult\n  | DeleteNotificationEndpointsLabelDefaultResult\n\ninterface DeleteNotificationEndpointsLabelNoContentResult {\n  status: 204\n  headers: Headers\n  data: any\n}\n\ninterface DeleteNotificationEndpointsLabelNotFoundResult {\n  status: 404\n  headers: Headers\n  data: Error\n}\n\ninterface DeleteNotificationEndpointsLabelDefaultResult {\n  status: 500\n  headers: Headers\n  data: Error\n}\n\nexport const deleteNotificationEndpointsLabel = (\n  params: DeleteNotificationEndpointsLabelParams,\n  options: RequestOptions = {}\n): Promise<DeleteNotificationEndpointsLabelResult> =>\n  request(\n    'DELETE',\n    `/api/v2/notificationEndpoints/${params.endpointID}/labels/${\n      params.labelID\n    }`,\n    params,\n    options\n  ) as Promise<DeleteNotificationEndpointsLabelResult>\n","import {\n  setRequestHandler,\n  setResponseHandler,\n  postSignout,\n} from './generatedRoutes'\nimport {getAPIBasepath} from 'src/utils/basepath'\n\nsetRequestHandler((url, query, init) => {\n  return {\n    url: `${getAPIBasepath()}${url}`,\n    query,\n    init,\n  }\n})\n\nsetResponseHandler((status, headers, data) => {\n  if (status === 403) {\n    postSignout({})\n    window.location.href = '/signin'\n  }\n\n  return {status, headers, data}\n})\n\nexport * from './generatedRoutes'\n","// Libraries\nimport {get} from 'lodash'\nimport {normalize} from 'normalizr'\n\n// APIs\nimport {client} from 'src/utils/api'\nimport {ScraperTargetRequest, PermissionResource} from '@influxdata/influx'\nimport {createAuthorization} from 'src/authorizations/apis'\nimport {postWrite as apiPostWrite, postLabel as apiPostLabel} from 'src/client'\n\n// Schemas\nimport {authSchema} from 'src/schemas'\nimport {telegrafSchema} from 'src/schemas/telegrafs'\n\n// Utils\nimport {createNewPlugin} from 'src/dataLoaders/utils/pluginConfigs'\nimport {addLabelDefaults} from 'src/labels/utils'\nimport {getDataLoaders, getSteps} from 'src/dataLoaders/selectors'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Constants\nimport {\n  pluginsByBundle,\n  telegrafPluginsInfo,\n} from 'src/dataLoaders/constants/pluginConfigs'\n\n// Types\nimport {\n  TelegrafPlugin,\n  TelegrafPluginName,\n  DataLoaderType,\n  LineProtocolTab,\n  Plugin,\n  BundleName,\n  ConfigurationState,\n} from 'src/types/dataLoaders'\nimport {\n  GetState,\n  RemoteDataState,\n  LabelProperties,\n  Authorization,\n  AuthEntities,\n  TelegrafEntities,\n  Telegraf,\n} from 'src/types'\nimport {ILabel} from '@influxdata/influx'\nimport {\n  WritePrecision,\n  TelegrafRequest,\n  TelegrafPluginOutputInfluxDBV2,\n  Permission,\n} from '@influxdata/influx'\nimport {Dispatch} from 'redux'\n\n// Actions\nimport {addTelegraf, editTelegraf} from 'src/telegrafs/actions/creators'\nimport {addAuthorization} from 'src/authorizations/actions/creators'\nimport {notify} from 'src/shared/actions/notifications'\nimport {\n  TelegrafConfigCreationError,\n  TelegrafConfigCreationSuccess,\n  readWriteCardinalityLimitReached,\n} from 'src/shared/copy/notifications'\n\nconst DEFAULT_COLLECTION_INTERVAL = 10000\n\nexport type Action =\n  | SetDataLoadersType\n  | SetTelegrafConfigID\n  | UpdateTelegrafPluginConfig\n  | AddConfigValue\n  | RemoveConfigValue\n  | SetActiveTelegrafPlugin\n  | SetLineProtocolBody\n  | SetActiveLPTab\n  | SetLPStatus\n  | SetPrecision\n  | UpdateTelegrafPlugin\n  | AddPluginBundle\n  | AddTelegrafPlugins\n  | RemoveBundlePlugins\n  | RemovePluginBundle\n  | SetPluginConfiguration\n  | SetConfigArrayValue\n  | SetScraperTargetBucket\n  | SetScraperTargetURL\n  | SetScraperTargetName\n  | SetScraperTargetID\n  | ClearDataLoaders\n  | SetTelegrafConfigName\n  | SetTelegrafConfigDescription\n  | SetToken\n\ninterface SetDataLoadersType {\n  type: 'SET_DATA_LOADERS_TYPE'\n  payload: {type: DataLoaderType}\n}\n\nexport const setDataLoadersType = (\n  type: DataLoaderType\n): SetDataLoadersType => ({\n  type: 'SET_DATA_LOADERS_TYPE',\n  payload: {type},\n})\n\ninterface ClearDataLoaders {\n  type: 'CLEAR_DATA_LOADERS'\n}\n\nexport const clearDataLoaders = (): ClearDataLoaders => ({\n  type: 'CLEAR_DATA_LOADERS',\n})\n\ninterface SetTelegrafConfigName {\n  type: 'SET_TELEGRAF_CONFIG_NAME'\n  payload: {name: string}\n}\n\nexport const setTelegrafConfigName = (name: string): SetTelegrafConfigName => ({\n  type: 'SET_TELEGRAF_CONFIG_NAME',\n  payload: {name},\n})\n\ninterface SetTelegrafConfigDescription {\n  type: 'SET_TELEGRAF_CONFIG_DESCRIPTION'\n  payload: {description: string}\n}\n\nexport const setTelegrafConfigDescription = (\n  description: string\n): SetTelegrafConfigDescription => ({\n  type: 'SET_TELEGRAF_CONFIG_DESCRIPTION',\n  payload: {description},\n})\n\ninterface UpdateTelegrafPluginConfig {\n  type: 'UPDATE_TELEGRAF_PLUGIN_CONFIG'\n  payload: {name: string; field: string; value: string}\n}\n\nexport const updateTelegrafPluginConfig = (\n  name: string,\n  field: string,\n  value: string\n): UpdateTelegrafPluginConfig => ({\n  type: 'UPDATE_TELEGRAF_PLUGIN_CONFIG',\n  payload: {name, field, value},\n})\n\ninterface UpdateTelegrafPlugin {\n  type: 'UPDATE_TELEGRAF_PLUGIN'\n  payload: {plugin: Plugin}\n}\n\nexport const updateTelegrafPlugin = (plugin: Plugin): UpdateTelegrafPlugin => ({\n  type: 'UPDATE_TELEGRAF_PLUGIN',\n  payload: {plugin},\n})\n\ninterface AddConfigValue {\n  type: 'ADD_TELEGRAF_PLUGIN_CONFIG_VALUE'\n  payload: {\n    pluginName: string\n    fieldName: string\n    value: string\n  }\n}\n\nexport const addConfigValue = (\n  pluginName: string,\n  fieldName: string,\n  value: string\n): AddConfigValue => ({\n  type: 'ADD_TELEGRAF_PLUGIN_CONFIG_VALUE',\n  payload: {pluginName, fieldName, value},\n})\n\ninterface RemoveConfigValue {\n  type: 'REMOVE_TELEGRAF_PLUGIN_CONFIG_VALUE'\n  payload: {\n    pluginName: string\n    fieldName: string\n    value: string\n  }\n}\n\nexport const removeConfigValue = (\n  pluginName: string,\n  fieldName: string,\n  value: string\n): RemoveConfigValue => ({\n  type: 'REMOVE_TELEGRAF_PLUGIN_CONFIG_VALUE',\n  payload: {pluginName, fieldName, value},\n})\n\ninterface SetConfigArrayValue {\n  type: 'SET_TELEGRAF_PLUGIN_CONFIG_VALUE'\n  payload: {\n    pluginName: TelegrafPluginName\n    field: string\n    valueIndex: number\n    value: string\n  }\n}\n\nexport const setConfigArrayValue = (\n  pluginName: TelegrafPluginName,\n  field: string,\n  valueIndex: number,\n  value: string\n): SetConfigArrayValue => ({\n  type: 'SET_TELEGRAF_PLUGIN_CONFIG_VALUE',\n  payload: {pluginName, field, valueIndex, value},\n})\n\ninterface SetTelegrafConfigID {\n  type: 'SET_TELEGRAF_CONFIG_ID'\n  payload: {id: string}\n}\n\nexport const setTelegrafConfigID = (id: string): SetTelegrafConfigID => ({\n  type: 'SET_TELEGRAF_CONFIG_ID',\n  payload: {id},\n})\n\ninterface AddPluginBundle {\n  type: 'ADD_PLUGIN_BUNDLE'\n  payload: {bundle: BundleName}\n}\n\nexport const addPluginBundle = (bundle: BundleName): AddPluginBundle => ({\n  type: 'ADD_PLUGIN_BUNDLE',\n  payload: {bundle},\n})\n\ninterface RemovePluginBundle {\n  type: 'REMOVE_PLUGIN_BUNDLE'\n  payload: {bundle: BundleName}\n}\n\nexport const removePluginBundle = (bundle: BundleName): RemovePluginBundle => ({\n  type: 'REMOVE_PLUGIN_BUNDLE',\n  payload: {bundle},\n})\ninterface AddTelegrafPlugins {\n  type: 'ADD_TELEGRAF_PLUGINS'\n  payload: {telegrafPlugins: TelegrafPlugin[]}\n}\n\nexport const addTelegrafPlugins = (\n  telegrafPlugins: TelegrafPlugin[]\n): AddTelegrafPlugins => ({\n  type: 'ADD_TELEGRAF_PLUGINS',\n  payload: {telegrafPlugins},\n})\n\ninterface RemoveBundlePlugins {\n  type: 'REMOVE_BUNDLE_PLUGINS'\n  payload: {bundle: BundleName}\n}\n\nexport const removeBundlePlugins = (\n  bundle: BundleName\n): RemoveBundlePlugins => ({\n  type: 'REMOVE_BUNDLE_PLUGINS',\n  payload: {bundle},\n})\n\ninterface SetScraperTargetBucket {\n  type: 'SET_SCRAPER_TARGET_BUCKET'\n  payload: {bucket: string}\n}\n\nexport const setScraperTargetBucket = (\n  bucket: string\n): SetScraperTargetBucket => ({\n  type: 'SET_SCRAPER_TARGET_BUCKET',\n  payload: {bucket},\n})\n\ninterface SetScraperTargetURL {\n  type: 'SET_SCRAPER_TARGET_URL'\n  payload: {url: string}\n}\n\nexport const setScraperTargetURL = (url: string): SetScraperTargetURL => ({\n  type: 'SET_SCRAPER_TARGET_URL',\n  payload: {url},\n})\n\ninterface SetScraperTargetName {\n  type: 'SET_SCRAPER_TARGET_NAME'\n  payload: {name: string}\n}\n\nexport const setScraperTargetName = (name: string): SetScraperTargetName => ({\n  type: 'SET_SCRAPER_TARGET_NAME',\n  payload: {name},\n})\n\ninterface SetScraperTargetID {\n  type: 'SET_SCRAPER_TARGET_ID'\n  payload: {id: string}\n}\n\nexport const setScraperTargetID = (id: string): SetScraperTargetID => ({\n  type: 'SET_SCRAPER_TARGET_ID',\n  payload: {id},\n})\n\ninterface SetToken {\n  type: 'SET_TOKEN'\n  payload: {token: string}\n}\n\nexport const setToken = (token: string): SetToken => ({\n  type: 'SET_TOKEN',\n  payload: {token},\n})\n\nexport const addPluginBundleWithPlugins = (bundle: BundleName) => dispatch => {\n  dispatch(addPluginBundle(bundle))\n  const plugins = pluginsByBundle[bundle]\n  dispatch(\n    addTelegrafPlugins(\n      plugins.map(p => {\n        const isConfigured = !!telegrafPluginsInfo[p].fields\n          ? ConfigurationState.Unconfigured\n          : ConfigurationState.Configured\n\n        return {\n          name: p,\n          active: false,\n          configured: isConfigured,\n          templateID: telegrafPluginsInfo[p].templateID,\n        }\n      })\n    )\n  )\n}\n\nexport const removePluginBundleWithPlugins = (\n  bundle: BundleName\n) => dispatch => {\n  dispatch(removePluginBundle(bundle))\n  dispatch(removeBundlePlugins(bundle))\n}\n\nexport const createOrUpdateTelegrafConfigAsync = () => async (\n  dispatch,\n  getState: GetState\n) => {\n  const {\n    telegrafPlugins,\n    telegrafConfigID,\n    telegrafConfigName,\n    telegrafConfigDescription,\n  } = getDataLoaders(getState())\n  const {name} = getOrg(getState())\n  const {bucket} = getSteps(getState())\n\n  const influxDB2Out = {\n    name: TelegrafPluginOutputInfluxDBV2.NameEnum.InfluxdbV2,\n    type: TelegrafPluginOutputInfluxDBV2.TypeEnum.Output,\n    config: {\n      urls: [`${window.location.origin}`],\n      token: '$INFLUX_TOKEN',\n      organization: name,\n      bucket,\n    },\n  }\n\n  const plugins = telegrafPlugins.reduce(\n    (acc, tp) => {\n      if (tp.configured === ConfigurationState.Configured) {\n        return [...acc, tp.plugin || createNewPlugin(tp.name)]\n      }\n\n      return acc\n    },\n    [influxDB2Out]\n  )\n\n  if (telegrafConfigID) {\n    const telegraf = await client.telegrafConfigs.update(telegrafConfigID, {\n      name: telegrafConfigName,\n      description: telegrafConfigDescription,\n      plugins,\n    })\n\n    const normTelegraf = normalize<Telegraf, TelegrafEntities, string>(\n      telegraf,\n      telegrafSchema\n    )\n\n    dispatch(editTelegraf(normTelegraf))\n    dispatch(setTelegrafConfigID(telegrafConfigID))\n    return\n  }\n\n  createTelegraf(dispatch, getState, plugins)\n}\n\nconst createTelegraf = async (dispatch, getState: GetState, plugins) => {\n  try {\n    const state = getState()\n    const {telegrafConfigName, telegrafConfigDescription} = getDataLoaders(\n      state\n    )\n    const {bucket, bucketID} = getSteps(state)\n    const org = getOrg(getState())\n\n    const telegrafRequest: TelegrafRequest = {\n      name: telegrafConfigName,\n      description: telegrafConfigDescription,\n      agent: {collectionInterval: DEFAULT_COLLECTION_INTERVAL},\n      orgID: org.id,\n      plugins,\n    }\n\n    // create telegraf config\n    const tc = await client.telegrafConfigs.create(telegrafRequest)\n\n    const permissions = [\n      {\n        action: Permission.ActionEnum.Write,\n        resource: {\n          type: PermissionResource.TypeEnum.Buckets,\n          id: bucketID,\n          orgID: org.id,\n        },\n      },\n      {\n        action: Permission.ActionEnum.Read,\n        resource: {\n          type: PermissionResource.TypeEnum.Telegrafs,\n          id: tc.id,\n          orgID: org.id,\n        },\n      },\n    ]\n\n    const token = {\n      name: `${telegrafConfigName} token`,\n      orgID: org.id,\n      description: `WRITE ${bucket} bucket / READ ${telegrafConfigName} telegraf config`,\n      permissions,\n    }\n\n    // create token\n    const createdToken = await createAuthorization(token)\n\n    // add token to data loader state\n    dispatch(setToken(createdToken.token))\n\n    const normAuth = normalize<Authorization, AuthEntities, string>(\n      createdToken,\n      authSchema\n    )\n\n    // add token to authorizations state\n    dispatch(addAuthorization(normAuth))\n\n    // create token label\n    const properties = {\n      color: '#FFFFFF',\n      description: `token for telegraf config: ${telegrafConfigName}`,\n      tokenID: createdToken.id,\n    } as LabelProperties // hack to make compiler work\n\n    const resp = await apiPostLabel({\n      data: {\n        orgID: org.id,\n        name: `@influxdata.token-${new Date().getTime()}`, // fix for https://github.com/influxdata/influxdb/issues/15730\n        properties,\n      },\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const createdLabel = addLabelDefaults(resp.data.label)\n\n    // add label to telegraf config\n    const label = await client.telegrafConfigs.addLabel(\n      tc.id,\n      createdLabel as ILabel\n    )\n\n    const config = {\n      ...tc,\n      labels: [label],\n    }\n\n    const normTelegraf = normalize<Telegraf, TelegrafEntities, string>(\n      config,\n      telegrafSchema\n    )\n\n    dispatch(setTelegrafConfigID(tc.id))\n    dispatch(addTelegraf(normTelegraf))\n    dispatch(notify(TelegrafConfigCreationSuccess))\n  } catch (error) {\n    console.error(error.message)\n    dispatch(notify(TelegrafConfigCreationError))\n  }\n}\n\ninterface SetActiveTelegrafPlugin {\n  type: 'SET_ACTIVE_TELEGRAF_PLUGIN'\n  payload: {telegrafPlugin: string}\n}\n\nexport const setActiveTelegrafPlugin = (\n  telegrafPlugin: string\n): SetActiveTelegrafPlugin => ({\n  type: 'SET_ACTIVE_TELEGRAF_PLUGIN',\n  payload: {telegrafPlugin},\n})\n\ninterface SetPluginConfiguration {\n  type: 'SET_PLUGIN_CONFIGURATION_STATE'\n  payload: {telegrafPlugin: TelegrafPluginName}\n}\n\nexport const setPluginConfiguration = (\n  telegrafPlugin: TelegrafPluginName\n): SetPluginConfiguration => ({\n  type: 'SET_PLUGIN_CONFIGURATION_STATE',\n  payload: {telegrafPlugin},\n})\n\ninterface SetLineProtocolBody {\n  type: 'SET_LINE_PROTOCOL_BODY'\n  payload: {lineProtocolBody: string}\n}\n\nexport const setLineProtocolBody = (\n  lineProtocolBody: string\n): SetLineProtocolBody => ({\n  type: 'SET_LINE_PROTOCOL_BODY',\n  payload: {lineProtocolBody},\n})\n\ninterface SetActiveLPTab {\n  type: 'SET_ACTIVE_LP_TAB'\n  payload: {activeLPTab: LineProtocolTab}\n}\n\nexport const setActiveLPTab = (\n  activeLPTab: LineProtocolTab\n): SetActiveLPTab => ({\n  type: 'SET_ACTIVE_LP_TAB',\n  payload: {activeLPTab},\n})\n\ninterface SetLPStatus {\n  type: 'SET_LP_STATUS'\n  payload: {lpStatus: RemoteDataState; lpError: string}\n}\n\nexport const setLPStatus = (\n  lpStatus: RemoteDataState,\n  lpError: string = ''\n): SetLPStatus => ({\n  type: 'SET_LP_STATUS',\n  payload: {lpStatus, lpError},\n})\n\ninterface SetPrecision {\n  type: 'SET_PRECISION'\n  payload: {precision: WritePrecision}\n}\n\nexport const setPrecision = (precision: WritePrecision): SetPrecision => ({\n  type: 'SET_PRECISION',\n  payload: {precision},\n})\n\nexport const writeLineProtocolAction = (\n  org: string,\n  bucket: string,\n  body: string,\n  precision: WritePrecision\n) => async dispatch => {\n  try {\n    dispatch(setLPStatus(RemoteDataState.Loading))\n\n    const resp = await apiPostWrite({\n      data: body,\n      query: {org, bucket, precision},\n    })\n\n    if (resp.status === 204) {\n      dispatch(setLPStatus(RemoteDataState.Done))\n    } else if (resp.status === 429) {\n      dispatch(notify(readWriteCardinalityLimitReached(resp.data.message)))\n      dispatch(setLPStatus(RemoteDataState.Error))\n    } else {\n      throw new Error(get(resp, 'data.message', 'Failed to write data'))\n    }\n  } catch (error) {\n    console.error(error)\n    dispatch(setLPStatus(RemoteDataState.Error, error.message))\n  }\n}\n\nexport const saveScraperTarget = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  const {\n    dataLoading: {\n      dataLoaders: {\n        scraperTarget: {url, id, name},\n      },\n      steps: {bucketID, orgID},\n    },\n  } = getState()\n\n  try {\n    if (id) {\n      await client.scrapers.update(id, {url, bucketID})\n    } else {\n      const newTarget = await client.scrapers.create({\n        name,\n        type: ScraperTargetRequest.TypeEnum.Prometheus,\n        url,\n        bucketID,\n        orgID,\n      })\n      dispatch(setScraperTargetID(newTarget.id))\n    }\n  } catch (error) {\n    console.error()\n  }\n}\n","export const OPTION_NAME = 'v'\nexport const TIME_RANGE_START = 'timeRangeStart'\nexport const TIME_RANGE_STOP = 'timeRangeStop'\nexport const WINDOW_PERIOD = 'windowPeriod'\n\nconst START = '^'\nconst QUOTE = '\"'\nconst SPACE = '\\\\s'\nconst NEWLINE = '\\\\n'\nconst COMMENT = '\\\\/\\\\/'\nconst ADD = '\\\\+'\nconst SUB = '\\\\-'\nconst MUL = '\\\\*'\nconst DIV = '\\\\/'\nconst MOD = '\\\\%'\nconst EQ = '\\\\=\\\\='\nconst LT = '\\\\<'\nconst GT = '\\\\>'\nconst LTE = '\\\\<='\nconst GTE = '\\\\>\\\\='\nconst NEQ = '\\\\!\\\\='\nconst REGEXEQ = '\\\\=\\\\~'\nconst REGEXNEQ = '\\\\!\\\\~'\nconst ASSIGN = '\\\\='\nconst ARROW = '\\\\=\\\\>'\nconst LPAREN = '\\\\('\nconst RPAREN = '\\\\)'\nconst LBRACK = '\\\\['\nconst RBRACK = '\\\\]'\nconst LBRACE = '\\\\{'\nconst RBRACE = '\\\\}'\nconst COLON = '\\\\:'\nconst COMMA = '\\\\,'\nconst EOF = '$'\n\nconst FLUX_BOUNDARY = [\n  START,\n  QUOTE,\n  SPACE,\n  NEWLINE,\n  COMMENT,\n  // and, or, and not all require spaces\n  ADD,\n  SUB,\n  MUL,\n  DIV,\n  MOD,\n  EQ,\n  LT,\n  GT,\n  LTE,\n  GTE,\n  NEQ,\n  REGEXEQ,\n  REGEXNEQ,\n  ASSIGN,\n  ARROW,\n  LPAREN,\n  RPAREN,\n  LBRACK,\n  RBRACK,\n  LBRACE,\n  RBRACE,\n  COLON,\n  COMMA,\n  EOF,\n].join('|')\n\nexport const BOUNDARY_GROUP = `(${FLUX_BOUNDARY})`\n\nexport const variableItemTypes = [\n  {\n    type: 'map',\n    label: 'Map',\n  },\n  {\n    type: 'query',\n    label: 'Query',\n  },\n  {\n    type: 'constant',\n    label: 'CSV',\n  },\n]\n","// Constants\nimport {INFERNO, NINETEEN_EIGHTY_FOUR} from '@influxdata/giraffe'\nimport {DEFAULT_LINE_COLORS} from 'src/shared/constants/graphColorPalettes'\nimport {DEFAULT_CELL_NAME} from 'src/dashboards/constants'\nimport {\n  DEFAULT_GAUGE_COLORS,\n  DEFAULT_THRESHOLDS_LIST_COLORS,\n  DEFAULT_THRESHOLDS_TABLE_COLORS,\n} from 'src/shared/constants/thresholds'\nimport {DEFAULT_CHECK_EVERY} from 'src/alerting/constants'\n\n// Types\nimport {\n  Axis,\n  Base,\n  BuilderConfig,\n  CheckType,\n  CheckViewProperties,\n  Color,\n  DashboardQuery,\n  GaugeViewProperties,\n  HeatmapViewProperties,\n  HistogramViewProperties,\n  LinePlusSingleStatProperties,\n  MarkdownViewProperties,\n  NewView,\n  RemoteDataState,\n  ScatterViewProperties,\n  SingleStatViewProperties,\n  TableViewProperties,\n  ViewProperties,\n  ViewType,\n  XYViewProperties,\n} from 'src/types'\n\nexport const defaultView = (name: string = DEFAULT_CELL_NAME) => {\n  return {\n    name,\n    status: RemoteDataState.Done,\n  }\n}\n\nexport function defaultViewQuery(): DashboardQuery {\n  return {\n    name: '',\n    text: '',\n    editMode: 'builder',\n    builderConfig: defaultBuilderConfig(),\n  }\n}\n\nexport function defaultBuilderConfig(): BuilderConfig {\n  return {\n    buckets: [],\n    tags: [{key: '_measurement', values: []}],\n    functions: [],\n    aggregateWindow: {period: 'auto'},\n  }\n}\n\nexport function defaultLineViewProperties() {\n  return {\n    queries: [defaultViewQuery()],\n    colors: DEFAULT_LINE_COLORS as Color[],\n    legend: {},\n    note: '',\n    showNoteWhenEmpty: false,\n    axes: {\n      x: {\n        bounds: ['', ''],\n        label: '',\n        prefix: '',\n        suffix: '',\n        base: '10',\n        scale: 'linear',\n      } as Axis,\n      y: {\n        bounds: ['', ''],\n        label: '',\n        prefix: '',\n        suffix: '',\n        base: '10' as Base,\n        scale: 'linear',\n      } as Axis,\n    },\n  }\n}\n\nfunction defaultGaugeViewProperties() {\n  return {\n    queries: [defaultViewQuery()],\n    colors: DEFAULT_GAUGE_COLORS as Color[],\n    prefix: '',\n    tickPrefix: '',\n    suffix: '',\n    tickSuffix: '',\n    note: '',\n    showNoteWhenEmpty: false,\n    decimalPlaces: {\n      isEnforced: true,\n      digits: 2,\n    },\n  }\n}\n\nfunction defaultSingleStatViewProperties() {\n  return {\n    queries: [defaultViewQuery()],\n    colors: DEFAULT_THRESHOLDS_LIST_COLORS as Color[],\n    prefix: '',\n    tickPrefix: '',\n    suffix: '',\n    tickSuffix: '',\n    note: '',\n    showNoteWhenEmpty: false,\n    decimalPlaces: {\n      isEnforced: true,\n      digits: 2,\n    },\n  }\n}\n\n// Defines the zero values of the various view types\nconst NEW_VIEW_CREATORS = {\n  xy: (): NewView<XYViewProperties> => ({\n    ...defaultView(),\n    properties: {\n      ...defaultLineViewProperties(),\n      type: 'xy',\n      shape: 'chronograf-v2',\n      geom: 'line',\n      xColumn: null,\n      yColumn: null,\n      position: 'overlaid',\n    },\n  }),\n  histogram: (): NewView<HistogramViewProperties> => ({\n    ...defaultView(),\n    properties: {\n      queries: [],\n      type: 'histogram',\n      shape: 'chronograf-v2',\n      xColumn: '_value',\n      xDomain: null,\n      xAxisLabel: '',\n      fillColumns: null,\n      position: 'stacked',\n      binCount: 30,\n      colors: DEFAULT_LINE_COLORS as Color[],\n      note: '',\n      showNoteWhenEmpty: false,\n    },\n  }),\n  heatmap: (): NewView<HeatmapViewProperties> => ({\n    ...defaultView(),\n    properties: {\n      queries: [],\n      type: 'heatmap',\n      shape: 'chronograf-v2',\n      xColumn: null,\n      yColumn: null,\n      xDomain: null,\n      yDomain: null,\n      xAxisLabel: '',\n      yAxisLabel: '',\n      xPrefix: '',\n      xSuffix: '',\n      yPrefix: '',\n      ySuffix: '',\n      colors: INFERNO,\n      binSize: 10,\n      note: '',\n      showNoteWhenEmpty: false,\n    },\n  }),\n  'single-stat': (): NewView<SingleStatViewProperties> => ({\n    ...defaultView(),\n    properties: {\n      ...defaultSingleStatViewProperties(),\n      type: 'single-stat',\n      shape: 'chronograf-v2',\n      legend: {},\n    },\n  }),\n  gauge: (): NewView<GaugeViewProperties> => ({\n    ...defaultView(),\n    properties: {\n      ...defaultGaugeViewProperties(),\n      type: 'gauge',\n      shape: 'chronograf-v2',\n      legend: {},\n    },\n  }),\n  'line-plus-single-stat': (): NewView<LinePlusSingleStatProperties> => ({\n    ...defaultView(),\n    properties: {\n      ...defaultLineViewProperties(),\n      ...defaultSingleStatViewProperties(),\n      type: 'line-plus-single-stat',\n      shape: 'chronograf-v2',\n      xColumn: null,\n      yColumn: null,\n      position: 'overlaid',\n    },\n  }),\n  table: (): NewView<TableViewProperties> => ({\n    ...defaultView(),\n    properties: {\n      type: 'table',\n      shape: 'chronograf-v2',\n      queries: [defaultViewQuery()],\n      colors: DEFAULT_THRESHOLDS_TABLE_COLORS as Color[],\n      tableOptions: {\n        verticalTimeAxis: true,\n        sortBy: null,\n        fixFirstColumn: false,\n      },\n      fieldOptions: [],\n      decimalPlaces: {\n        isEnforced: false,\n        digits: 2,\n      },\n      timeFormat: 'YYYY-MM-DD HH:mm:ss',\n      note: '',\n      showNoteWhenEmpty: false,\n    },\n  }),\n  markdown: (): NewView<MarkdownViewProperties> => ({\n    ...defaultView(),\n    properties: {\n      type: 'markdown',\n      shape: 'chronograf-v2',\n      note: '',\n    },\n  }),\n  scatter: (): NewView<ScatterViewProperties> => ({\n    ...defaultView(),\n    properties: {\n      type: 'scatter',\n      shape: 'chronograf-v2',\n      queries: [defaultViewQuery()],\n      colors: NINETEEN_EIGHTY_FOUR,\n      note: '',\n      showNoteWhenEmpty: false,\n      fillColumns: null,\n      symbolColumns: null,\n      xColumn: null,\n      xDomain: null,\n      yColumn: null,\n      yDomain: null,\n      xAxisLabel: '',\n      yAxisLabel: '',\n      xPrefix: '',\n      xSuffix: '',\n      yPrefix: '',\n      ySuffix: '',\n    },\n  }),\n  threshold: (): NewView<CheckViewProperties> => ({\n    ...defaultView('check'),\n    properties: {\n      type: 'check',\n      shape: 'chronograf-v2',\n      checkID: '',\n      queries: [\n        {\n          name: '',\n          text: '',\n          editMode: 'builder',\n          builderConfig: {\n            buckets: [],\n            tags: [{key: '_measurement', values: []}],\n            functions: [{name: 'mean'}],\n            aggregateWindow: {period: DEFAULT_CHECK_EVERY},\n          },\n        },\n      ],\n      colors: NINETEEN_EIGHTY_FOUR,\n    },\n  }),\n  deadman: (): NewView<CheckViewProperties> => ({\n    ...defaultView('check'),\n    properties: {\n      type: 'check',\n      shape: 'chronograf-v2',\n      checkID: '',\n      queries: [\n        {\n          name: '',\n          text: '',\n          editMode: 'builder',\n          builderConfig: {\n            buckets: [],\n            tags: [{key: '_measurement', values: []}],\n            functions: [],\n          },\n        },\n      ],\n      colors: NINETEEN_EIGHTY_FOUR,\n    },\n  }),\n  custom: (): NewView<TableViewProperties> => ({\n    ...defaultView(),\n    properties: {\n      type: 'table',\n      shape: 'chronograf-v2',\n      queries: [],\n      colors: DEFAULT_THRESHOLDS_LIST_COLORS as Color[],\n      tableOptions: {\n        verticalTimeAxis: true,\n        sortBy: null,\n        fixFirstColumn: false,\n      },\n      fieldOptions: [],\n      decimalPlaces: {\n        isEnforced: false,\n        digits: 2,\n      },\n      timeFormat: 'YYYY-MM-DD HH:mm:ss',\n      note: '',\n      showNoteWhenEmpty: false,\n    },\n  }),\n}\n\ntype CreateViewType = ViewType | CheckType\n\nexport function createView<T extends ViewProperties = ViewProperties>(\n  viewType: CreateViewType = 'xy'\n): NewView<T> {\n  const creator = NEW_VIEW_CREATORS[viewType]\n\n  if (!creator) {\n    throw new Error(`no view creator implemented for view of type ${viewType}`)\n  }\n\n  return creator() as NewView<T>\n}\n","// Constants\nimport {FLUX_RESPONSE_BYTES_LIMIT, API_BASE_PATH} from 'src/shared/constants'\nimport {\n  RATE_LIMIT_ERROR_STATUS,\n  RATE_LIMIT_ERROR_TEXT,\n} from 'src/cloud/constants'\n\n// Types\nimport {CancelBox} from 'src/types/promises'\nimport {File, Query, CancellationError} from 'src/types'\n\nexport type RunQueryResult =\n  | RunQuerySuccessResult\n  | RunQueryLimitResult\n  | RunQueryErrorResult\n\nexport interface RunQuerySuccessResult {\n  type: 'SUCCESS'\n  csv: string\n  didTruncate: boolean\n  bytesRead: number\n}\n\nexport interface RunQueryLimitResult {\n  type: 'RATE_LIMIT_ERROR'\n  retryAfter: number\n  message: string\n}\n\nexport interface RunQueryErrorResult {\n  type: 'UNKNOWN_ERROR'\n  message: string\n}\n\nexport const runQuery = (\n  orgID: string,\n  query: string,\n  extern?: File\n): CancelBox<RunQueryResult> => {\n  const url = `${API_BASE_PATH}api/v2/query?${new URLSearchParams({orgID})}`\n\n  const headers = {\n    'Content-Type': 'application/json',\n    'Accept-Encoding': 'gzip',\n  }\n\n  const body: Query = {\n    query,\n    extern,\n    dialect: {annotations: ['group', 'datatype', 'default']},\n  }\n\n  const controller = new AbortController()\n\n  const request = fetch(url, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body),\n    signal: controller.signal,\n  })\n\n  const promise = request\n    .then(processResponse)\n    .catch(e =>\n      e.name === 'AbortError'\n        ? Promise.reject(new CancellationError())\n        : Promise.reject(e)\n    )\n\n  return {\n    promise,\n    cancel: () => controller.abort(),\n  }\n}\n\nconst processResponse = async (response: Response): Promise<RunQueryResult> => {\n  switch (response.status) {\n    case 200:\n      return processSuccessResponse(response)\n    case RATE_LIMIT_ERROR_STATUS:\n      return processRateLimitResponse(response)\n    default:\n      return processErrorResponse(response)\n  }\n}\n\nconst processSuccessResponse = async (\n  response: Response\n): Promise<RunQuerySuccessResult> => {\n  const reader = response.body.getReader()\n  const decoder = new TextDecoder()\n\n  let csv = ''\n  let bytesRead = 0\n  let didTruncate = false\n\n  let read = await reader.read()\n\n  while (!read.done) {\n    const text = decoder.decode(read.value)\n\n    bytesRead += read.value.byteLength\n\n    if (bytesRead > FLUX_RESPONSE_BYTES_LIMIT) {\n      csv += trimPartialLines(text)\n      didTruncate = true\n      break\n    } else {\n      csv += text\n      read = await reader.read()\n    }\n  }\n\n  reader.cancel()\n\n  return {\n    type: 'SUCCESS',\n    csv,\n    bytesRead,\n    didTruncate,\n  }\n}\n\nconst processRateLimitResponse = (response: Response): RunQueryLimitResult => {\n  const retryAfter = response.headers.get('Retry-After')\n\n  return {\n    type: 'RATE_LIMIT_ERROR',\n    retryAfter: retryAfter ? parseInt(retryAfter) : null,\n    message: RATE_LIMIT_ERROR_TEXT,\n  }\n}\n\nconst processErrorResponse = async (\n  response: Response\n): Promise<RunQueryErrorResult> => {\n  try {\n    const body = await response.text()\n    const json = JSON.parse(body)\n    const message = json.message || json.error\n\n    return {type: 'UNKNOWN_ERROR', message}\n  } catch {\n    return {type: 'UNKNOWN_ERROR', message: 'Failed to execute Flux query'}\n  }\n}\n\n/*\n  Given an arbitrary text chunk of a Flux CSV, trim partial lines off of the end\n  of the text.\n\n  For example, given the following partial Flux response,\n\n            r,baz,3\n      foo,bar,baz,2\n      foo,bar,b\n\n  we want to trim the last incomplete line, so that the result is\n\n            r,baz,3\n      foo,bar,baz,2\n\n*/\nconst trimPartialLines = (partialResp: string): string => {\n  let i = partialResp.length - 1\n\n  while (partialResp[i] !== '\\n') {\n    if (i <= 0) {\n      return partialResp\n    }\n\n    i -= 1\n  }\n\n  return partialResp.slice(0, i + 1)\n}\n","// extracted by mini-css-extract-plugin","// Types\nimport {\n  VariableEntities,\n  VariableArgumentType,\n  RemoteDataState,\n  QueryArguments,\n  MapArguments,\n  CSVArguments,\n  VariableValuesByID,\n} from 'src/types'\nimport {NormalizedSchema} from 'normalizr'\n\nexport const SET_VARIABLES = 'SET_VARIABLES'\nexport const SET_VARIABLE = 'SET_VARIABLE'\nexport const REMOVE_VARIABLE = 'REMOVE_VARIABLE'\nexport const MOVE_VARIABLE = 'MOVE_VARIABLE'\nexport const SET_VARIABLE_VALUES = 'SET_VARIABLE_VALUES'\nexport const SELECT_VARIABLE_VALUE = 'SELECT_VARIABLE_VALUE'\n\nexport type Action =\n  | ReturnType<typeof setVariables>\n  | ReturnType<typeof setVariable>\n  | ReturnType<typeof removeVariable>\n  | ReturnType<typeof moveVariable>\n  | ReturnType<typeof setValues>\n  | ReturnType<typeof selectValue>\n\n// R is the type of the value of the \"result\" key in normalizr's normalization\ntype VariablesSchema<R extends string | string[]> = NormalizedSchema<\n  VariableEntities,\n  R\n>\n\nexport const setVariables = (\n  status: RemoteDataState,\n  schema?: VariablesSchema<string[]>\n) =>\n  ({\n    type: SET_VARIABLES,\n    status,\n    schema,\n  } as const)\n\nexport const setVariable = (\n  id: string,\n  status: RemoteDataState,\n  schema?: VariablesSchema<string>\n) =>\n  ({\n    type: SET_VARIABLE,\n    id,\n    status,\n    schema,\n  } as const)\n\nexport const removeVariable = (id: string) =>\n  ({\n    type: REMOVE_VARIABLE,\n    id,\n  } as const)\n\nexport const moveVariable = (\n  originalIndex: number,\n  newIndex: number,\n  contextID: string\n) =>\n  ({\n    type: MOVE_VARIABLE,\n    originalIndex,\n    newIndex,\n    contextID,\n  } as const)\n\nexport const setValues = (\n  contextID: string,\n  status: RemoteDataState,\n  values?: VariableValuesByID\n) =>\n  ({\n    type: SET_VARIABLE_VALUES,\n    contextID,\n    status,\n    values,\n  } as const)\n\nexport const selectValue = (\n  contextID: string,\n  variableID: string,\n  selectedValue: string\n) =>\n  ({\n    type: SELECT_VARIABLE_VALUE,\n    contextID,\n    variableID,\n    selectedValue,\n  } as const)\n\n// Variable Editor Action Creators\nexport type EditorAction =\n  | ReturnType<typeof clearEditor>\n  | ReturnType<typeof updateType>\n  | ReturnType<typeof updateName>\n  | ReturnType<typeof updateQuery>\n  | ReturnType<typeof updateMap>\n  | ReturnType<typeof updateConstant>\n\nexport const CLEAR_VARIABLE_EDITOR = 'CLEAR_VARIABLE_EDITOR'\nexport const CHANGE_VARIABLE_EDITOR_TYPE = 'CHANCE_VARIABLE_EDITOR_TYPE'\nexport const UPDATE_VARIABLE_EDITOR_NAME = 'UPDATE_VARIABLE_EDITOR_NAME'\nexport const UPDATE_VARIABLE_EDITOR_QUERY = 'UPDATE_VARIABLE_EDITOR_QUERY'\nexport const UPDATE_VARIABLE_EDITOR_MAP = 'UPDATE_VARIABLE_EDITOR_MAP'\nexport const UPDATE_VARIABLE_EDITOR_CONSTANT = 'UPDATE_VARIABLE_EDITOR_CONSTANT'\n\nexport const clearEditor = () =>\n  ({\n    type: CLEAR_VARIABLE_EDITOR,\n  } as const)\n\nexport const updateType = (editorType: VariableArgumentType) =>\n  ({\n    type: CHANGE_VARIABLE_EDITOR_TYPE,\n    editorType,\n  } as const)\n\nexport const updateName = (name: string) =>\n  ({\n    type: UPDATE_VARIABLE_EDITOR_NAME,\n    name,\n  } as const)\n\nexport const updateQuery = (arg: QueryArguments) =>\n  ({\n    type: UPDATE_VARIABLE_EDITOR_QUERY,\n    payload: arg,\n  } as const)\n\nexport const updateMap = (arg: MapArguments) =>\n  ({\n    type: UPDATE_VARIABLE_EDITOR_MAP,\n    payload: arg,\n  } as const)\n\nexport const updateConstant = (arg: CSVArguments) =>\n  ({\n    type: UPDATE_VARIABLE_EDITOR_CONSTANT,\n    payload: arg,\n  } as const)\n","import {\n  apache,\n  docker,\n  gettingStarted,\n  github,\n  jmeter,\n  kubernetes,\n  nginx,\n  ossMetrics,\n  redis,\n  system,\n} from '@influxdata/influxdb-templates'\nimport {DashboardTemplate} from 'src/types'\n\nexport const ossMetricsTemplate = (): DashboardTemplate => {\n  return ossMetrics\n}\n\nexport const staticTemplates: {[k: string]: DashboardTemplate} = {\n  Apache: apache,\n  Docker: docker,\n  'getting-started': gettingStarted,\n  Github: github,\n  JMeter: jmeter,\n  Kubernetes: kubernetes,\n  Nginx: nginx,\n  'oss-metrics': ossMetrics,\n  Redis: redis,\n  System: system,\n}\n\nexport const influxdbTemplateList: DashboardTemplate[] = [\n  apache,\n  docker,\n  gettingStarted,\n  github,\n  jmeter,\n  kubernetes,\n  nginx,\n  ossMetrics,\n  redis,\n  system,\n].map((t, i) => ({...t, id: `influxdb-template-${i}`}))\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {ResourceType} from 'src/types'\nimport {labelSchema} from './labels'\n/* Buckets */\n\n// Defines the schema for the \"buckets\" resource\nexport const bucketSchema = new schema.Entity(ResourceType.Buckets, {\n  labels: [labelSchema],\n})\nexport const arrayOfBuckets = [bucketSchema]\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {ResourceType} from 'src/types'\n\n/* Members */\n\n// Defines the schema for the \"members\" resource\nexport const memberSchema = new schema.Entity(ResourceType.Members)\nexport const arrayOfMembers = [memberSchema]\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {ResourceType} from 'src/types'\n\n/* Organizations */\n\n// Defines the schema for the \"organizations\" resource\nexport const orgSchema = new schema.Entity(ResourceType.Orgs)\nexport const arrayOfOrgs = [orgSchema]\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {ResourceType} from 'src/types'\n\n/* Scrapers */\n\n// Defines the schema for the \"scrapers\" resource\n\nexport const scraperSchema = new schema.Entity(ResourceType.Scrapers)\nexport const arrayOfScrapers = [scraperSchema]\n","export {authSchema, arrayOfAuths} from './authorizations'\nexport {bucketSchema, arrayOfBuckets} from './buckets'\nexport {checkSchema, arrayOfChecks} from './checks'\nexport {\n  dashboardSchema,\n  arrayOfDashboards,\n  cellSchema,\n  arrayOfCells,\n  viewSchema,\n  arrayOfViews,\n} from './dashboards'\nexport {endpointSchema, arrayOfEndpoints} from './endpoints'\nexport {labelSchema, arrayOfLabels} from './labels'\nexport {memberSchema, arrayOfMembers} from './members'\nexport {orgSchema, arrayOfOrgs} from './orgs'\nexport {ruleSchema, arrayOfRules} from './rules'\nexport {scraperSchema, arrayOfScrapers} from './scrapers'\nexport {taskSchema, arrayOfTasks} from './tasks'\nexport {telegrafSchema, arrayOfTelegrafs} from './telegrafs'\nexport {templateSchema, arrayOfTemplates} from './templates'\nexport {variableSchema, arrayOfVariables} from './variables'\n","import {sample} from 'lodash'\nimport {Label, RemoteDataState, GenLabel} from 'src/types'\n\nimport {HEX_CODE_CHAR_LENGTH, PRESET_LABEL_COLORS} from 'src/labels/constants/'\n\nexport const randomPresetColor = () =>\n  sample(PRESET_LABEL_COLORS.slice(1)).colorHex\n\n// TODO: Accept a list of label objects instead of strings\n// Will have to wait until label types are standardized in the UI\nexport const validateLabelUniqueness = (\n  labelNames: string[],\n  name: string\n): string | null => {\n  if (typeof name !== 'string') {\n    return null\n  }\n\n  if (name.trim() === '') {\n    return 'Label name is required'\n  }\n\n  const isNameUnique = !labelNames.find(\n    labelName => labelName.toLowerCase() === name.toLowerCase()\n  )\n\n  if (!isNameUnique) {\n    return 'There is already a label with that name'\n  }\n\n  return null\n}\n\nexport const validateHexCode = (colorHex: string): string | null => {\n  const isValidLength = colorHex.length === HEX_CODE_CHAR_LENGTH\n  const beginsWithHash = colorHex.substring(0, 1) === '#'\n\n  const errorMessage = []\n\n  if (!beginsWithHash) {\n    errorMessage.push('Hexcodes must begin with #')\n  }\n\n  if (!isValidLength) {\n    if (errorMessage.length) {\n      errorMessage.push(`and must be ${HEX_CODE_CHAR_LENGTH} characters`)\n    } else {\n      errorMessage.push(`Hexcodes must be ${HEX_CODE_CHAR_LENGTH} characters`)\n    }\n  }\n\n  if (!errorMessage.length) {\n    return null\n  }\n\n  return errorMessage.join(', ')\n}\n\nconst DEFAULT_LABEL_COLOR = '#326BBA'\n\nexport const addLabelDefaults = (l: GenLabel): Label => {\n  const out = {\n    ...l,\n    status: RemoteDataState.Done,\n    properties: {\n      ...l.properties,\n      // add default color hex if missing\n      color: (l.properties || {}).color || DEFAULT_LABEL_COLOR,\n      description: (l.properties || {}).description || '',\n    },\n  }\n\n  return out\n}\n","// Libraries\nimport {get} from 'lodash'\n\n// Types\nimport {AppState, Organization} from 'src/types'\n\nexport const getOrg = (state: AppState): Organization => {\n  return get(state, 'resources.orgs.org', null)\n}\n\nexport const getOrgByID = (state: AppState, id: string) => {\n  const orgs = get(state, 'resources.orgs.byID')\n\n  if (!orgs) {\n    throw new Error('No orgs have been set')\n  }\n\n  if (!orgs[id]) {\n    throw new Error(\n      `No org with id \"${id}\" found in orgs state: ${JSON.stringify(\n        orgs,\n        null,\n        2\n      )}\"`\n    )\n  }\n\n  return orgs[id]\n}\n","// Libraries\nimport {omit} from 'lodash'\nimport uuid from 'uuid'\n\n// Types\nimport {\n  StatusRuleDraft,\n  SlackNotificationRuleBase,\n  SMTPNotificationRuleBase,\n  PagerDutyNotificationRuleBase,\n  NotificationEndpoint,\n  NotificationRuleDraft,\n  HTTPNotificationRuleBase,\n  RuleStatusLevel,\n  PostNotificationRule,\n  GenRule,\n} from 'src/types'\nimport {RemoteDataState} from '@influxdata/clockface'\n\ntype RuleVariantFields =\n  | SlackNotificationRuleBase\n  | SMTPNotificationRuleBase\n  | PagerDutyNotificationRuleBase\n  | HTTPNotificationRuleBase\n\nconst defaultMessage =\n  'Notification Rule: ${ r._notification_rule_name } triggered by check: ${ r._check_name }: ${ r._message }'\n\nexport const getRuleVariantDefaults = (\n  endpoints: NotificationEndpoint[],\n  id: string\n): RuleVariantFields => {\n  const endpoint = endpoints.find(e => e.id === id)\n\n  switch (endpoint.type) {\n    case 'slack': {\n      return {messageTemplate: defaultMessage, channel: '', type: 'slack'}\n    }\n\n    case 'pagerduty': {\n      return {messageTemplate: defaultMessage, type: 'pagerduty'}\n    }\n\n    case 'http': {\n      return {type: 'http', url: ''}\n    }\n\n    default: {\n      throw new Error(`Could not find NotificationEndpoint with id \"${id}\"`)\n    }\n  }\n}\n\ntype Change = 'changes from' | 'is equal to'\nexport const CHANGES: Change[] = ['changes from', 'is equal to']\n\nexport const activeChange = (status: StatusRuleDraft) => {\n  const {previousLevel} = status.value\n\n  if (!!previousLevel) {\n    return 'changes from'\n  }\n  return 'is equal to'\n}\n\nexport const previousLevel = 'OK' as RuleStatusLevel\n\nexport const changeStatusRule = (\n  status: StatusRuleDraft,\n  changeType: Change\n): StatusRuleDraft => {\n  if (changeType === 'is equal to') {\n    return omit(status, 'value.previousLevel') as StatusRuleDraft\n  }\n\n  const {value} = status\n  const newValue = {...value, previousLevel}\n\n  return {...status, value: newValue}\n}\n\nexport const initRuleDraft = (orgID: string): NotificationRuleDraft => ({\n  type: 'http',\n  every: '10m',\n  offset: '0s',\n  url: '',\n  orgID,\n  name: '',\n  activeStatus: 'active',\n  status: RemoteDataState.NotStarted,\n  endpointID: '',\n  tagRules: [],\n  labels: [],\n  statusRules: [\n    {\n      cid: uuid.v4(),\n      value: {\n        currentLevel: 'CRIT',\n        period: '1h',\n        count: 1,\n      },\n    },\n  ],\n  description: '',\n})\n\n// Prepare a newly created rule for persistence\nexport const draftRuleToPostRule = (\n  draftRule: NotificationRuleDraft\n): PostNotificationRule => {\n  return {\n    ...draftRule,\n    status: draftRule.activeStatus,\n    statusRules: draftRule.statusRules.map(r => r.value),\n    tagRules: draftRule.tagRules\n      .map(r => r.value)\n      .filter(tr => tr.key && tr.value),\n  } as PostNotificationRule\n}\n\nexport const newTagRuleDraft = () => ({\n  cid: uuid.v4(),\n  value: {\n    key: '',\n    value: '',\n    operator: 'equal' as 'equal',\n  },\n})\n\n// Prepare a persisted rule for editing\nexport const ruleToDraftRule = (rule: GenRule): NotificationRuleDraft => {\n  const statusRules = rule.statusRules || []\n  const tagRules = rule.tagRules || []\n  return {\n    ...rule,\n    labels: rule.labels.map(l => l.id),\n    status: RemoteDataState.Done,\n    activeStatus: rule.status,\n    offset: rule.offset || '',\n    statusRules: statusRules.map(value => ({cid: uuid.v4(), value})),\n    tagRules: tagRules.map(value => ({cid: uuid.v4(), value})),\n  }\n}\n","// Libraries\nimport React, {PureComponent, RefObject} from 'react'\nimport {\n  Button,\n  ComponentColor,\n  ComponentSize,\n  ButtonType,\n  ComponentStatus,\n  Overlay,\n} from '@influxdata/clockface'\n\ninterface Props {\n  onClickBack?: () => void\n  skipButtonText?: string\n  nextButtonText?: string\n  backButtonText?: string\n  onClickSkip?: () => void\n  nextButtonStatus?: ComponentStatus\n  showSkip?: boolean\n  autoFocusNext?: boolean\n  className?: string\n}\n\nclass OnboardingButtons extends PureComponent<Props> {\n  public static defaultProps: Props = {\n    nextButtonStatus: ComponentStatus.Default,\n    showSkip: false,\n    autoFocusNext: true,\n    skipButtonText: 'Skip',\n    backButtonText: 'Previous',\n    nextButtonText: 'Continue',\n  }\n\n  private submitRef: RefObject<HTMLButtonElement> = React.createRef()\n\n  public componentDidMount() {\n    if (this.props.autoFocusNext) {\n      const buttonRef = this.submitRef.current\n      if (buttonRef) {\n        buttonRef.focus()\n      }\n    }\n  }\n\n  public componentDidUpdate() {\n    if (this.props.autoFocusNext) {\n      const buttonRef = this.submitRef.current\n      if (buttonRef) {\n        buttonRef.focus()\n      }\n    }\n  }\n\n  public render() {\n    const {nextButtonText, nextButtonStatus, className} = this.props\n    return (\n      <Overlay.Footer className={className}>\n        {this.backButton}\n        <Button\n          color={ComponentColor.Primary}\n          text={nextButtonText}\n          type={ButtonType.Submit}\n          testID=\"next\"\n          ref={this.submitRef}\n          status={nextButtonStatus}\n          tabIndex={0}\n        />\n        {this.skipButton}\n      </Overlay.Footer>\n    )\n  }\n\n  private get backButton(): JSX.Element {\n    const {backButtonText, onClickBack} = this.props\n\n    if (!onClickBack || !backButtonText) {\n      return\n    }\n\n    return (\n      <Button\n        color={ComponentColor.Default}\n        text={backButtonText}\n        onClick={onClickBack}\n        testID=\"back\"\n        tabIndex={1}\n      />\n    )\n  }\n\n  private get skipButton(): JSX.Element {\n    const {skipButtonText, onClickSkip, showSkip} = this.props\n    if (!showSkip) {\n      return\n    }\n\n    return (\n      <div className=\"wizard--skip-container\">\n        <Button\n          className=\"wizard--skip-button\"\n          size={ComponentSize.Medium}\n          color={ComponentColor.Default}\n          text={skipButtonText}\n          onClick={onClickSkip}\n          testID=\"skip\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default OnboardingButtons\n","// Utils\nimport {parseDuration, timeRangeToDuration} from 'src/shared/utils/duration'\n\n// Constants\nimport {TIME_RANGE_START, TIME_RANGE_STOP} from 'src/variables/constants'\n\n// Types\nimport {TimeRange} from 'src/types'\nimport {VariableAssignment} from 'src/types/ast'\n\nexport const getTimeRangeVars = (\n  timeRange: TimeRange\n): VariableAssignment[] => {\n  let startValue: VariableAssignment\n\n  if (isDateParseable(timeRange.lower)) {\n    startValue = generateDateTimeLiteral(TIME_RANGE_START, timeRange.lower)\n  } else {\n    startValue = {\n      type: 'VariableAssignment',\n      id: {\n        type: 'Identifier',\n        name: TIME_RANGE_START,\n      },\n      init: {\n        type: 'UnaryExpression',\n        operator: '-',\n        argument: {\n          type: 'DurationLiteral',\n          values: parseDuration(timeRangeToDuration(timeRange)),\n        },\n      },\n    }\n  }\n\n  let stopValue: VariableAssignment\n\n  if (timeRange.upper && isDateParseable(timeRange.upper)) {\n    stopValue = generateDateTimeLiteral(TIME_RANGE_STOP, timeRange.upper)\n  } else {\n    stopValue = {\n      type: 'VariableAssignment',\n      id: {\n        type: 'Identifier',\n        name: TIME_RANGE_STOP,\n      },\n      init: {\n        type: 'CallExpression',\n        callee: {\n          type: 'Identifier',\n          name: 'now',\n        },\n      },\n    }\n  }\n  return [startValue, stopValue]\n}\n\nconst generateDateTimeLiteral = (\n  name: string,\n  value: string\n): VariableAssignment => {\n  return {\n    type: 'VariableAssignment',\n    id: {\n      type: 'Identifier',\n      name,\n    },\n    init: {\n      type: 'DateTimeLiteral',\n      value: new Date(value).toISOString(),\n    },\n  }\n}\n\nexport const isDateParseable = (ambiguousString: string): boolean =>\n  !isNaN(Date.parse(ambiguousString))\n","// Types\nimport {\n  Run,\n  LogEvent,\n  TaskOptionKeys,\n  RemoteDataState,\n  TaskEntities,\n} from 'src/types'\nimport {NormalizedSchema} from 'normalizr'\n\nexport const SET_TASKS = 'SET_TASKS'\nexport const EDIT_TASK = 'EDIT_TASK'\nexport const SET_TASK_OPTION = 'SET_TASK_OPTION'\nexport const SET_ALL_TASK_OPTIONS = 'SET_ALL_TASK_OPTIONS'\nexport const CLEAR_TASK = 'CLEAR_TASK'\nexport const CLEAR_CURRENT_TASK = 'CLEAR_CURRENT_TASK'\nexport const SET_NEW_SCRIPT = 'SET_NEW_SCRIPT'\nexport const SET_CURRENT_SCRIPT = 'SET_CURRENT_SCRIPT'\nexport const SET_CURRENT_TASK = 'SET_CURRENT_TASK'\nexport const SET_SEARCH_TERM = 'SET_SEARCH_TERM'\nexport const SET_SHOW_INACTIVE = 'SET_SHOW_INACTIVE'\nexport const SET_RUNS = 'SET_RUNS'\nexport const SET_LOGS = 'SET_LOGS'\nexport const REMOVE_TASK = 'REMOVE_TASK'\nexport const ADD_TASK = 'ADD_TASK'\n\nexport type Action =\n  | ReturnType<typeof setTasks>\n  | ReturnType<typeof editTask>\n  | ReturnType<typeof setTaskOption>\n  | ReturnType<typeof setAllTaskOptions>\n  | ReturnType<typeof setSearchTerm>\n  | ReturnType<typeof setCurrentScript>\n  | ReturnType<typeof setCurrentTask>\n  | ReturnType<typeof setShowInactive>\n  | ReturnType<typeof clearTask>\n  | ReturnType<typeof setRuns>\n  | ReturnType<typeof setLogs>\n  | ReturnType<typeof editTask>\n  | ReturnType<typeof setNewScript>\n  | ReturnType<typeof clearCurrentTask>\n  | ReturnType<typeof removeTask>\n  | ReturnType<typeof addTask>\n\n// R is the type of the value of the \"result\" key in normalizr's normalization\ntype TasksSchema<R extends string | string[]> = NormalizedSchema<\n  TaskEntities,\n  R\n>\nexport const setTasks = (\n  status: RemoteDataState,\n  schema?: TasksSchema<string[]>\n) =>\n  ({\n    type: SET_TASKS,\n    status,\n    schema,\n  } as const)\n\nexport const addTask = (schema: TasksSchema<string>) =>\n  ({\n    type: ADD_TASK,\n    schema,\n  } as const)\n\nexport const editTask = (schema: TasksSchema<string>) =>\n  ({\n    type: EDIT_TASK,\n    schema,\n  } as const)\n\nexport const removeTask = (id: string) =>\n  ({\n    type: REMOVE_TASK,\n    id,\n  } as const)\n\nexport const setCurrentTask = (schema: TasksSchema<string>) =>\n  ({\n    type: SET_CURRENT_TASK,\n    schema,\n  } as const)\n\nexport const clearCurrentTask = () =>\n  ({\n    type: CLEAR_CURRENT_TASK,\n  } as const)\n\nexport const setTaskOption = (taskOption: {\n  key: TaskOptionKeys\n  value: string\n}) =>\n  ({\n    type: SET_TASK_OPTION,\n    ...taskOption,\n  } as const)\n\nexport const setAllTaskOptions = (schema: TasksSchema<string>) =>\n  ({\n    type: SET_ALL_TASK_OPTIONS,\n    schema,\n  } as const)\n\nexport const clearTask = () =>\n  ({\n    type: CLEAR_TASK,\n  } as const)\n\nexport const setNewScript = (script: string) =>\n  ({\n    type: SET_NEW_SCRIPT,\n    script,\n  } as const)\n\nexport const setCurrentScript = (script: string) =>\n  ({\n    type: SET_CURRENT_SCRIPT,\n    script,\n  } as const)\n\nexport const setSearchTerm = (searchTerm: string) =>\n  ({\n    type: SET_SEARCH_TERM,\n    searchTerm,\n  } as const)\n\nexport const setShowInactive = () =>\n  ({\n    type: SET_SHOW_INACTIVE,\n  } as const)\n\nexport const setRuns = (runs: Run[], runStatus: RemoteDataState) =>\n  ({\n    type: SET_RUNS,\n    runs,\n    runStatus,\n  } as const)\n\nexport const setLogs = (logs: LogEvent[]) =>\n  ({\n    type: SET_LOGS,\n    logs,\n  } as const)\n","import uuid from 'uuid'\n\nconst COLOR_TYPE_SCALE = 'scale'\n\n// Color Palettes\nexport const LINE_COLORS_A = [\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#31C0F6',\n    id: uuid.v4(),\n    name: 'Nineteen Eighty Four',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#A500A5',\n    id: uuid.v4(),\n    name: 'Nineteen Eighty Four',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#FF7E27',\n    id: uuid.v4(),\n    name: 'Nineteen Eighty Four',\n    value: 0,\n  },\n]\n\nexport const LINE_COLORS_B = [\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#74D495',\n    id: uuid.v4(),\n    name: 'Atlantis',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#3F3FBA',\n    id: uuid.v4(),\n    name: 'Atlantis',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#FF4D9E',\n    id: uuid.v4(),\n    name: 'Atlantis',\n    value: 0,\n  },\n]\n\nexport const LINE_COLORS_C = [\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#8F8AF4',\n    id: uuid.v4(),\n    name: 'Do Androids Dream of Electric Sheep?',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#A51414',\n    id: uuid.v4(),\n    name: 'Do Androids Dream of Electric Sheep?',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#F4CF31',\n    id: uuid.v4(),\n    name: 'Do Androids Dream of Electric Sheep?',\n    value: 0,\n  },\n]\n\nexport const LINE_COLORS_D = [\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#FD7A5D',\n    id: uuid.v4(),\n    name: 'Delorean',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#5F1CF2',\n    id: uuid.v4(),\n    name: 'Delorean',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#4CE09A',\n    id: uuid.v4(),\n    name: 'Delorean',\n    value: 0,\n  },\n]\n\nexport const LINE_COLORS_E = [\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#FDC44F',\n    id: uuid.v4(),\n    name: 'Cthulhu',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#007C76',\n    id: uuid.v4(),\n    name: 'Cthulhu',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#8983FF',\n    id: uuid.v4(),\n    name: 'Cthulhu',\n    value: 0,\n  },\n]\n\nexport const LINE_COLORS_F = [\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#DA6FF1',\n    id: uuid.v4(),\n    name: 'Ectoplasm',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#00717A',\n    id: uuid.v4(),\n    name: 'Ectoplasm',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#ACFF76',\n    id: uuid.v4(),\n    name: 'Ectoplasm',\n    value: 0,\n  },\n]\n\nexport const LINE_COLORS_G = [\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#F6F6F8',\n    id: uuid.v4(),\n    name: 'T-Max 400 Film',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#A4A8B6',\n    id: uuid.v4(),\n    name: 'T-Max 400 Film',\n    value: 0,\n  },\n  {\n    type: COLOR_TYPE_SCALE,\n    hex: '#545667',\n    id: uuid.v4(),\n    name: 'T-Max 400 Film',\n    value: 0,\n  },\n]\n\nexport const DEFAULT_LINE_COLORS = LINE_COLORS_A\n\nexport const LINE_COLOR_SCALES = [\n  LINE_COLORS_A,\n  LINE_COLORS_B,\n  LINE_COLORS_C,\n  LINE_COLORS_D,\n  LINE_COLORS_E,\n  LINE_COLORS_F,\n  LINE_COLORS_G,\n].map(colorScale => {\n  const name = colorScale[0].name\n  const colors = colorScale\n  const id = colorScale[0].id\n\n  return {name, colors, id}\n})\n","import _ from 'lodash'\n\nexport const MAX_THRESHOLDS = 5\nexport const MIN_THRESHOLDS = 2\n\nexport const COLOR_TYPE_MIN = 'min'\nexport const DEFAULT_VALUE_MIN = 0\nexport const COLOR_TYPE_MAX = 'max'\nexport const DEFAULT_VALUE_MAX = 100\nexport const COLOR_TYPE_THRESHOLD = 'threshold'\n\nexport const THRESHOLD_TYPE_TEXT = 'text'\nexport const THRESHOLD_TYPE_BG = 'background'\n\nexport const BASE_THRESHOLD_ID = 'base'\n\nexport const THRESHOLD_COLORS = [\n  {\n    hex: '#BF3D5E',\n    name: 'ruby',\n  },\n  {\n    hex: '#DC4E58',\n    name: 'fire',\n  },\n  {\n    hex: '#F95F53',\n    name: 'curacao',\n  },\n  {\n    hex: '#F48D38',\n    name: 'tiger',\n  },\n  {\n    hex: '#FFB94A',\n    name: 'pineapple',\n  },\n  {\n    hex: '#FFD255',\n    name: 'thunder',\n  },\n  {\n    hex: '#7CE490',\n    name: 'honeydew',\n  },\n  {\n    hex: '#4ED8A0',\n    name: 'rainforest',\n  },\n  {\n    hex: '#32B08C',\n    name: 'viridian',\n  },\n  {\n    hex: '#4591ED',\n    name: 'ocean',\n  },\n  {\n    hex: '#22ADF6',\n    name: 'pool',\n  },\n  {\n    hex: '#00C9FF',\n    name: 'laser',\n  },\n  {\n    hex: '#513CC6',\n    name: 'planet',\n  },\n  {\n    hex: '#7A65F2',\n    name: 'star',\n  },\n  {\n    hex: '#9394FF',\n    name: 'comet',\n  },\n  {\n    hex: '#383846',\n    name: 'pepper',\n  },\n  {\n    hex: '#545667',\n    name: 'graphite',\n  },\n  {\n    hex: '#ffffff',\n    name: 'white',\n  },\n  {\n    hex: '#292933',\n    name: 'castle',\n  },\n]\n\nexport const DEFAULT_GAUGE_COLORS = [\n  {\n    type: COLOR_TYPE_MIN,\n    hex: THRESHOLD_COLORS[11].hex,\n    id: '0',\n    name: THRESHOLD_COLORS[11].name,\n    value: DEFAULT_VALUE_MIN,\n  },\n  {\n    type: COLOR_TYPE_MAX,\n    hex: THRESHOLD_COLORS[14].hex,\n    id: '1',\n    name: THRESHOLD_COLORS[14].name,\n    value: DEFAULT_VALUE_MAX,\n  },\n]\n\nexport const DEFAULT_THRESHOLDS_LIST_COLORS = [\n  {\n    type: THRESHOLD_TYPE_TEXT,\n    hex: THRESHOLD_COLORS[11].hex,\n    id: BASE_THRESHOLD_ID,\n    name: THRESHOLD_COLORS[11].name,\n    value: 0,\n  },\n]\n\nexport const DEFAULT_THRESHOLDS_TABLE_COLORS = [\n  {\n    type: THRESHOLD_TYPE_TEXT,\n    hex: THRESHOLD_COLORS[17].hex,\n    id: BASE_THRESHOLD_ID,\n    name: THRESHOLD_COLORS[17].name,\n    value: 0,\n  },\n]\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {RemoteDataState, ResourceType, Variable} from 'src/types'\nimport {labelSchema} from './labels'\n\n// Defines the schema for the \"variables\" resource\nexport const variableSchema = new schema.Entity(\n  ResourceType.Variables,\n  {\n    labels: [labelSchema],\n  },\n  {\n    processStrategy: (v: Variable): Variable => {\n      return {\n        ...v,\n        status: RemoteDataState.Done,\n      }\n    },\n  }\n)\nexport const arrayOfVariables = [variableSchema]\n","// APIs\nimport {queryBuilderFetcher} from 'src/timeMachine/apis/QueryBuilderFetcher'\n\n// Utils\nimport {\n  getActiveQuery,\n  getActiveTimeMachine,\n  getTimeRange,\n} from 'src/timeMachine/selectors'\n\n// Types\nimport {\n  BuilderAggregateFunctionType,\n  GetState,\n  RemoteDataState,\n} from 'src/types'\nimport {Dispatch} from 'react'\nimport {BuilderFunctionsType} from '@influxdata/influx'\nimport {\n  Action as AlertBuilderAction,\n  setEvery,\n} from 'src/alerting/actions/alertBuilder'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\nexport type Action =\n  | ReturnType<typeof setBuilderAggregateFunctionType>\n  | ReturnType<typeof setBuilderBucket>\n  | ReturnType<typeof setBuilderBuckets>\n  | ReturnType<typeof setBuilderBucketsStatus>\n  | ReturnType<typeof setBuilderTagKeys>\n  | ReturnType<typeof setBuilderTagKeysStatus>\n  | ReturnType<typeof setBuilderTagValues>\n  | ReturnType<typeof setBuilderTagValuesStatus>\n  | ReturnType<typeof setBuilderTagKeySelection>\n  | ReturnType<typeof setBuilderTagValuesSelection>\n  | ReturnType<typeof addTagSelectorSync>\n  | ReturnType<typeof removeTagSelectorSync>\n  | ReturnType<typeof setFunctions>\n  | ReturnType<typeof setAggregateWindow>\n  | ReturnType<typeof setValuesSearchTerm>\n  | ReturnType<typeof setKeysSearchTerm>\n  | ReturnType<typeof setBuilderTagsStatus>\n\nexport const setBuilderAggregateFunctionType = (\n  builderAggregateFunctionType: BuilderAggregateFunctionType,\n  index: number\n) => ({\n  type: 'SET_BUILDER_AGGREGATE_FUNCTION_TYPE' as 'SET_BUILDER_AGGREGATE_FUNCTION_TYPE',\n  payload: {builderAggregateFunctionType, index},\n})\n\nconst setBuilderBucketsStatus = (bucketsStatus: RemoteDataState) => ({\n  type: 'SET_BUILDER_BUCKETS_STATUS' as 'SET_BUILDER_BUCKETS_STATUS',\n  payload: {bucketsStatus},\n})\n\nexport const setBuilderBuckets = (buckets: string[]) => ({\n  type: 'SET_BUILDER_BUCKETS' as 'SET_BUILDER_BUCKETS',\n  payload: {buckets},\n})\n\nconst setBuilderBucket = (bucket: string, resetSelections: boolean) => ({\n  type: 'SET_BUILDER_BUCKET_SELECTION' as 'SET_BUILDER_BUCKET_SELECTION',\n  payload: {bucket, resetSelections},\n})\n\nexport const setBuilderTagsStatus = (status: RemoteDataState) => ({\n  type: 'SET_BUILDER_TAGS_STATUS' as 'SET_BUILDER_TAGS_STATUS',\n  payload: {status},\n})\n\nconst setBuilderTagKeys = (index: number, keys: string[]) => ({\n  type: 'SET_BUILDER_TAG_KEYS' as 'SET_BUILDER_TAG_KEYS',\n  payload: {index, keys},\n})\n\nconst setBuilderTagKeysStatus = (index: number, status: RemoteDataState) => ({\n  type: 'SET_BUILDER_TAG_KEYS_STATUS' as 'SET_BUILDER_TAG_KEYS_STATUS',\n  payload: {index, status},\n})\n\nconst setBuilderTagValues = (index: number, values: string[]) => ({\n  type: 'SET_BUILDER_TAG_VALUES' as 'SET_BUILDER_TAG_VALUES',\n  payload: {index, values},\n})\n\nconst setBuilderTagValuesStatus = (index: number, status: RemoteDataState) => ({\n  type: 'SET_BUILDER_TAG_VALUES_STATUS' as 'SET_BUILDER_TAG_VALUES_STATUS',\n  payload: {index, status},\n})\n\nconst setBuilderTagKeySelection = (index: number, key: string) => ({\n  type: 'SET_BUILDER_TAG_KEY_SELECTION' as 'SET_BUILDER_TAG_KEY_SELECTION',\n  payload: {index, key},\n})\n\nconst setBuilderTagValuesSelection = (index: number, values: string[]) => ({\n  type: 'SET_BUILDER_TAG_VALUES_SELECTION' as 'SET_BUILDER_TAG_VALUES_SELECTION',\n  payload: {index, values},\n})\n\nconst addTagSelectorSync = () => ({\n  type: 'ADD_TAG_SELECTOR' as 'ADD_TAG_SELECTOR',\n})\n\nconst removeTagSelectorSync = (index: number) => ({\n  type: 'REMOVE_TAG_SELECTOR' as 'REMOVE_TAG_SELECTOR',\n  payload: {index},\n})\n\nexport const setFunctions = (functions: BuilderFunctionsType[]) => ({\n  type: 'SELECT_BUILDER_FUNCTION' as 'SELECT_BUILDER_FUNCTION',\n  payload: {functions},\n})\n\nexport const setAggregateWindow = (period: string) => ({\n  type: 'SET_AGGREGATE_WINDOW' as 'SET_AGGREGATE_WINDOW',\n  payload: {period},\n})\n\nexport const setValuesSearchTerm = (index: number, searchTerm: string) => ({\n  type: 'SET_BUILDER_VALUES_SEARCH_TERM' as 'SET_BUILDER_VALUES_SEARCH_TERM',\n  payload: {index, searchTerm},\n})\n\nexport const setKeysSearchTerm = (index: number, searchTerm: string) => ({\n  type: 'SET_BUILDER_KEYS_SEARCH_TERM' as 'SET_BUILDER_KEYS_SEARCH_TERM',\n  payload: {index, searchTerm},\n})\n\nexport const selectAggregateWindow = (period: string) => (\n  dispatch: Dispatch<Action | AlertBuilderAction>\n) => {\n  dispatch(setAggregateWindow(period))\n  dispatch(setEvery(period))\n}\n\nexport const loadBuckets = () => async (\n  dispatch: Dispatch<Action | ReturnType<typeof selectBucket>>,\n  getState: GetState\n) => {\n  const queryURL = getState().links.query.self\n  const orgID = getOrg(getState()).id\n\n  dispatch(setBuilderBucketsStatus(RemoteDataState.Loading))\n\n  try {\n    let buckets = await queryBuilderFetcher.findBuckets({\n      url: queryURL,\n      orgID,\n    })\n\n    const systemBuckets = buckets.filter(b => b.startsWith('_'))\n    const userBuckets = buckets.filter(b => !b.startsWith('_'))\n    buckets = [...userBuckets, ...systemBuckets]\n\n    const selectedBucket = getActiveQuery(getState()).builderConfig.buckets[0]\n\n    dispatch(setBuilderBuckets(buckets))\n\n    if (selectedBucket && buckets.includes(selectedBucket)) {\n      dispatch(selectBucket(selectedBucket))\n    } else {\n      dispatch(selectBucket(buckets[0], true))\n    }\n  } catch (e) {\n    if (e.name === 'CancellationError') {\n      return\n    }\n\n    console.error(e)\n    dispatch(setBuilderBucketsStatus(RemoteDataState.Error))\n  }\n}\n\nexport const selectBucket = (\n  bucket: string,\n  resetSelections: boolean = false\n) => (dispatch: Dispatch<Action | ReturnType<typeof loadTagSelector>>) => {\n  dispatch(setBuilderBucket(bucket, resetSelections))\n  dispatch(loadTagSelector(0))\n}\n\nexport const loadTagSelector = (index: number) => async (\n  dispatch: Dispatch<Action | ReturnType<typeof loadTagSelectorValues>>,\n  getState: GetState\n) => {\n  const {buckets, tags} = getActiveQuery(getState()).builderConfig\n\n  if (!tags[index] || !buckets[0]) {\n    return\n  }\n\n  const tagsSelections = tags.slice(0, index)\n  const queryURL = getState().links.query.self\n  const orgID = getOrg(getState()).id\n\n  dispatch(setBuilderTagKeysStatus(index, RemoteDataState.Loading))\n\n  try {\n    const timeRange = getTimeRange(getState())\n    const searchTerm = getActiveTimeMachine(getState()).queryBuilder.tags[index]\n      .keysSearchTerm\n\n    const keys = await queryBuilderFetcher.findKeys(index, {\n      url: queryURL,\n      orgID,\n      bucket: buckets[0],\n      tagsSelections,\n      searchTerm,\n      timeRange,\n    })\n\n    const {key} = tags[index]\n\n    if (!key) {\n      let defaultKey: string\n\n      if (index === 0 && keys.includes('_measurement')) {\n        defaultKey = '_measurement'\n      } else {\n        defaultKey = keys[0]\n      }\n\n      dispatch(setBuilderTagKeySelection(index, defaultKey))\n    } else if (!keys.includes(key)) {\n      // Even if the selected key didn't come back in the results, let it be\n      // selected anyway\n      keys.unshift(key)\n    }\n\n    dispatch(setBuilderTagKeys(index, keys))\n    dispatch(loadTagSelectorValues(index))\n  } catch (e) {\n    if (e.name === 'CancellationError') {\n      return\n    }\n\n    console.error(e)\n    dispatch(setBuilderTagKeysStatus(index, RemoteDataState.Error))\n  }\n}\n\nconst loadTagSelectorValues = (index: number) => async (\n  dispatch: Dispatch<Action | ReturnType<typeof loadTagSelector>>,\n  getState: GetState\n) => {\n  const state = getState()\n  const {buckets, tags} = getActiveQuery(state).builderConfig\n  const tagsSelections = tags.slice(0, index)\n  const queryURL = state.links.query.self\n  const orgID = getOrg(getState()).id\n\n  dispatch(setBuilderTagValuesStatus(index, RemoteDataState.Loading))\n\n  try {\n    const timeRange = getTimeRange(getState())\n    const key = getActiveQuery(getState()).builderConfig.tags[index].key\n    const searchTerm = getActiveTimeMachine(getState()).queryBuilder.tags[index]\n      .valuesSearchTerm\n\n    const values = await queryBuilderFetcher.findValues(index, {\n      url: queryURL,\n      orgID,\n      bucket: buckets[0],\n      tagsSelections,\n      key,\n      searchTerm,\n      timeRange,\n    })\n\n    const {values: selectedValues} = tags[index]\n\n    for (const selectedValue of selectedValues) {\n      // Even if the selected values didn't come back in the results, let them\n      // be selected anyway\n      if (!values.includes(selectedValue)) {\n        values.unshift(selectedValue)\n      }\n    }\n\n    dispatch(setBuilderTagValues(index, values))\n    dispatch(loadTagSelector(index + 1))\n  } catch (e) {\n    if (e.name === 'CancellationError') {\n      return\n    }\n\n    console.error(e)\n    dispatch(setBuilderTagValuesStatus(index, RemoteDataState.Error))\n  }\n}\n\nexport const selectTagValue = (index: number, value: string) => (\n  dispatch: Dispatch<Action | ReturnType<typeof addTagSelector>>,\n  getState: GetState\n) => {\n  const state = getState()\n  const {\n    timeMachines: {activeTimeMachineID},\n  } = state\n  const tags = getActiveQuery(state).builderConfig.tags\n  const currentTag = tags[index]\n  const values = currentTag.values\n\n  let newValues: string[]\n\n  if (values.includes(value)) {\n    newValues = values.filter(v => v !== value)\n  } else if (\n    activeTimeMachineID === 'alerting' &&\n    currentTag.key === '_field'\n  ) {\n    newValues = [value]\n  } else {\n    newValues = [...values, value]\n  }\n\n  dispatch(setBuilderTagValuesSelection(index, newValues))\n\n  // don't add a new tag filter if we're grouping\n  if (currentTag.aggregateFunctionType === 'group') {\n    return\n  }\n\n  if (index === tags.length - 1 && newValues.length) {\n    dispatch(addTagSelector())\n  } else {\n    dispatch(loadTagSelector(index + 1))\n  }\n}\n\nexport const selectBuilderFunction = (name: string) => (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  const state = getState()\n  const {\n    timeMachines: {activeTimeMachineID},\n  } = state\n  const {draftQueries, activeQueryIndex} = getActiveTimeMachine(state)\n\n  const functions = draftQueries[activeQueryIndex].builderConfig.functions\n\n  let newFunctions: BuilderFunctionsType[]\n\n  if (functions.find(f => f.name === name)) {\n    newFunctions = functions.filter(f => f.name !== name)\n  } else if (activeTimeMachineID === 'alerting') {\n    newFunctions = [{name}]\n  } else {\n    newFunctions = [...functions, {name}]\n  }\n  dispatch(setFunctions(newFunctions))\n}\n\nexport const selectTagKey = (index: number, key: string) => (\n  dispatch: Dispatch<Action>\n) => {\n  dispatch(setBuilderTagKeySelection(index, key))\n  dispatch(loadTagSelectorValues(index))\n}\n\nexport const searchTagValues = (index: number) => (\n  dispatch: Dispatch<Action>\n) => {\n  dispatch(loadTagSelectorValues(index))\n}\n\nexport const searchTagKeys = (index: number) => (\n  dispatch: Dispatch<Action>\n) => {\n  dispatch(loadTagSelector(index))\n}\n\nexport const addTagSelector = () => (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  dispatch(addTagSelectorSync())\n\n  const newIndex = getActiveQuery(getState()).builderConfig.tags.length - 1\n\n  dispatch(loadTagSelector(newIndex))\n}\n\nexport const removeTagSelector = (index: number) => (\n  dispatch: Dispatch<Action>\n) => {\n  queryBuilderFetcher.cancelFindValues(index)\n  queryBuilderFetcher.cancelFindKeys(index)\n\n  dispatch(removeTagSelectorSync(index))\n  dispatch(loadTagSelector(index))\n}\n\nexport const reloadTagSelectors = () => (dispatch: Dispatch<Action>) => {\n  dispatch(setBuilderTagsStatus(RemoteDataState.Loading))\n  dispatch(loadTagSelector(0))\n}\n","import {get} from 'lodash'\n\nimport {AppState, View, Check, ViewType, TimeRange} from 'src/types'\n\nimport {\n  getValuesForVariable,\n  getTypeForVariable,\n  getArgumentValuesForVariable,\n} from 'src/variables/selectors'\n\n// Constants\nimport {DEFAULT_TIME_RANGE} from 'src/shared/constants/timeRanges'\n\nexport const getTimeRangeByDashboardID = (\n  state: AppState,\n  dashboardID: string\n): TimeRange => state.ranges[dashboardID] || DEFAULT_TIME_RANGE\n\nexport const getCheckForView = (\n  state: AppState,\n  view: View\n): Partial<Check> => {\n  const viewType: ViewType = get(view, 'properties.type')\n  const checkID = get(view, 'properties.checkID')\n\n  return viewType === 'check' ? state.resources.checks.byID[checkID] : null\n}\n\ninterface DropdownValues {\n  list: {name: string; value: string}[]\n  selectedKey: string\n}\n\nexport const getVariableValuesForDropdown = (\n  state: AppState,\n  variableID: string,\n  contextID: string\n): DropdownValues => {\n  const {selectedValue, values} = getValuesForVariable(\n    state,\n    variableID,\n    contextID\n  )\n\n  if (!values) {\n    return {list: null, selectedKey: null}\n  }\n\n  const type = getTypeForVariable(state, variableID)\n\n  switch (type) {\n    case 'map': {\n      const mapValues = getArgumentValuesForVariable(state, variableID) as {\n        [key: string]: string\n      }\n\n      const list = Object.entries(mapValues).map(([name, value]) => ({\n        name,\n        value,\n      }))\n\n      return {\n        selectedKey: selectedValue,\n        list,\n      }\n    }\n    default:\n      const list = values.map(v => ({name: v, value: v}))\n\n      return {selectedKey: selectedValue, list}\n  }\n}\n","import {startsWith} from 'lodash'\n\nexport const MIN_RETENTION_SECONDS = 3600\n\nexport const isSystemBucket = (bucketName: string): boolean => {\n  return startsWith(bucketName, '_')\n}\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoApache: SFC = () => {\n  return (\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 49.92 100\">\n      <defs>\n        <linearGradient\n          id=\"apache_c\"\n          x1={-1886.65}\n          y1={4996.93}\n          x2={-1872.53}\n          y2={4980.42}\n          gradientTransform=\"scale(1 -1) rotate(65.2 2995.766 3977.41)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset={0} stopColor=\"#f69923\" />\n          <stop offset={0.31} stopColor=\"#f79a23\" />\n          <stop offset={0.84} stopColor=\"#e97826\" />\n        </linearGradient>\n        <linearGradient\n          id=\"apache_a\"\n          x1={-1991.78}\n          y1={4989.78}\n          x2={-1891.01}\n          y2={4989.78}\n          gradientTransform=\"scale(1 -1) rotate(65.2 2995.766 3977.41)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset={0.32} stopColor=\"#9e2064\" />\n          <stop offset={0.63} stopColor=\"#c92037\" />\n          <stop offset={0.75} stopColor=\"#cd2335\" />\n          <stop offset={1} stopColor=\"#e97826\" />\n        </linearGradient>\n        <linearGradient\n          id=\"apache_d\"\n          x1={-1991.19}\n          y1={4998.76}\n          x2={-1890.42}\n          y2={4998.76}\n          xlinkHref=\"#apache_a\"\n        />\n        <linearGradient\n          id=\"apache_e\"\n          x1={-1985.53}\n          y1={4989.27}\n          x2={-1884.76}\n          y2={4989.27}\n          xlinkHref=\"#apache_a\"\n        />\n        <linearGradient\n          id=\"apache_f\"\n          x1={-1985.53}\n          y1={4999.7}\n          x2={-1884.76}\n          y2={4999.7}\n          xlinkHref=\"#apache_a\"\n        />\n        <linearGradient\n          id=\"apache_b\"\n          x1={-1979.02}\n          y1={4988.65}\n          x2={-1918.97}\n          y2={4988.65}\n          gradientTransform=\"scale(1 -1) rotate(65.2 2995.766 3977.41)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset={0} stopColor=\"#282662\" />\n          <stop offset={0.1} stopColor=\"#662e8d\" />\n          <stop offset={0.79} stopColor=\"#9f2064\" />\n          <stop offset={0.95} stopColor=\"#cd2032\" />\n        </linearGradient>\n        <linearGradient\n          id=\"apache_g\"\n          x1={-1978.18}\n          y1={4998.33}\n          x2={-1925.22}\n          y2={4998.33}\n          xlinkHref=\"#apache_b\"\n        />\n      </defs>\n      <title>logo_apache</title>\n      <path\n        d=\"M42.56.48C41 1.4 38.39 4 35.28 7.82l2.85 5.39a71.05 71.05 0 0 1 6.1-7.65 3.45 3.45 0 0 1 .25-.26l-.25.26a64.18 64.18 0 0 0-5.72 7.76A108.36 108.36 0 0 0 49.62 12c1.09-6.18-1.08-9-1.08-9S45.79-1.43 42.56.48z\"\n        fill=\"url(#apache_c)\"\n      />\n      <path\n        d=\"M38.51 13.32q-1.26 1.93-2.75 4.42l-.15.26c-.85 1.43-1.76 3-2.71 4.74q-1.23 2.26-2.57 4.81-1.17 2.23-2.4 4.77l9.45-1a11.45 11.45 0 0 0 5.17-4.07c.32-.45.64-.93 1-1.43 1-1.51 1.92-3.18 2.77-4.84s1.54-3.19 2.1-4.62a22.75 22.75 0 0 0 .83-2.5c.17-.65.31-1.28.41-1.87a105.64 105.64 0 0 1-11.15 1.33z\"\n        fill=\"url(#apache_a)\"\n      />\n      <path\n        d=\"M29.71 27.15c.87-1.62 1.75-3.21 2.64-4.75s1.85-3.16 2.8-4.66l.16-.27q1.41-2.22 2.83-4.26l-2.86-5.39c-.22.26-.43.53-.65.8-.83 1-1.68 2.13-2.56 3.3-1 1.32-2 2.74-3 4.21s-1.92 2.8-2.89 4.28c-.82 1.26-1.65 2.56-2.47 3.9l-.09.14 3.68 7.35c.79-1.57 1.6-3.12 2.41-4.65z\"\n        fill=\"url(#apache_d)\"\n      />\n      <path\n        d=\"M27.87 32.42c-.1.22-.21.44-.32.66-.32.67-.65 1.34-1 2s-.71 1.51-1.08 2.3c-.18.39-.37.79-.55 1.2-.56 1.2-1.12 2.45-1.69 3.74-.71 1.59-1.42 3.23-2.15 5s-1.38 3.3-2.08 5.05-1.36 3.37-2 5.13c-.62 1.57-1.24 3.18-1.87 4.85l-.09.24q-.95 2.47-1.89 5.08v.12l3-.33a1.35 1.35 0 0 0-.18 0c3.5-.46 8.28-3.17 11.37-6.46a27.81 27.81 0 0 0 3.91-5.44 45.77 45.77 0 0 0 2.52-5.24c.7-1.68 1.36-3.51 2-5.49a10.65 10.65 0 0 1-2.82 1l-.56.11-.57.09a13.11 13.11 0 0 0 7-6.83 11.73 11.73 0 0 1-4 1.76 6 6 0 0 1-.72.13h-.18a13.55 13.55 0 0 0 3-1.67c.18-.14.36-.28.53-.43a9.88 9.88 0 0 0 .74-.71c.15-.16.3-.32.44-.49a11.23 11.23 0 0 0 .94-1.29l.27-.44.32-.63a35.043 35.043 0 0 0 1.53-3.52l.13-.37c.11-.35.21-.67.29-.94s.18-.75.22-1a3.77 3.77 0 0 1-.39.26 14.18 14.18 0 0 1-4.15 1.42h-.07l-.42.07h.07l-9.44 1z\"\n        fill=\"url(#apache_e)\"\n      />\n      <path\n        d=\"M14.17 61.81q1-2.52 2-5.1t2-5q1-2.49 2.12-5c.74-1.69 1.49-3.39 2.25-5.07s1.52-3.32 2.3-5c.28-.59.57-1.18.85-1.76.49-1 1-2 1.49-3l.09-.16-3.72-7.35c-.06.1-.12.2-.19.3-.86 1.42-1.72 2.86-2.57 4.34s-1.7 3-2.52 4.56c-.69 1.3-1.37 2.61-2 3.94l-.39.8q-1.22 2.51-2.2 4.83c-.75 1.75-1.41 3.43-2 5q-.57 1.57-1 3c-.26.83-.5 1.66-.74 2.48q-.83 2.93-1.43 5.83l3.7 7.55c.5-1.32 1-2.66 1.52-4 .15-.43.27-.81.44-1.19z\"\n        fill=\"url(#apache_f)\"\n      />\n      <path\n        d=\"M12.77 68.54c-.49 1.36-1 2.73-1.48 4.14v.06l-.21.6-1.32 3.75c1.1.49 2 1.81 2.81 3.3a6 6 0 0 0-1.94-4.12c5.4.25 10.06-1.12 12.46-5.07a9.11 9.11 0 0 0 .59-1.12c-1.09 1.39-2.45 2-5 1.84 3.76-1.69 5.64-3.3 7.31-6 .39-.63.78-1.32 1.17-2.09a11.77 11.77 0 0 1-11.1 3.6l-3 .33c-.06.24-.2.53-.29.78z\"\n        fill=\"url(#apache_b)\"\n      />\n      <path\n        d=\"M8.43 59.84a55.52 55.52 0 0 0-1 7 2 2 0 0 0 0 .25 14.73 14.73 0 0 0-4.29-3.68c2.24 3.24 3.94 6.46 4.19 9.62a9.47 9.47 0 0 1-4.73-.81 9.38 9.38 0 0 0 4 2.45c-1.81.12-3.7 1.36-5.61 2.8 2.79-1.14 5-1.59 6.65-1.22C5.12 83.53 2.56 91.52 0 100a2.24 2.24 0 0 0 1.52-1.47C2 97 5 86.92 9.75 73.67c.14-.37.27-.75.41-1.13l.12-.32c.5-1.39 1-2.8 1.56-4.25.12-.33.24-.66.37-1l-3.73-7.39a2.38 2.38 0 0 0-.05.26z\"\n        fill=\"url(#apache_g)\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoApache\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoConsul: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 96.81\"\n    >\n      <style>\n        {`    .consul_a { fill: #8c1c59; }\n                .consul_a, .consul_b {\n                    fill-rule: evenodd;\n                }\n                .consul_b, .consul_c {\n                    fill: #c62a71;\n                }`}\n      </style>\n      <defs />\n      <path\n        className=\"consul_a\"\n        d=\"M48.23,58.73A10.45,10.45,0,1,1,58.65,48.27,10.42,10.42,0,0,1,48.23,58.73\"\n      />\n      <path\n        className=\"consul_b\"\n        d=\"M68.55,53.1a4.82,4.82,0,1,1,4.81-4.81,4.8,4.8,0,0,1-4.81,4.81\"\n      />\n      <path\n        className=\"consul_b\"\n        d=\"M86.17,57.64h0a4.69,4.69,0,1,1,.09-.38c0,.12,0,.24-.09.38\"\n      />\n      <path\n        className=\"consul_b\"\n        d=\"M82.76,45.23a4.82,4.82,0,1,1,3.57-5.79,5,5,0,0,1,0,1.89,4.62,4.62,0,0,1-3.62,3.9\"\n      />\n      <path\n        className=\"consul_b\"\n        d=\"M99.89,57.11a4.47,4.47,0,1,1,.09-.43,1.18,1.18,0,0,0-.09.43\"\n      />\n      <path\n        className=\"consul_b\"\n        d=\"M96,45a4.8,4.8,0,1,1,4-5.53,5.16,5.16,0,0,1,0,1.24A4.79,4.79,0,0,1,96,45\"\n      />\n      <path\n        className=\"consul_b\"\n        d=\"M92.61,73.78h0a4.85,4.85,0,1,1,.6-2,4.34,4.34,0,0,1-.6,2\"\n      />\n      <path\n        className=\"consul_b\"\n        d=\"M90.87,29.53A4.83,4.83,0,1,1,92.71,23a4.52,4.52,0,0,1,.59,2.79,4.83,4.83,0,0,1-2.43,3.79\"\n      />\n      <path\n        className=\"consul_c\"\n        d=\"M48.4,96.81A48.35,48.35,0,0,1,0,48.4,48.41,48.41,0,0,1,77.8,9.94l-5.91,7.72A38.7,38.7,0,0,0,21,75.78a38.72,38.72,0,0,0,50.85,3.36l5.91,7.73A48,48,0,0,1,48.4,96.81Z\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoConsul\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoCpu: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      id=\"Layer_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n    >\n      <g id=\"cpu_icon\">\n        <style>\n          {`\n          .cpu_a{fill:#7A65F1;}\n          .cpu_b{fill:none;stroke:#2C323D;stroke-width:7;stroke-linejoin:round;stroke-miterlimit:10;}\n          .cpu_c{fill:#2C323D;}\n          `}\n        </style>\n        <path\n          className=\"cpu_a\"\n          d=\"M96,100H4c-2.2,0-4-1.8-4-4V4c0-2.2,1.8-4,4-4h92c2.2,0,4,1.8,4,4v92C100,98.2,98.2,100,96,100z\"\n        />\n        <line className=\"cpu_b\" x1=\"22.2\" y1=\"100\" x2=\"22.2\" />\n        <line className=\"cpu_b\" x1=\"40.7\" y1=\"100\" x2=\"40.7\" />\n        <line className=\"cpu_b\" x1=\"59.3\" y1=\"100\" x2=\"59.3\" />\n        <line className=\"cpu_b\" x1=\"77.8\" y1=\"100\" x2=\"77.8\" />\n        <line className=\"cpu_b\" y1=\"22.2\" x2=\"100\" y2=\"22.2\" />\n        <line className=\"cpu_b\" y1=\"40.7\" x2=\"100\" y2=\"40.7\" />\n        <line className=\"cpu_b\" y1=\"59.3\" x2=\"100\" y2=\"59.3\" />\n        <line className=\"cpu_b\" y1=\"77.8\" x2=\"100\" y2=\"77.8\" />\n        <g>\n          <rect x=\"17\" y=\"17\" className=\"cpu_a\" width=\"66\" height=\"66\" />\n          <path\n            className=\"cpu_c\"\n            d=\"M76,24v52H24V24H76 M88,10H12c-1.1,0-2,0.9-2,2v76c0,1.1,0.9,2,2,2h76c1.1,0,2-0.9,2-2V12 C90,10.9,89.1,10,88,10L88,10z\"\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nexport default LogoCpu\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoDocker: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 69.46\"\n    >\n      <style>\n        {`   \n            .docker_a, .docker_b {\n                fill: #066da5;\n            }\n            .docker_a {\n                fill-rule: evenodd;\n            }`}\n      </style>\n      <defs />\n      <path\n        className=\"docker_a\"\n        d=\"M97.92,26.44c-2.26-1.51-7.44-2.06-11.43-1.31-.51-3.75-2.61-7-6.41-9.95l-2.19-1.46-1.46,2.19a17,17,0,0,0-2.5,10.47,13.29,13.29,0,0,0,1.93,5.75,15.74,15.74,0,0,1-7.57,1.66H.39l-.14.78c-.64,3.77-.62,15.52,7,24.55C13.05,66,21.75,69.46,33.09,69.46c24.6,0,42.8-11.32,51.32-31.9,3.35.07,10.56,0,14.27-7.06.1-.17.32-.59,1-1.93l.35-.74Z\"\n      />\n      <rect className=\"docker_b\" x=\"44.36\" width=\"10.33\" height=\"9.39\" />\n      <rect\n        className=\"docker_b\"\n        x=\"44.36\"\n        y=\"11.26\"\n        width=\"10.33\"\n        height=\"9.39\"\n      />\n      <rect\n        className=\"docker_b\"\n        x=\"32.15\"\n        y=\"11.26\"\n        width=\"10.33\"\n        height=\"9.39\"\n      />\n      <rect\n        className=\"docker_b\"\n        x=\"19.95\"\n        y=\"11.26\"\n        width=\"10.33\"\n        height=\"9.39\"\n      />\n      <rect\n        className=\"docker_b\"\n        x=\"7.75\"\n        y=\"22.53\"\n        width=\"10.33\"\n        height=\"9.39\"\n      />\n      <rect\n        className=\"docker_b\"\n        x=\"19.95\"\n        y=\"22.53\"\n        width=\"10.33\"\n        height=\"9.39\"\n      />\n      <rect\n        className=\"docker_b\"\n        x=\"32.15\"\n        y=\"22.53\"\n        width=\"10.33\"\n        height=\"9.39\"\n      />\n      <rect\n        className=\"docker_b\"\n        x=\"44.36\"\n        y=\"22.53\"\n        width=\"10.33\"\n        height=\"9.39\"\n      />\n      <rect\n        className=\"docker_b\"\n        x=\"56.56\"\n        y=\"22.53\"\n        width=\"10.33\"\n        height=\"9.39\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoDocker\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoElastic: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 99.61\"\n    >\n      <style>\n        {` \n     .elastic_a {\n        fill: #fff;\n      }\n\n      .elastic_b {\n        fill: #ffd00a;\n      }\n\n      .elastic_c {\n        fill: #20b9af;\n      }\n\n      .elastic_d {\n        fill: #ee5096;\n      }\n\n      .elastic_e {\n        fill: #12a5df;\n      }\n\n      .elastic_f {\n        fill: #90c640;\n      }\n\n      .elastic_g {\n        fill: #05799f;\n      }`}\n      </style>\n      <defs />\n      <path\n        className=\"elastic_a\"\n        d=\"M100,52.19A19.68,19.68,0,0,0,87,33.63a27.49,27.49,0,0,0,.53-5.38A28.24,28.24,0,0,0,36.36,11.72,15,15,0,0,0,13.12,28.8,20,20,0,0,0,0,47.44,19.69,19.69,0,0,0,13.08,66.05,28.17,28.17,0,0,0,63.63,87.84a14.84,14.84,0,0,0,9.19,3.21A15,15,0,0,0,86.88,70.82,19.94,19.94,0,0,0,100,52.19\"\n      />\n      <path\n        className=\"elastic_b\"\n        d=\"M39.32,42.9l21.88,10L83.27,33.53a24.32,24.32,0,0,0,.48-4.85,24.67,24.67,0,0,0-45-13.95L35,33.78Z\"\n      />\n      <path\n        className=\"elastic_c\"\n        d=\"M16.67,66.07A25.13,25.13,0,0,0,16.18,71a24.74,24.74,0,0,0,45.2,13.91l3.65-19-4.87-9.29-22-10Z\"\n      />\n      <path\n        className=\"elastic_d\"\n        d=\"M16.53,28.2l15,3.55,3.29-17A11.84,11.84,0,0,0,16.53,28.2\"\n      />\n      <path\n        className=\"elastic_e\"\n        d=\"M15.23,31.78A16.69,16.69,0,0,0,3.87,47.48,16.52,16.52,0,0,0,14.51,62.93l21-19-3.87-8.26Z\"\n      />\n      <path\n        className=\"elastic_f\"\n        d=\"M65.23,84.91A11.82,11.82,0,0,0,83.47,71.42l-15-3.5Z\"\n      />\n      <path\n        className=\"elastic_g\"\n        d=\"M68.28,64l16.49,3.86A16.7,16.7,0,0,0,96.13,52.14,16.49,16.49,0,0,0,85.47,36.72L63.9,55.62Z\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoElastic\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoEtcd: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 96.61\"\n    >\n      <style>{`      \n      .etcd_a {\n        fill: #419eda;\n      }`}</style>\n      <defs />\n      <path\n        className=\"etcd_a\"\n        d=\"M45.77,43a6.52,6.52,0,1,1-6.52-6.52A6.52,6.52,0,0,1,45.77,43Z\"\n      />\n      <path\n        className=\"etcd_a\"\n        d=\"M54.2,43a6.52,6.52,0,1,0,6.52-6.52A6.52,6.52,0,0,0,54.2,43Z\"\n      />\n      <path\n        className=\"etcd_a\"\n        d=\"M98.59,50c-.47,0-.94.06-1.44.06a18.79,18.79,0,0,1-8.28-1.93A75.91,75.91,0,0,0,90,33.51a76.15,76.15,0,0,0-9.47-11.23,18.71,18.71,0,0,1,6.68-7.15l1.22-.76-1-1.08A49.92,49.92,0,0,0,70,.58L68.7,0l-.34,1.4A18.74,18.74,0,0,1,63.64,10,76.58,76.58,0,0,0,50,4.35,75.82,75.82,0,0,0,36.35,10a18.71,18.71,0,0,1-4.71-8.56L31.3,0,30,.58A50.43,50.43,0,0,0,12.55,13.29l-1,1.08,1.22.75a18.8,18.8,0,0,1,6.66,7.12A76.39,76.39,0,0,0,10,33.43a76.53,76.53,0,0,0,1.09,14.74,18.73,18.73,0,0,1-8.23,1.91c-.51,0-1,0-1.44,0L0,49.92l.13,1.43A49.62,49.62,0,0,0,6.84,71.87l.73,1.24,1.09-.93A18.73,18.73,0,0,1,17.55,68a75.64,75.64,0,0,0,7.6,12.38,77.51,77.51,0,0,0,14.4,3.54,18.65,18.65,0,0,1-1.2,9.83l-.54,1.33,1.4.31A50.56,50.56,0,0,0,50,96.61l10.79-1.2,1.4-.31-.55-1.33a18.79,18.79,0,0,1-1.19-9.84A77,77,0,0,0,74.81,80.4,76.56,76.56,0,0,0,82.42,68a18.9,18.9,0,0,1,8.92,4.17l1.1.93.73-1.24a49.56,49.56,0,0,0,6.7-20.51l.13-1.43ZM65.43,67.56a58.15,58.15,0,0,1-30.9,0,59.69,59.69,0,0,1-6.61-13.93,59.09,59.09,0,0,1-2.79-15.29,58.8,58.8,0,0,1,11.2-10.66A60,60,0,0,1,50,20.25a60.26,60.26,0,0,1,13.64,7.41A59.14,59.14,0,0,1,74.86,38.4a59.17,59.17,0,0,1-2.81,15.21A59.67,59.67,0,0,1,65.43,67.56Z\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoEtcd\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoIis: SFC = () => {\n  return (\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n      <defs>\n        <linearGradient\n          id=\"iis_b\"\n          x1={-514.77}\n          y1={316.77}\n          x2={-514.77}\n          y2={316.81}\n          gradientTransform=\"matrix(2493.7 0 0 -2493.7 1283740.92 790028.16)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset={0} stopColor=\"#574c4a\" />\n          <stop offset={1} stopColor=\"#80716d\" />\n        </linearGradient>\n        <linearGradient\n          id=\"iis_c\"\n          x1={-514.92}\n          y1={316.94}\n          x2={-514.95}\n          y2={316.99}\n          gradientTransform=\"matrix(1567.75 0 0 -1504.18 807337.55 476821.08)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset={0} stopColor=\"#268d83\" />\n          <stop offset={1} stopColor=\"#2ea19e\" />\n        </linearGradient>\n        <radialGradient\n          id=\"iis_a\"\n          cx={-517.38}\n          cy={323.85}\n          r={0.02}\n          gradientTransform=\"matrix(181.37 0 0 -181.37 93879.52 58811.53)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset={0} stopColor=\"#db7c7c\" />\n          <stop offset={1} stopColor=\"#c83737\" />\n        </radialGradient>\n        <radialGradient\n          id=\"iis_d\"\n          cx={-519.14}\n          cy={323.85}\n          r={0.02}\n          gradientTransform=\"matrix(181.36 0 0 -181.36 94206.95 58808.39)\"\n          xlinkHref=\"#iis_a\"\n        />\n      </defs>\n      <title>logo_iis</title>\n      <path\n        d=\"M0 67.57V32.43C0 4.05 4.05 0 32.4 0h35.2C96 0 100 4.05 100 32.43v35.14C100 96 96 100 67.6 100H32.4C4.05 100 0 96 0 67.57z\"\n        fill=\"url(#iis_b)\"\n      />\n      <path\n        d=\"M21.58 18.85a279.62 279.62 0 0 0-2.34 60.32H34.6c-1.46-7.78-6.7-43.31-2.34-43.43 2.34.37 13 30.15 13 30.15a42.66 42.66 0 0 1 4.72-.3 42.66 42.66 0 0 1 4.72.3s10.68-29.78 13-30.15c4.36.12-.88 35.65-2.34 43.43h15.4a279.62 279.62 0 0 0-2.34-60.32H64.19c-2.7 0-13 18.1-14.19 18.1s-11.48-18.07-14.19-18.1z\"\n        fill=\"url(#iis_c)\"\n      />\n      <path\n        d=\"M47 75.53a3.64 3.64 0 1 1-3.64-3.64A3.64 3.64 0 0 1 47 75.53z\"\n        fill=\"url(#iis_a)\"\n      />\n      <path\n        d=\"M60.3 75.53a3.64 3.64 0 1 1-3.63-3.64 3.63 3.63 0 0 1 3.63 3.64z\"\n        fill=\"url(#iis_d)\"\n      />\n      <path\n        d=\"M77.69 19.88A272.7 272.7 0 0 1 80.39 60c0 11-.67 18.11-.67 18.11H66.79l-1.39 1h15.36a279.62 279.62 0 0 0-2.34-60.32l-.73 1zM37 19.5c4 4.5 11 16.41 12 16.41-2.6-3.28-8.89-13.72-12-16.41zm-5.78 15.2c-4.36.12.88 35.65 2.34 43.43H20.15l-.91 1H34.6c-1.45-7.74-6.65-43-2.41-43.43-.39-.59-.73-1-1-1zm35.48 0c-2.34.37-13 30.14-13 30.14a44.1 44.1 0 0 0-4.7-.29c-1.4 0-2.61.09-3.42.16l-.26 1.18a42.66 42.66 0 0 1 4.72-.3 42.66 42.66 0 0 1 4.72.3s10.6-29.58 13-30.15c-.26-.65-.58-1-1-1z\"\n        style={{\n          isolation: 'isolate',\n        }}\n        opacity={0.1}\n      />\n      <path\n        d=\"M21.58 18.85a279.62 279.62 0 0 0-2.34 60.32l.9-1a279.63 279.63 0 0 1 2.48-58.26h14.23a2.21 2.21 0 0 1 1.17.65c-.93-1-1.7-1.69-2.21-1.69zm42.61 0c-2.7 0-13 18.1-14.19 18.1.48.61.88 1 1 1 1.19 0 11.49-18.07 14.19-18.1h12.6l.63-1zM33.24 36.78c3.45 5.19 12 29.11 12 29.11l.25-1.17c-2.12-5.81-10.2-27.61-12.23-27.94zm35.54 0c2.32 5.92-2.07 35.39-3.38 42.39l1.39-1.09c1.78-10.44 6.06-41.19 1.99-41.3z\"\n        style={{\n          isolation: 'isolate',\n        }}\n        fill=\"#fff\"\n        opacity={0.3}\n      />\n    </svg>\n  )\n}\n\nexport default LogoIis\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoKubernetes: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 97.03\"\n    >\n      <style>\n        {`      \n        .kubernetes_a {\n          fill: #326ce5;\n        }\n        .kubernetes_b {\n          fill: #fff;\n          stroke: #fff;\n          stroke-width: 0.25px;\n        }`}\n      </style>\n      <defs />\n      <path\n        className=\"kubernetes_a\"\n        d=\"M49.65,0a6.57,6.57,0,0,0-2.54.64L12.34,17.26a6.62,6.62,0,0,0-3.6,4.48L.17,59.05a6.55,6.55,0,0,0,.9,5.06,6.28,6.28,0,0,0,.38.52L25.51,94.55A6.67,6.67,0,0,0,30.71,97H69.3a6.65,6.65,0,0,0,5.19-2.48L98.55,64.62A6.56,6.56,0,0,0,99.83,59L91.24,21.73a6.59,6.59,0,0,0-3.59-4.47L52.88.65A6.66,6.66,0,0,0,49.65,0Z\"\n      />\n      <path\n        className=\"kubernetes_b\"\n        d=\"M50,12.71A2.2,2.2,0,0,0,47.92,15v.06c0,.17,0,.38,0,.53a15.23,15.23,0,0,0,.28,2,19,19,0,0,1,.23,3.77,2.31,2.31,0,0,1-.67,1.08l0,.88A25.73,25.73,0,0,0,44,23.9a26.68,26.68,0,0,0-13.6,7.77l-.75-.54A1.63,1.63,0,0,1,28.36,31a19.42,19.42,0,0,1-2.8-2.53A16.86,16.86,0,0,0,24.19,27l-.46-.37a2.5,2.5,0,0,0-1.45-.54,2,2,0,0,0-1.66.73,2.2,2.2,0,0,0,.51,3.07l0,0,.43.35a17.22,17.22,0,0,0,1.73,1,19.64,19.64,0,0,1,3.09,2.17,2.29,2.29,0,0,1,.42,1.2l.67.6A26.91,26.91,0,0,0,23.25,54l-.87.25a2.9,2.9,0,0,1-.9.91,19.74,19.74,0,0,1-3.73.61,17.37,17.37,0,0,0-2,.16l-.56.13h0a2.09,2.09,0,1,0,.93,4.06h.07l.54-.12a16.34,16.34,0,0,0,1.86-.72,19.72,19.72,0,0,1,3.63-1.06,2.22,2.22,0,0,1,1.2.42l.91-.16a27.09,27.09,0,0,0,12,15l-.38.9a2.14,2.14,0,0,1,.18,1.18A20.07,20.07,0,0,1,34.21,79a17.78,17.78,0,0,0-1.12,1.66c-.08.15-.18.39-.26.56A2.09,2.09,0,1,0,36.58,83h0c.08-.16.19-.37.26-.53a18.84,18.84,0,0,0,.6-1.9c.55-1.39.85-2.84,1.61-3.74a1.6,1.6,0,0,1,.89-.44l.48-.85a26.86,26.86,0,0,0,15.63,1.12,27.81,27.81,0,0,0,3.57-1.07c.13.23.38.68.44.8a1.62,1.62,0,0,1,1.07.64,20,20,0,0,1,1.42,3.5,17.5,17.5,0,0,0,.61,1.91c.06.15.18.37.26.53a2.09,2.09,0,1,0,3.76-1.78l-.27-.56a19.21,19.21,0,0,0-1.12-1.66A19.55,19.55,0,0,1,64,75.62a1.69,1.69,0,0,1,.16-1.23c-.07-.09-.24-.6-.34-.84a27.07,27.07,0,0,0,12-15.09l.89.16a1.62,1.62,0,0,1,1.17-.43,19.72,19.72,0,0,1,3.63,1.06,16.34,16.34,0,0,0,1.86.72l.54.12h.07a2.09,2.09,0,1,0,.93-4.06c-.18,0-.43-.11-.61-.14a17.37,17.37,0,0,0-2-.16,19.74,19.74,0,0,1-3.73-.61,2.29,2.29,0,0,1-.9-.91L76.78,54a27.05,27.05,0,0,0-4.34-18.73l.74-.66a1.66,1.66,0,0,1,.39-1.18,19.31,19.31,0,0,1,3.1-2.17,18.41,18.41,0,0,0,1.73-1l.45-.37a2.09,2.09,0,1,0-2.59-3.26L75.8,27a16.86,16.86,0,0,0-1.37,1.46A20.12,20.12,0,0,1,71.62,31a2.3,2.3,0,0,1-1.26.13l-.79.57a27.32,27.32,0,0,0-17.28-8.35c0-.27,0-.78,0-.93a1.68,1.68,0,0,1-.68-1,19.1,19.1,0,0,1,.24-3.77,15.23,15.23,0,0,0,.28-2c0-.17,0-.41,0-.59A2.2,2.2,0,0,0,50,12.71ZM47.39,28.85l-.62,10.91,0,0a1.84,1.84,0,0,1-1.83,1.76,1.81,1.81,0,0,1-1.08-.35h0l-8.95-6.35a21.5,21.5,0,0,1,12.54-6Zm5.22,0a21.55,21.55,0,0,1,12.46,6l-8.89,6.3h0a1.84,1.84,0,0,1-2.92-1.4h0Zm-21,10.08,8.18,7.31v0A1.85,1.85,0,0,1,40,48.81a1.82,1.82,0,0,1-1,.63v0l-10.48,3A21.49,21.49,0,0,1,31.6,38.93Zm36.73,0a21.73,21.73,0,0,1,3.14,13.53l-10.53-3v0a1.83,1.83,0,0,1-1.3-2.18,1.86,1.86,0,0,1,.58-1v0l8.12-7.28Zm-20,7.87h3.35l2.08,2.61L53,52.65,50,54.1l-3-1.45-.74-3.25Zm10.73,8.91a1.53,1.53,0,0,1,.43,0v0l10.84,1.84a21.49,21.49,0,0,1-8.67,10.89L57.45,58.28h0a1.84,1.84,0,0,1,.89-2.38,1.81,1.81,0,0,1,.7-.18Zm-18.19,0a1.85,1.85,0,0,1,1.76,1.43,1.82,1.82,0,0,1-.11,1.13l0,0L38.38,68.4a21.45,21.45,0,0,1-8.64-10.82l10.74-1.82,0,0a2.19,2.19,0,0,1,.36,0Zm9.07,4.41a1.76,1.76,0,0,1,.86.18,1.82,1.82,0,0,1,.82.78h0L57,70.69a21.87,21.87,0,0,1-13.86,0l5.28-9.55h0A1.82,1.82,0,0,1,49.93,60.16Z\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoKubernetes\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoMesos: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 87.83 100\"\n    >\n      <style>\n        {`   \n        .mesos_a {\n            fill: #00445e;\n        }\n        .mesos_b {\n            fill: #00aede;\n        }`}\n      </style>\n      <defs />\n      <polyline\n        className=\"mesos_a\"\n        points=\"65.28 60.91 65.28 39.09 46.46 50.02 65.28 60.91\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"64.06 36.96 45.21 26.06 45.21 47.89 64.06 36.96\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"42.76 47.89 42.76 26.06 23.89 36.96 42.76 47.89\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"41.54 23.96 22.69 13 22.69 34.86 41.54 23.96\"\n      />\n      <polyline\n        className=\"mesos_a\"\n        points=\"64.06 63.01 45.21 52.12 45.21 73.95 64.06 63.01\"\n      />\n      <polyline\n        className=\"mesos_a\"\n        points=\"42.76 73.95 42.76 52.12 23.89 63.01 42.76 73.95\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"86.61 50.02 67.73 39.09 67.73 60.91 86.61 50.02\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"20.23 34.86 20.23 13 1.24 23.96 20.23 34.86\"\n      />\n      <polyline\n        className=\"mesos_a\"\n        points=\"41.54 76.05 22.69 65.12 22.69 86.97 41.54 76.05\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"20.23 86.97 20.23 65.12 1.24 76.05 20.23 86.97\"\n      />\n      <polyline\n        className=\"mesos_a\"\n        points=\"41.54 50.02 22.69 39.09 22.69 60.91 41.54 50.02\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"65.28 34.86 65.28 13 46.46 23.96 65.28 34.86\"\n      />\n      <polyline\n        className=\"mesos_a\"\n        points=\"45.21 0 45.21 21.82 64.06 10.9 45.21 0\"\n      />\n      <polyline\n        className=\"mesos_a\"\n        points=\"23.89 10.9 42.76 21.82 42.76 0 23.89 10.9\"\n      />\n      <polyline\n        className=\"mesos_a\"\n        points=\"64.06 89.07 45.21 78.18 45.21 100 64.06 89.07\"\n      />\n      <polyline\n        className=\"mesos_a\"\n        points=\"42.76 100 42.76 78.18 23.89 89.07 42.76 100\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"87.83 73.95 87.83 52.12 69 63.01 87.83 73.95\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"20.23 60.91 20.23 39.05 1.24 50.02 20.23 60.91\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"19.02 63.01 0 52.12 0 73.95 19.02 63.01\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"87.83 47.89 87.83 26.06 69 36.96 87.83 47.89\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"86.61 23.96 67.73 13 67.73 34.86 86.61 23.96\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"86.61 76.05 67.73 65.12 67.73 86.97 86.61 76.05\"\n      />\n      <polyline\n        className=\"mesos_a\"\n        points=\"65.28 86.97 65.28 65.12 46.46 76.05 65.28 86.97\"\n      />\n      <polyline\n        className=\"mesos_b\"\n        points=\"19.02 36.96 0 26.06 0 47.89 19.02 36.96\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoMesos\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoMongodb: SFC = () => {\n  return (\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 44.83 100\">\n      <defs>\n        <linearGradient\n          id=\"mongodb_a\"\n          x1={-960.8}\n          y1={-1260.14}\n          x2={-992.42}\n          y2={-1260.35}\n          gradientTransform=\"matrix(-.98 -.32 .29 -.88 -566.27 -1364.86)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset={0.23} stopColor=\"#999875\" />\n          <stop offset={0.56} stopColor=\"#9b9977\" />\n          <stop offset={0.68} stopColor=\"#a09f7e\" />\n          <stop offset={0.77} stopColor=\"#a9a889\" />\n          <stop offset={0.84} stopColor=\"#b7b69a\" />\n          <stop offset={0.9} stopColor=\"#c9c7b0\" />\n          <stop offset={0.95} stopColor=\"#deddcb\" />\n          <stop offset={0.99} stopColor=\"#f8f6eb\" />\n          <stop offset={1} stopColor=\"#fbf9ef\" />\n        </linearGradient>\n        <linearGradient\n          id=\"mongodb_b\"\n          x1={-955.93}\n          y1={-1204.8}\n          x2={-1001.42}\n          y2={-1283.59}\n          gradientTransform=\"matrix(-.98 -.32 .29 -.88 -566.27 -1364.86)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset={0} stopColor=\"#48a547\" />\n          <stop offset={1} stopColor=\"#3f9143\" />\n        </linearGradient>\n        <linearGradient\n          id=\"mongodb_c\"\n          x1={-951.77}\n          y1={-1261.44}\n          x2={-984.01}\n          y2={-1239.78}\n          gradientTransform=\"matrix(-.98 -.32 .29 -.88 -566.27 -1364.86)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset={0} stopColor=\"#41a247\" />\n          <stop offset={0.35} stopColor=\"#4ba74b\" />\n          <stop offset={0.96} stopColor=\"#67b554\" />\n          <stop offset={1} stopColor=\"#69b655\" />\n        </linearGradient>\n      </defs>\n      <title>logo_mongodb</title>\n      <path\n        d=\"M24.7 100l-2.7-.89s.34-13.57-4.55-14.52c-3.23-3.74.49-159.8 12.22-.54 0 0-4 2-4.77 5.44S24.7 100 24.7 100z\"\n        fill=\"url(#mongodb_a)\"\n      />\n      <path\n        d=\"M26.15 86.89S49.46 71.54 44 39.66C38.74 16.5 26.32 8.88 25 6a35 35 0 0 1-3-5.73l1 64.54s-2 19.7 3.15 22.08z\"\n        fill=\"url(#mongodb_b)\"\n      />\n      <path\n        d=\"M20.66 87.75S-1.21 72.83.05 46.52s16.7-39.26 19.71-41.6C21.7 2.84 21.78 2 21.93 0c1.37 2.93 1.14 43.73 1.29 48.49.56 18.57-1.03 35.75-2.56 39.26z\"\n        fill=\"url(#mongodb_c)\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoMongodb\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoMysql: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 98.16\"\n    >\n      <style>\n        {`  .mysql_a {\n        fill: #687e91;\n      }\n\n      .mysql_a, .mysql_b {\n        fill-rule: evenodd;\n      }\n\n      .mysql_b {\n        fill: #00758f;\n      }`}\n      </style>\n      <defs />\n      <path\n        className=\"mysql_a\"\n        d=\"M22.74,16.82a11,11,0,0,0-2.79.34v.14h.13a22.93,22.93,0,0,0,2.18,2.79c.55,1.09,1,2.17,1.56,3.26l.14-.14a3.81,3.81,0,0,0,1.43-3.4c-.41-.48-.47-.95-.82-1.43-.4-.68-1.29-1-1.83-1.56\"\n      />\n      <path\n        className=\"mysql_b\"\n        d=\"M92.11,75.92c-5.44-.13-9.66.41-13.19,1.91-1,.41-2.65.41-2.79,1.7.54.54.61,1.43,1.09,2.18a16,16,0,0,0,3.53,4.15C82.18,86.94,83.61,88,85.11,89c2.65,1.64,5.64,2.59,8.22,4.22,1.5,1,3,2.18,4.5,3.2.74.54,1.21,1.43,2.17,1.76V98c-.48-.61-.61-1.5-1.09-2.18-.68-.68-1.36-1.29-2-2a32.43,32.43,0,0,0-7.07-6.87c-2.18-1.5-6.94-3.54-7.82-6l-.14-.13a27.9,27.9,0,0,0,4.7-1.1c2.3-.61,4.41-.47,6.79-1.08,1.09-.28,2.18-.62,3.27-1V77c-1.23-1.22-2.11-2.86-3.4-4A91.89,91.89,0,0,0,82,64.63c-2.11-1.36-4.83-2.24-7.08-3.4-.81-.41-2.17-.61-2.65-1.29a27.59,27.59,0,0,1-2.79-5.24c-2-3.73-3.88-7.88-5.57-11.83-1.23-2.65-2-5.3-3.47-7.75-7-11.57-14.63-18.57-26.32-25.44-2.52-1.43-5.51-2-8.71-2.79-1.7-.07-3.4-.2-5.1-.27-1.09-.48-2.18-1.77-3.13-2.38C13.28,1.79,3.29-3.52.43,3.49c-1.84,4.42,2.72,8.77,4.28,11a31.2,31.2,0,0,1,3.47,5.1c.48,1.15.61,2.38,1.09,3.6a82,82,0,0,0,3.54,9.12,31.18,31.18,0,0,0,2.51,4.21c.55.75,1.5,1.09,1.7,2.32-.95,1.36-1,3.4-1.56,5.1-2.45,7.68-1.5,17.21,2,22.85,1.09,1.7,3.67,5.44,7.14,4,3.06-1.22,2.38-5.1,3.27-8.5.2-.82.07-1.36.47-1.9v.14c1,1.9,1.91,3.73,2.79,5.64A38.69,38.69,0,0,0,40,75.31c1.62,1.23,2.92,3.33,5,4.08v-.2h-.14a7.51,7.51,0,0,0-1.56-1.36,33.69,33.69,0,0,1-3.54-4.08,87.87,87.87,0,0,1-7.61-12.38C31,59.26,30,57,29.13,54.84c-.41-.81-.41-2-1.09-2.45-1,1.5-2.51,2.79-3.26,4.62-1.29,2.93-1.43,6.53-1.91,10.28-.27.07-.13,0-.27.13-2.17-.54-2.92-2.79-3.74-4.69-2-4.83-2.38-12.58-.61-18.16.47-1.43,2.52-5.92,1.7-7.28-.41-1.29-1.77-2-2.52-3.06A26.58,26.58,0,0,1,15,29.88c-1.64-3.81-2.46-8-4.22-11.84a36.81,36.81,0,0,0-3.4-5.23C6.07,11,4.65,9.68,3.62,7.5c-.33-.75-.81-2-.27-2.78a1.09,1.09,0,0,1,1-.89c.88-.75,3.4.2,4.28.61a34.22,34.22,0,0,1,6.73,3.4c1,.68,2,2,3.2,2.32H20c2.17.47,4.62.13,6.67.74a43.68,43.68,0,0,1,9.79,4.7A60.31,60.31,0,0,1,57.62,38.86c.82,1.56,1.17,3,1.91,4.62,1.43,3.34,3.2,6.74,4.63,10A44.15,44.15,0,0,0,69,62.59c1,1.43,5.1,2.18,6.94,2.93a48.85,48.85,0,0,1,4.69,1.9c2.31,1.43,4.62,3.06,6.8,4.63,1.08.81,4.49,2.51,4.69,3.87\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoMysql\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoNginx: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 87.14 100\"\n    >\n      <style>\n        {`\n          .nginx_a {\n            fill: #009438;\n            }\n          .nginx_b {\n            fill: #fefefe;\n            }`}\n      </style>\n      <defs />\n      <path\n        className=\"nginx_a\"\n        d=\"M0,50.07V26.21a2.14,2.14,0,0,1,1.2-2C15,16.21,28.68,8.35,42.37.4A2.09,2.09,0,0,1,44.68.3L86,24.17a2.22,2.22,0,0,1,1.11,2V73.84a2.22,2.22,0,0,1-1.11,2L50.51,96.42c-1.85,1.11-3.8,2.22-5.65,3.23a2.37,2.37,0,0,1-2.49,0C32,93.73,21.74,87.72,11.38,81.8c-3.42-1.94-6.85-4-10.27-5.92A2.08,2.08,0,0,1,0,73.94Z\"\n      />\n      <path\n        className=\"nginx_b\"\n        d=\"M29.14,41.19V69a5.75,5.75,0,0,1-5.83,5.83,5.51,5.51,0,0,1-4.72-2.68,4.86,4.86,0,0,1-.74-2.78V30.74a5.59,5.59,0,0,1,3.61-5.27,8.63,8.63,0,0,1,6.11,0,9.8,9.8,0,0,1,4.71,3.23c4,4.81,8,9.62,12,14.43,4.16,5,8.42,10,12.58,15.08a5.25,5.25,0,0,0,.37.46V30.55A5.39,5.39,0,0,1,62.16,25a5.61,5.61,0,0,1,6.39,4.81V69.22A5.16,5.16,0,0,1,65.68,74a8.17,8.17,0,0,1-4.44.83,10.08,10.08,0,0,1-6.11-2.59,35.29,35.29,0,0,1-2.4-2.77C48.19,64,43.66,58.67,39.13,53.22L29.32,41.47C29.32,41.38,29.23,41.28,29.14,41.19Z\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoNginx\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoRedis: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      id=\"redis_Layer_1\"\n      viewBox=\"0 0 100 100\"\n      xmlSpace=\"preserve\"\n    >\n      <style>{'.redis_st0{fill:#912626}.redis_st1{fill:#c6302b}'}</style>\n      <path\n        className=\"redis_st0\"\n        d=\"M96.1 73.1c-5.3 2.8-33 14.1-38.9 17.2-5.9 3.1-9.2 3-13.8.8C38.8 88.9 9.3 77 4 74.5c-2.6-1.3-4-2.3-4-3.3V61s38.3-8.3 44.5-10.6c6.2-2.2 8.3-2.3 13.6-.4 5.3 1.9 36.7 7.6 41.9 9.5v10c0 1.1-1.2 2.2-3.9 3.6\"\n      />\n      <path\n        className=\"redis_st1\"\n        d=\"M96.1 63c-5.3 2.8-33 14.1-38.9 17.2-5.9 3.1-9.2 3-13.8.8C38.8 78.8 9.3 66.9 4 64.4c-5.3-2.5-5.4-4.3-.2-6.3s34.5-13.5 40.6-15.7c6.2-2.2 8.3-2.3 13.6-.4 5.3 1.9 32.7 12.9 37.9 14.8 5.3 1.9 5.5 3.4.2 6.2\"\n      />\n      <path\n        className=\"redis_st0\"\n        d=\"M96.1 56.7c-5.3 2.8-33 14.1-38.9 17.2-5.9 3.1-9.2 3-13.8.8C38.8 72.5 9.3 60.6 4 58.1c-2.6-1.3-4-2.3-4-3.3V44.7s38.3-8.3 44.5-10.6c6.2-2.2 8.3-2.3 13.6-.4 5.3 1.9 36.7 7.6 41.9 9.5v10c0 1-1.2 2.1-3.9 3.5\"\n      />\n      <path\n        className=\"redis_st1\"\n        d=\"M96.1 46.7c-5.3 2.8-33 14.1-38.9 17.2-5.9 3.1-9.2 3-13.8.8C38.8 62.5 9.3 50.6 4 48.1c-5.3-2.5-5.4-4.3-.2-6.3C9 39.7 38.3 28.2 44.5 26c6.2-2.2 8.3-2.3 13.6-.4 5.3 1.9 32.7 12.9 37.9 14.8 5.2 1.9 5.4 3.5.1 6.3\"\n      />\n      <path\n        className=\"redis_st0\"\n        d=\"M96.1 39.8c-5.3 2.8-33 14.1-38.9 17.2-5.9 3.1-9.2 3-13.8.8C38.8 55.6 9.3 43.7 4 41.2c-2.6-1.3-4-2.3-4-3.3V27.7s38.3-8.3 44.5-10.6c6.2-2.2 8.3-2.3 13.6-.4 5.3 1.9 36.7 7.6 41.9 9.5v10c0 1-1.2 2.1-3.9 3.6\"\n      />\n      <path\n        className=\"redis_st1\"\n        d=\"M96.1 29.7c-5.3 2.8-33 14.1-38.9 17.2-5.9 3.1-9.2 3-13.8.8C38.8 45.5 9.3 33.6 4 31.1c-5.3-2.5-5.4-4.3-.2-6.3S38.3 11.3 44.4 9.1c6.2-2.2 8.3-2.3 13.6-.4 5.3 1.9 32.7 12.9 37.9 14.8 5.3 1.9 5.5 3.4.2 6.2\"\n      />\n      <path\n        d=\"M62.2 19.9l-8.6.9-1.9 4.6-3.1-5.2-9.9-.9 7.4-2.7-2.2-4.1 6.9 2.7 6.5-2.1-1.8 4.2 6.7 2.6m-11 22.4l-16-6.7 23-3.5-7 10.2M28.9 22.4c6.8 0 12.3 2.1 12.3 4.8 0 2.6-5.5 4.8-12.3 4.8s-12.3-2.1-12.3-4.8c0-2.6 5.6-4.8 12.3-4.8\"\n        fill=\"#fff\"\n      />\n      <path d=\"M72.4 21.1L86 26.5l-13.6 5.4V21.1\" fill=\"#621b1c\" />\n      <path d=\"M57.3 27.1l15.1-6v10.7l-1.5.6-13.6-5.3\" fill=\"#9a2928\" />\n    </svg>\n  )\n}\n\nexport default LogoRedis\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst LogoPrometheus: SFC = () => {\n  return (\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n      <path\n        d=\"M50 93.9c-7.9 0-14.2-5.2-14.2-11.7h28.5c-.1 6.4-6.4 11.7-14.3 11.7zm23.4-15.6H26.6v-8.6h46.9l-.1 8.6zm-.1-12.9H26.6c-.2-.2-.3-.4-.5-.5-4.8-5.8-5.9-8.9-7-12 0-.1 5.8 1.2 10 2.1 0 0 2.1.5 5.3 1.1-3-3.5-4.8-8-4.8-12.5 0-10 7.7-18.8 4.9-25.9 2.7.2 5.6 5.7 5.8 14.3 2.9-4 4.1-11.2 4.1-15.6 0-4.6 3-9.9 6.1-10.1-2.7 4.5.7 8.3 3.7 17.7 1.1 3.6 1 9.5 1.9 13.3.3-7.9 1.6-19.4 6.6-23.4-2.2 5 .3 11.3 2.1 14.3 2.8 4.9 4.5 8.5 4.5 15.5 0 4.7-1.7 9.1-4.6 12.5 3.3-.6 5.6-1.2 5.6-1.2L81 52.9c-.1-.1-1.7 6.3-7.7 12.5zM50 0C22.4 0 0 22.4 0 50s22.4 50 50 50 50-22.4 50-50S77.6 0 50 0z\"\n        fill=\"#da4e31\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoPrometheus\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst IconLineProtocol: SFC = () => {\n  return (\n    <svg\n      height=\"100%\"\n      width=\"100%\"\n      id=\"icon_stream_Layer_1\"\n      viewBox=\"0 0 100 100\"\n      xmlSpace=\"preserve\"\n    >\n      <style>\n        {\n          '.icon_stream_st2,.icon_stream_st3,.icon_stream_st4,.icon_stream_st5{fill:none;stroke:#21adf6;stroke-width:1.012;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10}.icon_stream_st3,.icon_stream_st4,.icon_stream_st5{stroke:#bef0ff}.icon_stream_st4,.icon_stream_st5{stroke:#513cc6}.icon_stream_st5{stroke:#6bdfff}'\n        }\n      </style>\n      <path\n        d=\"M81.7 25.9l-.7-3-2.9-.9-2.2 2.1.7 3 2.9.9 2.2-2.1z\"\n        fill=\"#b1b6ff\"\n      />\n      <path\n        d=\"M67.1 80.5l-.3-1.5-1.5-.4-1.1 1 .3 1.5 1.5.4 1.1-1z\"\n        fill=\"#7a65f1\"\n      />\n      <path className=\"icon_stream_st2\" d=\"M9.3 36.6v6M12.3 39.6H6.4\" />\n      <path className=\"icon_stream_st3\" d=\"M64.6.5v2.9M66.1 2h-3\" />\n      <path\n        className=\"icon_stream_st4\"\n        d=\"M75.8 94.1l-2.1 2.1M75.8 96.2l-2.1-2.1\"\n      />\n      <path\n        className=\"icon_stream_st5\"\n        d=\"M28.1 14.5L26 16.6M28.1 16.6L26 14.5\"\n      />\n      <circle cx={92.4} cy={65.1} r={1.5} fill=\"#9394ff\" />\n      <g>\n        <path\n          d=\"M46 20.5c.3 0 .5.2.5.5s-.2.5-.5.5-.5-.2-.5-.5.3-.5.5-.5m0-1c-.8 0-1.5.7-1.5 1.5s.7 1.5 1.5 1.5 1.5-.7 1.5-1.5-.7-1.5-1.5-1.5z\"\n          fill=\"#01c9ff\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M37.6 94.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0-1c-1.6 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.4-3-3-3z\"\n          fill=\"#326bba\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M18.2 71.7l3.4 1 .8 3.4-2.6 2.4-3.4-1-.8-3.4 2.6-2.4m-.2-1.2c-.1 0-.1 0 0 0-.1 0-.1 0 0 0l-3.5 3.2 1 4.5 4.4 1.3 3.4-3.2-1-4.5-4.3-1.3zm5.5 6zm0 0z\"\n          fill=\"#4591ed\"\n        />\n      </g>\n      <g>\n        <linearGradient\n          id=\"icon_stream_SVGID_1_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={30.384}\n          y1={31.71}\n          x2={81.544}\n          y2={75.479}\n        >\n          <stop offset={0} stopColor=\"#6bdfff\" />\n          <stop offset={1} stopColor=\"#b1b6ff\" />\n        </linearGradient>\n        <path\n          d=\"M31.6 33.7l4.5 32.6c0 2.5 6.2 4.5 13.9 4.5s13.9-2 13.9-4.5l4.4-32.6\"\n          fill=\"url(#icon_stream_SVGID_1_)\"\n        />\n        <linearGradient\n          id=\"icon_stream_SVGID_2_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={37.712}\n          y1={23.145}\n          x2={88.872}\n          y2={66.913}\n        >\n          <stop offset={0} stopColor=\"#6bdfff\" />\n          <stop offset={1} stopColor=\"#b1b6ff\" />\n        </linearGradient>\n        <ellipse\n          cx={50.1}\n          cy={33.7}\n          rx={18.3}\n          ry={4.5}\n          fill=\"url(#icon_stream_SVGID_2_)\"\n        />\n        <g>\n          <ellipse cx={50} cy={33.7} rx={16.9} ry={3.7} fill=\"#21adf6\" />\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nexport default IconLineProtocol\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst IconCSV: SFC = () => {\n  return (\n    <svg\n      id=\"icon_csv_Layer_1\"\n      height=\"100%\"\n      width=\"100%\"\n      x={0}\n      y={0}\n      viewBox=\"0 0 100 100\"\n      xmlSpace=\"preserve\"\n    >\n      <style>\n        {\n          '.icon_csv_st3,.icon_csv_st4,.icon_csv_st5,.icon_csv_st6,.icon_csv_st7{fill:none;stroke:#9394ff;stroke-width:1.01;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10}.icon_csv_st4,.icon_csv_st5,.icon_csv_st6,.icon_csv_st7{stroke:#7a65f1}.icon_csv_st5,.icon_csv_st6,.icon_csv_st7{stroke:#b1b6ff}.icon_csv_st6,.icon_csv_st7{stroke:#7ce490}.icon_csv_st7{stroke:#311f94}.icon_csv_st11{fill:#9394ff}'\n        }\n      </style>\n      <path\n        d=\"M77.9 10.1l.3 1.5 1.5.5 1.1-1-.3-1.5-1.5-.5-1.1 1z\"\n        fill=\"#c6ffd0\"\n      />\n      <path\n        d=\"M3.4 86.7l.7 3 2.9.9 2.2-2.1-.7-3-2.9-.9-2.2 2.1z\"\n        fill=\"#118174\"\n      />\n      <path\n        d=\"M23.1 41.3l.3 1.5 1.5.4 1.1-1-.3-1.5-1.5-.4-1.1 1c.1 0 .1 0 0 0z\"\n        fill=\"#4ed8a0\"\n      />\n      <path className=\"icon_csv_st3\" d=\"M89.4 80.8v-5.9M86.5 77.8h5.9\" />\n      <path className=\"icon_csv_st4\" d=\"M56.8 86.2v-3M55.3 84.7h2.9\" />\n      <path className=\"icon_csv_st5\" d=\"M95.5 22.4v-3M94 20.9h3\" />\n      <path className=\"icon_csv_st6\" d=\"M23.1 23.4l2.1-2.1M23.1 21.3l2.1 2.1\" />\n      <path className=\"icon_csv_st7\" d=\"M59.9 99.4l2.1-2.1M59.9 97.3l2.1 2.1\" />\n      <path\n        d=\"M6.5 51.7c.4 0 .7.3.7.7s-.3.7-.7.7c-.4 0-.7-.3-.7-.7s.3-.7.7-.7m0-1.5c-1.2 0-2.2 1-2.2 2.2s1 2.2 2.2 2.2 2.2-1 2.2-2.2-1-2.2-2.2-2.2z\"\n        fill=\"#31b08c\"\n      />\n      <path\n        d=\"M31.7 79.8c.3 0 .5.2.5.5s-.2.5-.5.5-.5-.2-.5-.5.3-.5.5-.5m0-1c-.8 0-1.5.7-1.5 1.5s.7 1.5 1.5 1.5 1.5-.7 1.5-1.5-.7-1.5-1.5-1.5z\"\n        fill=\"#7a65f1\"\n      />\n      <path\n        d=\"M57 19.1c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0-1c-1.6 0-3 1.3-3 3 0 1.6 1.3 3 3 3 1.6 0 3-1.3 3-3-.1-1.7-1.4-3-3-3z\"\n        fill=\"#a5f3b4\"\n      />\n      <circle className=\"icon_csv_st11\" cx={92.6} cy={1} r={0.6} />\n      <path\n        className=\"icon_csv_st11\"\n        d=\"M83.5 39l3.4 1 .8 3.4-2.6 2.4-3.4-1-.8-3.4 2.6-2.4m-.2-1.1s-.1 0 0 0c-.1 0-.1 0 0 0l-3.4 3.2 1 4.5 4.4 1.4 3.4-3.1-1-4.5-4.4-1.5z\"\n      />\n      <g>\n        <linearGradient\n          id=\"icon_csv_SVGID_1_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={36.607}\n          y1={40.433}\n          x2={81.644}\n          y2={77.479}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M45.5 70.9c-.1 0-.2 0-.3-.1-.1 0-.2-.1-.3-.1-.1-.1-.2-.1-.2-.2-.1-.1-.1-.2-.1-.3l-9.8-27.5V42.4s0-.1.1-.1l4.5-5.8.1-.1.1-.1s.1 0 .1-.1h.1l18.1-2.6h.4c.1 0 .1 0 .2.1.1 0 .1.1.2.1l.1.1.1.1L74 60.9c.1.1.1.2.1.3v.3c0 .1-.1.2-.1.2-.1.1-.1.1-.2.1l-27.9 9h-.2c-.1.1-.1.1-.2.1 0 .1 0 .1 0 0m12.6-38.5h-.8L39 35c-.2 0-.3.1-.4.1-.1 0-.3.1-.4.2-.1.1-.2.1-.3.2l-.3.3-4.6 5.7c-.1.1-.2.2-.2.3-.1.1-.1.2-.1.4v.4c0 .1 0 .3.1.4l9.5 27.8c.1.3.2.5.4.7s.3.4.5.6.4.3.7.4c.2.1.5.2.7.2h1.3c.1 0 .2 0 .3-.1l28.6-9.5c.3-.1.5-.3.7-.4.2-.2.3-.4.4-.7s.1-.6 0-.9c0-.3-.2-.6-.3-.9L60.1 33.7c-.1-.2-.2-.3-.4-.5-.1-.1-.3-.3-.5-.4l-.6-.3c-.1 0-.3-.1-.5-.1\"\n          fill=\"url(#icon_csv_SVGID_1_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_2_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={37.564}\n          y1={39.269}\n          x2={82.601}\n          y2={76.315}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M41.8 36.6l-1.7.3 1.7 4.2V41.4s0 .1-.1.1l-.1.1-.1.1s-.1 0-.1.1h-.1l-5.6 1 .5 1.5 5.8-1.1c.2 0 .4-.1.6-.2.2-.1.3-.2.5-.3.1-.1.3-.2.4-.4.1-.1.2-.3.2-.5v-.2-.2c0-.1 0-.2-.1-.2 0-.1-.1-.2-.1-.2l-1.7-4.4\"\n          fill=\"url(#icon_csv_SVGID_2_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_3_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={39.966}\n          y1={36.349}\n          x2={85.003}\n          y2={73.395}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M52.9 43.1h-.4l-4.4.9c-.2 0-.4.1-.5.2-.1.1-.3.2-.3.4-.1.1-.1.3-.1.5s0 .3.1.5l.8 1.7c.1.1.1.3.2.4.1.1.2.2.4.3.1.1.3.2.4.2.2.1.3.1.5.1h.4l4.4-.9c.2 0 .4-.1.5-.2.1-.1.2-.2.3-.4.1-.1.1-.3.1-.5s0-.3-.1-.5l-.8-1.8c-.1-.1-.1-.2-.2-.4l-.3-.3c-.1-.1-.3-.1-.4-.2-.3.1-.4 0-.6 0\"\n          fill=\"url(#icon_csv_SVGID_3_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_4_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={43.729}\n          y1={31.775}\n          x2={88.765}\n          y2={68.821}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M60.2 41.7h-.4l-4 .8c-.2 0-.3.1-.5.2s-.3.2-.3.3c-.1.1-.1.3-.1.4 0 .2 0 .3.1.5l.8 1.6c.1.1.2.3.3.4.1.1.2.2.4.3.1.1.3.2.4.2.1.1.3.1.5.1h.4l4-.9c.2 0 .3-.1.5-.2l.3-.3c.1-.1.1-.3.1-.4 0-.2-.1-.3-.1-.5l-.9-1.5-.3-.3-.3-.3c-.1-.1-.3-.1-.4-.2-.2-.1-.4-.2-.5-.2\"\n          fill=\"url(#icon_csv_SVGID_4_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_5_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={34.341}\n          y1={43.188}\n          x2={79.378}\n          y2={80.234}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M47.2 49.5h-.4l-4.7 1c-.2 0-.4.1-.6.2-.2.1-.3.3-.4.4-.1.2-.2.3-.2.5s0 .4.1.6l.7 1.9c.1.2.1.3.3.4.1.1.2.2.4.3.1.1.3.2.5.2.2.1.3.1.5.1h.4l4.9-1.2c.2-.1.4-.1.6-.3.2-.1.3-.3.4-.4.1-.2.1-.3.1-.5s0-.4-.1-.6l-.8-1.8c-.1-.1-.1-.3-.3-.4-.1-.1-.2-.2-.4-.3-.1-.1-.3-.2-.4-.2-.3.1-.5.1-.6.1\"\n          fill=\"url(#icon_csv_SVGID_5_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_6_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={42.416}\n          y1={33.372}\n          x2={87.452}\n          y2={70.418}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M62.6 46.1h-.4L58 47c-.2 0-.4.1-.5.2-.1.1-.2.2-.3.4-.1.1-.1.3-.1.5s0 .3.1.5l.9 1.7c.1.1.2.3.3.4.1.1.2.2.4.3.1.1.3.2.4.2.2.1.3.1.5.1h.4l4.1-1c.2 0 .3-.1.5-.2.1-.1.2-.2.3-.4.1-.1.1-.3.1-.5s-.1-.3-.2-.5l-.9-1.6c-.1-.1-.2-.2-.3-.4-.1-.1-.2-.2-.4-.3-.1-.1-.3-.1-.4-.2 0 0-.2-.1-.3-.1\"\n          fill=\"url(#icon_csv_SVGID_6_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_7_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={36.948}\n          y1={40.019}\n          x2={81.984}\n          y2={77.065}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M57.6 52.7h-.4l-4.5 1.1c-.2.1-.4.1-.5.3-.2.1-.3.3-.4.4-.1.2-.1.3-.1.5s0 .4.1.6l.9 2c.1.2.2.3.3.4.1.1.2.2.4.3.1.1.3.2.5.2.2.1.3.1.5.1h.4l4.6-1.2c.2-.1.4-.1.5-.3.1-.1.2-.3.3-.4.1-.2.1-.3.1-.5s-.1-.4-.2-.6l-.9-1.9c-.1-.1-.2-.3-.3-.4-.1-.1-.2-.2-.4-.3-.1-.1-.3-.2-.4-.2-.2-.1-.4-.1-.5-.1\"\n          fill=\"url(#icon_csv_SVGID_7_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_8_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={41.13}\n          y1={34.934}\n          x2={86.166}\n          y2={71.98}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M65.1 50.8h-.4l-4.1 1c-.2 0-.4.1-.5.2-.1.1-.2.2-.3.4s-.1.3-.1.5.1.4.1.5l.9 1.9c.1.1.2.3.3.4.1.1.2.2.4.3.1.1.3.2.5.2.2.1.3.1.5.1h.4l4.2-1.1c.2-.1.3-.1.5-.3.1-.1.2-.3.3-.4.1-.2.1-.3.1-.5s-.1-.4-.2-.5l-1-1.8c-.1-.1-.2-.3-.3-.4-.1-.1-.2-.2-.4-.3-.1-.1-.3-.2-.4-.2h-.5\"\n          fill=\"url(#icon_csv_SVGID_8_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_9_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={30.492}\n          y1={47.867}\n          x2={75.529}\n          y2={84.912}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M51.8 60.3h-.4l-5 1.4-.6.3c-.2.1-.3.3-.4.5-.4.2-.4.4-.4.6 0 .2 0 .4.1.7l.8 2.2c.1.2.2.3.3.5l.4.4c.2.1.3.2.5.3.2.1.4.1.6.1h.8l5.1-1.6.6-.3c.2-.1.3-.3.4-.5.1-.2.1-.4.1-.6s0-.4-.1-.7l-.9-2.1c-.1-.2-.2-.3-.3-.5l-.4-.4c-.1-.1-.3-.2-.5-.2-.4-.1-.6-.1-.7-.1\"\n          fill=\"url(#icon_csv_SVGID_9_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_10_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={35.18}\n          y1={42.168}\n          x2={80.216}\n          y2={79.214}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M60.1 57.9h-.4L55 59.3l-.6.3c-.2.1-.3.3-.4.5v.5c0 .2 0 .4.1.6l.9 2.1c.1.2.2.3.3.5l.4.4c.2.1.3.2.5.2.2.1.3.1.5.1h.4L62 63c.2-.1.4-.2.5-.3s.2-.3.3-.5.1-.4.1-.6c0-.2-.1-.4-.2-.6l-1-2c-.1-.2-.2-.3-.3-.4-.1-.1-.2-.2-.4-.3-.1-.1-.3-.2-.5-.2 0-.1-.2-.2-.4-.2\"\n          fill=\"url(#icon_csv_SVGID_10_)\"\n        />\n        <linearGradient\n          id=\"icon_csv_SVGID_11_\"\n          gradientUnits=\"userSpaceOnUse\"\n          x1={39.623}\n          y1={36.767}\n          x2={84.659}\n          y2={73.813}\n        >\n          <stop offset={0} stopColor=\"#4ed8a0\" />\n          <stop offset={1} stopColor=\"#7a65f1\" />\n        </linearGradient>\n        <path\n          d=\"M67.8 55.8h-.4L63.1 57c-.2.1-.4.1-.5.3-.1.1-.2.3-.3.4-.1.2-.1.3-.1.5s.1.4.2.6l1 2c.1.2.2.3.3.4.1.1.3.2.4.3s.3.2.5.2c.2.1.3.1.5.1h.4l4.3-1.3c.2-.1.3-.2.5-.3.1-.1.2-.3.3-.4.1-.2.1-.4 0-.5 0-.2-.1-.4-.2-.6l-1-1.9c-.1-.1-.2-.3-.3-.4-.1-.1-.2-.2-.4-.3-.1-.1-.3-.2-.4-.2-.2-.1-.3-.1-.5-.1\"\n          fill=\"url(#icon_csv_SVGID_11_)\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default IconCSV\n","// Libraries\nimport React, {SFC} from 'react'\n\nconst IconLineProtocol: SFC = () => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      id=\"icon_lp_Layer_1\"\n      x={0}\n      y={0}\n      viewBox=\"0 0 100 100\"\n      xmlSpace=\"preserve\"\n    >\n      <style>\n        {\n          '.icon_lp_st2,.icon_lp_st3,.icon_lp_st4,.icon_lp_st5,.icon_lp_st6{fill:none;stroke:#ff8564;stroke-width:.9329;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10}.icon_lp_st3,.icon_lp_st4,.icon_lp_st5,.icon_lp_st6{stroke:#ffb6a0}.icon_lp_st4,.icon_lp_st5,.icon_lp_st6{stroke:#f85f53}.icon_lp_st5,.icon_lp_st6{stroke:#9394ff}.icon_lp_st6{fill:#b1b6ff;stroke:#ffb6a0}.icon_lp_st8{fill:#dc4e58}'\n        }\n      </style>\n      <path\n        d=\"M79.7 24.6l-.7-2.8-2.7-.8-2.1 1.9.6 2.8 2.7.8 2.2-1.9z\"\n        fill=\"#9394ff\"\n      />\n      <path\n        d=\"M66.2 74.9l-.3-1.4-1.4-.4-1 .9.3 1.4 1.4.4 1-.9z\"\n        fill=\"#311f94\"\n      />\n      <path className=\"icon_lp_st2\" d=\"M12.9 34.4v5.5M15.7 37.2h-5.5\" />\n      <path className=\"icon_lp_st3\" d=\"M63.9 1.1v2.8M65.3 2.5h-2.8\" />\n      <path className=\"icon_lp_st4\" d=\"M11.3 96.4v2.7M12.7 97.8H10\" />\n      <path className=\"icon_lp_st5\" d=\"M74.2 87.4l-2 2M74.2 89.4l-2-2\" />\n      <path className=\"icon_lp_st6\" d=\"M30.2 14.1L28.3 16M30.2 16l-1.9-1.9\" />\n      <circle cx={89.5} cy={60.7} r={1.4} fill=\"#c9d0ff\" />\n      <g>\n        <path\n          className=\"icon_lp_st8\"\n          d=\"M37.5 23.3c.2 0 .4.2.4.4s-.2.4-.4.4-.4-.2-.4-.4.2-.4.4-.4m0-.9c-.8 0-1.4.6-1.4 1.4s.6 1.4 1.4 1.4 1.4-.6 1.4-1.4-.6-1.4-1.4-1.4z\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M38.9 87.8c1 0 1.8.8 1.8 1.8s-.8 1.8-1.8 1.8-1.8-.8-1.8-1.8.8-1.8 1.8-1.8m0-.9c-1.5 0-2.8 1.2-2.8 2.8 0 1.5 1.2 2.8 2.8 2.8s2.8-1.2 2.8-2.8c0-1.6-1.2-2.8-2.8-2.8z\"\n          fill=\"#7a65f1\"\n        />\n      </g>\n      <g>\n        <path\n          className=\"icon_lp_st8\"\n          d=\"M17 66.7l3.1 1 .7 3.2-2.4 2.1-3.1-.9-.7-3.2 2.4-2.2m-.3-1.1l-3.2 2.9 1 4.1 4.1 1.2 3.1-2.9-1-4.1-4-1.2zm5.1 5.5zm0 0z\"\n        />\n      </g>\n      <linearGradient\n        id=\"icon_lp_influxdb_x5F_logo_1_\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1={38.005}\n        y1={37.41}\n        x2={63.326}\n        y2={71.448}\n      >\n        <stop offset={0.002} stopColor=\"#ff8564\" />\n        <stop offset={1} stopColor=\"#9394ff\" />\n      </linearGradient>\n      <path\n        id=\"icon_lp_influxdb_x5F_logo_4_\"\n        d=\"M67.5 54.5l-3.9-16.8c-.2-.9-1.1-1.8-2-2.1L44 30.2c-.2-.1-.5-.1-.7-.1-.7 0-1.5.3-2.1.7L28.6 42.6c-.7.6-1.1 1.8-.8 2.7l4.1 18c.2.9 1.1 1.8 2 2.1l16.5 5.1c.2.1.5.1.7.1.7 0 1.5-.3 2.1-.7l13.5-12.6c.7-.6 1-1.8.8-2.8zM45.9 34.2L58 37.9c.5.1.5.4 0 .5l-6.4 1.4c-.5.1-1.1-.1-1.5-.4l-4.4-4.8c-.4-.4-.3-.6.2-.4zm7.5 21.7c.1.5-.2.7-.7.6l-13.1-4c-.5-.1-.6-.5-.2-.9l10-9.3c.4-.4.7-.2.9.3l3.1 13.3zM31.9 44.1l10.6-9.9c.4-.4.9-.3 1.3 0l5.3 5.8c.4.4.3.9 0 1.3l-10.6 9.9c-.4.4-.9.3-1.3 0l-5.3-5.8c-.4-.5-.4-1 0-1.3zm2.6 15.6l-2.8-12.3c-.1-.5.1-.6.4-.2l4.4 4.8c.4.4.5 1.1.4 1.5L35 59.7c-.2.5-.5.5-.5 0zM50 66.9l-13.9-4.3c-.5-.1-.7-.7-.6-1.1l2.3-7.5c.1-.5.7-.7 1.1-.6l13.9 4.3c.5.1.7.7.6 1.1l-2.3 7.5c-.1.5-.6.8-1.1.6zm12.3-10.1L53 65.4c-.4.4-.5.2-.4-.3l1.9-6.2c.1-.5.7-1 1.1-1.1l6.4-1.4c.6-.1.6.1.3.4zm1-1.8l-7.6 1.8c-.5.1-1-.2-1.1-.7L51.4 42c-.1-.5.2-1 .7-1.1l7.6-1.8c.5-.1 1 .2 1.1.7L64 53.9c.1.5-.2 1-.7 1.1z\"\n        fill=\"url(#icon_lp_influxdb_x5F_logo_1_)\"\n      />\n    </svg>\n  )\n}\n\nexport default IconLineProtocol\n","import LogoApache from 'src/dataLoaders/graphics/LogoApache'\nimport LogoConsul from 'src/dataLoaders/graphics/LogoConsul'\nimport LogoCpu from 'src/dataLoaders/graphics/LogoCpu'\nimport LogoDocker from 'src/dataLoaders/graphics/LogoDocker'\nimport LogoElastic from 'src/dataLoaders/graphics/LogoElastic'\nimport LogoEtcd from 'src/dataLoaders/graphics/LogoEtcd'\nimport LogoIis from 'src/dataLoaders/graphics/LogoIis'\nimport LogoKubernetes from 'src/dataLoaders/graphics/LogoKubernetes'\nimport LogoMesos from 'src/dataLoaders/graphics/LogoMesos'\nimport LogoMongodb from 'src/dataLoaders/graphics/LogoMongodb'\nimport LogoMysql from 'src/dataLoaders/graphics/LogoMysql'\nimport LogoNginx from 'src/dataLoaders/graphics/LogoNginx'\nimport LogoRedis from 'src/dataLoaders/graphics/LogoRedis'\nimport LogoPrometheus from 'src/dataLoaders/graphics/LogoPrometheus'\nimport IconStreaming from 'src/dataLoaders/graphics/IconStreaming'\nimport IconCSV from 'src/dataLoaders/graphics/IconCSV'\nimport IconLineProtocol from 'src/dataLoaders/graphics/IconLineProtocol'\n\nexport {\n  LogoApache,\n  LogoConsul,\n  LogoCpu,\n  LogoDocker,\n  LogoElastic,\n  LogoEtcd,\n  LogoIis,\n  LogoKubernetes,\n  LogoMongodb,\n  LogoMesos,\n  LogoMysql,\n  LogoNginx,\n  LogoRedis,\n  LogoPrometheus,\n  IconStreaming,\n  IconCSV,\n  IconLineProtocol,\n}\n","// Types\nimport {\n  TelegrafPluginName,\n  TelegrafPluginInfo,\n  ConfigFieldType,\n  BundleName,\n} from 'src/types'\n\nimport {\n  TelegrafPluginInputCpu,\n  TelegrafPluginInputDisk,\n  TelegrafPluginInputDiskio,\n  TelegrafPluginInputDocker,\n  TelegrafPluginInputFile,\n  TelegrafPluginInputKernel,\n  TelegrafPluginInputKubernetes,\n  TelegrafPluginInputLogParser,\n  TelegrafPluginInputMem,\n  TelegrafPluginInputNet,\n  TelegrafPluginInputNetResponse,\n  TelegrafPluginInputNginx,\n  TelegrafPluginInputProcesses,\n  TelegrafPluginInputProcstat,\n  TelegrafPluginInputPrometheus,\n  TelegrafPluginInputRedis,\n  TelegrafPluginInputSyslog,\n  TelegrafPluginInputSwap,\n  TelegrafPluginInputSystem,\n  TelegrafPluginInputTail,\n} from '@influxdata/influx'\n\nexport const QUICKSTART_SCRAPER_TARGET_URL = `${window.location.origin}/metrics`\n\ninterface PluginBundles {\n  [bundleName: string]: TelegrafPluginName[]\n}\n\nexport const pluginsByBundle: PluginBundles = {\n  [BundleName.System]: [\n    TelegrafPluginInputCpu.NameEnum.Cpu,\n    TelegrafPluginInputDisk.NameEnum.Disk,\n    TelegrafPluginInputDiskio.NameEnum.Diskio,\n    TelegrafPluginInputSystem.NameEnum.System,\n    TelegrafPluginInputMem.NameEnum.Mem,\n    TelegrafPluginInputNet.NameEnum.Net,\n    TelegrafPluginInputProcesses.NameEnum.Processes,\n    TelegrafPluginInputSwap.NameEnum.Swap,\n  ],\n  [BundleName.Docker]: [TelegrafPluginInputDocker.NameEnum.Docker],\n  [BundleName.Kubernetes]: [TelegrafPluginInputKubernetes.NameEnum.Kubernetes],\n  [BundleName.Nginx]: [TelegrafPluginInputNginx.NameEnum.Nginx],\n  [BundleName.Redis]: [TelegrafPluginInputRedis.NameEnum.Redis],\n}\n\nexport const telegrafPluginsInfo: TelegrafPluginInfo = {\n  [TelegrafPluginInputCpu.NameEnum.Cpu]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputCpu.NameEnum.Cpu,\n      type: TelegrafPluginInputCpu.TypeEnum.Input,\n    },\n    templateID: '0000000000000009',\n  },\n  [TelegrafPluginInputDisk.NameEnum.Disk]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputDisk.NameEnum.Disk,\n      type: TelegrafPluginInputDisk.TypeEnum.Input,\n    },\n    templateID: '0000000000000009',\n  },\n  [TelegrafPluginInputDiskio.NameEnum.Diskio]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputDiskio.NameEnum.Diskio,\n      type: TelegrafPluginInputDiskio.TypeEnum.Input,\n    },\n    templateID: '0000000000000009',\n  },\n  [TelegrafPluginInputDocker.NameEnum.Docker]: {\n    fields: {\n      endpoint: {\n        type: ConfigFieldType.String,\n        isRequired: true,\n      },\n    },\n    defaults: {\n      name: TelegrafPluginInputDocker.NameEnum.Docker,\n      type: TelegrafPluginInputDocker.TypeEnum.Input,\n      config: {endpoint: ''},\n    },\n    templateID: '0000000000000002',\n  },\n  [TelegrafPluginInputFile.NameEnum.File]: {\n    fields: {\n      files: {\n        type: ConfigFieldType.StringArray,\n        isRequired: true,\n      },\n    },\n    defaults: {\n      name: TelegrafPluginInputFile.NameEnum.File,\n      type: TelegrafPluginInputFile.TypeEnum.Input,\n      config: {files: []},\n    },\n  },\n  [TelegrafPluginInputKernel.NameEnum.Kernel]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputKernel.NameEnum.Kernel,\n      type: TelegrafPluginInputDiskio.TypeEnum.Input,\n    },\n  },\n  [TelegrafPluginInputKubernetes.NameEnum.Kubernetes]: {\n    fields: {\n      url: {\n        type: ConfigFieldType.Uri,\n        isRequired: true,\n      },\n    },\n    defaults: {\n      name: TelegrafPluginInputKubernetes.NameEnum.Kubernetes,\n      type: TelegrafPluginInputKubernetes.TypeEnum.Input,\n      config: {url: ''},\n    },\n    templateID: '0000000000000005',\n  },\n  [TelegrafPluginInputLogParser.NameEnum.Logparser]: {\n    fields: {files: {type: ConfigFieldType.StringArray, isRequired: true}},\n    defaults: {\n      name: TelegrafPluginInputLogParser.NameEnum.Logparser,\n      type: TelegrafPluginInputLogParser.TypeEnum.Input,\n      config: {files: []},\n    },\n  },\n  [TelegrafPluginInputMem.NameEnum.Mem]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputMem.NameEnum.Mem,\n      type: TelegrafPluginInputMem.TypeEnum.Input,\n    },\n    templateID: '0000000000000009',\n  },\n  [TelegrafPluginInputNet.NameEnum.Net]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputNet.NameEnum.Net,\n      type: TelegrafPluginInputNet.TypeEnum.Input,\n    },\n    templateID: '0000000000000009',\n  },\n  [TelegrafPluginInputNetResponse.NameEnum.NetResponse]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputNetResponse.NameEnum.NetResponse,\n      type: TelegrafPluginInputNetResponse.TypeEnum.Input,\n    },\n  },\n  [TelegrafPluginInputNginx.NameEnum.Nginx]: {\n    fields: {urls: {type: ConfigFieldType.UriArray, isRequired: true}},\n    defaults: {\n      name: TelegrafPluginInputNginx.NameEnum.Nginx,\n      type: TelegrafPluginInputNginx.TypeEnum.Input,\n    },\n    templateID: '0000000000000006',\n  },\n  [TelegrafPluginInputProcesses.NameEnum.Processes]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputProcesses.NameEnum.Processes,\n      type: TelegrafPluginInputProcesses.TypeEnum.Input,\n    },\n    templateID: '0000000000000009',\n  },\n  [TelegrafPluginInputProcstat.NameEnum.Procstat]: {\n    fields: {exe: {type: ConfigFieldType.String, isRequired: true}},\n    defaults: {\n      name: TelegrafPluginInputProcstat.NameEnum.Procstat,\n      type: TelegrafPluginInputProcstat.TypeEnum.Input,\n      config: {exe: ''},\n    },\n  },\n  [TelegrafPluginInputPrometheus.NameEnum.Prometheus]: {\n    fields: {urls: {type: ConfigFieldType.UriArray, isRequired: true}},\n    defaults: {\n      name: TelegrafPluginInputPrometheus.NameEnum.Prometheus,\n      type: TelegrafPluginInputPrometheus.TypeEnum.Input,\n      config: {urls: []},\n    },\n  },\n  [TelegrafPluginInputRedis.NameEnum.Redis]: {\n    fields: {\n      servers: {type: ConfigFieldType.StringArray, isRequired: true},\n      password: {type: ConfigFieldType.String, isRequired: false},\n    },\n    defaults: {\n      name: TelegrafPluginInputRedis.NameEnum.Redis,\n      type: TelegrafPluginInputRedis.TypeEnum.Input,\n      config: {servers: [], password: ''},\n    },\n    templateID: '0000000000000008',\n  },\n  [TelegrafPluginInputSyslog.NameEnum.Syslog]: {\n    fields: {server: {type: ConfigFieldType.String, isRequired: true}},\n    defaults: {\n      name: TelegrafPluginInputSyslog.NameEnum.Syslog,\n      type: TelegrafPluginInputSyslog.TypeEnum.Input,\n      config: {server: ''},\n    },\n  },\n  [TelegrafPluginInputSwap.NameEnum.Swap]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputSwap.NameEnum.Swap,\n      type: TelegrafPluginInputSwap.TypeEnum.Input,\n    },\n    templateID: '0000000000000009',\n  },\n  [TelegrafPluginInputSystem.NameEnum.System]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputSystem.NameEnum.System,\n      type: TelegrafPluginInputSystem.TypeEnum.Input,\n    },\n    templateID: '0000000000000009',\n  },\n  [TelegrafPluginInputTail.NameEnum.Tail]: {\n    fields: null,\n    defaults: {\n      name: TelegrafPluginInputTail.NameEnum.Tail,\n      type: TelegrafPluginInputTail.TypeEnum.Input,\n    },\n  },\n}\n\nexport const PLUGIN_OPTIONS: TelegrafPluginName[] = [\n  TelegrafPluginInputCpu.NameEnum.Cpu,\n  TelegrafPluginInputDisk.NameEnum.Disk,\n  TelegrafPluginInputDiskio.NameEnum.Diskio,\n  TelegrafPluginInputDocker.NameEnum.Docker,\n  TelegrafPluginInputFile.NameEnum.File,\n  TelegrafPluginInputKernel.NameEnum.Kernel,\n  TelegrafPluginInputKubernetes.NameEnum.Kubernetes,\n  TelegrafPluginInputLogParser.NameEnum.Logparser,\n  TelegrafPluginInputMem.NameEnum.Mem,\n  TelegrafPluginInputNet.NameEnum.Net,\n  TelegrafPluginInputNetResponse.NameEnum.NetResponse,\n  TelegrafPluginInputNginx.NameEnum.Nginx,\n  TelegrafPluginInputProcesses.NameEnum.Processes,\n  TelegrafPluginInputProcstat.NameEnum.Procstat,\n  TelegrafPluginInputPrometheus.NameEnum.Prometheus,\n  TelegrafPluginInputRedis.NameEnum.Redis,\n  TelegrafPluginInputSyslog.NameEnum.Syslog,\n  TelegrafPluginInputSwap.NameEnum.Swap,\n  TelegrafPluginInputSystem.NameEnum.System,\n  TelegrafPluginInputTail.NameEnum.Tail,\n]\n\nimport {\n  LogoCpu,\n  LogoDocker,\n  LogoKubernetes,\n  LogoNginx,\n  LogoRedis,\n} from 'src/dataLoaders/graphics'\n\nexport const BUNDLE_LOGOS = {\n  [BundleName.System]: LogoCpu,\n  [BundleName.Docker]: LogoDocker,\n  [BundleName.Kubernetes]: LogoKubernetes,\n  [BundleName.Nginx]: LogoNginx,\n  [BundleName.Redis]: LogoRedis,\n}\n\nexport const PLUGIN_BUNDLE_OPTIONS: BundleName[] = [\n  BundleName.System,\n  BundleName.Docker,\n  BundleName.Kubernetes,\n  BundleName.Nginx,\n  BundleName.Redis,\n]\n","import {getRootNode} from 'src/utils/nodes'\nimport {BASE_PATH, API_BASE_PATH} from 'src/shared/constants'\n\nexport const getBrowserBasepath = () => {\n  const rootNode = getRootNode()\n  return rootNode.getAttribute('data-basepath') || ''\n}\n\nexport const getBasepath = () => {\n  if (BASE_PATH === '/') {\n    return ''\n  }\n\n  return BASE_PATH.slice(0, -1)\n}\n\nexport const getAPIBasepath = () => {\n  if (API_BASE_PATH === '/') {\n    return ''\n  }\n\n  return API_BASE_PATH.slice(0, -1)\n}\n\nexport const stripPrefix = (pathname, basepath = getBasepath()) => {\n  if (basepath === '') {\n    return pathname\n  }\n\n  const expr = new RegExp(`^${basepath}`)\n  const matches = pathname.match(expr)\n  if (matches) {\n    return pathname.replace(expr, '')\n  }\n}\n","// Libraries\nimport {get} from 'lodash'\n\n// Types\nimport {AppState, ResourceType, RemoteDataState, Label} from 'src/types'\n\nexport const getStatus = (\n  {resources}: AppState,\n  resource: ResourceType\n): RemoteDataState => {\n  return resources[resource].status\n}\n\nexport const getAll = <R>(\n  {resources}: AppState,\n  resource: ResourceType\n): R[] => {\n  const allIDs: string[] = resources[resource].allIDs\n  const byID: {[uuid: string]: R} = resources[resource].byID\n  return allIDs.map(id => byID[id])\n}\n\nexport const getByID = <R>(\n  {resources}: AppState,\n  type: ResourceType,\n  id: string\n): R => {\n  const byID = get(resources, `${type}.byID`)\n\n  if (!byID) {\n    throw new Error(`\"${type}\" resource has yet not been set`)\n  }\n\n  const resource = get(byID, `${id}`, null)\n\n  return resource\n}\n\nexport const getLabels = (state: AppState, labelIDs: string[]): Label[] => {\n  return labelIDs\n    .map(labelID => getByID<Label>(state, ResourceType.Labels, labelID))\n    .filter(label => !!label)\n}\n","// Libraries\nimport qs from 'qs'\nimport {replace, RouterAction} from 'react-router-redux'\nimport {Dispatch, Action} from 'redux'\nimport {get, pickBy} from 'lodash'\n\n// Actions\nimport {notify} from 'src/shared/actions/notifications'\n\n// Utils\nimport {stripPrefix} from 'src/utils/basepath'\nimport {validateAndTypeRange} from 'src/dashboards/utils/time'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\nimport {DEFAULT_TIME_RANGE} from 'src/shared/constants/timeRanges'\n\n// Types\nimport {TimeRange} from 'src/types'\n\nexport type Action =\n  | SetDashboardTimeRangeAction\n  | DeleteTimeRangeAction\n  | RetainRangesDashTimeV1Action\n\nexport enum ActionTypes {\n  DeleteTimeRange = 'DELETE_TIME_RANGE',\n  SetDashboardTimeRange = 'SET_DASHBOARD_TIME_RANGE',\n  RetainRangesDashboardTimeV1 = 'RETAIN_RANGES_DASHBOARD_TIME_V1',\n}\n\nexport interface DeleteTimeRangeAction {\n  type: ActionTypes.DeleteTimeRange\n  payload: {\n    dashboardID: string\n  }\n}\n\ninterface SetDashboardTimeRangeAction {\n  type: ActionTypes.SetDashboardTimeRange\n  payload: {\n    dashboardID: string\n    timeRange: TimeRange\n  }\n}\n\ninterface RetainRangesDashTimeV1Action {\n  type: ActionTypes.RetainRangesDashboardTimeV1\n  payload: {\n    dashboardIDs: string[]\n  }\n}\n\nexport const deleteTimeRange = (\n  dashboardID: string\n): DeleteTimeRangeAction => ({\n  type: ActionTypes.DeleteTimeRange,\n  payload: {dashboardID},\n})\n\nexport const setDashboardTimeRange = (\n  dashboardID: string,\n  timeRange: TimeRange\n): SetDashboardTimeRangeAction => ({\n  type: ActionTypes.SetDashboardTimeRange,\n  payload: {dashboardID, timeRange},\n})\n\nexport const retainRangesDashTimeV1 = (\n  dashboardIDs: string[]\n): RetainRangesDashTimeV1Action => ({\n  type: ActionTypes.RetainRangesDashboardTimeV1,\n  payload: {dashboardIDs},\n})\n\nexport const updateQueryParams = (updatedQueryParams: object): RouterAction => {\n  const {search, pathname} = window.location\n  const strippedPathname = stripPrefix(pathname)\n\n  const newQueryParams = pickBy(\n    {\n      ...qs.parse(search, {ignoreQueryPrefix: true}),\n      ...updatedQueryParams,\n    },\n    v => !!v\n  )\n\n  const newSearch = qs.stringify(newQueryParams)\n  const newLocation = {pathname: strippedPathname, search: `?${newSearch}`}\n\n  return replace(newLocation)\n}\n\nexport const updateTimeRangeFromQueryParams = (dashboardID: string) => (\n  dispatch: Dispatch<Action>,\n  getState\n): void => {\n  const {ranges} = getState()\n  const queryParams = qs.parse(window.location.search, {\n    ignoreQueryPrefix: true,\n  })\n\n  const validatedTimeRangeFromQuery = validateAndTypeRange({\n    lower: get(queryParams, 'lower', null),\n    upper: get(queryParams, 'upper', null),\n  })\n\n  const validatedTimeRange =\n    validatedTimeRangeFromQuery || ranges[dashboardID] || DEFAULT_TIME_RANGE\n\n  if (\n    (queryParams.lower || queryParams.upper) &&\n    !validatedTimeRangeFromQuery\n  ) {\n    dispatch(notify(copy.invalidTimeRangeValueInURLQuery()))\n  }\n\n  dispatch(setDashboardTimeRange(dashboardID, validatedTimeRange))\n\n  dispatch(\n    updateQueryParams({\n      lower: validatedTimeRange.lower,\n      upper: validatedTimeRange.upper,\n    })\n  )\n}\n","// Types\nimport {RemoteDataState, ViewEntities} from 'src/types'\nimport {NormalizedSchema} from 'normalizr'\n\n// Actions\nimport {setDashboard} from 'src/dashboards/actions/creators'\n\nexport type Action =\n  | ReturnType<typeof resetViews>\n  | ReturnType<typeof setView>\n  | ReturnType<typeof setViews>\n  | ReturnType<typeof setDashboard>\n\nexport const RESET_VIEWS = 'RESET_VIEWS'\nexport const SET_VIEW = 'SET_VIEW'\nexport const SET_VIEWS = 'SET_VIEWS'\n\ntype ViewSchema<R extends string | string[]> = NormalizedSchema<ViewEntities, R>\n\nexport const resetViews = () =>\n  ({\n    type: RESET_VIEWS,\n  } as const)\n\nexport const setViews = (\n  status: RemoteDataState,\n  schema?: ViewSchema<string[]>\n) =>\n  ({\n    type: SET_VIEWS,\n    status,\n    schema,\n  } as const)\n\nexport const setView = (\n  id: string,\n  status: RemoteDataState,\n  schema?: ViewSchema<string>\n) =>\n  ({\n    type: SET_VIEW,\n    id,\n    status,\n    schema,\n  } as const)\n","import {TimeField} from 'src/dashboards/constants'\n\nexport const NULL_ARRAY_INDEX = -1\n\nexport const ASCENDING = 'asc'\nexport const DESCENDING = 'desc'\nexport const DEFAULT_SORT_DIRECTION = ASCENDING\n\nexport const DEFAULT_FIX_FIRST_COLUMN = true\nexport const DEFAULT_VERTICAL_TIME_AXIS = true\n\nexport const CELL_HORIZONTAL_PADDING = 30\n\nexport const DEFAULT_TIME_FIELD: TimeField = {\n  internalName: '_time',\n  displayName: 'time',\n  visible: true,\n}\n","export const AGG_WINDOW_AUTO = 'auto'\nexport const AGG_WINDOW_NONE = 'none'\n\nexport const DURATIONS = [\n  '5s',\n  '15s',\n  '1m',\n  '5m',\n  '15m',\n  '1h',\n  '6h',\n  '12h',\n  '24h',\n  '2d',\n  '7d',\n  '30d',\n]\n\nexport interface QueryFn {\n  name: string\n  flux: (period?: string) => string\n}\n\nexport const genFlux = (func: string, period?: string) => {\n  if (period === AGG_WINDOW_NONE) {\n    return `|> ${func}()`\n  }\n\n  switch (func) {\n    case 'derivative': {\n      return `|> derivative(unit: ${period}, nonNegative: false)`\n    }\n\n    case 'nonnegative derivative': {\n      return `|> derivative(unit: ${period}, nonNegative: true)`\n    }\n\n    case 'median':\n    case 'mean':\n    case 'max':\n    case 'min':\n    case 'sum':\n    case 'stddev':\n    case 'first':\n    case 'last': {\n      return `|> aggregateWindow(every: ${period}, fn: ${func})`\n    }\n\n    default:\n      return `|> ${func}()`\n  }\n}\n\nexport const FUNCTIONS: QueryFn[] = [\n  {\n    name: 'mean',\n    flux: period => genFlux('mean', period),\n  },\n  {\n    name: 'median',\n    flux: period => genFlux('median', period),\n  },\n  {\n    name: 'max',\n    flux: period => genFlux('max', period),\n  },\n  {\n    name: 'min',\n    flux: period => genFlux('min', period),\n  },\n  {\n    name: 'sum',\n    flux: period => genFlux('sum', period),\n  },\n  {\n    name: 'derivative',\n    flux: period => genFlux('derivative', period),\n  },\n  {\n    name: 'nonnegative derivative',\n    flux: period => genFlux('nonnegative derivative', period),\n  },\n  {\n    name: 'distinct',\n    flux: period => genFlux('distinct', period),\n  },\n  {\n    name: 'count',\n    flux: period => genFlux('count', period),\n  },\n  {\n    name: 'increase',\n    flux: period => genFlux('increase', period),\n  },\n  {\n    name: 'skew',\n    flux: period => genFlux('skew', period),\n  },\n  {\n    name: 'spread',\n    flux: period => genFlux('spread', period),\n  },\n  {\n    name: 'stddev',\n    flux: period => genFlux('stddev', period),\n  },\n  {\n    name: 'first',\n    flux: period => genFlux('first', period),\n  },\n  {\n    name: 'last',\n    flux: period => genFlux('last', period),\n  },\n  {\n    name: 'unique',\n    flux: period => genFlux('unique', period),\n  },\n  {\n    name: 'sort',\n    flux: period => genFlux('sort', period),\n  },\n]\n","export enum ConnectorState {\n  None = 'none',\n  Some = 'some',\n  Full = 'full',\n}\n\nexport enum StepStatus {\n  Incomplete = 'circle-thick',\n  Complete = 'checkmark',\n  Error = 'remove',\n}\n","// Types\nimport {RemoteDataState, TemplateSummaryEntities} from 'src/types'\nimport {DocumentCreate} from '@influxdata/influx'\nimport {NormalizedSchema} from 'normalizr'\n\nexport const ADD_TEMPLATE_SUMMARY = 'ADD_TEMPLATE_SUMMARY'\nexport const GET_TEMPLATE_SUMMARIES_FOR_ORG = 'GET_TEMPLATE_SUMMARIES_FOR_ORG'\nexport const POPULATE_TEMPLATE_SUMMARIES = 'POPULATE_TEMPLATE_SUMMARIES'\nexport const REMOVE_TEMPLATE_SUMMARY = 'REMOVE_TEMPLATE_SUMMARY'\nexport const SET_EXPORT_TEMPLATE = 'SET_EXPORT_TEMPLATE'\nexport const SET_TEMPLATE_SUMMARY = 'SET_TEMPLATE_SUMMARY'\nexport const SET_TEMPLATES_STATUS = 'SET_TEMPLATES_STATUS'\n\nexport type Action =\n  | ReturnType<typeof addTemplateSummary>\n  | ReturnType<typeof populateTemplateSummaries>\n  | ReturnType<typeof removeTemplateSummary>\n  | ReturnType<typeof setExportTemplate>\n  | ReturnType<typeof setTemplatesStatus>\n  | ReturnType<typeof setTemplateSummary>\n\ntype TemplateSummarySchema<R extends string | string[]> = NormalizedSchema<\n  TemplateSummaryEntities,\n  R\n>\n\n// Action Creators\nexport const addTemplateSummary = (schema: TemplateSummarySchema<string>) =>\n  ({\n    type: ADD_TEMPLATE_SUMMARY,\n    schema,\n  } as const)\n\nexport const populateTemplateSummaries = (\n  schema: TemplateSummarySchema<string[]>\n) =>\n  ({\n    type: POPULATE_TEMPLATE_SUMMARIES,\n    status: RemoteDataState.Done,\n    schema,\n  } as const)\n\nexport const setExportTemplate = (\n  status: RemoteDataState,\n  item?: DocumentCreate\n) =>\n  ({\n    type: SET_EXPORT_TEMPLATE,\n    status,\n    item,\n  } as const)\n\nexport const setTemplatesStatus = (status: RemoteDataState) =>\n  ({\n    type: SET_TEMPLATES_STATUS,\n    status,\n  } as const)\n\nexport const removeTemplateSummary = (id: string) =>\n  ({\n    type: REMOVE_TEMPLATE_SUMMARY,\n    id,\n  } as const)\n\nexport const setTemplateSummary = (\n  id: string,\n  status: RemoteDataState,\n  schema?: TemplateSummarySchema<string>\n) =>\n  ({\n    type: SET_TEMPLATE_SUMMARY,\n    id,\n    status,\n    schema,\n  } as const)\n","// Labels can use a different set of brand colors than single stats or gauges\nimport {Label, RemoteDataState} from 'src/types'\nimport {LabelColor, LabelColorType} from 'src/types/colors'\n\nexport const INFLUX_LABEL_PREFIX = '@influxdata'\nexport const TOKEN_LABEL = `${INFLUX_LABEL_PREFIX}.token`\n\nexport const HEX_CODE_CHAR_LENGTH = 7\n\nexport const DEFAULT_LABEL_COLOR_HEX = '#326BBA'\n\nexport const EMPTY_LABEL: Label = {\n  name: '',\n  status: RemoteDataState.Done,\n  properties: {\n    description: '',\n    color: DEFAULT_LABEL_COLOR_HEX,\n  },\n}\n\nexport const CUSTOM_LABEL: LabelColor = {\n  id: 'custom',\n  colorHex: '#RRRRRR',\n  name: 'Custom Hexcode',\n  type: LabelColorType.Custom,\n}\n\nexport const PRESET_LABEL_COLORS: LabelColor[] = [\n  CUSTOM_LABEL,\n  {\n    id: 'label-preset-sapphire',\n    colorHex: '#326BBA',\n    name: 'Sapphire',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-ocean',\n    colorHex: '#4591ED',\n    name: 'Ocean',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-pool',\n    colorHex: '#22ADF6',\n    name: 'Pool',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-laser',\n    colorHex: '#00C9FF',\n    name: 'Laser',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-hydrogen',\n    colorHex: '#6BDFFF',\n    name: 'Hydrogen',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-neutrino',\n    colorHex: '#BEF0FF',\n    name: 'Neutrino',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-void',\n    colorHex: '#311F94',\n    name: 'Void',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-amethyst',\n    colorHex: '#513CC6',\n    name: 'Amethyst',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-star',\n    colorHex: '#7A65F2',\n    name: 'Star',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-comet',\n    colorHex: '#9394FF',\n    name: 'Comet',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-potassium',\n    colorHex: '#B1B6FF',\n    name: 'Potassium',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-moonstone',\n    colorHex: '#C9D0FF',\n    name: 'Moonstone',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-emerald',\n    colorHex: '#108174',\n    name: 'Emerald',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-viridian',\n    colorHex: '#32B08C',\n    name: 'Viridian',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-rainforest',\n    colorHex: '#4ED8A0',\n    name: 'Rainforest',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-honeydew',\n    colorHex: '#7CE490',\n    name: 'Honeydew',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-krypton',\n    colorHex: '#A5F3B4',\n    name: 'Krypton',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-wasabi',\n    colorHex: '#C6FFD0',\n    name: 'Wasabi',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-ruby',\n    colorHex: '#BF3D5E',\n    name: 'Ruby',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-fire',\n    colorHex: '#DC4E58',\n    name: 'Fire',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-curacao',\n    colorHex: '#F95F53',\n    name: 'Curacao',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-dreamsicle',\n    colorHex: '#FF8564',\n    name: 'Dreamsicle',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-tungsten',\n    colorHex: '#FFB6A0',\n    name: 'Tungsten',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-marmelade',\n    colorHex: '#FFDCCF',\n    name: 'Marmelade',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-topaz',\n    colorHex: '#E85B1C',\n    name: 'Topaz',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-tiger',\n    colorHex: '#F48D38',\n    name: 'Tiger',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-pineapple',\n    colorHex: '#FFB94A',\n    name: 'Pineapple',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-thunder',\n    colorHex: '#FFD255',\n    name: 'Thunder',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-sulfur',\n    colorHex: '#FFE480',\n    name: 'Sulfur',\n    type: LabelColorType.Preset,\n  },\n  {\n    id: 'label-preset-daisy',\n    colorHex: '#FFF6B8',\n    name: 'Daisy',\n    type: LabelColorType.Preset,\n  },\n]\n\nexport const INPUT_ERROR_COLOR = '#0F0E15'\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {ResourceType} from 'src/types'\nimport {labelSchema} from './labels'\n\n/* Tasks */\n\n// Defines the schema for the tasks resource\nexport const taskSchema = new schema.Entity(ResourceType.Tasks, {\n  labels: [labelSchema],\n})\n\nexport const arrayOfTasks = [taskSchema]\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {ResourceType, Telegraf} from 'src/types'\n\n// Schemas\nimport {labelSchema} from './labels'\n\n// Defines the schema for the \"telegrafs\" resource\nexport const telegrafSchema = new schema.Entity(\n  ResourceType.Telegrafs,\n  {\n    labels: [labelSchema],\n  },\n  {\n    // add buckets to metadata if not present\n    processStrategy: (t: Telegraf): Telegraf => {\n      if (!t.metadata) {\n        return {\n          ...t,\n          metadata: {\n            buckets: [],\n          },\n        }\n      }\n\n      if (!t.metadata.buckets) {\n        return {\n          ...t,\n          metadata: {\n            ...t.metadata,\n            buckets: [],\n          },\n        }\n      }\n\n      return t\n    },\n  }\n)\n\nexport const arrayOfTelegrafs = [telegrafSchema]\n","import Papa from 'papaparse'\nimport _ from 'lodash'\nimport uuid from 'uuid'\n\nimport {FluxTable} from 'src/types'\n\nexport const parseResponseError = (response: string): FluxTable[] => {\n  const data = Papa.parse(response.trim()).data as string[][]\n\n  return [\n    {\n      id: uuid.v4(),\n      name: 'Error',\n      result: '',\n      groupKey: {},\n      dataTypes: {},\n      data,\n    },\n  ]\n}\n\n/*\n  A Flux CSV response can contain multiple CSV files each joined by a newline.\n  This function splits up a CSV response into these individual CSV files.\n\n  See https://github.com/influxdata/flux/blob/master/docs/SPEC.md#multiple-tables.\n*/\nexport const parseChunks = (response: string): string[] => {\n  const trimmedResponse = response.trim()\n\n  if (trimmedResponse === '') {\n    return []\n  }\n\n  // Split the response into separate chunks whenever we encounter:\n  //\n  // 1. A newline\n  // 2. Followed by any amount of whitespace\n  // 3. Followed by a newline\n  // 4. Followed by a `#` character\n  //\n  // The last condition is [necessary][0] for handling CSV responses with\n  // values containing newlines.\n  //\n  // [0]: https://github.com/influxdata/influxdb/issues/15017\n\n  const chunks = trimmedResponse\n    .split(/\\n\\s*\\n#/)\n    .map((s, i) => (i === 0 ? s : `#${s}`))\n\n  return chunks\n}\n\nexport const parseResponse = (response: string): FluxTable[] => {\n  const chunks = parseChunks(response)\n  const tables = chunks.reduce((acc, chunk) => {\n    return [...acc, ...parseTables(chunk)]\n  }, [])\n\n  return tables\n}\n\nexport const parseTables = (responseChunk: string): FluxTable[] => {\n  const lines = responseChunk.split('\\n')\n  const annotationLines: string = lines\n    .filter(line => line.startsWith('#'))\n    .join('\\n')\n    .trim()\n  const nonAnnotationLines: string = lines\n    .filter(line => !line.startsWith('#'))\n    .join('\\n')\n    .trim()\n\n  if (_.isEmpty(annotationLines)) {\n    throw new Error('Unable to extract annotation data')\n  }\n\n  if (_.isEmpty(nonAnnotationLines)) {\n    // A response may be truncated on an arbitrary line. This guards against\n    // the case where a response is truncated on annotation data\n    return []\n  }\n\n  const nonAnnotationData = Papa.parse(nonAnnotationLines).data\n  const annotationData = Papa.parse(annotationLines).data\n  const headerRow = nonAnnotationData[0]\n  const tableColIndex = headerRow.findIndex(h => h === 'table')\n  const resultColIndex = headerRow.findIndex(h => h === 'result')\n\n  interface TableGroup {\n    [tableId: string]: string[]\n  }\n\n  // Group rows by their table id\n  const tablesData = Object.values(\n    _.groupBy<TableGroup[]>(\n      nonAnnotationData.slice(1),\n      row => row[tableColIndex]\n    )\n  )\n\n  const groupRow = annotationData.find(row => row[0] === '#group')\n  const defaultsRow = annotationData.find(row => row[0] === '#default')\n  const dataTypeRow = annotationData.find(row => row[0] === '#datatype')\n\n  // groupRow = ['#group', 'false', 'true', 'true', 'false']\n  const groupKeyIndices = groupRow.reduce((acc, value, i) => {\n    if (value === 'true') {\n      return [...acc, i]\n    }\n\n    return acc\n  }, [])\n\n  const tables = tablesData.map(tableData => {\n    const dataRow = _.get(tableData, '0', defaultsRow)\n\n    const result: string =\n      _.get(dataRow, resultColIndex, '') ||\n      _.get(defaultsRow, resultColIndex, '')\n\n    const groupKey = groupKeyIndices.reduce((acc, i) => {\n      return {...acc, [headerRow[i]]: _.get(dataRow, i, '')}\n    }, {})\n\n    const name = Object.entries(groupKey)\n      .filter(([k]) => !['_start', '_stop'].includes(k))\n      .map(([k, v]) => `${k}=${v}`)\n      .join(' ')\n\n    const dataTypes = dataTypeRow.reduce(\n      (acc, dataType, i) => ({\n        ...acc,\n        [headerRow[i]]: dataType,\n      }),\n      {}\n    )\n\n    return {\n      id: uuid.v4(),\n      data: [[...headerRow], ...tableData],\n      name,\n      result,\n      groupKey,\n      dataTypes,\n    }\n  })\n\n  return tables\n}\n","// Constants\nimport {OPTION_NAME} from 'src/variables/constants'\n\n// Types\nimport {File, Property} from 'src/types/ast'\nimport {VariableAssignment} from 'src/types/ast'\n\nexport const buildVarsOption = (variables: VariableAssignment[]): File => ({\n  type: 'File',\n  package: null,\n  imports: null,\n  body: [\n    {\n      type: 'OptionStatement',\n      assignment: {\n        type: 'VariableAssignment',\n        id: {\n          type: 'Identifier',\n          name: OPTION_NAME,\n        },\n        init: {\n          type: 'ObjectExpression',\n          properties: variables.map(assignmentToProperty),\n        },\n      },\n    },\n  ],\n})\n\nconst assignmentToProperty = (variable: VariableAssignment): Property => {\n  return {\n    type: 'Property',\n    key: variable.id,\n    value: variable.init,\n  }\n}\n","// Libraries\nimport {normalize} from 'normalizr'\nimport {Dispatch} from 'react'\n\n// API\nimport * as api from 'src/client'\n\n// Schemas\nimport {bucketSchema, arrayOfBuckets} from 'src/schemas'\n\n// Types\nimport {\n  AppState,\n  RemoteDataState,\n  GetState,\n  GenBucket,\n  Bucket,\n  BucketEntities,\n  Label,\n} from 'src/types'\n\n// Utils\nimport {getErrorMessage} from 'src/utils/api'\nimport {getOrg} from 'src/organizations/selectors'\n\n// Actions\nimport {\n  editBucket,\n  addBucket,\n  setBuckets,\n  removeBucket,\n  Action as BucketAction,\n} from 'src/buckets/actions/creators'\nimport {notify, Action as NotifyAction} from 'src/shared/actions/notifications'\nimport {checkBucketLimits} from 'src/cloud/actions/limits'\n\n// Constants\nimport {\n  getBucketsFailed,\n  bucketCreateFailed,\n  bucketUpdateFailed,\n  bucketDeleteFailed,\n  bucketUpdateSuccess,\n  bucketRenameSuccess,\n  bucketRenameFailed,\n  addBucketLabelFailed,\n  removeBucketLabelFailed,\n} from 'src/shared/copy/notifications'\nimport {getLabels} from 'src/resources/selectors'\n\ntype Action = BucketAction | NotifyAction\n\nexport const getBuckets = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    dispatch(setBuckets(RemoteDataState.Loading))\n    const org = getOrg(getState())\n\n    const resp = await api.getBuckets({query: {orgID: org.id}})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const buckets = normalize<Bucket, BucketEntities, string[]>(\n      resp.data.buckets,\n      arrayOfBuckets\n    )\n\n    dispatch(setBuckets(RemoteDataState.Done, buckets))\n  } catch (error) {\n    console.error(error)\n    dispatch(setBuckets(RemoteDataState.Error))\n    dispatch(notify(getBucketsFailed()))\n  }\n}\n\nexport const createBucket = (bucket: Bucket) => async (\n  dispatch: Dispatch<Action | ReturnType<typeof checkBucketLimits>>,\n  getState: GetState\n) => {\n  try {\n    const org = getOrg(getState())\n\n    const resp = await api.postBucket({data: {...bucket, orgID: org.id}})\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const newBucket = normalize<Bucket, BucketEntities, string>(\n      resp.data,\n      bucketSchema\n    )\n\n    dispatch(addBucket(newBucket))\n    dispatch(checkBucketLimits())\n  } catch (error) {\n    console.error(error)\n    const message = getErrorMessage(error)\n    dispatch(notify(bucketCreateFailed(message)))\n  }\n}\n\nexport const updateBucket = (bucket: Bucket) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const state = getState()\n    const data = denormalizeBucket(state, bucket)\n\n    const resp = await api.patchBucket({\n      bucketID: bucket.id,\n      data,\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const newBucket = normalize<Bucket, BucketEntities, string>(\n      resp.data,\n      bucketSchema\n    )\n\n    dispatch(editBucket(newBucket))\n    dispatch(notify(bucketUpdateSuccess(bucket.name)))\n  } catch (error) {\n    console.error(error)\n    const message = getErrorMessage(error)\n    dispatch(notify(bucketUpdateFailed(message)))\n  }\n}\n\nexport const renameBucket = (originalName: string, bucket: Bucket) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const state = getState()\n    const data = denormalizeBucket(state, bucket)\n\n    const resp = await api.patchBucket({\n      bucketID: bucket.id,\n      data,\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const newBucket = normalize<Bucket, BucketEntities, string>(\n      resp.data,\n      bucketSchema\n    )\n\n    dispatch(editBucket(newBucket))\n    dispatch(notify(bucketRenameSuccess(bucket.name)))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(bucketRenameFailed(originalName)))\n  }\n}\n\nexport const deleteBucket = (id: string, name: string) => async (\n  dispatch: Dispatch<Action | ReturnType<typeof checkBucketLimits>>\n) => {\n  try {\n    const resp = await api.deleteBucket({bucketID: id})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeBucket(id))\n    dispatch(checkBucketLimits())\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(bucketDeleteFailed(name)))\n  }\n}\n\nexport const addBucketLabel = (bucketID: string, label: Label) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    const postResp = await api.postBucketsLabel({\n      bucketID,\n      data: {labelID: label.id},\n    })\n\n    if (postResp.status !== 201) {\n      throw new Error(postResp.data.message)\n    }\n\n    const resp = await api.getBucket({bucketID})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const newBucket = normalize<Bucket, BucketEntities, string>(\n      resp.data,\n      bucketSchema\n    )\n\n    dispatch(editBucket(newBucket))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(addBucketLabelFailed()))\n  }\n}\n\nexport const deleteBucketLabel = (bucketID: string, label: Label) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    const deleteResp = await api.deleteBucketsLabel({\n      bucketID,\n      labelID: label.id,\n    })\n    if (deleteResp.status !== 204) {\n      throw new Error(deleteResp.data.message)\n    }\n\n    const resp = await api.getBucket({bucketID})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const newBucket = normalize<Bucket, BucketEntities, string>(\n      resp.data,\n      bucketSchema\n    )\n\n    dispatch(editBucket(newBucket))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(removeBucketLabelFailed()))\n  }\n}\n\nconst denormalizeBucket = (state: AppState, bucket: Bucket): GenBucket => {\n  const labels = getLabels(state, bucket.labels)\n  return {\n    ...bucket,\n    labels,\n  }\n}\n","import {Bucket} from 'src/types'\nimport {getTelegrafPlugins} from 'src/client'\nimport {RemoteDataState} from 'src/types'\nimport {Dispatch} from 'react'\nimport {\n  TelegrafEditorPluginState,\n  TelegrafEditorActivePluginState,\n  TelegrafEditorBasicPlugin,\n} from 'src/dataLoaders/reducers/telegrafEditor'\n\nexport type PluginResourceAction =\n  | ReturnType<typeof setPlugins>\n  | ReturnType<typeof setPluginLoadingState>\n\nexport const getPlugins = () => async (\n  dispatch: Dispatch<PluginResourceAction>\n) => {\n  dispatch(setPluginLoadingState(RemoteDataState.Loading))\n\n  const result = await getTelegrafPlugins({}, {})\n\n  if (result.status === 200) {\n    const plugins = result.data.plugins as TelegrafEditorBasicPlugin[]\n\n    dispatch(setPlugins(plugins))\n  }\n\n  dispatch(setPluginLoadingState(RemoteDataState.Done))\n}\n\nexport const setPluginLoadingState = (state: RemoteDataState) => ({\n  type: 'SET_TELEGRAF_EDITOR_PLUGINS_LOADING_STATE' as 'SET_TELEGRAF_EDITOR_PLUGINS_LOADING_STATE',\n  payload: state,\n})\n\nexport const setPlugins = (plugins: TelegrafEditorPluginState) => ({\n  type: 'SET_TELEGRAF_EDITOR_PLUGINS' as 'SET_TELEGRAF_EDITOR_PLUGINS',\n  payload: plugins,\n})\n\nexport type ActivePluginAction = ReturnType<typeof setActivePlugins>\n\nexport const setActivePlugins = (plugins: TelegrafEditorActivePluginState) => ({\n  type: 'SET_TELEGRAF_EDITOR_ACTIVE_PLUGINS' as 'SET_TELEGRAF_EDITOR_ACTIVE_PLUGINS',\n  payload: plugins,\n})\n\nexport type EditorAction =\n  | ReturnType<typeof setLookup>\n  | ReturnType<typeof setList>\n  | ReturnType<typeof setText>\n  | ReturnType<typeof setBucket>\n  | ReturnType<typeof setFilter>\n  | ReturnType<typeof reset>\n\nexport const setLookup = (show: boolean) => ({\n  type: 'SET_TELEGRAF_EDITOR_LOOKUP' as 'SET_TELEGRAF_EDITOR_LOOKUP',\n  payload: show,\n})\n\nexport const setList = (show: boolean) => ({\n  type: 'SET_TELEGRAF_EDITOR_LIST' as 'SET_TELEGRAF_EDITOR_LIST',\n  payload: show,\n})\n\nexport const setText = (text: string) => ({\n  type: 'SET_TELEGRAF_EDITOR_TEXT' as 'SET_TELEGRAF_EDITOR_TEXT',\n  payload: text,\n})\n\nexport const setBucket = (bucket: Bucket) => ({\n  type: 'SET_TELEGRAF_EDITOR_ACTIVE_BUCKET' as 'SET_TELEGRAF_EDITOR_ACTIVE_BUCKET',\n  payload: bucket,\n})\n\nexport const setFilter = (filter: string) => ({\n  type: 'SET_TELEGRAF_EDITOR_FILTER' as 'SET_TELEGRAF_EDITOR_FILTER',\n  payload: filter,\n})\n\nexport const reset = () => ({\n  type: 'RESET_TELEGRAF_EDITOR' as 'RESET_TELEGRAF_EDITOR',\n})\n","// Libraries\nimport {normalize} from 'normalizr'\n\n// API\nimport {client} from 'src/utils/api'\n\n// Schemas\nimport {telegrafSchema, arrayOfTelegrafs} from 'src/schemas/telegrafs'\n\n// Types\nimport {ILabel} from '@influxdata/influx'\nimport {\n  AppThunk,\n  RemoteDataState,\n  GetState,\n  Telegraf,\n  Label,\n  TelegrafEntities,\n} from 'src/types'\nimport {Dispatch} from 'react'\n\n// Actions\nimport {notify} from 'src/shared/actions/notifications'\nimport {\n  Action,\n  setTelegrafs,\n  addTelegraf,\n  editTelegraf,\n  removeTelegraf,\n  setCurrentConfig,\n} from 'src/telegrafs/actions/creators'\n\n// Utils\nimport {\n  telegrafGetFailed,\n  telegrafCreateFailed,\n  telegrafUpdateFailed,\n  telegrafDeleteFailed,\n  addTelegrafLabelFailed,\n  removeTelegrafLabelFailed,\n  getTelegrafConfigFailed,\n} from 'src/shared/copy/notifications'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getLabels} from 'src/resources/selectors'\n\nexport const getTelegrafs = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  const org = getOrg(getState())\n\n  try {\n    dispatch(setTelegrafs(RemoteDataState.Loading))\n\n    const telegrafs = await client.telegrafConfigs.getAll(org.id)\n\n    const normTelegrafs = normalize<Telegraf, TelegrafEntities, string[]>(\n      telegrafs,\n      arrayOfTelegrafs\n    )\n\n    dispatch(setTelegrafs(RemoteDataState.Done, normTelegrafs))\n  } catch (error) {\n    console.error(error)\n    dispatch(setTelegrafs(RemoteDataState.Error))\n    dispatch(notify(telegrafGetFailed()))\n  }\n}\n\nexport const createTelegraf = (telegraf: Telegraf) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const state = getState()\n    const labels = getLabels(state, telegraf.labels)\n    const createdTelegraf = await client.telegrafConfigs.create({\n      ...telegraf,\n      labels,\n    })\n\n    const normTelegraf = normalize<Telegraf, TelegrafEntities, string>(\n      createdTelegraf,\n      telegrafSchema\n    )\n\n    dispatch(addTelegraf(normTelegraf))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(telegrafCreateFailed()))\n  }\n}\n\nexport const updateTelegraf = (telegraf: Telegraf) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const state = getState()\n    const labels = getLabels(state, telegraf.labels)\n    const t = await client.telegrafConfigs.update(telegraf.id, {\n      ...telegraf,\n      labels,\n    })\n\n    const normTelegraf = normalize<Telegraf, TelegrafEntities, string>(\n      t,\n      telegrafSchema\n    )\n\n    dispatch(editTelegraf(normTelegraf))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(telegrafUpdateFailed(telegraf.name)))\n  }\n}\n\nexport const deleteTelegraf = (id: string, name: string) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    await client.telegrafConfigs.delete(id)\n\n    dispatch(removeTelegraf(id))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(telegrafDeleteFailed(name)))\n  }\n}\n\nexport const addTelegrafLabelsAsync = (\n  telegrafID: string,\n  labels: Label[]\n): AppThunk<Promise<void>> => async (dispatch): Promise<void> => {\n  try {\n    await client.telegrafConfigs.addLabels(telegrafID, labels as ILabel[])\n    const telegraf = await client.telegrafConfigs.get(telegrafID)\n    const normTelegraf = normalize<Telegraf, TelegrafEntities, string>(\n      telegraf,\n      telegrafSchema\n    )\n\n    dispatch(editTelegraf(normTelegraf))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(addTelegrafLabelFailed()))\n  }\n}\n\nexport const removeTelegrafLabelsAsync = (\n  telegrafID: string,\n  labels: Label[]\n): AppThunk<Promise<void>> => async (dispatch): Promise<void> => {\n  try {\n    await client.telegrafConfigs.removeLabels(telegrafID, labels as ILabel[])\n    const telegraf = await client.telegrafConfigs.get(telegrafID)\n    const normTelegraf = normalize<Telegraf, TelegrafEntities, string>(\n      telegraf,\n      telegrafSchema\n    )\n\n    dispatch(editTelegraf(normTelegraf))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(removeTelegrafLabelFailed()))\n  }\n}\n\nexport const getTelegrafConfigToml = (telegrafConfigID: string) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  try {\n    dispatch(setCurrentConfig(RemoteDataState.Loading))\n    const config = await client.telegrafConfigs.getTOML(telegrafConfigID)\n    dispatch(setCurrentConfig(RemoteDataState.Done, config))\n  } catch (error) {\n    dispatch(setCurrentConfig(RemoteDataState.Error))\n    dispatch(notify(getTelegrafConfigFailed()))\n  }\n}\n","import React, {PureComponent, ReactElement} from 'react'\nimport ReactDOM from 'react-dom'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  children: ReactElement<any>\n  onClickOutside: (e) => void\n}\n\n@ErrorHandling\nexport class ClickOutside extends PureComponent<Props> {\n  public componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside, true)\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, true)\n  }\n\n  public render() {\n    return React.Children.only(this.props.children)\n  }\n\n  private handleClickOutside = e => {\n    const domNode = ReactDOM.findDOMNode(this)\n    if (!domNode || !domNode.contains(e.target)) {\n      this.props.onClickOutside(e)\n    }\n  }\n}\n","// Types\nimport {Substep} from 'src/types/dataLoaders'\n\nexport type Action =\n  | SetBucketInfo\n  | SetBucketID\n  | IncrementCurrentStepIndex\n  | DecrementCurrentStepIndex\n  | SetCurrentStepIndex\n  | SetSubstepIndex\n  | ClearSteps\n\ninterface ClearSteps {\n  type: 'CLEAR_STEPS'\n}\n\nexport const clearSteps = (): ClearSteps => ({type: 'CLEAR_STEPS'})\n\ninterface IncrementCurrentStepIndex {\n  type: 'INCREMENT_CURRENT_STEP_INDEX'\n}\n\nexport const incrementCurrentStepIndex = (): IncrementCurrentStepIndex => ({\n  type: 'INCREMENT_CURRENT_STEP_INDEX',\n})\n\ninterface DecrementCurrentStepIndex {\n  type: 'DECREMENT_CURRENT_STEP_INDEX'\n}\n\nexport const decrementCurrentStepIndex = (): DecrementCurrentStepIndex => ({\n  type: 'DECREMENT_CURRENT_STEP_INDEX',\n})\n\ninterface SetCurrentStepIndex {\n  type: 'SET_CURRENT_STEP_INDEX'\n  payload: {index: number}\n}\n\nexport const setCurrentStepIndex = (index: number): SetCurrentStepIndex => ({\n  type: 'SET_CURRENT_STEP_INDEX',\n  payload: {index},\n})\n\ninterface SetSubstepIndex {\n  type: 'SET_SUBSTEP_INDEX'\n  payload: {stepIndex: number; substep: Substep}\n}\n\nexport const setSubstepIndex = (\n  stepIndex: number,\n  substep: Substep\n): SetSubstepIndex => ({\n  type: 'SET_SUBSTEP_INDEX',\n  payload: {stepIndex, substep},\n})\n\ninterface SetBucketInfo {\n  type: 'SET_BUCKET_INFO'\n  payload: {\n    orgID: string\n    bucket: string\n    bucketID: string\n  }\n}\n\nexport const setBucketInfo = (\n  orgID: string,\n  bucket: string,\n  bucketID: string\n): SetBucketInfo => ({\n  type: 'SET_BUCKET_INFO',\n  payload: {orgID, bucket, bucketID},\n})\n\ninterface SetBucketID {\n  type: 'SET_BUCKET_ID'\n  payload: {bucketID: string}\n}\n\nexport const setBucketID = (bucketID: string): SetBucketID => ({\n  type: 'SET_BUCKET_ID',\n  payload: {bucketID},\n})\n","import {Threshold} from 'src/types'\n\nexport const checkThresholdsValid = (thresholds: Threshold[]) => {\n  thresholds.forEach(t => {\n    if (t.type === 'greater' && isNaN(t.value)) {\n      throw new Error('Threshold must have defined value')\n    }\n    if (t.type === 'lesser' && isNaN(t.value)) {\n      throw new Error('Threshold must have defined value')\n    }\n    if (t.type === 'range' && (isNaN(t.min) || isNaN(t.min))) {\n      throw new Error('Threshold must have defined min and max values')\n    }\n  })\n}\n","// Types\nimport {AppState, Check, ThresholdCheck, DeadmanCheck} from 'src/types'\nimport {PostCheck} from 'src/client'\n\n// Utils\nimport {checkThresholdsValid} from './checkValidate'\nimport {isDurationParseable} from 'src/shared/utils/duration'\nimport {getActiveTimeMachine} from 'src/timeMachine/selectors'\nimport {getOrg} from 'src/organizations/selectors'\n\ntype AlertBuilder = AppState['alertBuilder']\n\nexport const toPostCheck = (check: Check): PostCheck => {\n  // TODO: type PostCheck properly github.com/influxdata/influxdb/issues/16704\n  const status = check.activeStatus\n\n  delete check.activeStatus\n\n  return {\n    ...check,\n    status,\n  } as PostCheck\n}\n\nexport const builderToPostCheck = (state: AppState) => {\n  const {alertBuilder} = state\n  const check = genCheckBase(state)\n\n  validateBuilder(alertBuilder)\n\n  if (check.type === 'threshold') {\n    return toThresholdPostCheck(alertBuilder, check)\n  }\n\n  if (check.type === 'deadman') {\n    return toDeadManPostCheck(alertBuilder, check)\n  }\n}\n\nconst toDeadManPostCheck = (\n  alertBuilder: AlertBuilder,\n  check: DeadmanCheck\n): PostCheck => {\n  const {\n    every,\n    level,\n    offset,\n    reportZero,\n    staleTime,\n    statusMessageTemplate,\n    tags,\n    timeSince,\n    activeStatus,\n  } = alertBuilder\n\n  if (!isDurationParseable(timeSince) || !isDurationParseable(staleTime)) {\n    throw new Error('Duration fields must contain valid duration')\n  }\n\n  return {\n    ...check,\n    every,\n    level,\n    offset,\n    reportZero,\n    staleTime,\n    statusMessageTemplate,\n    tags,\n    timeSince,\n    status: activeStatus,\n  }\n}\n\nconst toThresholdPostCheck = (\n  alertBuilder: AlertBuilder,\n  check: ThresholdCheck\n): PostCheck => {\n  const {\n    activeStatus,\n    every,\n    offset,\n    statusMessageTemplate,\n    tags,\n    thresholds,\n  } = alertBuilder\n\n  checkThresholdsValid(thresholds)\n\n  return {\n    ...check,\n    every,\n    offset,\n    statusMessageTemplate,\n    tags,\n    thresholds,\n    status: activeStatus,\n  }\n}\n\nconst validateBuilder = (alertBuilder: AlertBuilder) => {\n  if (!isDurationParseable(alertBuilder.offset)) {\n    throw new Error('Check offset must be a valid duration')\n  }\n\n  if (!isDurationParseable(alertBuilder.every)) {\n    throw new Error('Check every must be a valid duration')\n  }\n}\n\nconst genCheckBase = (state: AppState): Check => {\n  const {type, id, status, activeStatus, name} = state.alertBuilder\n  const {draftQueries} = getActiveTimeMachine(state)\n  const {id: orgID} = getOrg(state)\n\n  return {\n    id,\n    type,\n    status,\n    activeStatus,\n    name,\n    query: draftQueries[0],\n    orgID,\n    labels: [],\n  } as Check\n}\n","// Libraries\nimport {Dispatch} from 'react'\nimport {push} from 'react-router-redux'\nimport {normalize} from 'normalizr'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\n\n// APIs\nimport * as api from 'src/client'\n\n// Schemas\nimport {checkSchema, arrayOfChecks} from 'src/schemas/checks'\n\n// Utils\nimport {incrementCloneName} from 'src/utils/naming'\nimport {reportError} from 'src/shared/utils/errors'\nimport {createView} from 'src/views/helpers'\nimport {getOrg} from 'src/organizations/selectors'\nimport {toPostCheck, builderToPostCheck} from 'src/checks/utils'\nimport {getAll} from 'src/resources/selectors'\n\n// Actions\nimport {\n  notify,\n  Action as NotificationAction,\n} from 'src/shared/actions/notifications'\nimport {\n  Action as TimeMachineAction,\n  setActiveTimeMachine,\n} from 'src/timeMachine/actions'\nimport {\n  Action as AlertBuilderAction,\n  setAlertBuilderCheck,\n  setAlertBuilderCheckStatus,\n  resetAlertBuilder,\n} from 'src/alerting/actions/alertBuilder'\nimport {\n  Action,\n  setChecks,\n  setCheck,\n  removeCheck,\n  removeLabelFromCheck,\n} from 'src/checks/actions/creators'\nimport {checkChecksLimits} from 'src/cloud/actions/limits'\nimport {setLabelOnResource} from 'src/labels/actions/creators'\n\n// Types\nimport {\n  Check,\n  GetState,\n  RemoteDataState,\n  CheckViewProperties,\n  Label,\n  LabelEntities,\n  CheckPatch,\n  CheckEntities,\n  ResourceType,\n} from 'src/types'\nimport {labelSchema} from 'src/schemas/labels'\n\nexport const getChecks = () => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkChecksLimits>\n  >,\n  getState: GetState\n) => {\n  try {\n    dispatch(setChecks(RemoteDataState.Loading))\n    const {id: orgID} = getOrg(getState())\n\n    const resp = await api.getChecks({query: {orgID}})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const checks = normalize<Check, CheckEntities, string[]>(\n      resp.data.checks,\n      arrayOfChecks\n    )\n\n    dispatch(setChecks(RemoteDataState.Done, checks))\n    dispatch(checkChecksLimits())\n  } catch (e) {\n    console.error(e)\n    dispatch(setChecks(RemoteDataState.Error))\n    dispatch(notify(copy.getChecksFailed(e.message)))\n  }\n}\n\nexport const getCheckForTimeMachine = (checkID: string) => async (\n  dispatch: Dispatch<\n    TimeMachineAction | NotificationAction | AlertBuilderAction\n  >,\n  getState: GetState\n) => {\n  const org = getOrg(getState())\n  try {\n    dispatch(setAlertBuilderCheckStatus(RemoteDataState.Loading))\n\n    const resp = await api.getCheck({checkID})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const check = resp.data\n\n    const view = createView<CheckViewProperties>(check.type)\n\n    view.properties.queries = [check.query]\n\n    dispatch(\n      setActiveTimeMachine('alerting', {\n        view,\n        activeTab: check.type === 'custom' ? 'customCheckQuery' : 'alerting',\n      })\n    )\n\n    const normCheck = normalize<Check, CheckEntities, string>(\n      resp.data,\n      checkSchema\n    )\n\n    const builderCheck = normCheck.entities.checks[normCheck.result]\n\n    dispatch(setAlertBuilderCheck(builderCheck))\n  } catch (error) {\n    console.error(error)\n    dispatch(push(`/orgs/${org.id}/alerting`))\n    dispatch(setAlertBuilderCheckStatus(RemoteDataState.Error))\n    dispatch(notify(copy.getCheckFailed(error.message)))\n  }\n}\n\ntype SendToTimeMachineAction =\n  | ReturnType<typeof checkChecksLimits>\n  | ReturnType<typeof push>\n  | ReturnType<typeof resetAlertBuilder>\n  | NotificationAction\n\nexport const createCheckFromTimeMachine = () => async (\n  dispatch: Dispatch<Action | SendToTimeMachineAction>,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const state = getState()\n    const check = builderToPostCheck(state)\n    const resp = await api.postCheck({data: check})\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const normCheck = normalize<Check, CheckEntities, string>(\n      resp.data,\n      checkSchema\n    )\n\n    dispatch(setCheck(resp.data.id, RemoteDataState.Done, normCheck))\n    dispatch(checkChecksLimits())\n\n    dispatch(push(`/orgs/${check.orgID}/alerting`))\n    dispatch(resetAlertBuilder())\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.createCheckFailed(error.message)))\n    reportError(error, {\n      context: {state: getState()},\n      name: 'saveCheckFromTimeMachine function',\n    })\n  }\n}\n\nexport const updateCheckFromTimeMachine = () => async (\n  dispatch: Dispatch<Action | SendToTimeMachineAction>,\n  getState: GetState\n) => {\n  const state = getState()\n  const check = builderToPostCheck(state)\n  // todo: refactor after https://github.com/influxdata/influxdb/issues/16317\n  try {\n    const getCheckResponse = await api.getCheck({checkID: check.id})\n\n    if (getCheckResponse.status !== 200) {\n      throw new Error(getCheckResponse.data.message)\n    }\n\n    const resp = await api.putCheck({\n      checkID: check.id,\n      data: {...check, ownerID: getCheckResponse.data.ownerID},\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const normCheck = normalize<Check, CheckEntities, string>(\n      resp.data,\n      checkSchema\n    )\n\n    dispatch(setCheck(resp.data.id, RemoteDataState.Done, normCheck))\n    dispatch(checkChecksLimits())\n\n    dispatch(push(`/orgs/${check.orgID}/alerting`))\n    dispatch(resetAlertBuilder())\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.updateCheckFailed(error.message)))\n    reportError(error, {\n      context: {state: getState()},\n      name: 'saveCheckFromTimeMachine function',\n    })\n  }\n}\n\nexport const updateCheckDisplayProperties = (\n  checkID: string,\n  update: CheckPatch\n) => async (dispatch: Dispatch<Action | NotificationAction>) => {\n  try {\n    const resp = await api.patchCheck({checkID, data: update})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const check = normalize<Check, CheckEntities, string>(\n      resp.data,\n      checkSchema\n    )\n\n    dispatch(setCheck(checkID, RemoteDataState.Done, check))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const deleteCheck = (checkID: string) => async (\n  dispatch: Dispatch<any>\n) => {\n  try {\n    const resp = await api.deleteCheck({checkID})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeCheck(checkID))\n    dispatch(checkChecksLimits())\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.deleteCheckFailed(error.message)))\n  }\n}\n\nexport const addCheckLabel = (checkID: string, label: Label) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    const resp = await api.postChecksLabel({checkID, data: {labelID: label.id}})\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const normLabel = normalize<Label, LabelEntities>(\n      resp.data.label,\n      labelSchema\n    )\n\n    dispatch(setLabelOnResource(checkID, normLabel))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const deleteCheckLabel = (checkID: string, labelID: string) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    const resp = await api.deleteChecksLabel({\n      checkID,\n      labelID,\n    })\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeLabelFromCheck(checkID, labelID))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const cloneCheck = (check: Check) => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkChecksLimits>\n  >,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const state = getState()\n    const checks = getAll<Check>(state, ResourceType.Checks)\n    const allCheckNames = checks.map(c => c.name)\n    const clonedName = incrementCloneName(allCheckNames, check.name)\n\n    const data = toPostCheck({...check, name: clonedName})\n\n    const resp = await api.postCheck({data})\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const normCheck = normalize<Check, CheckEntities, string>(\n      resp.data,\n      checkSchema\n    )\n\n    dispatch(setCheck(resp.data.id, RemoteDataState.Done, normCheck))\n    dispatch(checkChecksLimits())\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.createCheckFailed(error.message)))\n  }\n}\n","// Libraries\nimport uuid from 'uuid'\n\n// Types\nimport {NewCell, Cell, Dashboard, AppState, RemoteDataState} from 'src/types'\n\n// Constants\nimport {UNTITLED_GRAPH} from 'src/dashboards/constants'\n\nconst getMostCommonValue = (values: number[]): number => {\n  const results = values.reduce(\n    (acc, value) => {\n      const {distribution, mostCommonCount} = acc\n      distribution[value] = (distribution[value] || 0) + 1\n      if (distribution[value] > mostCommonCount) {\n        return {\n          distribution,\n          mostCommonCount: distribution[value],\n          mostCommonValue: value,\n        }\n      }\n      return acc\n    },\n    {distribution: {}, mostCommonCount: 0, mostCommonValue: null}\n  )\n\n  return results.mostCommonValue\n}\n\nexport const isCellUntitled = (cellName: string): boolean => {\n  return cellName === UNTITLED_GRAPH\n}\n\nconst numColumns = 12\n\nconst getNextAvailablePosition = (dashboard, newCell) => {\n  const farthestY = dashboard.cells\n    .map(cell => cell.y)\n    .reduce((a, b) => (a > b ? a : b))\n\n  const bottomCells = dashboard.cells.filter(cell => cell.y === farthestY)\n  const farthestX = bottomCells\n    .map(cell => cell.x)\n    .reduce((a, b) => (a > b ? a : b))\n  const lastCell = bottomCells.find(cell => cell.x === farthestX)\n\n  const availableSpace = numColumns - (lastCell.x + lastCell.w)\n  const newCellFits = availableSpace >= newCell.w\n\n  return newCellFits\n    ? {\n        x: lastCell.x + lastCell.w,\n        y: farthestY,\n      }\n    : {\n        x: 0,\n        y: lastCell.y + lastCell.h,\n      }\n}\n\nexport const getNewDashboardCell = (\n  state: AppState,\n  dashboard: Dashboard,\n  clonedCell?: Cell\n): NewCell => {\n  const defaultCell = {\n    id: uuid.v4(),\n    x: 0,\n    y: 0,\n    h: 4,\n    w: 4,\n    links: {\n      self: '',\n      view: '',\n      copy: '',\n    },\n    status: RemoteDataState.Done,\n  }\n\n  const cells = dashboard.cells.map(\n    cellID => state.resources.cells.byID[cellID]\n  )\n\n  if (!cells.length) {\n    return defaultCell\n  }\n\n  const existingCellWidths = cells.map(cell => cell.w)\n  const existingCellHeights = cells.map(cell => cell.h)\n\n  const mostCommonCellWidth = getMostCommonValue(existingCellWidths)\n  const mostCommonCellHeight = getMostCommonValue(existingCellHeights)\n\n  let newCell = {\n    ...defaultCell,\n    w: mostCommonCellWidth,\n    h: mostCommonCellHeight,\n  }\n\n  if (clonedCell) {\n    newCell = {\n      ...defaultCell,\n      w: clonedCell.w,\n      h: clonedCell.h,\n    }\n  }\n\n  const {x, y} = getNextAvailablePosition(dashboard, newCell)\n\n  return {\n    ...newCell,\n    x,\n    y,\n  }\n}\n\nexport const getClonedDashboardCell = (\n  dashboard: Dashboard,\n  cloneCell: Cell\n): Cell => {\n  const {x, y} = getNextAvailablePosition(dashboard, cloneCell)\n\n  return {...cloneCell, x, y}\n}\n","// Libraries\nimport {normalize} from 'normalizr'\n\n// APIs\nimport {\n  getDashboard,\n  deleteDashboardsCell,\n  postDashboard,\n  postDashboardsCell,\n  putDashboardsCells,\n} from 'src/client'\nimport {updateView} from 'src/dashboards/apis'\n\n// Schemas\nimport {\n  dashboardSchema,\n  cellSchema,\n  arrayOfCells,\n  viewSchema,\n} from 'src/schemas'\n\n// Actions\nimport {refreshDashboardVariableValues} from 'src/dashboards/actions/thunks'\nimport {setView} from 'src/views/actions/creators'\nimport {notify} from 'src/shared/actions/notifications'\nimport {setCells, setCell, removeCell} from 'src/cells/actions/creators'\n\n// Utils\nimport {getClonedDashboardCell} from 'src/dashboards/utils/cellGetters'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\n\n// Types\nimport {\n  Dashboard,\n  NewView,\n  Cell,\n  GetState,\n  RemoteDataState,\n  NewCell,\n  DashboardEntities,\n  ResourceType,\n  CellEntities,\n  View,\n  ViewEntities,\n} from 'src/types'\n\n// Utils\nimport {getViewsForDashboard} from 'src/views/selectors'\nimport {getNewDashboardCell} from 'src/dashboards/utils/cellGetters'\nimport {getByID} from 'src/resources/selectors'\n\nexport const deleteCell = (dashboardID: string, cellID: string) => async (\n  dispatch,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const views = getViewsForDashboard(getState(), dashboardID).filter(\n      view => view.cellID !== cellID\n    )\n\n    await Promise.all([\n      deleteDashboardsCell({dashboardID: dashboardID, cellID: cellID}),\n      dispatch(refreshDashboardVariableValues(dashboardID, views)),\n    ])\n\n    dispatch(removeCell({dashboardID, id: cellID}))\n    dispatch(notify(copy.cellDeleted()))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const createCellWithView = (\n  dashboardID: string,\n  view: NewView,\n  clonedCell?: Cell\n) => async (dispatch, getState: GetState): Promise<void> => {\n  const state = getState()\n\n  let dashboard = getByID<Dashboard>(\n    state,\n    ResourceType.Dashboards,\n    dashboardID\n  )\n\n  try {\n    if (!dashboard) {\n      const resp = await getDashboard({dashboardID})\n      if (resp.status !== 200) {\n        throw new Error(resp.data.message)\n      }\n\n      const {entities, result} = normalize<\n        Dashboard,\n        DashboardEntities,\n        string\n      >(resp.data, dashboardSchema)\n\n      dashboard = entities.dashboards[result]\n    }\n\n    const cell: NewCell = getNewDashboardCell(state, dashboard, clonedCell)\n\n    // Create the cell\n    const cellResp = await postDashboardsCell({dashboardID, data: cell})\n\n    if (cellResp.status !== 201) {\n      throw new Error(cellResp.data.message)\n    }\n\n    const cellID = cellResp.data.id\n\n    // Create the view and associate it with the cell\n    const newView = await updateView(dashboardID, cellID, view)\n\n    const normCell = normalize<Cell, CellEntities, string>(\n      {...cellResp.data, dashboardID},\n      cellSchema\n    )\n\n    // Refresh variables in use on dashboard\n    const views = [...getViewsForDashboard(state, dashboardID), newView]\n\n    await dispatch(refreshDashboardVariableValues(dashboardID, views))\n\n    const normView = normalize<View, ViewEntities, string>(newView, viewSchema)\n\n    dispatch(setView(cellID, RemoteDataState.Done, normView))\n    dispatch(setCell(cellID, RemoteDataState.Done, normCell))\n  } catch (err) {\n    notify(copy.cellAddFailed())\n    throw err\n  }\n}\n\nexport const createDashboardWithView = (\n  orgID: string,\n  dashboardName: string,\n  view: View\n) => async (dispatch): Promise<void> => {\n  try {\n    const newDashboard = {\n      orgID,\n      name: dashboardName,\n      cells: [],\n    }\n\n    const resp = await postDashboard({data: newDashboard})\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    await dispatch(createCellWithView(resp.data.id, view))\n  } catch (error) {\n    console.error(error)\n    notify(copy.cellAddFailed())\n    throw error\n  }\n}\n\nexport const updateCells = (dashboardID: string, cells: Cell[]) => async (\n  dispatch\n): Promise<void> => {\n  try {\n    const resp = await putDashboardsCells({\n      dashboardID,\n      data: cells,\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const updatedCells = cells.map(c => ({...c, dashboardID}))\n\n    const normCells = normalize<Dashboard, DashboardEntities, string[]>(\n      updatedCells,\n      arrayOfCells\n    )\n\n    dispatch(setCells(dashboardID, RemoteDataState.Done, normCells))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const copyCell = (dashboard: Dashboard, cell: Cell) => dispatch => {\n  try {\n    const clonedCell = getClonedDashboardCell(dashboard, cell)\n\n    const normCell = normalize<Dashboard, DashboardEntities, string>(\n      clonedCell,\n      cellSchema\n    )\n\n    dispatch(setCell(cell.id, RemoteDataState.Done, normCell))\n    dispatch(notify(copy.cellAdded()))\n  } catch (error) {\n    console.error(error)\n  }\n}\n","import {\n  TemplateType,\n  LabelIncluded,\n  VariableIncluded,\n  Relationships,\n  LabelRelationship,\n  Label,\n  Variable,\n} from 'src/types'\n\nexport function findIncludedsFromRelationships<\n  T extends {id: string; type: TemplateType}\n>(\n  includeds: {id: string; type: TemplateType}[],\n  relationships: {id: string; type: TemplateType}[]\n): T[] {\n  let intersection = []\n  relationships.forEach(r => {\n    const included = findIncludedFromRelationship<T>(includeds, r)\n    if (included) {\n      intersection = [...intersection, included]\n    }\n  })\n  return intersection\n}\n\nexport function findIncludedFromRelationship<\n  T extends {id: string; type: TemplateType}\n>(\n  included: {id: string; type: TemplateType}[],\n  r: {id: string; type: TemplateType}\n): T {\n  return included.find((i): i is T => i.id === r.id && i.type === r.type)\n}\n\nexport const findLabelsToCreate = (\n  currentLabels: Label[],\n  labels: LabelIncluded[]\n): LabelIncluded[] => {\n  return labels.filter(\n    l => !currentLabels.find(el => el.name === l.attributes.name)\n  )\n}\n\nexport const findIncludedVariables = (included: {type: TemplateType}[]) => {\n  return included.filter(\n    (r): r is VariableIncluded => r.type === TemplateType.Variable\n  )\n}\n\nexport const findVariablesToCreate = (\n  existingVariables: Variable[],\n  incomingVariables: VariableIncluded[]\n): VariableIncluded[] => {\n  return incomingVariables.filter(\n    v => !existingVariables.find(ev => ev.name === v.attributes.name)\n  )\n}\n\nexport const hasLabelsRelationships = (resource: {\n  relationships?: Relationships\n}) => !!resource.relationships && !!resource.relationships[TemplateType.Label]\n\nexport const getLabelRelationships = (resource: {\n  relationships?: Relationships\n}): LabelRelationship[] => {\n  if (!hasLabelsRelationships(resource)) {\n    return []\n  }\n\n  return [].concat(resource.relationships[TemplateType.Label].data)\n}\n\nexport const getIncludedLabels = (included: {type: TemplateType}[]) =>\n  included.filter((i): i is LabelIncluded => i.type === TemplateType.Label)\n","// Libraries\nimport {get, isEmpty, flatMap} from 'lodash'\nimport {normalize} from 'normalizr'\n\n// Schemas\nimport {arrayOfVariables, variableSchema} from 'src/schemas/variables'\nimport {taskSchema} from 'src/schemas/tasks'\n\n// Utils\nimport {\n  findIncludedsFromRelationships,\n  findLabelsToCreate,\n  findIncludedFromRelationship,\n  findVariablesToCreate,\n  findIncludedVariables,\n  hasLabelsRelationships,\n  getLabelRelationships,\n} from 'src/templates/utils/'\nimport {addLabelDefaults} from 'src/labels/utils'\n\n// API\nimport {\n  getDashboard as apiGetDashboard,\n  getTask as apiGetTask,\n  postTask as apiPostTask,\n  postTasksLabel as apiPostTasksLabel,\n  getLabels as apiGetLabels,\n  postLabel as apiPostLabel,\n  getVariable as apiGetVariable,\n  getVariables as apiGetVariables,\n  postVariable as apiPostVariable,\n  postVariablesLabel as apiPostVariablesLabel,\n  postDashboard as apiPostDashboard,\n  postDashboardsLabel as apiPostDashboardsLabel,\n  postDashboardsCell as apiPostDashboardsCell,\n  patchDashboardsCellsView as apiPatchDashboardsCellsView,\n} from 'src/client'\nimport {addDashboardDefaults} from 'src/schemas/dashboards'\n\n// Types\nimport {\n  TaskEntities,\n  DashboardTemplate,\n  Dashboard,\n  TemplateType,\n  Cell,\n  CellIncluded,\n  LabelIncluded,\n  ViewIncluded,\n  TaskTemplate,\n  TemplateBase,\n  Task,\n  VariableTemplate,\n  Variable,\n  VariableEntities,\n  PostVariable,\n} from 'src/types'\n\n// Create Dashboard Templates\nexport const createDashboardFromTemplate = async (\n  template: DashboardTemplate,\n  orgID: string\n): Promise<void> => {\n  try {\n    const {content} = template\n\n    if (\n      content.data.type !== TemplateType.Dashboard ||\n      template.meta.version !== '1'\n    ) {\n      throw new Error('Cannot create dashboard from this template')\n    }\n\n    const resp = await apiPostDashboard({\n      data: {\n        orgID,\n        ...content.data.attributes,\n      },\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const createdDashboard = addDashboardDefaults(resp.data as Dashboard)\n\n    // associate imported label id with new label\n    const labelMap = await createLabelsFromTemplate(template, orgID)\n\n    await Promise.all([\n      await addDashboardLabelsFromTemplate(\n        template,\n        labelMap,\n        createdDashboard\n      ),\n      await createCellsFromTemplate(template, createdDashboard),\n    ])\n\n    await createVariablesFromTemplate(template, labelMap, orgID)\n\n    const getResp = await apiGetDashboard({dashboardID: resp.data.id})\n\n    if (getResp.status !== 200) {\n      throw new Error(getResp.data.message)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst addDashboardLabelsFromTemplate = async (\n  template: DashboardTemplate,\n  labelMap: LabelMap,\n  dashboard: Dashboard\n) => {\n  try {\n    const labelRelationships = getLabelRelationships(template.content.data)\n    const labelIDs = labelRelationships.map(l => labelMap[l.id] || '')\n    const pending = labelIDs.map(labelID =>\n      apiPostDashboardsLabel({dashboardID: dashboard.id, data: {labelID}})\n    )\n    const resolved = await Promise.all(pending)\n    if (resolved.length > 0 && resolved.some(r => r.status !== 201)) {\n      throw new Error(\n        'An error occurred adding dashboard labels from the template'\n      )\n    }\n  } catch (e) {\n    console.error(e)\n  }\n}\n\ntype LabelMap = {[importedID: string]: CreatedLabelID}\ntype CreatedLabelID = string\n\nconst createLabelsFromTemplate = async <T extends TemplateBase>(\n  template: T,\n  orgID: string\n): Promise<LabelMap> => {\n  const {\n    content: {data, included},\n  } = template\n\n  const labeledResources = [data, ...included].filter(r =>\n    hasLabelsRelationships(r)\n  )\n\n  if (isEmpty(labeledResources)) {\n    return {}\n  }\n\n  const labelRelationships = flatMap(labeledResources, r =>\n    getLabelRelationships(r)\n  )\n\n  const includedLabels = findIncludedsFromRelationships<LabelIncluded>(\n    included,\n    labelRelationships\n  )\n\n  const resp = await apiGetLabels({query: {orgID}})\n\n  if (resp.status !== 200) {\n    throw new Error(resp.data.message)\n  }\n\n  const existingLabels = resp.data.labels.map(l => addLabelDefaults(l))\n\n  const foundLabelsToCreate = findLabelsToCreate(\n    existingLabels,\n    includedLabels\n  ).map(l => ({\n    orgID,\n    name: get(l, 'attributes.name', ''),\n    properties: get(l, 'attributes.properties', {}),\n  }))\n\n  const promisedLabels = foundLabelsToCreate.map(lab => {\n    return apiPostLabel({\n      data: lab,\n    })\n      .then(res => {\n        const out = get(res, 'data.label', '')\n        return out\n      })\n      .then(lab => addLabelDefaults(lab))\n  })\n\n  const createdLabels = await Promise.all(promisedLabels)\n\n  const allLabels = [...createdLabels, ...existingLabels]\n\n  const labelMap: LabelMap = {}\n\n  includedLabels.forEach(label => {\n    const createdLabel = allLabels.find(l => l.name === label.attributes.name)\n\n    labelMap[label.id] = createdLabel.id\n  })\n\n  return labelMap\n}\n\nconst createCellsFromTemplate = async (\n  template: DashboardTemplate,\n  createdDashboard: Dashboard\n) => {\n  const {\n    content: {data, included},\n  } = template\n\n  if (!data.relationships || !data.relationships[TemplateType.Cell]) {\n    return\n  }\n\n  const cellRelationships = data.relationships[TemplateType.Cell].data\n\n  const cellsToCreate = findIncludedsFromRelationships<CellIncluded>(\n    included,\n    cellRelationships\n  )\n\n  const pendingCells = cellsToCreate.map(c => {\n    const {\n      attributes: {x, y, w, h},\n    } = c\n    return apiPostDashboardsCell({\n      dashboardID: createdDashboard.id,\n      data: {x, y, w, h},\n    })\n  })\n\n  const cellResponses = await Promise.all(pendingCells)\n\n  if (cellResponses.length > 0 && cellResponses.some(r => r.status !== 201)) {\n    throw new Error('An error occurred creating cells from the templates')\n  }\n\n  const responses = cellResponses.map(resp => resp.data as Cell)\n\n  createViewsFromTemplate(\n    template,\n    responses,\n    cellsToCreate,\n    createdDashboard.id\n  )\n}\n\nconst createViewsFromTemplate = async (\n  template: DashboardTemplate,\n  cellResponses: Cell[],\n  cellsToCreate: CellIncluded[],\n  dashboardID: string\n) => {\n  const viewsToCreate = cellsToCreate.map(c => {\n    const {\n      content: {included},\n    } = template\n\n    const viewRelationship = c.relationships[TemplateType.View].data\n\n    return findIncludedFromRelationship<ViewIncluded>(\n      included,\n      viewRelationship\n    )\n  })\n\n  const pendingViews = viewsToCreate.map((v, i) => {\n    return apiPatchDashboardsCellsView({\n      dashboardID,\n      cellID: cellResponses[i].id,\n      data: v.attributes,\n    })\n  })\n\n  await Promise.all(pendingViews)\n}\n\nconst createVariablesFromTemplate = async (\n  template: DashboardTemplate | VariableTemplate,\n  labelMap: LabelMap,\n  orgID: string\n) => {\n  const {\n    content: {data, included},\n  } = template\n  if (!data.relationships || !data.relationships[TemplateType.Variable]) {\n    return\n  }\n  const variablesIncluded = findIncludedVariables(included)\n\n  const resp = await apiGetVariables({query: {orgID}})\n\n  if (resp.status !== 200) {\n    throw new Error(resp.data.message)\n  }\n\n  const normVariables = normalize<Variable, VariableEntities, string[]>(\n    resp.data.variables,\n    arrayOfVariables\n  )\n\n  const variables = Object.values<Variable>(\n    get(normVariables, 'entities.variables', {})\n  )\n\n  const variablesToCreate = findVariablesToCreate(\n    variables,\n    variablesIncluded\n  ).map(v => ({...v.attributes, orgID}))\n\n  const pendingVariables = variablesToCreate.map(vars =>\n    apiPostVariable({data: vars as PostVariable})\n  )\n\n  const resolvedVariables = await Promise.all(pendingVariables)\n\n  if (\n    resolvedVariables.length > 0 &&\n    resolvedVariables.every(r => r.status !== 201)\n  ) {\n    throw new Error('An error occurred creating the variables from templates')\n  }\n\n  const createdVariables = await Promise.all(pendingVariables)\n\n  const normCreated = createdVariables.map(v => {\n    const normVar = normalize<Variable, VariableEntities, string>(\n      v.data,\n      variableSchema\n    )\n    return normVar.entities.variables[normVar.result]\n  })\n\n  const allVars = [...variables, ...normCreated]\n\n  const addLabelsToVars = variablesIncluded.map(async includedVar => {\n    const variable = allVars.find(v => v.name === includedVar.attributes.name)\n    const labelRelationships = getLabelRelationships(includedVar)\n    const labelIDs = labelRelationships.map(l => labelMap[l.id] || '')\n    const pending = labelIDs.map(async labelID => {\n      await apiPostVariablesLabel({variableID: variable.id, data: {labelID}})\n    })\n    await Promise.all(pending)\n  })\n\n  await Promise.all(addLabelsToVars)\n}\n\nexport const createTaskFromTemplate = async (\n  template: TaskTemplate,\n  orgID: string\n): Promise<Task> => {\n  const {content} = template\n  try {\n    if (\n      content.data.type !== TemplateType.Task ||\n      template.meta.version !== '1'\n    ) {\n      throw new Error('Cannot create task from this template')\n    }\n\n    const flux = content.data.attributes.flux\n\n    const postResp = await apiPostTask({data: {orgID, flux}})\n\n    if (postResp.status !== 201) {\n      throw new Error(postResp.data.message)\n    }\n\n    const {entities, result} = normalize<Task, TaskEntities, string>(\n      postResp.data,\n      taskSchema\n    )\n\n    const postedTask = entities.tasks[result]\n\n    // associate imported label.id with created label\n    const labelMap = await createLabelsFromTemplate(template, orgID)\n\n    await addTaskLabelsFromTemplate(template, labelMap, postedTask)\n\n    const resp = await apiGetTask({taskID: postedTask.id})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    return postedTask\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nconst addTaskLabelsFromTemplate = async (\n  template: TaskTemplate,\n  labelMap: LabelMap,\n  task: Task\n) => {\n  try {\n    const relationships = getLabelRelationships(template.content.data)\n    const labelIDs = relationships.map(l => labelMap[l.id] || '')\n    const pending = labelIDs.map(labelID =>\n      apiPostTasksLabel({taskID: task.id, data: {labelID}})\n    )\n    const resolved = await Promise.all(pending)\n    if (resolved.length > 0 && resolved.some(r => r.status !== 201)) {\n      throw new Error('An error occurred adding task labels from the templates')\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const createVariableFromTemplate = async (\n  template: VariableTemplate,\n  orgID: string\n) => {\n  const {content} = template\n  try {\n    if (\n      content.data.type !== TemplateType.Variable ||\n      template.meta.version !== '1'\n    ) {\n      throw new Error('Cannot create variable from this template')\n    }\n\n    const resp = await apiPostVariable({\n      data: {\n        ...content.data.attributes,\n        orgID,\n      },\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    // associate imported label.id with created label\n    const labelsMap = await createLabelsFromTemplate(template, orgID)\n\n    await createVariablesFromTemplate(template, labelsMap, orgID)\n\n    const variable = await apiGetVariable({variableID: resp.data.id})\n\n    if (variable.status !== 200) {\n      throw new Error(variable.data.message)\n    }\n\n    return variable.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n","// Libraries\nimport {get} from 'lodash'\n\n// Utils\nimport {findNodes} from 'src/shared/utils/ast'\nimport {durationToMilliseconds} from 'src/shared/utils/duration'\n\n// Types\nimport {\n  Node,\n  Package,\n  CallExpression,\n  Property,\n  Expression,\n  Identifier,\n  ObjectExpression,\n  DateTimeLiteral,\n  DurationLiteral,\n} from 'src/types'\n\nexport function getMinDurationFromAST(ast: Package): number {\n  // We can't take the minimum of durations of each range individually, since\n  // separate ranges are potentially combined via an inner `join` call. So the\n  // approach is to:\n  //\n  // 1. Find every possible `[start, stop]` combination for all start and stop\n  //    times across every `range` call\n  // 2. Map each combination to a duration via `stop - start`\n  // 3. Filter out the non-positive durations\n  // 4. Take the minimum duration\n  //\n  const times = allRangeTimes(ast)\n\n  if (!times.length) {\n    throw new Error('no time ranges found in query')\n  }\n\n  const starts = times.map(t => t[0])\n  const stops = times.map(t => t[1])\n  const cartesianProduct = starts.map(start => stops.map(stop => [start, stop]))\n\n  const durations = []\n    .concat(...cartesianProduct)\n    .map(([start, stop]) => stop - start)\n    .filter(d => d > 0)\n\n  const result = Math.min(...durations)\n\n  return result\n}\n\nfunction allRangeTimes(ast: any): Array<[number, number]> {\n  return findNodes(ast, isRangeNode).map(node => rangeTimes(ast, node))\n}\n\n/*\n  Given a `range` call in an AST, reports the `start` and `stop` arguments the\n  the call as absolute instants in time. If the `start` or `stop` argument is a\n  relative duration literal, it is interpreted as relative to the current\n  instant (`Date.now()`).\n*/\nfunction rangeTimes(ast: any, rangeNode: CallExpression): [number, number] {\n  const now = Date.now()\n  const properties: Property[] = (rangeNode.arguments[0] as ObjectExpression)\n    .properties\n\n  // The `start` argument is required\n  const startProperty = properties.find(\n    p => (p.key as Identifier).name === 'start'\n  )\n\n  const start = propertyTime(ast, startProperty.value, now)\n\n  // The `end` argument to a `range` call is optional, and defaults to now\n  const endProperty = properties.find(\n    p => (p.key as Identifier).name === 'stop'\n  )\n\n  const end = endProperty ? propertyTime(ast, endProperty.value, now) : now\n\n  if (isNaN(start) || isNaN(end)) {\n    throw new Error('failed to analyze query')\n  }\n\n  return [start, end]\n}\n\nfunction propertyTime(ast: any, value: Expression, now: number): number {\n  switch (value.type) {\n    case 'UnaryExpression':\n      return (\n        now - durationToMilliseconds((value.argument as DurationLiteral).values)\n      )\n\n    case 'DurationLiteral':\n      return now + durationToMilliseconds(value.values)\n\n    case 'DateTimeLiteral':\n      return Date.parse(value.value)\n\n    case 'Identifier':\n      return propertyTime(ast, lookupVariable(ast, value.name), now)\n\n    case 'BinaryExpression':\n      const leftTime = Date.parse((value.left as DateTimeLiteral).value)\n      const rightDuration = durationToMilliseconds(\n        (value.right as DurationLiteral).values\n      )\n\n      switch (value.operator) {\n        case '+':\n          return leftTime + rightDuration\n        case '-':\n          return leftTime - rightDuration\n        default:\n          throw new Error(`unexpected operator ${value.operator}`)\n      }\n\n    case 'MemberExpression':\n      const objName = get(value, 'object.name')\n      const propertyName = get(value, 'property.name')\n      const objExpr = lookupVariable(ast, objName) as ObjectExpression\n      const property = objExpr.properties.find(\n        p => get(p, 'key.name') === propertyName\n      )\n\n      return propertyTime(ast, property.value, now)\n\n    case 'CallExpression':\n      if (isNowCall(value)) {\n        return now\n      }\n\n      throw new Error('unexpected CallExpression')\n\n    default:\n      throw new Error(`unexpected expression type ${value.type}`)\n  }\n}\n\n/*\n  Find the node in the `ast` that defines the value of the variable with the\n  given `name`.\n*/\nfunction lookupVariable(ast: any, name: string): Expression {\n  const isDeclarator = node => {\n    return (\n      get(node, 'type') === 'VariableAssignment' &&\n      get(node, 'id.name') === name\n    )\n  }\n\n  const declarator = findNodes(ast, isDeclarator)\n\n  if (!declarator.length) {\n    throw new Error(`unable to lookup variable \"${name}\"`)\n  }\n\n  if (declarator.length > 1) {\n    throw new Error('cannot lookup variable with duplicate declarations')\n  }\n\n  const init = declarator[0].init\n\n  return init\n}\n\nfunction isNowCall(node: CallExpression): boolean {\n  return get(node, 'callee.name') === 'now'\n}\n\nfunction isRangeNode(node: Node) {\n  return (\n    get(node, 'type') === 'CallExpression' &&\n    get(node, 'callee.type') === 'Identifier' &&\n    get(node, 'callee.name') === 'range'\n  )\n}\n","// APIs\nimport {parse} from '@influxdata/flux-parser'\n\n// Utils\nimport {getMinDurationFromAST} from 'src/shared/utils/getMinDurationFromAST'\nimport {buildVarsOption} from 'src/variables/utils/buildVarsOption'\nimport {reportError} from 'src/shared/utils/errors'\n// Constants\nimport {WINDOW_PERIOD} from 'src/variables/constants'\n\n// Types\nimport {VariableAssignment, Package} from 'src/types/ast'\nimport {SELECTABLE_TIME_RANGES} from 'src/shared/constants/timeRanges'\n\nconst DESIRED_POINTS_PER_GRAPH = 360\nconst FALLBACK_WINDOW_PERIOD = 15000\n\n/*\n  Compute the `v.windowPeriod` variable assignment for a query.\n*/\nexport const getWindowVars = (\n  query: string,\n  variables: VariableAssignment[]\n): VariableAssignment[] => {\n  if (!query.includes(WINDOW_PERIOD)) {\n    return []\n  }\n\n  const windowPeriod =\n    getWindowPeriod(query, variables) || FALLBACK_WINDOW_PERIOD\n\n  return [\n    {\n      type: 'VariableAssignment',\n      id: {\n        type: 'Identifier',\n        name: WINDOW_PERIOD,\n      },\n      init: {\n        type: 'DurationLiteral',\n        values: [{magnitude: windowPeriod, unit: 'ms'}],\n      },\n    },\n  ]\n}\n\n/*\n  Compute the duration (in milliseconds) to use for the `v.windowPeriod`\n  variable assignment for a query.\n*/\nexport const getWindowPeriod = (\n  query: string,\n  variables: VariableAssignment[]\n): number | null => {\n  if (query.length === 0) {\n    return null\n  }\n  try {\n    const ast = parse(query)\n\n    const substitutedAST: Package = {\n      package: '',\n      type: 'Package',\n      files: [ast, buildVarsOption(variables)],\n    }\n\n    const queryDuration = getMinDurationFromAST(substitutedAST) // in ms\n\n    const foundDuration = SELECTABLE_TIME_RANGES.find(\n      tr => tr.seconds * 1000 === queryDuration\n    )\n\n    if (foundDuration) {\n      return foundDuration.windowPeriod\n    }\n\n    return Math.round(queryDuration / DESIRED_POINTS_PER_GRAPH)\n  } catch (error) {\n    console.error(error)\n    reportError(error, {\n      context: {query},\n      name: 'getWindowPeriod function',\n    })\n    return null\n  }\n}\n","// Types\nimport {RemoteDataState, DashboardEntities} from 'src/types'\nimport {NormalizedSchema} from 'normalizr'\nimport {setLabelOnResource} from 'src/labels/actions/creators'\n\nexport const ADD_DASHBOARD_LABEL = 'ADD_DASHBOARD_LABEL'\nexport const DELETE_DASHBOARD_FAILED = 'DELETE_DASHBOARD_FAILED'\nexport const EDIT_DASHBOARD = 'EDIT_DASHBOARD'\nexport const REMOVE_DASHBOARD = 'REMOVE_DASHBOARD'\nexport const REMOVE_DASHBOARD_LABEL = 'REMOVE_DASHBOARD_LABEL'\nexport const SET_DASHBOARD = 'SET_DASHBOARD'\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS'\n\nexport type Action =\n  | ReturnType<typeof editDashboard>\n  | ReturnType<typeof removeDashboard>\n  | ReturnType<typeof removeDashboardLabel>\n  | ReturnType<typeof setDashboard>\n  | ReturnType<typeof setDashboards>\n  | ReturnType<typeof setLabelOnResource>\n\n// R is the type of the value of the \"result\" key in normalizr's normalization\ntype DashboardSchema<R extends string | string[]> = NormalizedSchema<\n  DashboardEntities,\n  R\n>\n\n// Action Creators\nexport const editDashboard = (schema: DashboardSchema<string>) =>\n  ({\n    type: EDIT_DASHBOARD,\n    schema,\n  } as const)\n\nexport const setDashboards = (\n  status: RemoteDataState,\n  schema?: DashboardSchema<string[]>\n) =>\n  ({\n    type: SET_DASHBOARDS,\n    status,\n    schema,\n  } as const)\n\nexport const setDashboard = (\n  id: string,\n  status: RemoteDataState,\n  schema?: DashboardSchema<string>\n) =>\n  ({\n    type: SET_DASHBOARD,\n    id,\n    status,\n    schema,\n  } as const)\n\nexport const removeDashboard = (id: string) =>\n  ({\n    type: REMOVE_DASHBOARD,\n    id,\n  } as const)\n\nexport const removeDashboardLabel = (dashboardID: string, labelID: string) =>\n  ({\n    type: REMOVE_DASHBOARD_LABEL,\n    dashboardID,\n    labelID,\n  } as const)\n","import {get, isEmpty} from 'lodash'\nimport {\n  BuilderConfig,\n  BuilderTagsType,\n  DashboardDraftQuery,\n  CheckType,\n  Threshold,\n} from 'src/types'\nimport {FUNCTIONS} from 'src/timeMachine/constants/queryBuilder'\nimport {\n  TIME_RANGE_START,\n  TIME_RANGE_STOP,\n  OPTION_NAME,\n  WINDOW_PERIOD,\n} from 'src/variables/constants'\nimport {AGG_WINDOW_AUTO} from 'src/timeMachine/constants/queryBuilder'\n\nexport function isConfigValid(builderConfig: BuilderConfig): boolean {\n  const {buckets, tags} = builderConfig\n\n  const isConfigValid =\n    buckets.length >= 1 &&\n    tags.length >= 1 &&\n    tags.some(({key, values}) => key && values.length > 0)\n\n  return isConfigValid\n}\n\nexport const isConfigEmpty = (builderConfig: BuilderConfig): boolean => {\n  const {buckets, tags} = builderConfig\n  const isConfigEmpty =\n    buckets.length <= 1 &&\n    !tags.some(({key, values}) => key && values.length > 0)\n\n  return isConfigEmpty\n}\n\nexport interface CheckQueryValidity {\n  oneQuery: boolean\n  builderMode: boolean\n  singleAggregateFunc: boolean\n  singleField: boolean\n}\n\nexport const isDraftQueryAlertable = (\n  draftQueries: DashboardDraftQuery[]\n): CheckQueryValidity => {\n  const tags: BuilderTagsType[] = get(\n    draftQueries,\n    '[0].builderConfig.tags',\n    []\n  )\n  const fieldSelection = tags.find(t => get(t, 'key') === '_field')\n  const fieldValues = get(fieldSelection, 'values', [])\n  const functions = draftQueries[0].builderConfig.functions\n  return {\n    oneQuery: draftQueries.length === 1, // one query\n    builderMode: draftQueries[0].editMode == 'builder', // built in builder\n    singleAggregateFunc: functions.length === 1, // one aggregate function\n    singleField: fieldValues.length === 1, // one field selection\n  }\n}\n\nexport const isCheckSaveable = (\n  draftQueries: DashboardDraftQuery[],\n  checkType: CheckType,\n  thresholds: Threshold[]\n): boolean => {\n  const {\n    oneQuery,\n    builderMode,\n    singleAggregateFunc,\n    singleField,\n  } = isDraftQueryAlertable(draftQueries)\n\n  if (checkType === 'custom') {\n    return true\n  }\n\n  if (checkType === 'deadman') {\n    return oneQuery && builderMode && singleField\n  }\n\n  return (\n    oneQuery &&\n    builderMode &&\n    singleAggregateFunc &&\n    singleField &&\n    !!thresholds.length\n  )\n}\n\nexport function buildQuery(builderConfig: BuilderConfig): string {\n  const {functions} = builderConfig\n\n  let query: string\n  if (functions.length) {\n    query = functions\n      .map(f => buildQueryFromConfig(builderConfig, f))\n      .join('\\n\\n')\n  } else {\n    query = buildQueryFromConfig(builderConfig, null)\n  }\n\n  return query\n}\n\nfunction buildQueryFromConfig(\n  builderConfig: BuilderConfig,\n  fn?: BuilderConfig['functions'][0]\n): string {\n  const [bucket] = builderConfig.buckets\n\n  const tags = Array.from(builderConfig.tags)\n\n  // todo: (bucky) - check to see if we can combine filter calls\n  // https://github.com/influxdata/influxdb/issues/16076\n  let tagsFunctionCalls = ''\n  tags.forEach(tag => {\n    tagsFunctionCalls += convertTagsToFluxFunctionString(tag)\n  })\n\n  const {aggregateWindow} = builderConfig\n  const fnCall = fn ? formatFunctionCall(fn, aggregateWindow.period) : ''\n\n  const query = `from(bucket: \"${bucket}\")\n  |> range(start: ${OPTION_NAME}.${TIME_RANGE_START}, stop: ${OPTION_NAME}.${TIME_RANGE_STOP})${tagsFunctionCalls}${fnCall}`\n\n  return query\n}\n\nexport function formatFunctionCall(\n  fn: BuilderConfig['functions'][0],\n  period: string\n) {\n  const fnSpec = FUNCTIONS.find(spec => spec.name === fn.name)\n\n  if (!fnSpec) {\n    return\n  }\n\n  const formattedPeriod = formatPeriod(period)\n\n  return `\\n  ${fnSpec.flux(formattedPeriod)}\\n  |> yield(name: \"${fn.name}\")`\n}\n\nconst convertTagsToFluxFunctionString = function convertTagsToFluxFunctionString(\n  tag: BuilderTagsType\n) {\n  if (!tag.key) {\n    return ''\n  }\n\n  if (tag.aggregateFunctionType === 'filter') {\n    if (!tag.values.length) {\n      return ''\n    }\n\n    return `\\n  |> filter(fn: (r) => ${tagToFlux(tag)})`\n  }\n\n  if (tag.aggregateFunctionType === 'group') {\n    const quotedValues = tag.values.map(value => `\"${value}\"`) // wrap the value in double quotes\n\n    if (quotedValues.length) {\n      return `\\n  |> group(columns: [${quotedValues.join(', ')}])` // join with a comma (e.g. \"foo\",\"bar\",\"baz\")\n    }\n\n    return '\\n  |> group()'\n  }\n\n  return ''\n}\n\nexport const tagToFlux = function tagToFlux(tag: BuilderTagsType) {\n  return tag.values\n    .map(value => `r.${tag.key} == \"${value.replace(/\\\\/g, '\\\\\\\\')}\"`)\n    .join(' or ')\n}\n\nconst formatPeriod = (period: string): string => {\n  if (period === AGG_WINDOW_AUTO || !period) {\n    return `${OPTION_NAME}.${WINDOW_PERIOD}`\n  }\n\n  return period\n}\n\nexport enum ConfirmationState {\n  NotRequired = 'no confirmation required',\n  Required = 'confirmation required',\n  Unknown = 'unknown confirmation state',\n}\n\nexport const confirmationState = (\n  query: string,\n  builderConfig: BuilderConfig\n) => {\n  if (\n    !isConfigValid(builderConfig) ||\n    !hasQueryBeenEdited(query, builderConfig)\n  ) {\n    ConfirmationState.NotRequired\n  }\n\n  if (hasQueryBeenEdited(query, builderConfig) || isEmpty(query)) {\n    return ConfirmationState.Required\n  }\n\n  return ConfirmationState.NotRequired\n}\n\nexport function hasQueryBeenEdited(\n  query: string,\n  builderConfig: BuilderConfig\n): boolean {\n  const _isQueryDifferent = query !== buildQuery(builderConfig)\n\n  return _isQueryDifferent\n}\n","import {ErrorInfo} from 'react'\nimport HoneyBadger from 'honeybadger-js'\nimport {CLOUD, GIT_SHA} from 'src/shared/constants'\n\nimport {getUserFlags} from 'src/shared/utils/featureFlag'\n\nif (CLOUD) {\n  HoneyBadger.configure({\n    apiKey: process.env.HONEYBADGER_KEY,\n    revision: GIT_SHA,\n    environment: process.env.HONEYBADGER_ENV,\n  })\n}\n\n// See https://docs.honeybadger.io/lib/javascript/guides/reporting-errors.html#additional-options\ninterface HoneyBadgerAdditionalOptions {\n  component?: string\n  context?: {[key: string]: any}\n  cookies?: {[key: string]: any}\n  name?: string\n  params?: {[key: string]: any}\n}\n\nexport const reportError = (\n  error: Error,\n  additionalOptions?: HoneyBadgerAdditionalOptions\n): void => {\n  let additionalContext = {}\n  if (additionalOptions && additionalOptions.context) {\n    additionalContext = {...additionalOptions.context}\n  }\n\n  const context = {\n    ...additionalContext,\n    ...getUserFlags(),\n  }\n\n  let options: HoneyBadgerAdditionalOptions = {}\n  if (additionalOptions) {\n    options = {...additionalOptions}\n\n    delete options.context // already included in the above context object\n  }\n\n  if (CLOUD) {\n    HoneyBadger.notify(error, {context, ...options})\n  } else {\n    const honeyBadgerContext = (HoneyBadger as any).context\n    /* eslint-disable no-console */\n    console.log('Context that would have been sent to HoneyBadger:')\n    console.table({...honeyBadgerContext, ...context, ...options})\n    /* eslint-enable no-console */\n  }\n}\n\n/*\n  Parse React's error boundary info message to provide the name of the\n  component an error occured in.\n\n  For example, given the following info message:\n\n      The above error occurred in the <MePage> component:\n          in MePage (created by ErrorBoundary(MePage))\n          in ErrorBoundary (created by ErrorBoundary(MePage))\n          in ErrorBoundary(MePage) (created by Connect(ErrorBoundary(MePage)))\n          in Connect(ErrorBoundary(MePage)) (created by RouterContext)\n          in SpinnerContainer (created by SetOrg)\n          ...\n\n  We will extract \"MePage\" as the component name.\n*/\nexport const parseComponentName = (errorInfo: ErrorInfo): string => {\n  const componentName = errorInfo.componentStack\n    .trim()\n    .split('\\n')\n    .map(s => s.split(' ')[1])[0]\n\n  return componentName\n}\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {ResourceType} from 'src/types'\n\n/* Authorizations */\n\n// Defines the schema for the \"authorizations\" resource\nexport const authSchema = new schema.Entity(ResourceType.Authorizations)\nexport const arrayOfAuths = [authSchema]\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {RemoteDataState, ResourceType, GenCheck, Check} from 'src/types'\n\n// Schemas\nimport {arrayOfLabels} from './labels'\n\n/* Checks */\n\n// Defines the schema for the \"checks\" resource\nexport const checkSchema = new schema.Entity(\n  ResourceType.Checks,\n  {\n    labels: arrayOfLabels,\n  },\n  {\n    processStrategy: (check: GenCheck): Omit<Check, 'labels'> => {\n      return {\n        ...check,\n        status: RemoteDataState.Done,\n        activeStatus: check.status,\n      }\n    },\n  }\n)\n\nexport const arrayOfChecks = [checkSchema]\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {\n  RemoteDataState,\n  ResourceType,\n  NotificationEndpoint,\n  GenEndpoint,\n} from 'src/types'\n\n// Schemas\nimport {arrayOfLabels} from './labels'\n\n/* Endpoints */\nexport const endpointSchema = new schema.Entity(\n  ResourceType.NotificationEndpoints,\n  {\n    labels: arrayOfLabels,\n  },\n  {\n    processStrategy: point => addEndpointDefaults(point),\n  }\n)\n\nexport const arrayOfEndpoints = [endpointSchema]\n\nconst addEndpointDefaults = (\n  point: GenEndpoint\n): Omit<NotificationEndpoint, 'labels'> => {\n  return {\n    ...point,\n    status: RemoteDataState.Done,\n    activeStatus: point.status,\n  }\n}\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Schemas\nimport {labelSchema} from './labels'\n\n// Utils\nimport {ruleToDraftRule} from 'src/notifications/rules/utils'\n\n// Types\nimport {ResourceType, GenRule, NotificationRuleDraft} from 'src/types'\n\n/* Rules */\nexport const ruleSchema = new schema.Entity(\n  ResourceType.NotificationRules,\n  {\n    labels: [labelSchema],\n  },\n  {\n    processStrategy: (rule: GenRule): NotificationRuleDraft => ({\n      ...ruleToDraftRule(rule),\n    }),\n  }\n)\n\nexport const arrayOfRules = [ruleSchema]\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {ResourceType} from 'src/types'\n\n// Schemas\nimport {labelSchema} from './labels'\n\n// Defines the schema for the \"templates\" resource\nexport const templateSchema = new schema.Entity(ResourceType.Templates, {\n  labels: [labelSchema],\n})\n\nexport const arrayOfTemplates = [templateSchema]\n","// Libraries\nimport memoizeOne from 'memoize-one'\nimport moment from 'moment'\nimport {get, flatMap} from 'lodash'\nimport {fromFlux, Table} from '@influxdata/giraffe'\n\n// Utils\nimport {parseResponse} from 'src/shared/parsing/flux/response'\nimport {getCheckVisTimeRange} from 'src/alerting/utils/vis'\nimport {\n  defaultXColumn,\n  defaultYColumn,\n  getNumericColumns as getNumericColumnsUtil,\n  getGroupableColumns as getGroupableColumnsUtil,\n} from 'src/shared/utils/vis'\nimport {getVariableAssignments as getVariableAssignmentsForContext} from 'src/variables/selectors'\nimport {getTimeRangeVars} from 'src/variables/utils/getTimeRangeVars'\nimport {getWindowPeriod} from 'src/variables/utils/getWindowVars'\nimport {\n  timeRangeToDuration,\n  parseDuration,\n  durationToMilliseconds,\n} from 'src/shared/utils/duration'\n\n// Types\nimport {\n  QueryView,\n  BuilderAggregateFunctionType,\n  BuilderTagsType,\n  DashboardQuery,\n  FluxTable,\n  AppState,\n  DashboardDraftQuery,\n  TimeRange,\n  VariableAssignment,\n} from 'src/types'\n\nexport const getActiveTimeMachine = (state: AppState) => {\n  const {activeTimeMachineID, timeMachines} = state.timeMachines\n  const timeMachine = timeMachines[activeTimeMachineID]\n\n  return timeMachine\n}\n\nexport const getIsInCheckOverlay = (state: AppState): boolean => {\n  return state.timeMachines.activeTimeMachineID === 'alerting'\n}\n\nexport const getTimeRange = (state: AppState): TimeRange => {\n  const {timeRange} = getActiveTimeMachine(state)\n  const {\n    alertBuilder: {every},\n  } = state\n\n  if (!getIsInCheckOverlay(state)) {\n    return timeRange\n  }\n\n  return getCheckVisTimeRange(every)\n}\n\nexport const getActiveQuery = (state: AppState): DashboardDraftQuery => {\n  const {draftQueries, activeQueryIndex} = getActiveTimeMachine(state)\n\n  return draftQueries[activeQueryIndex]\n}\n\nexport const getVariableAssignments = (\n  state: AppState\n): VariableAssignment[] => {\n  return [\n    ...getTimeRangeVars(getTimeRange(state)),\n    ...getVariableAssignmentsForContext(\n      state,\n      state.timeMachines.activeTimeMachineID\n    ),\n  ]\n}\n\n/*\n  Get the value of the `v.windowPeriod` variable for the currently active query, in milliseconds.\n*/\nexport const getActiveWindowPeriod = (state: AppState) => {\n  const {text} = getActiveQuery(state)\n  const variables = getVariableAssignments(state)\n\n  return getWindowPeriod(text, variables)\n}\n\nconst getTablesMemoized = memoizeOne(\n  (files: string[]): FluxTable[] => (files ? flatMap(files, parseResponse) : [])\n)\n\nexport const getTables = (state: AppState): FluxTable[] =>\n  getTablesMemoized(getActiveTimeMachine(state).queryResults.files)\n\nconst getVisTableMemoized = memoizeOne(fromFlux)\n\nexport const getVisTable = (\n  state: AppState\n): {table: Table; fluxGroupKeyUnion: string[]} => {\n  const files = getActiveTimeMachine(state).queryResults.files || []\n  const {table, fluxGroupKeyUnion} = getVisTableMemoized(files.join('\\n\\n'))\n\n  return {table, fluxGroupKeyUnion}\n}\n\nconst getNumericColumnsMemoized = memoizeOne(getNumericColumnsUtil)\n\nexport const getNumericColumns = (state: AppState): string[] => {\n  const {table} = getVisTable(state)\n\n  return getNumericColumnsMemoized(table)\n}\n\nconst getGroupableColumnsMemoized = memoizeOne(getGroupableColumnsUtil)\n\nexport const getGroupableColumns = (state: AppState): string[] => {\n  const {table} = getVisTable(state)\n\n  return getGroupableColumnsMemoized(table)\n}\n\nexport const getXColumnSelection = (state: AppState): string => {\n  const {table} = getVisTable(state)\n  const preferredXColumnKey = get(\n    getActiveTimeMachine(state),\n    'view.properties.xColumn'\n  )\n\n  return defaultXColumn(table, preferredXColumnKey)\n}\n\nexport const getYColumnSelection = (state: AppState): string => {\n  const {table} = getVisTable(state)\n  const preferredYColumnKey = get(\n    getActiveTimeMachine(state),\n    'view.properties.yColumn'\n  )\n\n  return defaultYColumn(table, preferredYColumnKey)\n}\n\nconst getGroupableColumnSelection = (\n  validColumns: string[],\n  preference: string[],\n  fluxGroupKeyUnion: string[]\n): string[] => {\n  if (preference && preference.every(col => validColumns.includes(col))) {\n    return preference\n  }\n\n  return fluxGroupKeyUnion\n}\n\nconst getFillColumnsSelectionMemoized = memoizeOne(getGroupableColumnSelection)\n\nconst getSymbolColumnsSelectionMemoized = memoizeOne(\n  getGroupableColumnSelection\n)\n\nexport const getFillColumnsSelection = (state: AppState): string[] => {\n  const validFillColumns = getGroupableColumns(state)\n\n  const preference = get(\n    getActiveTimeMachine(state),\n    'view.properties.fillColumns'\n  )\n\n  const {fluxGroupKeyUnion} = getVisTable(state)\n\n  return getFillColumnsSelectionMemoized(\n    validFillColumns,\n    preference,\n    fluxGroupKeyUnion\n  )\n}\n\nexport const getSymbolColumnsSelection = (state: AppState): string[] => {\n  const validSymbolColumns = getGroupableColumns(state)\n  const preference = get(\n    getActiveTimeMachine(state),\n    'view.properties.symbolColumns'\n  )\n  const {fluxGroupKeyUnion} = getVisTable(state)\n\n  return getSymbolColumnsSelectionMemoized(\n    validSymbolColumns,\n    preference,\n    fluxGroupKeyUnion\n  )\n}\n\nexport const getStartTime = (timeRange: TimeRange) => {\n  if (!timeRange) {\n    return Infinity\n  }\n  switch (timeRange.type) {\n    case 'custom':\n      return moment(timeRange.lower).valueOf()\n    case 'selectable-duration':\n      return moment()\n        .subtract(timeRange.seconds, 'seconds')\n        .valueOf()\n    case 'duration':\n      const millisecondDuration = durationToMilliseconds(\n        parseDuration(timeRangeToDuration(timeRange))\n      )\n      return moment()\n        .subtract(millisecondDuration, 'milliseconds')\n        .valueOf()\n    default:\n      throw new Error(\n        'unknown timeRange type ${timeRange.type} provided to getStartTime'\n      )\n  }\n}\n\nexport const getEndTime = (timeRange: TimeRange): number => {\n  if (!timeRange) {\n    return null\n  }\n  if (timeRange.type === 'custom') {\n    return moment(timeRange.upper).valueOf()\n  }\n  return moment().valueOf()\n}\n\nexport const getActiveTimeRange = (\n  timeRange: TimeRange,\n  queries: DashboardQuery[]\n) => {\n  if (!queries) {\n    return timeRange\n  }\n  const hasVariableTimes = queries.some(\n    query =>\n      query.text.includes('v.timeRangeStart') ||\n      query.text.includes('v.timeRangeStop')\n  )\n  if (hasVariableTimes) {\n    return timeRange\n  }\n  return null\n}\n\nexport const getActiveTagValues = (\n  activeQueryBuilderTags: BuilderTagsType[],\n  aggregateFunctionType: BuilderAggregateFunctionType,\n  index: number\n): string[] => {\n  // if we're grouping, we want to be able to group on all previous tags\n  if (aggregateFunctionType === 'group') {\n    const values = []\n    activeQueryBuilderTags.forEach(tag => {\n      tag.values.forEach(value => {\n        values.push(value)\n      })\n    })\n    return values\n  }\n\n  return activeQueryBuilderTags[index].values\n}\n\nexport const getSaveableView = (state: AppState): QueryView & {id?: string} => {\n  const {view, draftQueries} = getActiveTimeMachine(state)\n\n  let saveableView: QueryView & {id?: string} = {\n    ...view,\n    properties: {\n      ...view.properties,\n      queries: draftQueries,\n    },\n  }\n\n  if (saveableView.properties.type === 'histogram') {\n    saveableView = {\n      ...saveableView,\n      properties: {\n        ...saveableView.properties,\n        xColumn: getXColumnSelection(state),\n        fillColumns: getFillColumnsSelection(state),\n      },\n    }\n  }\n\n  if (saveableView.properties.type === 'heatmap') {\n    saveableView = {\n      ...saveableView,\n      properties: {\n        ...saveableView.properties,\n        xColumn: getXColumnSelection(state),\n        yColumn: getYColumnSelection(state),\n      },\n    }\n  }\n\n  if (saveableView.properties.type === 'scatter') {\n    saveableView = {\n      ...saveableView,\n      properties: {\n        ...saveableView.properties,\n        xColumn: getXColumnSelection(state),\n        yColumn: getYColumnSelection(state),\n        fillColumns: getFillColumnsSelection(state),\n        symbolColumns: getSymbolColumnsSelection(state),\n      },\n    }\n  }\n\n  if (saveableView.properties.type === 'xy') {\n    saveableView = {\n      ...saveableView,\n      properties: {\n        ...saveableView.properties,\n        xColumn: getXColumnSelection(state),\n        yColumn: getYColumnSelection(state),\n      },\n    }\n  }\n\n  if (saveableView.properties.type === 'line-plus-single-stat') {\n    saveableView = {\n      ...saveableView,\n      properties: {\n        ...saveableView.properties,\n        xColumn: getXColumnSelection(state),\n        yColumn: getYColumnSelection(state),\n      },\n    }\n  }\n\n  return saveableView\n}\n","import {get, pick, flatMap, uniqBy} from 'lodash'\n\nimport {defaultBuilderConfig} from 'src/views/helpers'\nimport {getLabels} from 'src/resources/selectors'\n\nimport {\n  AppState,\n  Task,\n  Label,\n  Dashboard,\n  DashboardQuery,\n  Cell,\n  View,\n  Variable,\n  LabelRelationship,\n  LabelIncluded,\n} from 'src/types'\nimport {TemplateType, DocumentCreate, ITemplate} from '@influxdata/influx'\n\nconst CURRENT_TEMPLATE_VERSION = '1'\n\nconst blankTemplate = () => ({\n  meta: {version: CURRENT_TEMPLATE_VERSION},\n  content: {data: {}, included: []},\n  labels: [],\n})\n\nconst blankTaskTemplate = () => {\n  const baseTemplate = blankTemplate()\n  return {\n    ...baseTemplate,\n    meta: {...baseTemplate.meta, type: TemplateType.Task},\n    content: {\n      ...baseTemplate.content,\n      data: {...baseTemplate.content.data, type: TemplateType.Task},\n    },\n  }\n}\n\nconst blankVariableTemplate = () => {\n  const baseTemplate = blankTemplate()\n  return {\n    ...baseTemplate,\n    meta: {...baseTemplate.meta, type: TemplateType.Variable},\n    content: {\n      ...baseTemplate.content,\n      data: {...baseTemplate.content.data, type: TemplateType.Variable},\n    },\n  }\n}\n\nconst blankDashboardTemplate = () => {\n  const baseTemplate = blankTemplate()\n  return {\n    ...baseTemplate,\n    meta: {...baseTemplate.meta, type: TemplateType.Dashboard},\n    content: {\n      ...baseTemplate.content,\n      data: {...baseTemplate.content.data, type: TemplateType.Dashboard},\n    },\n  }\n}\n\nexport const labelToRelationship = (l: Label): LabelRelationship => {\n  return {type: TemplateType.Label, id: l.id}\n}\n\nexport const labelToIncluded = (l: Label): LabelIncluded => {\n  return {\n    type: TemplateType.Label,\n    id: l.id,\n    attributes: {\n      name: l.name,\n      properties: l.properties,\n    },\n  }\n}\n\nexport const taskToTemplate = (\n  state: AppState,\n  task: Task,\n  baseTemplate = blankTaskTemplate()\n): DocumentCreate => {\n  const taskName = get(task, 'name', '')\n  const templateName = `${taskName}-Template`\n\n  const taskAttributes = pick(task, [\n    'status',\n    'name',\n    'flux',\n    'every',\n    'cron',\n    'offset',\n  ])\n\n  const taskLabels = getLabels(state, task.labels)\n  const includedLabels = taskLabels.map(label => labelToIncluded(label))\n  const relationshipsLabels = taskLabels.map(label =>\n    labelToRelationship(label)\n  )\n\n  const template = {\n    ...baseTemplate,\n    meta: {\n      ...baseTemplate.meta,\n      name: templateName,\n      description: `template created from task: ${taskName}`,\n    },\n    content: {\n      ...baseTemplate.content,\n      data: {\n        ...baseTemplate.content.data,\n        type: TemplateType.Task,\n        attributes: taskAttributes,\n        relationships: {\n          [TemplateType.Label]: {data: relationshipsLabels},\n        },\n      },\n      included: [...baseTemplate.content.included, ...includedLabels],\n    },\n  }\n\n  return template\n}\n\nconst viewToIncluded = (view: View) => {\n  let properties = view.properties\n\n  if ('queries' in properties) {\n    const sanitizedQueries = properties.queries.map((q: DashboardQuery) => {\n      return {\n        ...q,\n        editMode: 'advanced' as 'advanced',\n        builderConfig: defaultBuilderConfig(),\n      }\n    })\n\n    properties = {\n      ...properties,\n      queries: sanitizedQueries,\n    }\n  }\n\n  return {\n    type: TemplateType.View,\n    id: view.id,\n    attributes: {name: view.name, properties},\n  }\n}\n\nconst viewToRelationship = (view: View) => ({\n  type: TemplateType.View,\n  id: view.id,\n})\n\nconst cellToIncluded = (cell: Cell, views: View[]) => {\n  const cellView = views.find(v => v.id === cell.id)\n  const viewRelationship = viewToRelationship(cellView)\n\n  const cellAttributes = pick(cell, ['x', 'y', 'w', 'h'])\n\n  return {\n    id: cell.id,\n    type: TemplateType.Cell,\n    attributes: cellAttributes,\n    relationships: {\n      [TemplateType.View]: {\n        data: viewRelationship,\n      },\n    },\n  }\n}\n\nconst cellToRelationship = (cell: Cell) => ({\n  type: TemplateType.Cell,\n  id: cell.id,\n})\n\nexport const variableToTemplate = (\n  state: AppState,\n  v: Variable,\n  dependencies: Variable[],\n  baseTemplate = blankVariableTemplate()\n) => {\n  const labelsByID = state.resources.labels.byID\n  const variableName = get(v, 'name', '')\n  const templateName = `${variableName}-Template`\n  const variableData = variableToIncluded(v, labelsByID)\n  const variableRelationships = dependencies.map(d => variableToRelationship(d))\n  const includedDependencies = dependencies.map(d =>\n    variableToIncluded(d, labelsByID)\n  )\n\n  const vLabels = getLabels(state, v.labels)\n\n  const includedLabels = vLabels.map(label => labelToIncluded(label))\n  const labelRelationships = vLabels.map(label => labelToRelationship(label))\n  const includedDependentLabels = flatMap(dependencies, d => {\n    const dLabels = getLabels(state, d.labels)\n    return dLabels.map(label => labelToIncluded(label))\n  })\n\n  return {\n    ...baseTemplate,\n    meta: {\n      ...baseTemplate.meta,\n      name: templateName,\n      description: `template created from variable: ${variableName}`,\n    },\n    content: {\n      ...baseTemplate.content,\n      data: {\n        ...baseTemplate.content.data,\n        ...variableData,\n        relationships: {\n          [TemplateType.Variable]: {\n            data: [...variableRelationships],\n          },\n          [TemplateType.Label]: {\n            data: [...labelRelationships],\n          },\n        },\n      },\n      included: [\n        ...includedDependencies,\n        ...includedLabels,\n        ...includedDependentLabels,\n      ],\n    },\n  }\n}\n\ntype LabelsByID = AppState['resources']['labels']['byID']\n\nconst variableToIncluded = (v: Variable, labelsByID: LabelsByID) => {\n  const variableAttributes = pick(v, ['name', 'arguments', 'selected'])\n  const labelRelationships = v.labels\n    .map(labelID => {\n      const label = labelsByID[labelID]\n      if (!label) {\n        return null\n      }\n\n      return labelToRelationship(label)\n    })\n    .filter(label => !!label)\n\n  return {\n    id: v.id,\n    type: TemplateType.Variable,\n    attributes: variableAttributes,\n    relationships: {\n      [TemplateType.Label]: {\n        data: [...labelRelationships],\n      },\n    },\n  }\n}\n\nconst variableToRelationship = (v: Variable) => ({\n  type: TemplateType.Variable,\n  id: v.id,\n})\n\nexport const dashboardToTemplate = (\n  state: AppState,\n  dashboard: Dashboard,\n  cells: Cell[],\n  views: View[],\n  variables: Variable[],\n  baseTemplate = blankDashboardTemplate()\n): DocumentCreate => {\n  const labelsByID = state.resources.labels.byID\n  const dashboardName = get(dashboard, 'name', '')\n  const templateName = `${dashboardName}-Template`\n\n  const dashboardAttributes = pick(dashboard, ['name', 'description'])\n\n  const dashboardLabels = getLabels(state, dashboard.labels)\n  const dashboardIncludedLabels = dashboardLabels.map(label =>\n    labelToIncluded(label)\n  )\n  const relationshipsLabels = dashboardLabels.map(label =>\n    labelToRelationship(label)\n  )\n\n  const includedCells = cells.map(c => cellToIncluded(c, views))\n  const relationshipsCells = cells.map(c => cellToRelationship(c))\n\n  const includedVariables = variables.map(v =>\n    variableToIncluded(v, labelsByID)\n  )\n\n  const variableIncludedLabels = flatMap(variables, v =>\n    getLabels(state, v.labels).map(label => labelToIncluded(label))\n  )\n\n  const relationshipsVariables = variables.map(v => variableToRelationship(v))\n\n  const includedViews = views.map(v => viewToIncluded(v))\n  const includedLabels = uniqBy(\n    [...dashboardIncludedLabels, ...variableIncludedLabels],\n    'id'\n  )\n\n  const template = {\n    ...baseTemplate,\n    meta: {\n      ...baseTemplate.meta,\n      name: templateName,\n      description: `template created from dashboard: ${dashboardName}`,\n    },\n    content: {\n      ...baseTemplate.content,\n      data: {\n        ...baseTemplate.content.data,\n        type: TemplateType.Dashboard,\n        attributes: dashboardAttributes,\n        relationships: {\n          [TemplateType.Label]: {data: relationshipsLabels},\n          [TemplateType.Cell]: {data: relationshipsCells},\n          [TemplateType.Variable]: {data: relationshipsVariables},\n        },\n      },\n      included: [\n        ...baseTemplate.content.included,\n        ...includedLabels,\n        ...includedCells,\n        ...includedViews,\n        ...includedVariables,\n      ],\n    },\n  }\n\n  return template\n}\n\nexport const templateToExport = (template: ITemplate): DocumentCreate => {\n  const pickedTemplate = pick(template, ['meta', 'content'])\n  const labelsArray = template.labels.map(l => l.name)\n  const templateWithLabels = {...pickedTemplate, labels: labelsArray}\n  return templateWithLabels\n}\n\nexport const addOrgIDToTemplate = (\n  template: DocumentCreate,\n  orgID: string\n): DocumentCreate => {\n  return {...template, orgID}\n}\n","import _ from 'lodash'\nimport {fastMap, fastReduce, fastFilter} from 'src/utils/fast'\n\nimport {CELL_HORIZONTAL_PADDING} from 'src/shared/constants/tableGraph'\nimport {DEFAULT_TIME_FIELD, FORMAT_OPTIONS} from 'src/dashboards/constants'\nimport {DEFAULT_TIME_FORMAT} from 'src/shared/constants'\n\nimport {\n  SortOptions,\n  FieldOption,\n  TableOptions,\n  DecimalPlaces,\n} from 'src/types/dashboards'\n\nimport {FluxTable} from 'src/types'\n\nconst calculateSize = (message: string): number => {\n  return message.length * 7\n}\n\nexport interface ColumnWidths {\n  totalWidths: number\n  widths: {[x: string]: number}\n}\n\nexport interface TransformTableDataReturnType {\n  transformedData: string[][]\n  sortedTimeVals: string[]\n  columnWidths: ColumnWidths\n  resolvedFieldOptions: FieldOption[]\n  sortOptions: SortOptions\n}\n\nexport enum ErrorTypes {\n  MetaQueryCombo = 'MetaQueryCombo',\n  GeneralError = 'Error',\n}\n\nexport const getInvalidDataMessage = (errorType: ErrorTypes): string => {\n  switch (errorType) {\n    case ErrorTypes.MetaQueryCombo:\n      return 'Cannot display data for meta queries mixed with data queries'\n    default:\n      return null\n  }\n}\n\nconst calculateTimeColumnWidth = (timeFormat: string): number => {\n  // Force usage of longest format names for ideal measurement\n  timeFormat = _.replace(timeFormat, 'MMMM', 'September')\n  timeFormat = _.replace(timeFormat, 'dddd', 'Wednesday')\n  timeFormat = _.replace(timeFormat, 'A', 'AM')\n  timeFormat = _.replace(timeFormat, 'h', '00')\n  timeFormat = _.replace(timeFormat, 'X', '1522286058')\n  timeFormat = _.replace(timeFormat, 'x', '1536106867461')\n\n  const width = calculateSize(timeFormat)\n\n  return width + CELL_HORIZONTAL_PADDING\n}\n\nconst updateMaxWidths = (\n  row: string[],\n  maxColumnWidths: ColumnWidths,\n  topRow: string[],\n  isTopRow: boolean,\n  fieldOptions: FieldOption[],\n  timeFormatWidth: number,\n  verticalTimeAxis: boolean,\n  decimalPlaces: DecimalPlaces\n): ColumnWidths => {\n  const maxWidths = fastReduce<string>(\n    row,\n    (acc: ColumnWidths, col: string, c: number) => {\n      const foundField = fieldOptions.find(field => field.internalName === col)\n\n      let colValue: string | number = `${col}`\n      if (foundField && foundField.displayName) {\n        colValue = foundField.displayName\n      } else if (!isNaN(+col) && decimalPlaces.isEnforced) {\n        colValue = (+col).toFixed(decimalPlaces.digits)\n      }\n\n      const columnLabel = topRow[c]\n      const isTimeColumn = columnLabel === DEFAULT_TIME_FIELD.internalName\n\n      const isTimeRow = topRow[0] === DEFAULT_TIME_FIELD.internalName\n\n      const useTimeWidth =\n        (isTimeColumn && verticalTimeAxis && !isTopRow) ||\n        (!verticalTimeAxis && isTopRow && isTimeRow && c !== 0)\n\n      const currentWidth = useTimeWidth\n        ? timeFormatWidth\n        : calculateSize(colValue.toString().trim()) + CELL_HORIZONTAL_PADDING\n\n      const {widths: Widths} = maxColumnWidths\n      const maxWidth = _.get(Widths, `${columnLabel}`, 0)\n\n      if (isTopRow || currentWidth > maxWidth) {\n        acc.widths[columnLabel] = currentWidth\n        acc.totalWidths += currentWidth - maxWidth\n      }\n\n      return acc\n    },\n    {...maxColumnWidths}\n  )\n\n  return maxWidths\n}\n\nexport const resolveFieldOptions = (\n  existingFieldOptions: FieldOption[],\n  labels: string[]\n): FieldOption[] => {\n  let astNames = []\n\n  labels.forEach(label => {\n    const field: FieldOption = {\n      internalName: label,\n      displayName: '',\n      visible: true,\n    }\n    astNames = [...astNames, field]\n  })\n\n  const intersection = existingFieldOptions.filter(f => {\n    return astNames.find(a => a.internalName === f.internalName)\n  })\n\n  const newFields = astNames.filter(a => {\n    return !existingFieldOptions.find(f => f.internalName === a.internalName)\n  })\n\n  return [...intersection, ...newFields]\n}\n\nexport const calculateColumnWidths = (\n  data: string[][],\n  fieldOptions: FieldOption[],\n  timeFormat: string,\n  verticalTimeAxis: boolean,\n  decimalPlaces: DecimalPlaces\n): ColumnWidths => {\n  const timeFormatWidth = calculateTimeColumnWidth(\n    timeFormat === '' ? DEFAULT_TIME_FORMAT : timeFormat\n  )\n\n  return fastReduce<string[], ColumnWidths>(\n    data,\n    (acc: ColumnWidths, row: string[], r: number) => {\n      return updateMaxWidths(\n        row,\n        acc,\n        data[0],\n        r === 0,\n        fieldOptions,\n        timeFormatWidth,\n        verticalTimeAxis,\n        decimalPlaces\n      )\n    },\n    {widths: {}, totalWidths: 0}\n  )\n}\n\nexport const filterTableColumns = (\n  data: string[][],\n  fieldOptions: FieldOption[]\n): string[][] => {\n  const visibility = {}\n  const filteredData = fastMap<string[], string[]>(data, (row, i) => {\n    return fastFilter<string>(row, (col, j) => {\n      if (i === 0) {\n        const foundField = fieldOptions.find(\n          field => field.internalName === col\n        )\n        visibility[j] = foundField ? foundField.visible : true\n      }\n      return visibility[j]\n    })\n  })\n  return filteredData[0].length ? filteredData : [[]]\n}\n\nexport const orderTableColumns = (\n  data: string[][],\n  fieldOptions: FieldOption[]\n): string[][] => {\n  const fieldsSortOrder = fieldOptions.map(fieldOption => {\n    return _.findIndex(data[0], dataLabel => {\n      return dataLabel === fieldOption.internalName\n    })\n  })\n\n  const filteredFieldSortOrder = fieldsSortOrder.filter(f => f !== -1)\n\n  const orderedData = fastMap<string[], string[]>(\n    data,\n    (row: string[]): string[] => {\n      return row.map((__, j, arr) => arr[filteredFieldSortOrder[j]])\n    }\n  )\n  return orderedData[0].length ? orderedData : [[]]\n}\n\nexport const sortTableData = (\n  data: string[][],\n  sort: SortOptions\n): {sortedData: string[][]; sortedTimeVals: string[]} => {\n  const headerSet = new Set(data[0])\n\n  let sortIndex = 0\n\n  if (headerSet.has(sort.field)) {\n    sortIndex = _.indexOf(data[0], sort.field)\n  }\n\n  const dataValues = _.drop(data, 1)\n  const sortedData = [\n    data[0],\n    ..._.orderBy<string[][]>(\n      dataValues,\n      row => {\n        const sortedValue = row[sortIndex]\n        if (isNaN(Number(sortedValue))) {\n          return sortedValue\n        }\n        return Number(sortedValue)\n      },\n      [sort.direction]\n    ),\n  ] as string[][]\n\n  const sortedTimeVals = fastMap<string[], string>(\n    sortedData,\n    (r: string[]): string => r[sortIndex]\n  )\n  return {sortedData, sortedTimeVals}\n}\n\nexport const excludeNoisyColumns = (data: string[][]): string[][] => {\n  const IGNORED_COLUMNS = ['', 'result', 'table']\n\n  const header = data[0]\n  const ignoredIndices = IGNORED_COLUMNS.map(name => header.indexOf(name))\n\n  const excludedData = data.map(row => {\n    return row.filter((__, i) => !ignoredIndices.includes(i))\n  })\n\n  return excludedData\n}\n\nexport const transformTableData = (\n  data: string[][],\n  sortOptions: SortOptions,\n  fieldOptions: FieldOption[],\n  tableOptions: TableOptions,\n  timeFormat: string,\n  decimalPlaces: DecimalPlaces\n): TransformTableDataReturnType => {\n  const {verticalTimeAxis} = tableOptions\n\n  const excludedData = excludeNoisyColumns(data)\n\n  const resolvedFieldOptions = resolveFieldOptions(\n    fieldOptions,\n    excludedData[0]\n  )\n\n  const {sortedData, sortedTimeVals} = sortTableData(excludedData, sortOptions)\n\n  const filteredData = filterTableColumns(sortedData, resolvedFieldOptions)\n\n  const orderedData = orderTableColumns(filteredData, resolvedFieldOptions)\n\n  const transformedData = verticalTimeAxis ? orderedData : _.unzip(orderedData)\n\n  const columnWidths = calculateColumnWidths(\n    transformedData,\n    resolvedFieldOptions,\n    timeFormat,\n    verticalTimeAxis,\n    decimalPlaces\n  )\n\n  return {\n    transformedData,\n    sortedTimeVals,\n    columnWidths,\n    resolvedFieldOptions,\n    sortOptions,\n  }\n}\n\n/*\n  Checks whether an input value of arbitrary type can be parsed into a\n  number. Note that there are two different `isNaN` checks, since\n\n  - `Number('')` is 0\n  - `Number('02abc')` is NaN\n  - `parseFloat('')` is NaN\n  - `parseFloat('02abc')` is 2\n\n*/\nexport const isNumerical = (x: any): boolean =>\n  !isNaN(Number(x)) && !isNaN(parseFloat(x))\n\nexport const findHoverTimeIndex = (\n  sortedTimeVals: string[],\n  hoverTime: number\n) => {\n  if (sortedTimeVals.length < 2) {\n    // first value is \"_time\" header\n    return -1\n  }\n\n  const firstDiff = getUnixISODiff(hoverTime, sortedTimeVals[1]) // sortedTimeVals[0] is \"_time\"\n  const hoverTimeFound = fastReduce<string, {index: number; diff: number}>(\n    sortedTimeVals,\n    (acc, currentTime, index) => {\n      const thisDiff = getUnixISODiff(hoverTime, currentTime)\n      if (thisDiff < acc.diff) {\n        return {index, diff: thisDiff}\n      }\n      return acc\n    },\n    {index: 1, diff: firstDiff}\n  )\n\n  return hoverTimeFound.index\n}\n\n/**\n * Get absolute mili seconds between a unix ms time number and iso utc string\n *\n * @param unixMs\n * @param isoTime\n */\nexport const getUnixISODiff = (unixMs: number, isoTime: string | number) => {\n  return Math.abs(unixMs - new Date(isoTime).valueOf())\n}\n\nexport const findTableNameHeaders = (tables: FluxTable[], name: string) => {\n  const foundTable = tables.find(t => t.name === name)\n\n  return _.get(foundTable, 'data.0', [])\n}\n\nexport const resolveTimeFormat = (timeFormat: string) => {\n  if (FORMAT_OPTIONS.find(d => d.text === timeFormat)) {\n    return timeFormat\n  }\n\n  return DEFAULT_TIME_FORMAT\n}\n","export const incrementCloneName = (\n  namesList: string[],\n  cloneName: string\n): string => {\n  const root = cloneName.replace(/\\s\\(clone\\s(\\d)+\\)/g, '').replace(/\\)/, '')\n\n  const filteredNames = namesList.filter(n => n.includes(root))\n\n  const highestNumberedClone = filteredNames.reduce((acc, name) => {\n    if (name.match(/\\(clone(\\s|\\d)+\\)/)) {\n      const strippedName = name\n        .replace(root, '')\n        .replace(/\\(clone/, '')\n        .replace(/\\)/, '')\n\n      const cloneNumber = Number(strippedName)\n\n      return cloneNumber >= acc ? cloneNumber : acc\n    }\n\n    return acc\n  }, 0)\n\n  if (highestNumberedClone) {\n    const newCloneNumber = highestNumberedClone + 1\n    return `${cloneName.replace(\n      /\\(clone\\s(\\d)+\\)/,\n      ''\n    )} (clone ${newCloneNumber})`\n  }\n\n  return `${cloneName} (clone 1)`\n}\n","// Libraries\nimport {normalize} from 'normalizr'\nimport {Dispatch} from 'react'\n\n// API\nimport * as authAPI from 'src/authorizations/apis'\nimport * as api from 'src/client'\n\n// Schemas\nimport {authSchema, arrayOfAuths} from 'src/schemas/authorizations'\n\n// Actions\nimport {\n  Action,\n  addAuthorization,\n  setAuthorizations,\n  removeAuthorization,\n} from 'src/authorizations/actions/creators'\nimport {notify} from 'src/shared/actions/notifications'\n\n// Constants\nimport {\n  authorizationsGetFailed,\n  authorizationCreateFailed,\n  authorizationUpdateFailed,\n  authorizationDeleteFailed,\n  authorizationCreateSuccess,\n  authorizationDeleteSuccess,\n  authorizationUpdateSuccess,\n} from 'src/shared/copy/notifications'\n\n// Types\nimport {\n  RemoteDataState,\n  GetState,\n  NotificationAction,\n  Authorization,\n  AuthEntities,\n} from 'src/types'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ntype GetAuthorizations = (\n  dispatch: Dispatch<Action | NotificationAction>,\n  getState: GetState\n) => Promise<void>\nexport const getAuthorizations = () => async (\n  dispatch: Dispatch<Action | NotificationAction>,\n  getState: GetState\n) => {\n  try {\n    dispatch(setAuthorizations(RemoteDataState.Loading))\n    const org = getOrg(getState())\n    const resp = await api.getAuthorizations({query: {orgID: org.id}})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const auths = normalize<Authorization, AuthEntities, string[]>(\n      resp.data.authorizations,\n      arrayOfAuths\n    )\n\n    dispatch(setAuthorizations(RemoteDataState.Done, auths))\n  } catch (error) {\n    console.error(error)\n    dispatch(setAuthorizations(RemoteDataState.Error))\n    dispatch(notify(authorizationsGetFailed()))\n  }\n}\n\nexport const getAuthorization = async (authID: string) => {\n  try {\n    const resp = await api.getAuthorization({authID})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    return resp.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const createAuthorization = (auth: Authorization) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    const resp = await authAPI.createAuthorization(auth)\n\n    const newAuth = normalize<Authorization, AuthEntities, string>(\n      resp,\n      authSchema\n    )\n\n    dispatch(addAuthorization(newAuth))\n    dispatch(notify(authorizationCreateSuccess()))\n  } catch (error) {\n    console.error(error.message)\n    dispatch(notify(authorizationCreateFailed()))\n    throw error\n  }\n}\n\nexport const updateAuthorization = (authorization: Authorization) => async (\n  dispatch: Dispatch<Action | NotificationAction | GetAuthorizations>\n) => {\n  try {\n    const resp = await api.patchAuthorization({\n      authID: authorization.id,\n      data: authorization,\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(getAuthorizations())\n    dispatch(notify(authorizationUpdateSuccess()))\n  } catch (e) {\n    console.error(e)\n    dispatch(notify(authorizationUpdateFailed(authorization.id)))\n  }\n}\n\nexport const deleteAuthorization = (id: string, name: string = '') => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    const resp = await api.deleteAuthorization({authID: id})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeAuthorization(id))\n    dispatch(notify(authorizationDeleteSuccess()))\n  } catch (e) {\n    console.error(e)\n    dispatch(notify(authorizationDeleteFailed(name)))\n  }\n}\n","// Libraries\nimport {Dispatch} from 'react'\nimport {normalize} from 'normalizr'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\n\n// APIs\nimport * as api from 'src/client'\n\n// Schemas\nimport {ruleSchema, arrayOfRules} from 'src/schemas/rules'\nimport {labelSchema} from 'src/schemas/labels'\n\n// Actions\nimport {\n  notify,\n  Action as NotificationAction,\n} from 'src/shared/actions/notifications'\nimport {\n  Action,\n  setRules,\n  setRule,\n  setCurrentRule,\n  removeRule,\n  removeLabelFromRule,\n} from 'src/notifications/rules/actions/creators'\nimport {checkRulesLimits} from 'src/cloud/actions/limits'\nimport {setLabelOnResource} from 'src/labels/actions/creators'\n\n// Utils\nimport {draftRuleToPostRule} from 'src/notifications/rules/utils'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\n\n// Types\nimport {\n  NotificationRuleUpdate,\n  GetState,\n  NotificationRuleDraft,\n  Label,\n  LabelEntities,\n  RemoteDataState,\n  NotificationRule,\n  RuleEntities,\n  ResourceType,\n} from 'src/types'\nimport {incrementCloneName} from 'src/utils/naming'\n\nexport const getNotificationRules = () => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkRulesLimits>\n  >,\n  getState: GetState\n) => {\n  try {\n    dispatch(setRules(RemoteDataState.Loading))\n    const {id: orgID} = getOrg(getState())\n    const resp = await api.getNotificationRules({query: {orgID}})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const rules = normalize<NotificationRule, RuleEntities, string[]>(\n      resp.data.notificationRules,\n      arrayOfRules\n    )\n\n    dispatch(setRules(RemoteDataState.Done, rules))\n    dispatch(checkRulesLimits())\n  } catch (error) {\n    console.error(error)\n    dispatch(setRules(RemoteDataState.Error))\n    dispatch(notify(copy.getNotificationRulesFailed(error.message)))\n  }\n}\n\nexport const getCurrentRule = (ruleID: string) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    dispatch(setCurrentRule(RemoteDataState.Loading))\n\n    const resp = await api.getNotificationRule({ruleID})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const rule = normalize<NotificationRule, RuleEntities, string>(\n      resp.data,\n      ruleSchema\n    )\n\n    dispatch(setCurrentRule(RemoteDataState.Done, rule))\n  } catch (error) {\n    console.error(error)\n    dispatch(setCurrentRule(RemoteDataState.Error))\n    dispatch(notify(copy.getNotificationRuleFailed(error.message)))\n  }\n}\n\nexport const createRule = (rule: NotificationRuleDraft) => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkRulesLimits>\n  >\n) => {\n  const data = draftRuleToPostRule(rule)\n\n  try {\n    const resp = await api.postNotificationRule({data})\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const rule = normalize<NotificationRule, RuleEntities, string>(\n      resp.data,\n      ruleSchema\n    )\n\n    dispatch(setRule(resp.data.id, RemoteDataState.Done, rule))\n    dispatch(checkRulesLimits())\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const updateRule = (rule: NotificationRuleDraft) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  if (rule.offset == '') {\n    throw new Error('Notification Rule offset field can not be empty')\n  }\n  if (rule.every == '') {\n    throw new Error('Notification Rule every field can not be empty')\n  }\n\n  dispatch(setRule(rule.id, RemoteDataState.Loading))\n\n  try {\n    const resp = await api.putNotificationRule({\n      ruleID: rule.id,\n      data: draftRuleToPostRule(rule),\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const normRule = normalize<NotificationRule, RuleEntities, string>(\n      resp.data,\n      ruleSchema\n    )\n\n    dispatch(setRule(rule.id, RemoteDataState.Done, normRule))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const updateRuleProperties = (\n  ruleID: string,\n  properties: NotificationRuleUpdate\n) => async (dispatch: Dispatch<Action | NotificationAction>) => {\n  try {\n    const resp = await api.patchNotificationRule({\n      ruleID,\n      data: properties,\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const rule = normalize<NotificationRule, RuleEntities, string>(\n      resp.data,\n      ruleSchema\n    )\n\n    dispatch(setRule(ruleID, RemoteDataState.Done, rule))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const deleteRule = (ruleID: string) => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkRulesLimits>\n  >\n) => {\n  try {\n    const resp = await api.deleteNotificationRule({ruleID})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeRule(ruleID))\n    dispatch(checkRulesLimits())\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const addRuleLabel = (ruleID: string, label: Label) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    const resp = await api.postNotificationRulesLabel({\n      ruleID,\n      data: {labelID: label.id},\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const normLabel = normalize<Label, LabelEntities, string>(\n      resp.data.label,\n      labelSchema\n    )\n\n    dispatch(setLabelOnResource(ruleID, normLabel))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const deleteRuleLabel = (ruleID: string, labelID: string) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    const resp = await api.deleteNotificationRulesLabel({\n      ruleID,\n      labelID,\n    })\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeLabelFromRule(ruleID, labelID))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const cloneRule = (draftRule: NotificationRuleDraft) => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkRulesLimits>\n  >,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const state = getState()\n    const rules = getAll<NotificationRule>(\n      state,\n      ResourceType.NotificationRules\n    )\n\n    const rule = draftRuleToPostRule(draftRule)\n\n    const allRuleNames = rules.map(r => r.name)\n\n    const clonedName = incrementCloneName(allRuleNames, rule.name)\n\n    const resp = await api.postNotificationRule({\n      data: {...rule, name: clonedName},\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const normRule = normalize<NotificationRule, RuleEntities, string>(\n      resp.data,\n      ruleSchema\n    )\n\n    dispatch(setRule(resp.data.id, RemoteDataState.Done, normRule))\n    dispatch(checkRulesLimits())\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.createRuleFailed(error.message)))\n  }\n}\n","import _ from 'lodash'\nimport {\n  Config,\n  NINETEEN_EIGHTY_FOUR,\n  ATLANTIS,\n  DO_ANDROIDS_DREAM,\n  DELOREAN,\n  CTHULHU,\n  ECTOPLASM,\n  T_MAX_400_FILM,\n} from '@influxdata/giraffe'\nimport {InfluxColors} from '@influxdata/clockface'\n\nimport {AutoRefreshStatus} from 'src/types'\n\nexport const DEFAULT_TIME_FORMAT = 'YYYY-MM-DD HH:mm:ss ZZ'\n\nexport const DROPDOWN_MENU_MAX_HEIGHT = 240\n\nexport const PRESENTATION_MODE_ANIMATION_DELAY = 0 // In milliseconds.\n\nexport const HTTP_UNAUTHORIZED = 401\nexport const HTTP_FORBIDDEN = 403\nexport const HTTP_NOT_FOUND = 404\n\nexport const AUTOREFRESH_DEFAULT_INTERVAL = 0 // in milliseconds\nexport const AUTOREFRESH_DEFAULT_STATUS = AutoRefreshStatus.Paused\nexport const AUTOREFRESH_DEFAULT = {\n  status: AUTOREFRESH_DEFAULT_STATUS,\n  interval: AUTOREFRESH_DEFAULT_INTERVAL,\n}\n\nexport const LAYOUT_MARGIN = 4\nexport const DASHBOARD_LAYOUT_ROW_HEIGHT = 83.5\n\nexport const NOTIFICATION_TRANSITION = 250\nexport const FIVE_SECONDS = 5000\nexport const TEN_SECONDS = 10000\nexport const INFINITE = -1\n\nexport const HOMEPAGE_PATHNAME = 'me'\n\n// Resizer && Threesizer\nexport const HANDLE_VERTICAL = 'vertical'\nexport const HANDLE_HORIZONTAL = 'horizontal'\nexport const HANDLE_NONE = 'none'\nexport const HANDLE_PIXELS = 20\nexport const MIN_HANDLE_PIXELS = 20\nexport const MAX_SIZE = 1\nexport const MIN_SIZE = 0\n\nexport const VERSION = process.env.npm_package_version\nexport const GIT_SHA = process.env.GIT_SHA\nexport const BASE_PATH = process.env.STATIC_PREFIX\nexport const API_BASE_PATH = process.env.API_PREFIX\n\nexport const CLOUD = !!process.env.CLOUD_URL\nexport const CLOUD_SIGNIN_PATHNAME = '/api/v2/signin'\nexport const CLOUD_BILLING_VISIBLE = CLOUD\nexport const CLOUD_URL = process.env.CLOUD_URL\nexport const CLOUD_CHECKOUT_PATH = '/checkout'\nexport const CLOUD_BILLING_PATH = '/billing'\nexport const CLOUD_USAGE_PATH = '/usage'\nexport const CLOUD_LOGOUT_PATH = '/logout'\nexport const CLOUD_USERS_PATH = '/users/index'\n\nexport const FLUX_RESPONSE_BYTES_LIMIT = CLOUD\n  ? 10 * 1024 * 1024 // 10 MiB\n  : 100 * 1024 * 1024 // 100 MiB\n\nexport const VIS_SIG_DIGITS = 4\n\nexport const VIS_THEME: Partial<Config> = {\n  axisColor: InfluxColors.Onyx,\n  gridColor: InfluxColors.Onyx,\n  gridOpacity: 1,\n  tickFont: 'bold 10px Roboto',\n  tickFontColor: InfluxColors.Chromium,\n  legendFont: '12px Roboto',\n  legendFontColor: InfluxColors.Wolf,\n  legendFontBrightColor: InfluxColors.Chromium,\n  legendBackgroundColor: InfluxColors.Raven,\n  legendBorder: `1px solid ${InfluxColors.Kevlar}`,\n  legendCrosshairColor: InfluxColors.Smoke,\n}\n\nexport const GIRAFFE_COLOR_SCHEMES = [\n  {name: 'Nineteen Eighty Four', colors: NINETEEN_EIGHTY_FOUR},\n  {name: 'Atlantis', colors: ATLANTIS},\n  {name: 'Do Androids Dream of Electric Sheep?', colors: DO_ANDROIDS_DREAM},\n  {name: 'Delorean', colors: DELOREAN},\n  {name: 'Cthulhu', colors: CTHULHU},\n  {name: 'Ectoplasm', colors: ECTOPLASM},\n  {name: 'T-MAX 400 Film', colors: T_MAX_400_FILM},\n]\n","import {Notification} from 'src/types'\n\nexport type Action =\n  | PublishNotificationAction\n  | DismissNotificationAction\n  | DismissAllNotificationsAction\n\nexport interface PublishNotificationAction {\n  type: 'PUBLISH_NOTIFICATION'\n  payload: {\n    notification: Notification\n  }\n}\nexport const notify = (\n  notification: Notification\n): PublishNotificationAction => ({\n  type: 'PUBLISH_NOTIFICATION',\n  payload: {notification},\n})\n\nexport interface DismissNotificationAction {\n  type: 'DISMISS_NOTIFICATION'\n  payload: {\n    id: string\n  }\n}\nexport const dismissNotification = (id: string): DismissNotificationAction => ({\n  type: 'DISMISS_NOTIFICATION',\n  payload: {id},\n})\n\nexport interface DismissAllNotificationsAction {\n  type: 'DISMISS_ALL_NOTIFICATIONS'\n}\nexport const dismissAllNotifications = (): DismissAllNotificationsAction => ({\n  type: 'DISMISS_ALL_NOTIFICATIONS',\n})\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Decorator\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {Notification} from 'src/types'\n\n// Components\nimport FancyScrollbar from 'src/shared/components/fancy_scrollbar/FancyScrollbar'\nimport CopyButton from 'src/shared/components/CopyButton'\n\nexport interface Props {\n  copyText: string\n  onCopyText?: (text: string, status: boolean) => Notification\n  testID?: string\n  label: string\n}\n\n@ErrorHandling\nclass CodeSnippet extends PureComponent<Props> {\n  public static defaultProps = {\n    label: 'Code Snippet',\n  }\n\n  public render() {\n    const {copyText, label, onCopyText} = this.props\n    const testID = this.props.testID || 'code-snippet'\n\n    return (\n      <div className=\"code-snippet\" data-testid={testID}>\n        <FancyScrollbar\n          autoHide={false}\n          autoHeight={true}\n          maxHeight={400}\n          className=\"code-snippet--scroll\"\n        >\n          <div className=\"code-snippet--text\">\n            <pre>\n              <code>{copyText}</code>\n            </pre>\n          </div>\n        </FancyScrollbar>\n        <div className=\"code-snippet--footer\">\n          <CopyButton\n            textToCopy={copyText}\n            onCopyText={onCopyText}\n            contentName=\"Script\"\n          />\n          <label className=\"code-snippet--label\">{label}</label>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CodeSnippet\n","export const QUICKSTART_DASHBOARD_NAME = 'InfluxDB 2.0 OSS Metrics'\n","// Libraries\nimport {binaryPrefixFormatter} from '@influxdata/giraffe'\n\n// Types\nimport {Notification} from 'src/types'\nimport {NotificationStyle} from 'src/types/notifications'\n\n// Constants\nimport {FIVE_SECONDS, TEN_SECONDS, INFINITE} from 'src/shared/constants/index'\nimport {QUICKSTART_SCRAPER_TARGET_URL} from 'src/dataLoaders/constants/pluginConfigs'\nimport {QUICKSTART_DASHBOARD_NAME} from 'src/onboarding/constants/index'\n\nconst bytesFormatter = binaryPrefixFormatter({\n  suffix: 'B',\n  significantDigits: 2,\n  trimZeros: true,\n})\n\ntype NotificationExcludingMessage = Pick<\n  Notification,\n  Exclude<keyof Notification, 'message'>\n>\n\nconst defaultErrorNotification: NotificationExcludingMessage = {\n  style: NotificationStyle.Error,\n  icon: 'alert-triangle',\n  duration: TEN_SECONDS,\n}\n\nconst defaultSuccessNotification: NotificationExcludingMessage = {\n  style: NotificationStyle.Success,\n  icon: 'checkmark',\n  duration: FIVE_SECONDS,\n}\n\nconst defaultDeletionNotification: NotificationExcludingMessage = {\n  style: NotificationStyle.Primary,\n  icon: 'trash',\n  duration: FIVE_SECONDS,\n}\n\n//  Misc Notifications\n//  ----------------------------------------------------------------------------\n\nexport const newVersion = (version: string): Notification => ({\n  style: NotificationStyle.Info,\n  icon: 'cubo-uniform',\n  duration: INFINITE,\n  message: `Welcome to the latest Chronograf${version}. Local settings cleared.`,\n})\n\nexport const loadLocalSettingsFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Loading local settings failed: ${error}`,\n})\n\nexport const presentationMode = (): Notification => ({\n  style: NotificationStyle.Primary,\n  icon: 'expand-b',\n  duration: 7500,\n  message: 'Press ESC to exit Presentation Mode.',\n})\n\nexport const sessionTimedOut = (): Notification => ({\n  style: NotificationStyle.Primary,\n  icon: 'triangle',\n  duration: INFINITE,\n  message: 'Your session has timed out. Log in again to continue.',\n})\n\nexport const resultTooLarge = (bytesRead: number): Notification => ({\n  style: NotificationStyle.Error,\n  icon: 'triangle',\n  duration: FIVE_SECONDS,\n  message: `Large response truncated to first ${bytesFormatter(bytesRead)}`,\n})\n\n// Onboarding notifications\nexport const SetupSuccess: Notification = {\n  ...defaultSuccessNotification,\n  message: 'Initial user details have been successfully set',\n}\n\nexport const SetupError = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Could not set up admin user: ${message}`,\n})\n\nexport const SigninError: Notification = {\n  ...defaultErrorNotification,\n  message: `Could not sign in`,\n}\n\nexport const QuickstartScraperCreationSuccess: Notification = {\n  ...defaultSuccessNotification,\n  message: `The InfluxDB Scraper has been configured for ${QUICKSTART_SCRAPER_TARGET_URL}`,\n}\n\nexport const QuickstartScraperCreationError: Notification = {\n  ...defaultErrorNotification,\n  message: `Failed to configure InfluxDB Scraper`,\n}\n\nexport const QuickstartDashboardCreationSuccess: Notification = {\n  ...defaultSuccessNotification,\n  message: `The ${QUICKSTART_DASHBOARD_NAME} Dashboard has been created`,\n}\n\nexport const QuickstartDashboardCreationError: Notification = {\n  ...defaultErrorNotification,\n  message: `Failed to create ${QUICKSTART_DASHBOARD_NAME} Dashboard`,\n}\n\nexport const TelegrafConfigCreationSuccess: Notification = {\n  ...defaultSuccessNotification,\n  message: `Your configurations have been saved`,\n}\n\nexport const TelegrafConfigCreationError: Notification = {\n  ...defaultErrorNotification,\n  message: `Failed to save configurations`,\n}\n\n//  Task Notifications\n//  ----------------------------------------------------------------------------\nexport const addTaskLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to add label to task',\n})\n\nexport const removeTaskLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to remove label from task',\n})\n\n//  Dashboard Notifications\n\nexport const dashboardGetFailed = (\n  dashboardID: string,\n  error: string\n): Notification => ({\n  ...defaultErrorNotification,\n  icon: 'dash-h',\n  message: `Failed to load dashboard with id \"${dashboardID}\": ${error}`,\n})\n\nexport const dashboardUpdateFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  icon: 'dash-h',\n  message: 'Could not update dashboard',\n})\n\nexport const dashboardDeleted = (name: string): Notification => ({\n  ...defaultSuccessNotification,\n  icon: 'dash-h',\n  message: `Dashboard ${name} deleted successfully.`,\n})\n\nexport const dashboardCreateFailed = () => ({\n  ...defaultErrorNotification,\n  message: 'Failed to create dashboard.',\n})\n\nexport const dashboardDeleteFailed = (\n  name: string,\n  errorMessage: string\n): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete Dashboard ${name}: ${errorMessage}.`,\n})\n\nexport const dashboardCopySuccess = () => ({\n  ...defaultSuccessNotification,\n  message: 'Copied dashboard to the clipboard!',\n})\n\nexport const dashboardCopyFailed = () => ({\n  ...defaultErrorNotification,\n  message: 'Failed to copy dashboard.',\n})\n\nexport const cellAdded = (\n  cellName?: string,\n  dashboardName?: string\n): Notification => ({\n  ...defaultSuccessNotification,\n  icon: 'dash-h',\n  message: `Added new cell ${cellName + ' '}to dashboard ${dashboardName}`,\n})\n\nexport const cellAddFailed = (\n  cellName?: string,\n  dashboardName?: string\n): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to add cell ${cellName + ' '}to dashboard ${dashboardName}`,\n})\n\nexport const cellUpdateFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update cell`,\n})\n\nexport const cellDeleted = (): Notification => ({\n  ...defaultDeletionNotification,\n  icon: 'dash-h',\n  duration: 1900,\n  message: `Cell deleted from dashboard.`,\n})\n\nexport const addDashboardLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to add label to dashboard',\n})\n\nexport const removedDashboardLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to remove label from dashboard',\n})\n\n// Variables & URL Queries\nexport const invalidTimeRangeValueInURLQuery = (): Notification => ({\n  ...defaultErrorNotification,\n  icon: 'cube',\n  message: `Invalid URL query value supplied for lower or upper time range.`,\n})\n\nexport const getVariablesFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to fetch variables',\n})\n\nexport const getVariableFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to fetch variable',\n})\n\nexport const createVariableFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  icon: 'cube',\n  message: `Failed to create variable: ${error}`,\n})\n\nexport const createVariableSuccess = (name: string): Notification => ({\n  ...defaultSuccessNotification,\n  icon: 'cube',\n  message: `Successfully created new variable: ${name}.`,\n})\n\nexport const deleteVariableFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  icon: 'cube',\n  message: `Failed to delete variable: ${error}`,\n})\n\nexport const deleteVariableSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  icon: 'cube',\n  message: 'Successfully deleted the variable',\n})\n\nexport const updateVariableFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  icon: 'cube',\n  message: `Failed to update variable: ${error}`,\n})\n\nexport const updateVariableSuccess = (name: string): Notification => ({\n  ...defaultSuccessNotification,\n  icon: 'cube',\n  message: `Successfully updated variable: ${name}.`,\n})\n\nexport const copyToClipboardSuccess = (\n  text: string,\n  title: string = ''\n): Notification => ({\n  ...defaultSuccessNotification,\n  icon: 'dash-h',\n  type: 'copyToClipboardSuccess',\n  message: `${title} '${text}' has been copied to clipboard.`,\n})\n\nexport const copyToClipboardFailed = (\n  text: string,\n  title: string = ''\n): Notification => ({\n  ...defaultErrorNotification,\n  message: `${title}'${text}' was not copied to clipboard.`,\n})\n\n// Templates\nexport const addTemplateLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to add label to template',\n})\n\nexport const removeTemplateLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to remove label from template',\n})\n\nexport const TelegrafDashboardCreated = (configs: string[]): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Successfully created dashboards for telegraf plugin${\n    configs.length > 1 ? 's' : ''\n  }: ${configs.join(', ')}.`,\n})\n\nexport const TelegrafDashboardFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: `Could not create dashboards for one or more plugins`,\n})\n\nexport const importTaskSucceeded = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Successfully imported task.`,\n})\n\nexport const importTaskFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to import task: ${error}`,\n})\n\nexport const importDashboardSucceeded = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Successfully imported dashboard.`,\n})\n\nexport const importDashboardFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to import dashboard: ${error}`,\n})\n\nexport const importTemplateSucceeded = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Successfully imported template.`,\n})\n\nexport const importTemplateFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to import template: ${error}`,\n})\n\nexport const createTemplateFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to  resource as template: ${error}`,\n})\n\nexport const createResourceFromTemplateFailed = (\n  error: string\n): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to create from template: ${error}`,\n})\n\nexport const updateTemplateSucceeded = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Successfully updated template.`,\n})\n\nexport const updateTemplateFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update template: ${error}`,\n})\n\nexport const deleteTemplateFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete template: ${error}`,\n})\n\nexport const deleteTemplateSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Template was deleted successfully',\n})\n\nexport const cloneTemplateFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to clone template: ${error}`,\n})\n\nexport const cloneTemplateSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Template cloned successfully',\n})\n\nexport const resourceSavedAsTemplate = (\n  resourceName: string\n): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Successfully saved ${resourceName.toLowerCase()} as template.`,\n})\n\nexport const saveResourceAsTemplateFailed = (\n  resourceName: string,\n  error: string\n): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to save ${resourceName.toLowerCase()} as template: ${error}`,\n})\n\n// Labels\nexport const getLabelsFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to fetch labels',\n})\n\nexport const createLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to create label',\n})\n\nexport const updateLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to update label',\n})\n\nexport const deleteLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to delete label',\n})\n\n// Buckets\nexport const getBucketsFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to fetch buckets',\n})\n\nexport const getBucketFailed = (\n  bucketID: string,\n  error: string\n): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to fetch bucket with id ${bucketID}: ${error}`,\n})\n\n// Limits\nexport const readWriteCardinalityLimitReached = (\n  message: string\n): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to write data due to plan limits: ${message}`,\n  duration: FIVE_SECONDS,\n  type: 'readWriteCardinalityLimitReached',\n})\n\nexport const readLimitReached = (): Notification => ({\n  ...defaultErrorNotification,\n  message: `Exceeded query limits.`,\n  duration: FIVE_SECONDS,\n  type: 'readLimitReached',\n})\n\nexport const rateLimitReached = (secs?: number): Notification => {\n  const retryText = ` Please try again in ${secs} seconds`\n  return {\n    ...defaultErrorNotification,\n    message: `Exceeded rate limits.${secs ? retryText : ''} `,\n    duration: FIVE_SECONDS,\n    type: 'rateLimitReached',\n  }\n}\n\nexport const resourceLimitReached = (resourceName: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Oops. It looks like you have reached the maximum number of ${resourceName} allowed as part of your plan. If you would like to upgrade and remove this restriction, reach out to support@influxdata.com.`,\n  duration: FIVE_SECONDS,\n  type: 'resourceLimitReached',\n})\n\nexport const taskNotCreated = (additionalMessage: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to create new task: ${additionalMessage}`,\n})\n\nexport const taskCreatedSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'New task created successfully',\n})\n\nexport const taskNotFound = (additionalMessage: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to find task: ${additionalMessage}`,\n})\n\nexport const tasksFetchFailed = (additionalMessage: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to get tasks from server: ${additionalMessage}`,\n})\n\nexport const taskDeleteFailed = (additionalMessage: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete task: ${additionalMessage}`,\n})\n\nexport const taskDeleteSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Task was deleted successfully',\n})\n\nexport const taskCloneSuccess = (taskName: string): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Successfully cloned task ${taskName}`,\n})\n\nexport const taskCloneFailed = (\n  taskName: string,\n  additionalMessage: string\n): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to clone task ${taskName}: ${additionalMessage} `,\n})\n\nexport const taskUpdateFailed = (additionalMessage: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update task: ${additionalMessage}`,\n})\n\nexport const taskUpdateSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Task was updated successfully',\n})\n\nexport const taskImportFailed = (errorMessage: string): Notification => ({\n  ...defaultErrorNotification,\n  duration: INFINITE,\n  message: `Failed to import Task: ${errorMessage}.`,\n})\n\nexport const taskImportSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  duration: FIVE_SECONDS,\n  message: `Successfully imported task.`,\n})\n\nexport const taskRunSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  duration: FIVE_SECONDS,\n  message: 'Task scheduled successfully',\n})\n\nexport const taskRunFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  duration: FIVE_SECONDS,\n  message: `Failed to run task: ${error}`,\n})\n\nexport const taskGetFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  duration: FIVE_SECONDS,\n  message: `Failed to get runs: ${error}`,\n})\n\nexport const getTelegrafConfigFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to get telegraf config',\n})\n\nexport const savingNoteFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  duration: FIVE_SECONDS,\n  message: `Failed to save note: ${error}`,\n})\n\nexport const bucketDeleteFailed = (bucketName: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete bucket: \"${bucketName}\"`,\n})\n\nexport const predicateDeleteFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to delete data with predicate',\n})\n\nexport const setFilterKeyFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to set the filter key tag',\n})\n\nexport const setFilterValueFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to set the filter value tag',\n})\n\nexport const bucketCreateSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Bucket was successfully created',\n})\n\nexport const bucketCreateFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to create bucket: ${error}`,\n})\n\nexport const bucketUpdateSuccess = (bucketName: string): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Bucket \"${bucketName}\" was successfully updated`,\n})\n\nexport const predicateDeleteSucceeded = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Successfully deleted data with predicate!',\n})\n\nexport const bucketUpdateFailed = (error: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update bucket: \"${error}\"`,\n})\n\nexport const bucketRenameSuccess = (bucketName: string): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Bucket was successfully renamed \"${bucketName}\"`,\n})\n\nexport const bucketRenameFailed = (bucketName: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to rename bucket \"${bucketName}\"`,\n})\n\nexport const addBucketLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to add label to bucket',\n})\n\nexport const removeBucketLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to remove label from bucket',\n})\n\nexport const orgCreateSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Organization was successfully created',\n})\n\nexport const orgCreateFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to create organization',\n})\n\nexport const orgEditSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Organization was successfully updated',\n})\n\nexport const orgEditFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to update organization',\n})\n\nexport const orgRenameSuccess = (orgName: string): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Organization was successfully renamed \"${orgName}\"`,\n})\n\nexport const orgRenameFailed = (orgName): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update organization \"${orgName}\"`,\n})\n\nexport const scraperDeleteSuccess = (scraperName: string): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Scraper \"${scraperName}\" was successfully deleted`,\n})\n\nexport const scraperDeleteFailed = (scraperName: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete scraper: \"${scraperName}\"`,\n})\n\nexport const scraperCreateSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Scraper was created successfully',\n})\n\nexport const scraperCreateFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to create scraper',\n})\n\nexport const scraperUpdateSuccess = (scraperName: string): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Scraper \"${scraperName}\" was updated successfully`,\n})\n\nexport const scraperUpdateFailed = (scraperName: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update scraper: \"${scraperName}\"`,\n})\n\nexport const telegrafGetFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to get telegraf configs',\n})\n\nexport const telegrafCreateFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to create telegraf',\n})\n\nexport const telegrafUpdateFailed = (telegrafName: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update telegraf: \"${telegrafName}\"`,\n})\n\nexport const addTelegrafLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to add label to telegraf config`,\n})\n\nexport const removeTelegrafLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to remove label from telegraf config`,\n})\n\nexport const authorizationsGetFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to get tokens',\n})\n\nexport const authorizationCreateSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Token was created successfully',\n})\n\nexport const authorizationCreateFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to create tokens',\n})\n\nexport const authorizationUpdateSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Token was updated successfully',\n})\n\nexport const authorizationUpdateFailed = (desc: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update token: \"${desc}\"`,\n})\n\nexport const authorizationDeleteSuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Token was deleted successfully',\n})\n\nexport const authorizationDeleteFailed = (desc: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete token: \"${desc}\"`,\n})\n\nexport const authorizationCopySuccess = (): Notification => ({\n  ...defaultSuccessNotification,\n  message: 'Token has been copied to clipboard',\n})\n\nexport const authorizationCopyFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: 'Failed to copy token to clipboard',\n})\n\nexport const telegrafDeleteSuccess = (telegrafName: string): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Telegraf \"${telegrafName}\" was deleted successfully`,\n})\n\nexport const telegrafDeleteFailed = (telegrafName: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete telegraf: \"${telegrafName}\"`,\n})\n\nexport const memberAddSuccess = (username: string): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Member \"${username}\" was added successfully`,\n})\n\nexport const memberAddFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to add members: \"${message}\"`,\n})\n\nexport const memberRemoveSuccess = (memberName: string): Notification => ({\n  ...defaultSuccessNotification,\n  message: `Member \"${memberName}\" was removed successfully`,\n})\n\nexport const memberRemoveFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to remove members: \"${message}\"`,\n})\n\nexport const addVariableLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to add label to variables`,\n})\n\nexport const removeVariableLabelFailed = (): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to remove label from variables`,\n})\n\nexport const invalidMapType = (): Notification => ({\n  ...defaultErrorNotification,\n  message: `Variables of type map accept two comma separated values per line`,\n})\n\nexport const getChecksFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to get checks: ${message}`,\n})\n\nexport const getCheckFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to get check: ${message}`,\n})\n\nexport const getNotificationRulesFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to get notification rules: ${message}`,\n})\n\nexport const getNotificationRuleFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to get notification rule: ${message}`,\n})\n\nexport const createCheckFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to create check: ${message}`,\n})\n\nexport const updateCheckFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update check: ${message}`,\n})\n\nexport const deleteCheckFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete check: ${message}`,\n})\n\nexport const createRuleFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to create notification rule: ${message}`,\n})\n\nexport const updateRuleFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update notification rule: ${message}`,\n})\n\nexport const deleteRuleFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete notification rule: ${message}`,\n})\n\nexport const getViewFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to load resources for cell: ${message}`,\n})\n\nexport const getEndpointFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to get endpoint: ${message}`,\n})\n\nexport const getEndpointsFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to get endpoints: ${message}`,\n})\n\nexport const createEndpointFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to create endpoint: ${message}`,\n})\n\nexport const updateEndpointFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to update endpoint: ${message}`,\n})\n\nexport const deleteEndpointFailed = (message: string): Notification => ({\n  ...defaultErrorNotification,\n  message: `Failed to delete endpoint: ${message}`,\n})\n\nexport const invalidJSON = (message: string): Notification => {\n  return {\n    ...defaultErrorNotification,\n    message: message\n      ? `We couldn’t parse the JSON you entered because it failed with message:\\n'${message}'`\n      : 'We couldn’t parse the JSON you entered because it isn’t valid. Please check the formatting and try again.',\n  }\n}\n","import {NotificationEndpoint, PostNotificationEndpoint} from 'src/types'\n\nexport const toPostNotificationEndpoint = (\n  endpoint: NotificationEndpoint\n): PostNotificationEndpoint => {\n  return {\n    ...endpoint,\n    status: endpoint.activeStatus,\n  }\n}\n","// Libraries\nimport {Dispatch} from 'react'\nimport {normalize} from 'normalizr'\n\n// Actions\nimport {\n  notify,\n  Action as NotificationAction,\n} from 'src/shared/actions/notifications'\nimport {checkEndpointsLimits} from 'src/cloud/actions/limits'\nimport {\n  setEndpoints,\n  setEndpoint,\n  Action,\n  removeEndpoint,\n  removeLabelFromEndpoint,\n} from 'src/notifications/endpoints/actions/creators'\nimport {setLabelOnResource} from 'src/labels/actions/creators'\n\n// Schemas\nimport {endpointSchema, arrayOfEndpoints} from 'src/schemas/endpoints'\nimport {labelSchema} from 'src/schemas/labels'\n\n// APIs\nimport * as api from 'src/client'\n\n// Utils\nimport {incrementCloneName} from 'src/utils/naming'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\nimport {toPostNotificationEndpoint} from 'src/notifications/endpoints/utils'\nimport * as copy from 'src/shared/copy/notifications'\n\n// Types\nimport {\n  NotificationEndpoint,\n  GetState,\n  Label,\n  NotificationEndpointUpdate,\n  RemoteDataState,\n  EndpointEntities,\n  ResourceType,\n  LabelEntities,\n} from 'src/types'\n\nexport const getEndpoints = () => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkEndpointsLimits>\n  >,\n  getState: GetState\n) => {\n  try {\n    dispatch(setEndpoints(RemoteDataState.Loading))\n\n    const {id: orgID} = getOrg(getState())\n\n    const resp = await api.getNotificationEndpoints({\n      query: {orgID},\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const endpoints = normalize<\n      NotificationEndpoint,\n      EndpointEntities,\n      string[]\n    >(resp.data.notificationEndpoints, arrayOfEndpoints)\n\n    dispatch(setEndpoints(RemoteDataState.Done, endpoints))\n    dispatch(checkEndpointsLimits())\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.getEndpointsFailed(error.message)))\n    dispatch(setEndpoints(RemoteDataState.Error))\n  }\n}\n\nexport const createEndpoint = (endpoint: NotificationEndpoint) => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkEndpointsLimits>\n  >\n) => {\n  const data = toPostNotificationEndpoint(endpoint)\n\n  try {\n    const resp = await api.postNotificationEndpoint({data})\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const newEndpoint = normalize<\n      NotificationEndpoint,\n      EndpointEntities,\n      string\n    >(resp.data, endpointSchema)\n\n    dispatch(setEndpoint(resp.data.id, RemoteDataState.Done, newEndpoint))\n    dispatch(checkEndpointsLimits())\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const updateEndpoint = (endpoint: NotificationEndpoint) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  dispatch(setEndpoint(endpoint.id, RemoteDataState.Loading))\n  const data = toPostNotificationEndpoint(endpoint)\n\n  try {\n    const resp = await api.putNotificationEndpoint({\n      endpointID: endpoint.id,\n      data,\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const updates = normalize<NotificationEndpoint, EndpointEntities, string>(\n      resp.data,\n      endpointSchema\n    )\n\n    dispatch(setEndpoint(endpoint.id, RemoteDataState.Done, updates))\n  } catch (error) {\n    console.error(error)\n    dispatch(setEndpoint(endpoint.id, RemoteDataState.Error))\n  }\n}\n\nexport const updateEndpointProperties = (\n  endpointID: string,\n  properties: NotificationEndpointUpdate\n) => async (dispatch: Dispatch<Action | NotificationAction>) => {\n  dispatch(setEndpoint(endpointID, RemoteDataState.Loading))\n  try {\n    const resp = await api.patchNotificationEndpoint({\n      endpointID,\n      data: properties,\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const updates = normalize<NotificationEndpoint, EndpointEntities, string>(\n      resp.data,\n      endpointSchema\n    )\n\n    dispatch(setEndpoint(endpointID, RemoteDataState.Done, updates))\n  } catch (error) {\n    dispatch(notify(copy.updateEndpointFailed(error.message)))\n    dispatch(setEndpoint(endpointID, RemoteDataState.Error))\n  }\n}\n\nexport const deleteEndpoint = (endpointID: string) => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkEndpointsLimits>\n  >\n) => {\n  try {\n    const resp = await api.deleteNotificationEndpoint({endpointID})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeEndpoint(endpointID))\n    dispatch(checkEndpointsLimits())\n  } catch (error) {\n    dispatch(notify(copy.deleteEndpointFailed(error.message)))\n  }\n}\n\nexport const addEndpointLabel = (endpointID: string, label: Label) => async (\n  dispatch: Dispatch<Action | NotificationAction>\n) => {\n  try {\n    const resp = await api.postNotificationEndpointsLabel({\n      endpointID,\n      data: {labelID: label.id},\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const normLabel = normalize<Label, LabelEntities, string>(\n      resp.data.label,\n      labelSchema\n    )\n\n    dispatch(setLabelOnResource(endpointID, normLabel))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const deleteEndpointLabel = (\n  endpointID: string,\n  labelID: string\n) => async (dispatch: Dispatch<Action | NotificationAction>) => {\n  try {\n    const resp = await api.deleteNotificationEndpointsLabel({\n      endpointID,\n      labelID,\n    })\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeLabelFromEndpoint(endpointID, labelID))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const cloneEndpoint = (endpoint: NotificationEndpoint) => async (\n  dispatch: Dispatch<\n    Action | NotificationAction | ReturnType<typeof checkEndpointsLimits>\n  >,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const state = getState()\n    const endpoints = getAll<NotificationEndpoint>(\n      state,\n      ResourceType.NotificationEndpoints\n    )\n\n    const allEndpointNames = endpoints.map(r => r.name)\n\n    const clonedName = incrementCloneName(allEndpointNames, endpoint.name)\n\n    const resp = await api.postNotificationEndpoint({\n      data: {\n        ...toPostNotificationEndpoint(endpoint),\n        name: clonedName,\n      },\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const clone = normalize<NotificationEndpoint, EndpointEntities, string>(\n      resp.data,\n      endpointSchema\n    )\n\n    dispatch(setEndpoint(resp.data.id, RemoteDataState.Done, clone))\n    dispatch(checkEndpointsLimits())\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.createEndpointFailed(error.message)))\n  }\n}\n","import {GenLabel} from 'src/types'\nimport {INFLUX_LABEL_PREFIX} from 'src/labels/constants'\n\nexport const viewableLabels = (labels: GenLabel[]) =>\n  labels.filter(l => !l.name.startsWith(INFLUX_LABEL_PREFIX))\n","// Libraries\nimport {normalize} from 'normalizr'\n\n// API\nimport {\n  getLabels as apiGetLabels,\n  postLabel as apiPostLabel,\n  patchLabel as apiPatchLabel,\n  deleteLabel as apiDeleteLabel,\n} from 'src/client'\n\n// Schemas\nimport {labelSchema, arrayOfLabels} from 'src/schemas/labels'\n\n// Types\nimport {Dispatch} from 'react'\nimport {\n  RemoteDataState,\n  LabelProperties,\n  GetState,\n  Label,\n  LabelEntities,\n} from 'src/types'\n\n// Actions\nimport {notify} from 'src/shared/actions/notifications'\nimport {\n  getLabelsFailed,\n  createLabelFailed,\n  updateLabelFailed,\n  deleteLabelFailed,\n} from 'src/shared/copy/notifications'\nimport {\n  setLabels,\n  setLabel,\n  removeLabel,\n  Action,\n} from 'src/labels/actions/creators'\n\n// Utils\nimport {getOrg} from 'src/organizations/selectors'\nimport {viewableLabels} from 'src/labels/selectors'\n\nexport const getLabels = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const org = getOrg(getState())\n    dispatch(setLabels(RemoteDataState.Loading))\n\n    const resp = await apiGetLabels({query: {orgID: org.id}})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const labels = normalize<Label, LabelEntities, string[]>(\n      viewableLabels(resp.data.labels),\n      arrayOfLabels\n    )\n\n    dispatch(setLabels(RemoteDataState.Done, labels))\n  } catch (error) {\n    console.error(error)\n    dispatch(setLabels(RemoteDataState.Error))\n    dispatch(notify(getLabelsFailed()))\n  }\n}\n\nexport const createLabel = (\n  name: string,\n  properties: LabelProperties\n) => async (dispatch: Dispatch<Action>, getState: GetState): Promise<void> => {\n  const org = getOrg(getState())\n  try {\n    const resp = await apiPostLabel({\n      data: {\n        orgID: org.id,\n        name,\n        properties,\n      },\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const label = normalize<Label, LabelEntities, string>(\n      resp.data.label,\n      labelSchema\n    )\n\n    dispatch(setLabel(resp.data.label.id, RemoteDataState.Done, label))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(createLabelFailed()))\n  }\n}\n\nexport const updateLabel = (id: string, l: Label) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    dispatch(setLabel(id, RemoteDataState.Loading))\n    const resp = await apiPatchLabel({labelID: id, data: l})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const label = normalize<Label, LabelEntities, string>(\n      resp.data.label,\n      labelSchema\n    )\n\n    dispatch(setLabel(id, RemoteDataState.Done, label))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(updateLabelFailed()))\n  }\n}\n\nexport const deleteLabel = (id: string) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    const resp = await apiDeleteLabel({labelID: id})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeLabel(id))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(deleteLabelFailed()))\n  }\n}\n","import {DashboardColor} from 'src/client'\n\nexport type Color = DashboardColor\n\nexport interface ColorLabel {\n  hex: string\n  name: string\n}\n\nexport enum LabelColorType {\n  Preset = 'preset',\n  Custom = 'custom',\n}\n\nexport interface LabelColor {\n  id: string\n  colorHex: string\n  name: string\n  type: LabelColorType\n}\n","import {\n  Cell as GenCell,\n  Dashboard as GenDashboard,\n  TableViewProperties,\n  DashboardQuery,\n  RenamableField,\n  BuilderConfig,\n} from 'src/client'\nimport {RemoteDataState} from 'src/types'\n\nexport type FieldOption = RenamableField\n\nexport interface SortOptions {\n  field: string\n  direction: string\n}\n\nexport interface DashboardDraftQuery extends DashboardQuery {\n  hidden: boolean\n}\n\nexport type BuilderConfigAggregateWindow = BuilderConfig['aggregateWindow']\n\nexport interface Cell extends GenCell {\n  dashboardID: string\n  status: RemoteDataState\n  minH?: number\n  minW?: number\n}\n\nexport type NewCell = Omit<Cell, 'id' | 'links' | 'dashboardID'>\n\nexport interface Dashboard extends Omit<GenDashboard, 'cells' | 'labels'> {\n  cells: string[]\n  labels: string[]\n  status: RemoteDataState\n}\n\nexport type Omit<K, V> = Pick<K, Exclude<keyof K, V>>\n\nexport interface DashboardSwitcherLink {\n  key: string\n  text: string\n  to: string\n}\n\nexport interface DashboardSwitcherLinks {\n  active?: DashboardSwitcherLink\n  links: DashboardSwitcherLink[]\n}\n\nexport enum NoteEditorMode {\n  Adding = 'adding',\n  Editing = 'editing',\n}\n\nexport type TableOptions = TableViewProperties['tableOptions']\n\nexport {\n  DashboardQuery,\n  BuilderAggregateFunctionType,\n  BuilderTagsType,\n  BuilderConfig,\n  ViewProperties,\n  QueryEditMode,\n  XYViewProperties,\n  LinePlusSingleStatProperties,\n  ScatterViewProperties,\n  HeatmapViewProperties,\n  SingleStatViewProperties,\n  HistogramViewProperties,\n  GaugeViewProperties,\n  TableViewProperties,\n  MarkdownViewProperties,\n  CheckViewProperties,\n  RenamableField,\n  Legend,\n  DecimalPlaces,\n  Axes,\n  Axis,\n  AxisScale,\n  XYGeom,\n  CreateDashboardRequest,\n  Threshold,\n} from 'src/client'\n","import {Action} from 'src/shared/actions/notifications'\n\nexport type NotificationAction = Action\n\nexport interface Notification {\n  id?: string\n  style: NotificationStyle\n  icon: string\n  duration: number\n  message: string\n  type?: string\n}\n\nexport enum NotificationStyle {\n  Error = 'error',\n  Success = 'success',\n  Info = 'info',\n  Primary = 'primary',\n  Warning = 'warning',\n}\n","export enum OverlayState {\n  Open = 'open',\n  Closed = 'closed',\n}\n","export interface CancelBox<T> {\n  promise: Promise<T>\n  cancel: () => void\n}\n\nexport class CancellationError extends Error {\n  constructor(...args) {\n    super(...args)\n\n    this.name = 'CancellationError'\n  }\n}\n","// All time zones except for \"Local\" should be a valid IANA Time Zone Database\n// name.\n//\n// https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\nexport type TimeZone =\n  | 'Local'\n  | 'UTC'\n  | 'Africa/Abidjan'\n  | 'Africa/Accra'\n  | 'Africa/Addis_Ababa'\n  | 'Africa/Algiers'\n  | 'Africa/Asmara'\n  | 'Africa/Bamako'\n  | 'Africa/Bangui'\n  | 'Africa/Banjul'\n  | 'Africa/Bissau'\n  | 'Africa/Blantyre'\n  | 'Africa/Brazzaville'\n  | 'Africa/Bujumbura'\n  | 'Africa/Cairo'\n  | 'Africa/Casablanca'\n  | 'Africa/Ceuta'\n  | 'Africa/Conakry'\n  | 'Africa/Dakar'\n  | 'Africa/Dar_es_Salaam'\n  | 'Africa/Djibouti'\n  | 'Africa/Douala'\n  | 'Africa/El_Aaiun'\n  | 'Africa/Freetown'\n  | 'Africa/Gaborone'\n  | 'Africa/Harare'\n  | 'Africa/Johannesburg'\n  | 'Africa/Juba'\n  | 'Africa/Kampala'\n  | 'Africa/Khartoum'\n  | 'Africa/Kigali'\n  | 'Africa/Kinshasa'\n  | 'Africa/Lagos'\n  | 'Africa/Libreville'\n  | 'Africa/Lome'\n  | 'Africa/Luanda'\n  | 'Africa/Lubumbashi'\n  | 'Africa/Lusaka'\n  | 'Africa/Malabo'\n  | 'Africa/Maputo'\n  | 'Africa/Maseru'\n  | 'Africa/Mbabane'\n  | 'Africa/Mogadishu'\n  | 'Africa/Monrovia'\n  | 'Africa/Nairobi'\n  | 'Africa/Ndjamena'\n  | 'Africa/Niamey'\n  | 'Africa/Nouakchott'\n  | 'Africa/Ouagadougou'\n  | 'Africa/Porto-Novo'\n  | 'Africa/Sao_Tome'\n  | 'Africa/Timbuktu'\n  | 'Africa/Tripoli'\n  | 'Africa/Tunis'\n  | 'Africa/Windhoek'\n  | 'America/Adak'\n  | 'America/Anchorage'\n  | 'America/Anguilla'\n  | 'America/Antigua'\n  | 'America/Araguaina'\n  | 'America/Argentina/Buenos_Aires'\n  | 'America/Argentina/Catamarca'\n  | 'America/Argentina/ComodRivadavia'\n  | 'America/Argentina/Cordoba'\n  | 'America/Argentina/Jujuy'\n  | 'America/Argentina/La_Rioja'\n  | 'America/Argentina/Mendoza'\n  | 'America/Argentina/Rio_Gallegos'\n  | 'America/Argentina/Salta'\n  | 'America/Argentina/San_Juan'\n  | 'America/Argentina/San_Luis'\n  | 'America/Argentina/Tucuman'\n  | 'America/Argentina/Ushuaia'\n  | 'America/Aruba'\n  | 'America/Asuncion'\n  | 'America/Atikokan'\n  | 'America/Atka'\n  | 'America/Bahia'\n  | 'America/Bahia_Banderas'\n  | 'America/Barbados'\n  | 'America/Belem'\n  | 'America/Belize'\n  | 'America/Blanc-Sablon'\n  | 'America/Boa_Vista'\n  | 'America/Bogota'\n  | 'America/Boise'\n  | 'America/Buenos_Aires'\n  | 'America/Cambridge_Bay'\n  | 'America/Campo_Grande'\n  | 'America/Cancun'\n  | 'America/Caracas'\n  | 'America/Catamarca'\n  | 'America/Cayenne'\n  | 'America/Cayman'\n  | 'America/Chicago'\n  | 'America/Chihuahua'\n  | 'America/Coral_Harbour'\n  | 'America/Cordoba'\n  | 'America/Costa_Rica'\n  | 'America/Creston'\n  | 'America/Cuiaba'\n  | 'America/Curacao'\n  | 'America/Danmarkshavn'\n  | 'America/Dawson'\n  | 'America/Dawson_Creek'\n  | 'America/Denver'\n  | 'America/Detroit'\n  | 'America/Dominica'\n  | 'America/Edmonton'\n  | 'America/Eirunepe'\n  | 'America/El_Salvador'\n  | 'America/Ensenada'\n  | 'America/Fort_Nelson'\n  | 'America/Fort_Wayne'\n  | 'America/Fortaleza'\n  | 'America/Glace_Bay'\n  | 'America/Godthab'\n  | 'America/Goose_Bay'\n  | 'America/Grand_Turk'\n  | 'America/Grenada'\n  | 'America/Guadeloupe'\n  | 'America/Guatemala'\n  | 'America/Guayaquil'\n  | 'America/Guyana'\n  | 'America/Halifax'\n  | 'America/Havana'\n  | 'America/Hermosillo'\n  | 'America/Indiana/Indianapolis'\n  | 'America/Indiana/Knox'\n  | 'America/Indiana/Marengo'\n  | 'America/Indiana/Petersburg'\n  | 'America/Indiana/Tell_City'\n  | 'America/Indiana/Vevay'\n  | 'America/Indiana/Vincennes'\n  | 'America/Indiana/Winamac'\n  | 'America/Indianapolis'\n  | 'America/Inuvik'\n  | 'America/Iqaluit'\n  | 'America/Jamaica'\n  | 'America/Jujuy'\n  | 'America/Juneau'\n  | 'America/Kentucky/Louisville'\n  | 'America/Kentucky/Monticello'\n  | 'America/Knox_IN'\n  | 'America/Kralendijk'\n  | 'America/La_Paz'\n  | 'America/Lima'\n  | 'America/Los_Angeles'\n  | 'America/Louisville'\n  | 'America/Lower_Princes'\n  | 'America/Maceio'\n  | 'America/Managua'\n  | 'America/Manaus'\n  | 'America/Marigot'\n  | 'America/Martinique'\n  | 'America/Matamoros'\n  | 'America/Mazatlan'\n  | 'America/Mendoza'\n  | 'America/Menominee'\n  | 'America/Merida'\n  | 'America/Metlakatla'\n  | 'America/Mexico_City'\n  | 'America/Miquelon'\n  | 'America/Moncton'\n  | 'America/Monterrey'\n  | 'America/Montevideo'\n  | 'America/Montreal'\n  | 'America/Montserrat'\n  | 'America/Nassau'\n  | 'America/New_York'\n  | 'America/Nipigon'\n  | 'America/Nome'\n  | 'America/Noronha'\n  | 'America/North_Dakota/Beulah'\n  | 'America/North_Dakota/Center'\n  | 'America/North_Dakota/New_Salem'\n  | 'America/Ojinaga'\n  | 'America/Panama'\n  | 'America/Pangnirtung'\n  | 'America/Paramaribo'\n  | 'America/Phoenix'\n  | 'America/Port_of_Spain'\n  | 'America/Port-au-Prince'\n  | 'America/Porto_Acre'\n  | 'America/Porto_Velho'\n  | 'America/Puerto_Rico'\n  | 'America/Punta_Arenas'\n  | 'America/Rainy_River'\n  | 'America/Rankin_Inlet'\n  | 'America/Recife'\n  | 'America/Regina'\n  | 'America/Resolute'\n  | 'America/Rio_Branco'\n  | 'America/Rosario'\n  | 'America/Santa_Isabel'\n  | 'America/Santarem'\n  | 'America/Santiago'\n  | 'America/Santo_Domingo'\n  | 'America/Sao_Paulo'\n  | 'America/Scoresbysund'\n  | 'America/Shiprock'\n  | 'America/Sitka'\n  | 'America/St_Barthelemy'\n  | 'America/St_Johns'\n  | 'America/St_Kitts'\n  | 'America/St_Lucia'\n  | 'America/St_Thomas'\n  | 'America/St_Vincent'\n  | 'America/Swift_Current'\n  | 'America/Tegucigalpa'\n  | 'America/Thule'\n  | 'America/Thunder_Bay'\n  | 'America/Tijuana'\n  | 'America/Toronto'\n  | 'America/Tortola'\n  | 'America/Vancouver'\n  | 'America/Virgin'\n  | 'America/Whitehorse'\n  | 'America/Winnipeg'\n  | 'America/Yakutat'\n  | 'America/Yellowknife'\n  | 'Antarctica/Casey'\n  | 'Antarctica/Davis'\n  | 'Antarctica/DumontDUrville'\n  | 'Antarctica/Macquarie'\n  | 'Antarctica/Mawson'\n  | 'Antarctica/McMurdo'\n  | 'Antarctica/Palmer'\n  | 'Antarctica/Rothera'\n  | 'Antarctica/South_Pole'\n  | 'Antarctica/Syowa'\n  | 'Antarctica/Troll'\n  | 'Antarctica/Vostok'\n  | 'Arctic/Longyearbyen'\n  | 'Asia/Aden'\n  | 'Asia/Almaty'\n  | 'Asia/Amman'\n  | 'Asia/Anadyr'\n  | 'Asia/Aqtau'\n  | 'Asia/Aqtobe'\n  | 'Asia/Ashgabat'\n  | 'Asia/Ashkhabad'\n  | 'Asia/Atyrau'\n  | 'Asia/Baghdad'\n  | 'Asia/Bahrain'\n  | 'Asia/Baku'\n  | 'Asia/Bangkok'\n  | 'Asia/Barnaul'\n  | 'Asia/Beirut'\n  | 'Asia/Bishkek'\n  | 'Asia/Brunei'\n  | 'Asia/Calcutta'\n  | 'Asia/Chita'\n  | 'Asia/Choibalsan'\n  | 'Asia/Chongqing'\n  | 'Asia/Chungking'\n  | 'Asia/Colombo'\n  | 'Asia/Dacca'\n  | 'Asia/Damascus'\n  | 'Asia/Dhaka'\n  | 'Asia/Dili'\n  | 'Asia/Dubai'\n  | 'Asia/Dushanbe'\n  | 'Asia/Famagusta'\n  | 'Asia/Gaza'\n  | 'Asia/Harbin'\n  | 'Asia/Hebron'\n  | 'Asia/Ho_Chi_Minh'\n  | 'Asia/Hong_Kong'\n  | 'Asia/Hovd'\n  | 'Asia/Irkutsk'\n  | 'Asia/Istanbul'\n  | 'Asia/Jakarta'\n  | 'Asia/Jayapura'\n  | 'Asia/Jerusalem'\n  | 'Asia/Kabul'\n  | 'Asia/Kamchatka'\n  | 'Asia/Karachi'\n  | 'Asia/Kashgar'\n  | 'Asia/Kathmandu'\n  | 'Asia/Katmandu'\n  | 'Asia/Khandyga'\n  | 'Asia/Kolkata'\n  | 'Asia/Krasnoyarsk'\n  | 'Asia/Kuala_Lumpur'\n  | 'Asia/Kuching'\n  | 'Asia/Kuwait'\n  | 'Asia/Macao'\n  | 'Asia/Macau'\n  | 'Asia/Magadan'\n  | 'Asia/Makassar'\n  | 'Asia/Manila'\n  | 'Asia/Muscat'\n  | 'Asia/Novokuznetsk'\n  | 'Asia/Novosibirsk'\n  | 'Asia/Omsk'\n  | 'Asia/Oral'\n  | 'Asia/Phnom_Penh'\n  | 'Asia/Pontianak'\n  | 'Asia/Pyongyang'\n  | 'Asia/Qatar'\n  | 'Asia/Qyzylorda'\n  | 'Asia/Rangoon'\n  | 'Asia/Riyadh'\n  | 'Asia/Saigon'\n  | 'Asia/Sakhalin'\n  | 'Asia/Samarkand'\n  | 'Asia/Seoul'\n  | 'Asia/Shanghai'\n  | 'Asia/Singapore'\n  | 'Asia/Srednekolymsk'\n  | 'Asia/Taipei'\n  | 'Asia/Tashkent'\n  | 'Asia/Tbilisi'\n  | 'Asia/Tehran'\n  | 'Asia/Tel_Aviv'\n  | 'Asia/Thimbu'\n  | 'Asia/Thimphu'\n  | 'Asia/Tokyo'\n  | 'Asia/Tomsk'\n  | 'Asia/Ujung_Pandang'\n  | 'Asia/Ulaanbaatar'\n  | 'Asia/Ulan_Bator'\n  | 'Asia/Urumqi'\n  | 'Asia/Ust-Nera'\n  | 'Asia/Vientiane'\n  | 'Asia/Vladivostok'\n  | 'Asia/Yakutsk'\n  | 'Asia/Yangon'\n  | 'Asia/Yekaterinburg'\n  | 'Asia/Yerevan'\n  | 'Atlantic/Azores'\n  | 'Atlantic/Bermuda'\n  | 'Atlantic/Canary'\n  | 'Atlantic/Cape_Verde'\n  | 'Atlantic/Faeroe'\n  | 'Atlantic/Faroe'\n  | 'Atlantic/Jan_Mayen'\n  | 'Atlantic/Madeira'\n  | 'Atlantic/Reykjavik'\n  | 'Atlantic/South_Georgia'\n  | 'Atlantic/St_Helena'\n  | 'Atlantic/Stanley'\n  | 'Australia/ACT'\n  | 'Australia/Adelaide'\n  | 'Australia/Brisbane'\n  | 'Australia/Broken_Hill'\n  | 'Australia/Canberra'\n  | 'Australia/Currie'\n  | 'Australia/Darwin'\n  | 'Australia/Eucla'\n  | 'Australia/Hobart'\n  | 'Australia/LHI'\n  | 'Australia/Lindeman'\n  | 'Australia/Lord_Howe'\n  | 'Australia/Melbourne'\n  | 'Australia/North'\n  | 'Australia/NSW'\n  | 'Australia/Perth'\n  | 'Australia/Queensland'\n  | 'Australia/South'\n  | 'Australia/Sydney'\n  | 'Australia/Tasmania'\n  | 'Australia/Victoria'\n  | 'Australia/West'\n  | 'Australia/Yancowinna'\n  | 'Brazil/Acre'\n  | 'Brazil/DeNoronha'\n  | 'Brazil/East'\n  | 'Brazil/West'\n  | 'Canada/Atlantic'\n  | 'Canada/Central'\n  | 'Canada/Eastern'\n  | 'Canada/Mountain'\n  | 'Canada/Newfoundland'\n  | 'Canada/Pacific'\n  | 'Canada/Saskatchewan'\n  | 'Canada/Yukon'\n  | 'CET'\n  | 'Chile/Continental'\n  | 'Chile/EasterIsland'\n  | 'CST6CDT'\n  | 'Cuba'\n  | 'EET'\n  | 'Egypt'\n  | 'Eire'\n  | 'EST'\n  | 'EST5EDT'\n  | 'Etc/GMT'\n  | 'Etc/GMT+0'\n  | 'Etc/GMT+1'\n  | 'Etc/GMT+10'\n  | 'Etc/GMT+11'\n  | 'Etc/GMT+12'\n  | 'Etc/GMT+2'\n  | 'Etc/GMT+3'\n  | 'Etc/GMT+4'\n  | 'Etc/GMT+5'\n  | 'Etc/GMT+6'\n  | 'Etc/GMT+7'\n  | 'Etc/GMT+8'\n  | 'Etc/GMT+9'\n  | 'Etc/GMT0'\n  | 'Etc/GMT-0'\n  | 'Etc/GMT-1'\n  | 'Etc/GMT-10'\n  | 'Etc/GMT-11'\n  | 'Etc/GMT-12'\n  | 'Etc/GMT-13'\n  | 'Etc/GMT-14'\n  | 'Etc/GMT-2'\n  | 'Etc/GMT-3'\n  | 'Etc/GMT-4'\n  | 'Etc/GMT-5'\n  | 'Etc/GMT-6'\n  | 'Etc/GMT-7'\n  | 'Etc/GMT-8'\n  | 'Etc/GMT-9'\n  | 'Etc/Greenwich'\n  | 'Etc/UCT'\n  | 'Etc/Universal'\n  | 'Etc/UTC'\n  | 'Etc/Zulu'\n  | 'Europe/Amsterdam'\n  | 'Europe/Andorra'\n  | 'Europe/Astrakhan'\n  | 'Europe/Athens'\n  | 'Europe/Belfast'\n  | 'Europe/Belgrade'\n  | 'Europe/Berlin'\n  | 'Europe/Bratislava'\n  | 'Europe/Brussels'\n  | 'Europe/Bucharest'\n  | 'Europe/Budapest'\n  | 'Europe/Busingen'\n  | 'Europe/Chisinau'\n  | 'Europe/Copenhagen'\n  | 'Europe/Dublin'\n  | 'Europe/Gibraltar'\n  | 'Europe/Guernsey'\n  | 'Europe/Helsinki'\n  | 'Europe/Isle_of_Man'\n  | 'Europe/Istanbul'\n  | 'Europe/Jersey'\n  | 'Europe/Kaliningrad'\n  | 'Europe/Kiev'\n  | 'Europe/Kirov'\n  | 'Europe/Lisbon'\n  | 'Europe/Ljubljana'\n  | 'Europe/London'\n  | 'Europe/Luxembourg'\n  | 'Europe/Madrid'\n  | 'Europe/Malta'\n  | 'Europe/Mariehamn'\n  | 'Europe/Minsk'\n  | 'Europe/Monaco'\n  | 'Europe/Moscow'\n  | 'Asia/Nicosia'\n  | 'Europe/Oslo'\n  | 'Europe/Paris'\n  | 'Europe/Podgorica'\n  | 'Europe/Prague'\n  | 'Europe/Riga'\n  | 'Europe/Rome'\n  | 'Europe/Samara'\n  | 'Europe/San_Marino'\n  | 'Europe/Sarajevo'\n  | 'Europe/Saratov'\n  | 'Europe/Simferopol'\n  | 'Europe/Skopje'\n  | 'Europe/Sofia'\n  | 'Europe/Stockholm'\n  | 'Europe/Tallinn'\n  | 'Europe/Tirane'\n  | 'Europe/Tiraspol'\n  | 'Europe/Ulyanovsk'\n  | 'Europe/Uzhgorod'\n  | 'Europe/Vaduz'\n  | 'Europe/Vatican'\n  | 'Europe/Vienna'\n  | 'Europe/Vilnius'\n  | 'Europe/Volgograd'\n  | 'Europe/Warsaw'\n  | 'Europe/Zagreb'\n  | 'Europe/Zaporozhye'\n  | 'Europe/Zurich'\n  | 'GB'\n  | 'GB-Eire'\n  | 'GMT'\n  | 'GMT+0'\n  | 'GMT0'\n  | 'GMT−0'\n  | 'Greenwich'\n  | 'Hongkong'\n  | 'HST'\n  | 'Iceland'\n  | 'Indian/Antananarivo'\n  | 'Indian/Chagos'\n  | 'Indian/Christmas'\n  | 'Indian/Cocos'\n  | 'Indian/Comoro'\n  | 'Indian/Kerguelen'\n  | 'Indian/Mahe'\n  | 'Indian/Maldives'\n  | 'Indian/Mauritius'\n  | 'Indian/Mayotte'\n  | 'Indian/Reunion'\n  | 'Iran'\n  | 'Israel'\n  | 'Jamaica'\n  | 'Japan'\n  | 'Kwajalein'\n  | 'Libya'\n  | 'MET'\n  | 'Mexico/BajaNorte'\n  | 'Mexico/BajaSur'\n  | 'Mexico/General'\n  | 'MST'\n  | 'MST7MDT'\n  | 'Navajo'\n  | 'NZ'\n  | 'NZ-CHAT'\n  | 'Pacific/Apia'\n  | 'Pacific/Auckland'\n  | 'Pacific/Bougainville'\n  | 'Pacific/Chatham'\n  | 'Pacific/Chuuk'\n  | 'Pacific/Easter'\n  | 'Pacific/Efate'\n  | 'Pacific/Enderbury'\n  | 'Pacific/Fakaofo'\n  | 'Pacific/Fiji'\n  | 'Pacific/Funafuti'\n  | 'Pacific/Galapagos'\n  | 'Pacific/Gambier'\n  | 'Pacific/Guadalcanal'\n  | 'Pacific/Guam'\n  | 'Pacific/Honolulu'\n  | 'Pacific/Johnston'\n  | 'Pacific/Kiritimati'\n  | 'Pacific/Kosrae'\n  | 'Pacific/Kwajalein'\n  | 'Pacific/Majuro'\n  | 'Pacific/Marquesas'\n  | 'Pacific/Midway'\n  | 'Pacific/Nauru'\n  | 'Pacific/Niue'\n  | 'Pacific/Norfolk'\n  | 'Pacific/Noumea'\n  | 'Pacific/Pago_Pago'\n  | 'Pacific/Palau'\n  | 'Pacific/Pitcairn'\n  | 'Pacific/Pohnpei'\n  | 'Pacific/Ponape'\n  | 'Pacific/Port_Moresby'\n  | 'Pacific/Rarotonga'\n  | 'Pacific/Saipan'\n  | 'Pacific/Samoa'\n  | 'Pacific/Tahiti'\n  | 'Pacific/Tarawa'\n  | 'Pacific/Tongatapu'\n  | 'Pacific/Truk'\n  | 'Pacific/Wake'\n  | 'Pacific/Wallis'\n  | 'Pacific/Yap'\n  | 'Poland'\n  | 'Portugal'\n  | 'PRC'\n  | 'PST8PDT'\n  | 'ROC'\n  | 'ROK'\n  | 'Singapore'\n  | 'Turkey'\n  | 'UCT'\n  | 'Universal'\n  | 'US/Alaska'\n  | 'US/Aleutian'\n  | 'US/Arizona'\n  | 'US/Central'\n  | 'US/Eastern'\n  | 'US/East-Indiana'\n  | 'US/Hawaii'\n  | 'US/Indiana-Starke'\n  | 'US/Michigan'\n  | 'US/Mountain'\n  | 'US/Pacific'\n  | 'US/Pacific-New'\n  | 'US/Samoa'\n  | 'UTC'\n  | 'WET'\n  | 'W-SU'\n  | 'Zulu'\n\nexport const timeZones = [\n  'Local',\n  'UTC',\n  'Africa/Abidjan',\n  'Africa/Accra',\n  'Africa/Addis_Ababa',\n  'Africa/Algiers',\n  'Africa/Asmara',\n  'Africa/Bamako',\n  'Africa/Bangui',\n  'Africa/Banjul',\n  'Africa/Bissau',\n  'Africa/Blantyre',\n  'Africa/Brazzaville',\n  'Africa/Bujumbura',\n  'Africa/Cairo',\n  'Africa/Casablanca',\n  'Africa/Ceuta',\n  'Africa/Conakry',\n  'Africa/Dakar',\n  'Africa/Dar_es_Salaam',\n  'Africa/Djibouti',\n  'Africa/Douala',\n  'Africa/El_Aaiun',\n  'Africa/Freetown',\n  'Africa/Gaborone',\n  'Africa/Harare',\n  'Africa/Johannesburg',\n  'Africa/Juba',\n  'Africa/Kampala',\n  'Africa/Khartoum',\n  'Africa/Kigali',\n  'Africa/Kinshasa',\n  'Africa/Lagos',\n  'Africa/Libreville',\n  'Africa/Lome',\n  'Africa/Luanda',\n  'Africa/Lubumbashi',\n  'Africa/Lusaka',\n  'Africa/Malabo',\n  'Africa/Maputo',\n  'Africa/Maseru',\n  'Africa/Mbabane',\n  'Africa/Mogadishu',\n  'Africa/Monrovia',\n  'Africa/Nairobi',\n  'Africa/Ndjamena',\n  'Africa/Niamey',\n  'Africa/Nouakchott',\n  'Africa/Ouagadougou',\n  'Africa/Porto-Novo',\n  'Africa/Sao_Tome',\n  'Africa/Timbuktu',\n  'Africa/Tripoli',\n  'Africa/Tunis',\n  'Africa/Windhoek',\n  'America/Adak',\n  'America/Anchorage',\n  'America/Anguilla',\n  'America/Antigua',\n  'America/Araguaina',\n  'America/Argentina/Buenos_Aires',\n  'America/Argentina/Catamarca',\n  'America/Argentina/ComodRivadavia',\n  'America/Argentina/Cordoba',\n  'America/Argentina/Jujuy',\n  'America/Argentina/La_Rioja',\n  'America/Argentina/Mendoza',\n  'America/Argentina/Rio_Gallegos',\n  'America/Argentina/Salta',\n  'America/Argentina/San_Juan',\n  'America/Argentina/San_Luis',\n  'America/Argentina/Tucuman',\n  'America/Argentina/Ushuaia',\n  'America/Aruba',\n  'America/Asuncion',\n  'America/Atikokan',\n  'America/Atka',\n  'America/Bahia',\n  'America/Bahia_Banderas',\n  'America/Barbados',\n  'America/Belem',\n  'America/Belize',\n  'America/Blanc-Sablon',\n  'America/Boa_Vista',\n  'America/Bogota',\n  'America/Boise',\n  'America/Buenos_Aires',\n  'America/Cambridge_Bay',\n  'America/Campo_Grande',\n  'America/Cancun',\n  'America/Caracas',\n  'America/Catamarca',\n  'America/Cayenne',\n  'America/Cayman',\n  'America/Chicago',\n  'America/Chihuahua',\n  'America/Coral_Harbour',\n  'America/Cordoba',\n  'America/Costa_Rica',\n  'America/Creston',\n  'America/Cuiaba',\n  'America/Curacao',\n  'America/Danmarkshavn',\n  'America/Dawson',\n  'America/Dawson_Creek',\n  'America/Denver',\n  'America/Detroit',\n  'America/Dominica',\n  'America/Edmonton',\n  'America/Eirunepe',\n  'America/El_Salvador',\n  'America/Ensenada',\n  'America/Fort_Nelson',\n  'America/Fort_Wayne',\n  'America/Fortaleza',\n  'America/Glace_Bay',\n  'America/Godthab',\n  'America/Goose_Bay',\n  'America/Grand_Turk',\n  'America/Grenada',\n  'America/Guadeloupe',\n  'America/Guatemala',\n  'America/Guayaquil',\n  'America/Guyana',\n  'America/Halifax',\n  'America/Havana',\n  'America/Hermosillo',\n  'America/Indiana/Indianapolis',\n  'America/Indiana/Knox',\n  'America/Indiana/Marengo',\n  'America/Indiana/Petersburg',\n  'America/Indiana/Tell_City',\n  'America/Indiana/Vevay',\n  'America/Indiana/Vincennes',\n  'America/Indiana/Winamac',\n  'America/Indianapolis',\n  'America/Inuvik',\n  'America/Iqaluit',\n  'America/Jamaica',\n  'America/Jujuy',\n  'America/Juneau',\n  'America/Kentucky/Louisville',\n  'America/Kentucky/Monticello',\n  'America/Knox_IN',\n  'America/Kralendijk',\n  'America/La_Paz',\n  'America/Lima',\n  'America/Los_Angeles',\n  'America/Louisville',\n  'America/Lower_Princes',\n  'America/Maceio',\n  'America/Managua',\n  'America/Manaus',\n  'America/Marigot',\n  'America/Martinique',\n  'America/Matamoros',\n  'America/Mazatlan',\n  'America/Mendoza',\n  'America/Menominee',\n  'America/Merida',\n  'America/Metlakatla',\n  'America/Mexico_City',\n  'America/Miquelon',\n  'America/Moncton',\n  'America/Monterrey',\n  'America/Montevideo',\n  'America/Montreal',\n  'America/Montserrat',\n  'America/Nassau',\n  'America/New_York',\n  'America/Nipigon',\n  'America/Nome',\n  'America/Noronha',\n  'America/North_Dakota/Beulah',\n  'America/North_Dakota/Center',\n  'America/North_Dakota/New_Salem',\n  'America/Ojinaga',\n  'America/Panama',\n  'America/Pangnirtung',\n  'America/Paramaribo',\n  'America/Phoenix',\n  'America/Port_of_Spain',\n  'America/Port-au-Prince',\n  'America/Porto_Acre',\n  'America/Porto_Velho',\n  'America/Puerto_Rico',\n  'America/Punta_Arenas',\n  'America/Rainy_River',\n  'America/Rankin_Inlet',\n  'America/Recife',\n  'America/Regina',\n  'America/Resolute',\n  'America/Rio_Branco',\n  'America/Rosario',\n  'America/Santa_Isabel',\n  'America/Santarem',\n  'America/Santiago',\n  'America/Santo_Domingo',\n  'America/Sao_Paulo',\n  'America/Scoresbysund',\n  'America/Shiprock',\n  'America/Sitka',\n  'America/St_Barthelemy',\n  'America/St_Johns',\n  'America/St_Kitts',\n  'America/St_Lucia',\n  'America/St_Thomas',\n  'America/St_Vincent',\n  'America/Swift_Current',\n  'America/Tegucigalpa',\n  'America/Thule',\n  'America/Thunder_Bay',\n  'America/Tijuana',\n  'America/Toronto',\n  'America/Tortola',\n  'America/Vancouver',\n  'America/Virgin',\n  'America/Whitehorse',\n  'America/Winnipeg',\n  'America/Yakutat',\n  'America/Yellowknife',\n  'Antarctica/Casey',\n  'Antarctica/Davis',\n  'Antarctica/DumontDUrville',\n  'Antarctica/Macquarie',\n  'Antarctica/Mawson',\n  'Antarctica/McMurdo',\n  'Antarctica/Palmer',\n  'Antarctica/Rothera',\n  'Antarctica/South_Pole',\n  'Antarctica/Syowa',\n  'Antarctica/Troll',\n  'Antarctica/Vostok',\n  'Arctic/Longyearbyen',\n  'Asia/Aden',\n  'Asia/Almaty',\n  'Asia/Amman',\n  'Asia/Anadyr',\n  'Asia/Aqtau',\n  'Asia/Aqtobe',\n  'Asia/Ashgabat',\n  'Asia/Ashkhabad',\n  'Asia/Atyrau',\n  'Asia/Baghdad',\n  'Asia/Bahrain',\n  'Asia/Baku',\n  'Asia/Bangkok',\n  'Asia/Barnaul',\n  'Asia/Beirut',\n  'Asia/Bishkek',\n  'Asia/Brunei',\n  'Asia/Calcutta',\n  'Asia/Chita',\n  'Asia/Choibalsan',\n  'Asia/Chongqing',\n  'Asia/Chungking',\n  'Asia/Colombo',\n  'Asia/Dacca',\n  'Asia/Damascus',\n  'Asia/Dhaka',\n  'Asia/Dili',\n  'Asia/Dubai',\n  'Asia/Dushanbe',\n  'Asia/Famagusta',\n  'Asia/Gaza',\n  'Asia/Harbin',\n  'Asia/Hebron',\n  'Asia/Ho_Chi_Minh',\n  'Asia/Hong_Kong',\n  'Asia/Hovd',\n  'Asia/Irkutsk',\n  'Asia/Istanbul',\n  'Asia/Jakarta',\n  'Asia/Jayapura',\n  'Asia/Jerusalem',\n  'Asia/Kabul',\n  'Asia/Kamchatka',\n  'Asia/Karachi',\n  'Asia/Kashgar',\n  'Asia/Kathmandu',\n  'Asia/Katmandu',\n  'Asia/Khandyga',\n  'Asia/Kolkata',\n  'Asia/Krasnoyarsk',\n  'Asia/Kuala_Lumpur',\n  'Asia/Kuching',\n  'Asia/Kuwait',\n  'Asia/Macao',\n  'Asia/Macau',\n  'Asia/Magadan',\n  'Asia/Makassar',\n  'Asia/Manila',\n  'Asia/Muscat',\n  'Asia/Novokuznetsk',\n  'Asia/Novosibirsk',\n  'Asia/Omsk',\n  'Asia/Oral',\n  'Asia/Phnom_Penh',\n  'Asia/Pontianak',\n  'Asia/Pyongyang',\n  'Asia/Qatar',\n  'Asia/Qyzylorda',\n  'Asia/Rangoon',\n  'Asia/Riyadh',\n  'Asia/Saigon',\n  'Asia/Sakhalin',\n  'Asia/Samarkand',\n  'Asia/Seoul',\n  'Asia/Shanghai',\n  'Asia/Singapore',\n  'Asia/Srednekolymsk',\n  'Asia/Taipei',\n  'Asia/Tashkent',\n  'Asia/Tbilisi',\n  'Asia/Tehran',\n  'Asia/Tel_Aviv',\n  'Asia/Thimbu',\n  'Asia/Thimphu',\n  'Asia/Tokyo',\n  'Asia/Tomsk',\n  'Asia/Ujung_Pandang',\n  'Asia/Ulaanbaatar',\n  'Asia/Ulan_Bator',\n  'Asia/Urumqi',\n  'Asia/Ust-Nera',\n  'Asia/Vientiane',\n  'Asia/Vladivostok',\n  'Asia/Yakutsk',\n  'Asia/Yangon',\n  'Asia/Yekaterinburg',\n  'Asia/Yerevan',\n  'Atlantic/Azores',\n  'Atlantic/Bermuda',\n  'Atlantic/Canary',\n  'Atlantic/Cape_Verde',\n  'Atlantic/Faeroe',\n  'Atlantic/Faroe',\n  'Atlantic/Jan_Mayen',\n  'Atlantic/Madeira',\n  'Atlantic/Reykjavik',\n  'Atlantic/South_Georgia',\n  'Atlantic/St_Helena',\n  'Atlantic/Stanley',\n  'Australia/ACT',\n  'Australia/Adelaide',\n  'Australia/Brisbane',\n  'Australia/Broken_Hill',\n  'Australia/Canberra',\n  'Australia/Currie',\n  'Australia/Darwin',\n  'Australia/Eucla',\n  'Australia/Hobart',\n  'Australia/LHI',\n  'Australia/Lindeman',\n  'Australia/Lord_Howe',\n  'Australia/Melbourne',\n  'Australia/North',\n  'Australia/NSW',\n  'Australia/Perth',\n  'Australia/Queensland',\n  'Australia/South',\n  'Australia/Sydney',\n  'Australia/Tasmania',\n  'Australia/Victoria',\n  'Australia/West',\n  'Australia/Yancowinna',\n  'Brazil/Acre',\n  'Brazil/DeNoronha',\n  'Brazil/East',\n  'Brazil/West',\n  'Canada/Atlantic',\n  'Canada/Central',\n  'Canada/Eastern',\n  'Canada/Mountain',\n  'Canada/Newfoundland',\n  'Canada/Pacific',\n  'Canada/Saskatchewan',\n  'Canada/Yukon',\n  'CET',\n  'Chile/Continental',\n  'Chile/EasterIsland',\n  'CST6CDT',\n  'Cuba',\n  'EET',\n  'Egypt',\n  'Eire',\n  'EST',\n  'EST5EDT',\n  'Etc/GMT',\n  'Etc/GMT+0',\n  'Etc/GMT+1',\n  'Etc/GMT+10',\n  'Etc/GMT+11',\n  'Etc/GMT+12',\n  'Etc/GMT+2',\n  'Etc/GMT+3',\n  'Etc/GMT+4',\n  'Etc/GMT+5',\n  'Etc/GMT+6',\n  'Etc/GMT+7',\n  'Etc/GMT+8',\n  'Etc/GMT+9',\n  'Etc/GMT0',\n  'Etc/GMT-0',\n  'Etc/GMT-1',\n  'Etc/GMT-10',\n  'Etc/GMT-11',\n  'Etc/GMT-12',\n  'Etc/GMT-13',\n  'Etc/GMT-14',\n  'Etc/GMT-2',\n  'Etc/GMT-3',\n  'Etc/GMT-4',\n  'Etc/GMT-5',\n  'Etc/GMT-6',\n  'Etc/GMT-7',\n  'Etc/GMT-8',\n  'Etc/GMT-9',\n  'Etc/Greenwich',\n  'Etc/UCT',\n  'Etc/Universal',\n  'Etc/UTC',\n  'Etc/Zulu',\n  'Europe/Amsterdam',\n  'Europe/Andorra',\n  'Europe/Astrakhan',\n  'Europe/Athens',\n  'Europe/Belfast',\n  'Europe/Belgrade',\n  'Europe/Berlin',\n  'Europe/Bratislava',\n  'Europe/Brussels',\n  'Europe/Bucharest',\n  'Europe/Budapest',\n  'Europe/Busingen',\n  'Europe/Chisinau',\n  'Europe/Copenhagen',\n  'Europe/Dublin',\n  'Europe/Gibraltar',\n  'Europe/Guernsey',\n  'Europe/Helsinki',\n  'Europe/Isle_of_Man',\n  'Europe/Istanbul',\n  'Europe/Jersey',\n  'Europe/Kaliningrad',\n  'Europe/Kiev',\n  'Europe/Kirov',\n  'Europe/Lisbon',\n  'Europe/Ljubljana',\n  'Europe/London',\n  'Europe/Luxembourg',\n  'Europe/Madrid',\n  'Europe/Malta',\n  'Europe/Mariehamn',\n  'Europe/Minsk',\n  'Europe/Monaco',\n  'Europe/Moscow',\n  'Asia/Nicosia',\n  'Europe/Oslo',\n  'Europe/Paris',\n  'Europe/Podgorica',\n  'Europe/Prague',\n  'Europe/Riga',\n  'Europe/Rome',\n  'Europe/Samara',\n  'Europe/San_Marino',\n  'Europe/Sarajevo',\n  'Europe/Saratov',\n  'Europe/Simferopol',\n  'Europe/Skopje',\n  'Europe/Sofia',\n  'Europe/Stockholm',\n  'Europe/Tallinn',\n  'Europe/Tirane',\n  'Europe/Tiraspol',\n  'Europe/Ulyanovsk',\n  'Europe/Uzhgorod',\n  'Europe/Vaduz',\n  'Europe/Vatican',\n  'Europe/Vienna',\n  'Europe/Vilnius',\n  'Europe/Volgograd',\n  'Europe/Warsaw',\n  'Europe/Zagreb',\n  'Europe/Zaporozhye',\n  'Europe/Zurich',\n  'GB',\n  'GB-Eire',\n  'GMT',\n  'GMT+0',\n  'GMT0',\n  'GMT−0',\n  'Greenwich',\n  'Hongkong',\n  'HST',\n  'Iceland',\n  'Indian/Antananarivo',\n  'Indian/Chagos',\n  'Indian/Christmas',\n  'Indian/Cocos',\n  'Indian/Comoro',\n  'Indian/Kerguelen',\n  'Indian/Mahe',\n  'Indian/Maldives',\n  'Indian/Mauritius',\n  'Indian/Mayotte',\n  'Indian/Reunion',\n  'Iran',\n  'Israel',\n  'Jamaica',\n  'Japan',\n  'Kwajalein',\n  'Libya',\n  'MET',\n  'Mexico/BajaNorte',\n  'Mexico/BajaSur',\n  'Mexico/General',\n  'MST',\n  'MST7MDT',\n  'Navajo',\n  'NZ',\n  'NZ-CHAT',\n  'Pacific/Apia',\n  'Pacific/Auckland',\n  'Pacific/Bougainville',\n  'Pacific/Chatham',\n  'Pacific/Chuuk',\n  'Pacific/Easter',\n  'Pacific/Efate',\n  'Pacific/Enderbury',\n  'Pacific/Fakaofo',\n  'Pacific/Fiji',\n  'Pacific/Funafuti',\n  'Pacific/Galapagos',\n  'Pacific/Gambier',\n  'Pacific/Guadalcanal',\n  'Pacific/Guam',\n  'Pacific/Honolulu',\n  'Pacific/Johnston',\n  'Pacific/Kiritimati',\n  'Pacific/Kosrae',\n  'Pacific/Kwajalein',\n  'Pacific/Majuro',\n  'Pacific/Marquesas',\n  'Pacific/Midway',\n  'Pacific/Nauru',\n  'Pacific/Niue',\n  'Pacific/Norfolk',\n  'Pacific/Noumea',\n  'Pacific/Pago_Pago',\n  'Pacific/Palau',\n  'Pacific/Pitcairn',\n  'Pacific/Pohnpei',\n  'Pacific/Ponape',\n  'Pacific/Port_Moresby',\n  'Pacific/Rarotonga',\n  'Pacific/Saipan',\n  'Pacific/Samoa',\n  'Pacific/Tahiti',\n  'Pacific/Tarawa',\n  'Pacific/Tongatapu',\n  'Pacific/Truk',\n  'Pacific/Wake',\n  'Pacific/Wallis',\n  'Pacific/Yap',\n  'Poland',\n  'Portugal',\n  'PRC',\n  'PST8PDT',\n  'ROC',\n  'ROK',\n  'Singapore',\n  'Turkey',\n  'UCT',\n  'Universal',\n  'US/Alaska',\n  'US/Aleutian',\n  'US/Arizona',\n  'US/Central',\n  'US/Eastern',\n  'US/East-Indiana',\n  'US/Hawaii',\n  'US/Indiana-Starke',\n  'US/Michigan',\n  'US/Mountain',\n  'US/Pacific',\n  'US/Pacific-New',\n  'US/Samoa',\n  'UTC',\n  'WET',\n  'W-SU',\n  'Zulu',\n]\n","import axios, {AxiosResponse, Method} from 'axios'\nimport {getAPIBasepath} from 'src/utils/basepath'\n\n// do not prefix route with basepath, ex. for external links\nconst addBasepath = (url, excludeBasepath): string => {\n  return excludeBasepath ? url : `${getAPIBasepath()}${url}`\n}\n\ninterface RequestParams {\n  url?: string | string[]\n  resource?: string | null\n  id?: string | null\n  method?: Method\n  data?: object | string\n  params?: object\n  headers?: object\n  auth?: {username: string; password: string}\n}\n\nasync function AJAX<T = any>(\n  {\n    url,\n    method = 'GET',\n    data = {},\n    params = {},\n    headers = {},\n    auth = null,\n  }: RequestParams,\n  excludeBasepath = false\n): Promise<T | AxiosResponse<T>> {\n  try {\n    url = addBasepath(url, excludeBasepath)\n\n    const response = await axios.request<T>({\n      url,\n      method,\n      data,\n      params,\n      headers,\n      auth,\n    })\n\n    return response\n  } catch (error) {\n    const {response} = error\n    throw response\n  }\n}\n\nexport async function getAJAX<T = any>(url: string): Promise<AxiosResponse<T>> {\n  try {\n    return await axios.request<T>({method: 'GET', url: addBasepath(url, false)})\n  } catch (error) {\n    console.error(error)\n    throw error\n  }\n}\n\nexport default AJAX\n","// Types\nimport {NormalizedSchema} from 'normalizr'\nimport {RemoteDataState, CellEntities} from 'src/types'\nimport {setLabelOnResource} from 'src/labels/actions/creators'\n\nexport const SET_CELL = 'SET_CELL'\nexport const SET_CELLS = 'SET_CELLS'\nexport const REMOVE_CELL = 'REMOVE_CELL'\n\nexport type Action =\n  | ReturnType<typeof setCell>\n  | ReturnType<typeof removeCell>\n  | ReturnType<typeof setCells>\n  | ReturnType<typeof setLabelOnResource>\n\n// R is the type of the value of the \"result\" key in normalizr's normalization\ntype CellSchema<R extends string | string[]> = NormalizedSchema<CellEntities, R>\n\nexport const setCell = (\n  id: string,\n  status: RemoteDataState,\n  schema?: CellSchema<string>\n) => ({type: SET_CELL, id, status, schema} as const)\n\ntype RemoveCellArgs = {dashboardID: string; id: string}\nexport const removeCell = ({dashboardID, id}: RemoveCellArgs) =>\n  ({\n    type: REMOVE_CELL,\n    dashboardID,\n    id,\n  } as const)\n\nexport const setCells = (\n  dashboardID: string,\n  status: RemoteDataState,\n  schema?: CellSchema<string[]>\n) =>\n  ({\n    type: SET_CELLS,\n    dashboardID,\n    status,\n    schema,\n  } as const)\n","import _ from 'lodash'\n\n// Constants\nimport {\n  telegrafPluginsInfo,\n  pluginsByBundle,\n} from 'src/dataLoaders/constants/pluginConfigs'\n\n// Types\nimport {\n  TelegrafPluginName,\n  ConfigFields,\n  Plugin,\n  BundleName,\n} from 'src/types/dataLoaders'\n\nexport const getConfigFields = (\n  pluginName: TelegrafPluginName\n): ConfigFields => {\n  return telegrafPluginsInfo[pluginName].fields\n}\n\nexport const updateConfigFields = <T extends Plugin>(\n  plugin: T,\n  fieldName: string,\n  value: string[] | string\n): T => {\n  return Object.assign({}, plugin, {\n    config: Object.assign({}, _.get(plugin, 'config', {}), {\n      [fieldName]: value,\n    }),\n  })\n}\n\nexport const createNewPlugin = (name: TelegrafPluginName): Plugin => {\n  return telegrafPluginsInfo[name].defaults\n}\n\nexport const isPluginUniqueToBundle = (\n  telegrafPlugin: TelegrafPluginName,\n  bundle: BundleName,\n  bundles: BundleName[]\n): boolean => {\n  return bundles.reduce((acc: boolean, b) => {\n    if (b === bundle) {\n      return acc\n    }\n\n    pluginsByBundle[b].forEach(p => {\n      if (p === telegrafPlugin) {\n        acc = false\n      }\n    })\n\n    return acc\n  }, true)\n}\n\nexport const isPluginInBundle = (\n  telegrafPlugin: TelegrafPluginName,\n  bundle: BundleName\n) => {\n  return !!pluginsByBundle[bundle].find(p => p === telegrafPlugin)\n}\n","export const validateURI = (value: string): boolean => {\n  const regex = /http[s]?:\\/\\//\n\n  if (regex.test(value)) {\n    return true\n  }\n  return false\n}\n","// Libraries\nimport {NormalizedSchema} from 'normalizr'\n\n// Types\nimport {RemoteDataState, TelegrafEntities} from 'src/types'\nimport {Action as NotifyAction} from 'src/shared/actions/notifications'\n\nexport const SET_TELEGRAFS = 'SET_TELEGRAFS'\nexport const ADD_TELEGRAF = 'ADD_TELEGRAF'\nexport const EDIT_TELEGRAF = 'EDIT_TELEGRAF'\nexport const REMOVE_TELEGRAF = 'REMOVE_TELEGRAF'\nexport const SET_CURRENT_CONFIG = 'SET_CURRENT_CONFIG'\n\nexport type Action =\n  | ReturnType<typeof setTelegrafs>\n  | ReturnType<typeof addTelegraf>\n  | ReturnType<typeof editTelegraf>\n  | ReturnType<typeof removeTelegraf>\n  | ReturnType<typeof setCurrentConfig>\n  | NotifyAction\n\nexport const setTelegrafs = (\n  status: RemoteDataState,\n  schema?: NormalizedSchema<TelegrafEntities, string[]>\n) =>\n  ({\n    type: SET_TELEGRAFS,\n    status,\n    schema,\n  } as const)\n\nexport const addTelegraf = (\n  schema: NormalizedSchema<TelegrafEntities, string>\n) =>\n  ({\n    type: ADD_TELEGRAF,\n    schema,\n  } as const)\n\nexport const editTelegraf = (\n  schema: NormalizedSchema<TelegrafEntities, string>\n) =>\n  ({\n    type: EDIT_TELEGRAF,\n    schema,\n  } as const)\n\nexport const removeTelegraf = (id: string) =>\n  ({\n    type: REMOVE_TELEGRAF,\n    id,\n  } as const)\n\nexport const setCurrentConfig = (status: RemoteDataState, item?: string) =>\n  ({\n    type: SET_CURRENT_CONFIG,\n    status,\n    item,\n  } as const)\n","// Types\nimport {RemoteDataState, AuthEntities} from 'src/types'\nimport {NormalizedSchema} from 'normalizr'\n\nexport const SET_AUTH = 'SET_AUTH'\nexport const ADD_AUTH = 'ADD_AUTH'\nexport const EDIT_AUTH = 'EDIT_AUTH'\nexport const REMOVE_AUTH = 'REMOVE_AUTH'\n\nexport type Action =\n  | ReturnType<typeof setAuthorizations>\n  | ReturnType<typeof addAuthorization>\n  | ReturnType<typeof editAuthorization>\n  | ReturnType<typeof removeAuthorization>\n\nexport const setAuthorizations = (\n  status: RemoteDataState,\n  schema?: NormalizedSchema<AuthEntities, string[]>\n) =>\n  ({\n    type: SET_AUTH,\n    status,\n    schema,\n  } as const)\n\nexport const addAuthorization = (\n  schema: NormalizedSchema<AuthEntities, string>\n) =>\n  ({\n    type: ADD_AUTH,\n    schema,\n  } as const)\n\nexport const editAuthorization = (\n  schema: NormalizedSchema<AuthEntities, string>\n) =>\n  ({\n    type: EDIT_AUTH,\n    schema,\n  } as const)\n\nexport const removeAuthorization = (id: string) =>\n  ({\n    type: REMOVE_AUTH,\n    id,\n  } as const)\n","// APIs\nimport * as api from 'src/client'\n\n// Types\nimport {Cell, View, NewView, RemoteDataState} from 'src/types'\n\nexport const getView = async (\n  dashboardID: string,\n  cellID: string\n): Promise<View> => {\n  const resp = await api.getDashboardsCellsView({dashboardID, cellID})\n\n  if (resp.status !== 200) {\n    throw new Error(resp.data.message)\n  }\n\n  return {...resp.data, dashboardID, cellID, status: RemoteDataState.Done}\n}\n\nexport const updateView = async (\n  dashboardID: string,\n  cellID: string,\n  view: NewView\n): Promise<View> => {\n  const resp = await api.patchDashboardsCellsView({\n    dashboardID,\n    cellID,\n    data: view as View,\n  })\n\n  if (resp.status !== 200) {\n    throw new Error(resp.data.message)\n  }\n\n  const viewWithIDs: View = {\n    ...resp.data,\n    dashboardID,\n    cellID,\n    status: RemoteDataState.Done,\n  }\n\n  return viewWithIDs\n}\n\nexport const cloneUtilFunc = async (\n  cells: Cell[],\n  oldDashID: string,\n  clonedDashID: string\n) => {\n  const pendingViews = cells.map(cell =>\n    api\n      .getDashboardsCellsView({\n        dashboardID: oldDashID,\n        cellID: cell.id,\n      })\n      .then(res => {\n        return {\n          ...res,\n          cellID: cell.id,\n        }\n      })\n  )\n  const views = await Promise.all(pendingViews)\n\n  if (views.length > 0 && views.some(v => v.status !== 200)) {\n    throw new Error('An error occurred cloning the dashboard')\n  }\n\n  return views.map(async v => {\n    const view = v.data as View\n    const cell = cells.find(c => c.id === view.id)\n\n    if (cell) {\n      const newCell = await api.postDashboardsCell({\n        dashboardID: clonedDashID,\n        data: cell,\n      })\n\n      if (newCell.status !== 201) {\n        throw new Error('An error occurred cloning the dashboard')\n      }\n\n      return api.patchDashboardsCellsView({\n        dashboardID: clonedDashID,\n        cellID: newCell.data.id,\n        data: view,\n      })\n    }\n  })\n}\n","// Libraries\nimport {normalize} from 'normalizr'\n\n// APIs\nimport {\n  getView as getViewAJAX,\n  updateView as updateViewAJAX,\n} from 'src/dashboards/apis'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\nimport {viewSchema} from 'src/schemas'\n\n// Actions\nimport {notify} from 'src/shared/actions/notifications'\nimport {setActiveTimeMachine} from 'src/timeMachine/actions'\nimport {executeQueries} from 'src/timeMachine/actions/queries'\nimport {setView, Action} from 'src/views/actions/creators'\n\n// Selectors\nimport {getViewsForDashboard} from 'src/views/selectors'\nimport {getTimeRangeByDashboardID} from 'src/dashboards/selectors/index'\nimport {getByID} from 'src/resources/selectors'\n\nimport {refreshDashboardVariableValues} from 'src/dashboards/actions/thunks'\n\n// Types\nimport {\n  RemoteDataState,\n  QueryView,\n  GetState,\n  View,\n  ViewEntities,\n  TimeMachineID,\n  ResourceType,\n} from 'src/types'\nimport {Dispatch} from 'redux'\n\nexport const getView = (dashboardID: string, cellID: string) => async (\n  dispatch: Dispatch<Action>\n): Promise<void> => {\n  dispatch(setView(cellID, RemoteDataState.Loading))\n  try {\n    const view = await getViewAJAX(dashboardID, cellID)\n\n    const normView = normalize<View, ViewEntities, string>(view, viewSchema)\n\n    dispatch(setView(cellID, RemoteDataState.Done, normView))\n  } catch {\n    dispatch(setView(cellID, RemoteDataState.Error))\n  }\n}\n\nexport const updateView = (dashboardID: string, view: View) => async (\n  dispatch: Dispatch<Action>\n): Promise<View> => {\n  const viewID = view.cellID\n\n  dispatch(setView(viewID, RemoteDataState.Loading))\n\n  try {\n    const newView = await updateViewAJAX(dashboardID, viewID, view)\n\n    const normView = normalize<View, ViewEntities, string>(newView, viewSchema)\n\n    dispatch(setView(viewID, RemoteDataState.Done, normView))\n\n    return newView\n  } catch (error) {\n    console.error(error)\n    dispatch(setView(viewID, RemoteDataState.Error))\n  }\n}\n\nexport const updateViewAndVariables = (\n  dashboardID: string,\n  view: View\n) => async (dispatch, getState: GetState) => {\n  const cellID = view.cellID\n\n  try {\n    const newView = await updateViewAJAX(dashboardID, cellID, view)\n\n    const views = getViewsForDashboard(getState(), dashboardID)\n\n    views.splice(views.findIndex(v => v.id === newView.id), 1, newView)\n\n    await dispatch(refreshDashboardVariableValues(dashboardID, views))\n\n    const normView = normalize<View, ViewEntities, string>(newView, viewSchema)\n\n    dispatch(setView(cellID, RemoteDataState.Done, normView))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.cellUpdateFailed()))\n    dispatch(setView(cellID, RemoteDataState.Error))\n  }\n}\n\nexport const getViewForTimeMachine = (\n  dashboardID: string,\n  cellID: string,\n  timeMachineID: TimeMachineID\n) => async (dispatch, getState: GetState): Promise<void> => {\n  try {\n    const state = getState()\n    let view = getByID<View>(state, ResourceType.Views, cellID) as QueryView\n\n    const timeRange = getTimeRangeByDashboardID(state, dashboardID)\n\n    if (!view) {\n      dispatch(setView(cellID, RemoteDataState.Loading))\n      view = (await getViewAJAX(dashboardID, cellID)) as QueryView\n    }\n\n    dispatch(setActiveTimeMachine(timeMachineID, {view, timeRange}))\n    dispatch(executeQueries(dashboardID))\n  } catch (error) {\n    dispatch(notify(copy.getViewFailed(error.message)))\n    dispatch(setView(cellID, RemoteDataState.Error))\n  }\n}\n","// Libraries\nimport {get} from 'lodash'\n\n// APIs\nimport {runQuery, RunQueryResult} from 'src/shared/apis/query'\nimport {parseResponse} from 'src/shared/parsing/flux/response'\n\n// Utils\nimport {getTimeRangeVars} from 'src/variables/utils/getTimeRangeVars'\nimport {formatExpression} from 'src/variables/utils/formatExpression'\nimport {tagToFlux} from 'src/timeMachine/utils/queryBuilder'\n\n// Types\nimport {TimeRange, BuilderConfig} from 'src/types'\nimport {CancelBox} from 'src/types/promises'\nimport {pastThirtyDaysTimeRange} from 'src/shared/constants/timeRanges'\n\nconst DEFAULT_TIME_RANGE: TimeRange = pastThirtyDaysTimeRange\nconst DEFAULT_LIMIT = 200\n\nexport interface FindBucketsOptions {\n  url: string\n  orgID: string\n}\n\nexport function findBuckets({orgID}: FindBucketsOptions): CancelBox<string[]> {\n  const query = `buckets()\n  |> sort(columns: [\"name\"])\n  |> limit(n: ${DEFAULT_LIMIT})`\n\n  return extractBoxedCol(runQuery(orgID, query), 'name')\n}\n\nexport interface FindKeysOptions {\n  url: string\n  orgID: string\n  bucket: string\n  tagsSelections: BuilderConfig['tags']\n  searchTerm?: string\n  timeRange?: TimeRange\n  limit?: number\n}\n\nexport function findKeys({\n  orgID,\n  bucket,\n  tagsSelections,\n  searchTerm = '',\n  timeRange = DEFAULT_TIME_RANGE,\n  limit = DEFAULT_LIMIT,\n}: FindKeysOptions): CancelBox<string[]> {\n  const tagFilters = formatTagFilterPredicate(tagsSelections)\n  const searchFilter = formatSearchFilterCall(searchTerm)\n  const previousKeyFilter = formatTagKeyFilterCall(tagsSelections)\n  const timeRangeArguments = formatTimeRangeArguments(timeRange)\n\n  // TODO: Use the `v1.tagKeys` function from the Flux standard library once\n  // this issue is resolved: https://github.com/influxdata/flux/issues/1071\n  const query = `from(bucket: \"${bucket}\")\n  |> range(${timeRangeArguments})\n  |> filter(fn: ${tagFilters})\n  |> keys()\n  |> keep(columns: [\"_value\"])\n  |> distinct()${searchFilter}${previousKeyFilter}\n  |> filter(fn: (r) => r._value != \"_time\" and r._value != \"_start\" and r._value !=  \"_stop\" and r._value != \"_value\")\n  |> sort()\n  |> limit(n: ${limit})`\n\n  return extractBoxedCol(runQuery(orgID, query), '_value')\n}\n\nexport interface FindValuesOptions {\n  url: string\n  orgID: string\n  bucket: string\n  tagsSelections: BuilderConfig['tags']\n  key: string\n  searchTerm?: string\n  timeRange?: TimeRange\n  limit?: number\n}\n\nexport function findValues({\n  orgID,\n  bucket,\n  tagsSelections,\n  key,\n  searchTerm = '',\n  timeRange = DEFAULT_TIME_RANGE,\n  limit = DEFAULT_LIMIT,\n}: FindValuesOptions): CancelBox<string[]> {\n  const tagFilters = formatTagFilterPredicate(tagsSelections)\n  const searchFilter = formatSearchFilterCall(searchTerm)\n  const timeRangeArguments = formatTimeRangeArguments(timeRange)\n\n  // TODO: Use the `v1.tagValues` function from the Flux standard library once\n  // this issue is resolved: https://github.com/influxdata/flux/issues/1071\n  const query = `from(bucket: \"${bucket}\")\n  |> range(${timeRangeArguments})\n  |> filter(fn: ${tagFilters})\n  |> keep(columns: [\"${key}\"])\n  |> group()\n  |> distinct(column: \"${key}\")${searchFilter}\n  |> limit(n: ${limit})\n  |> sort()`\n\n  return extractBoxedCol(runQuery(orgID, query), '_value')\n}\n\nexport function extractBoxedCol(\n  resp: CancelBox<RunQueryResult>,\n  colName: string\n): CancelBox<string[]> {\n  const promise = resp.promise.then<string[]>(result => {\n    if (result.type !== 'SUCCESS') {\n      return Promise.reject(new Error(result.message))\n    }\n\n    return extractCol(result.csv, colName)\n  })\n\n  return {promise, cancel: resp.cancel}\n}\n\nexport function extractCol(csv: string, colName: string): string[] {\n  const tables = parseResponse(csv)\n  const data = get(tables, '0.data', [])\n\n  if (!data.length) {\n    return []\n  }\n\n  const colIndex = data[0].findIndex(d => d === colName)\n\n  if (colIndex === -1) {\n    throw new Error(`could not find column \"${colName}\" in response`)\n  }\n\n  const colValues: string[] = []\n\n  for (let i = 1; i < data.length; i++) {\n    colValues.push(data[i][colIndex])\n  }\n\n  return colValues\n}\n\nexport function formatTagFilterPredicate(\n  tagsSelections: BuilderConfig['tags']\n) {\n  const validSelections = tagsSelections.filter(\n    ({key, values}) => key && values.length\n  )\n\n  if (!validSelections.length) {\n    return '(r) => true'\n  }\n\n  const calls = validSelections.map(tag => `(${tagToFlux(tag)})`).join(' and ')\n\n  return `(r) => ${calls}`\n}\n\nexport function formatTagKeyFilterCall(tagsSelections: BuilderConfig['tags']) {\n  const keys = tagsSelections.map(({key}) => key)\n\n  if (!keys.length) {\n    return ''\n  }\n\n  const fnBody = keys.map(key => `r._value != \"${key}\"`).join(' and ')\n\n  return `\\n  |> filter(fn: (r) => ${fnBody})`\n}\n\nexport function formatSearchFilterCall(searchTerm: string) {\n  if (!searchTerm) {\n    return ''\n  }\n\n  return `\\n  |> filter(fn: (r) => r._value =~ /(?i:${searchTerm})/)`\n}\n\nexport function formatTimeRangeArguments(timeRange: TimeRange): string {\n  const [start, stop] = getTimeRangeVars(timeRange).map(assignment =>\n    formatExpression(assignment.init)\n  )\n\n  return `start: ${start}, stop: ${stop}`\n}\n","// Libraries\nimport {NumericColumnData} from '@influxdata/giraffe'\nimport {useMemo} from 'react'\n\n// Utils\nimport {parseDuration} from 'src/shared/utils/duration'\nimport {useOneWayState} from 'src/shared/utils/useOneWayState'\nimport {extent} from 'src/shared/utils/vis'\nimport {flatMap} from 'lodash'\n\n// Types\nimport {Threshold, DurationTimeRange} from 'src/types'\n\nconst POINTS_PER_CHECK_PLOT = 300\n\n/*\n  Given the duration in a check's `every` field, return a `TimeRange` suitable\n  for visualizing the input data to the check.\n\n  For example, suppose a check has an `every` value of `1m`. Then the check is\n  run once per minute, and the input data to the `check` for each run is a\n  single value aggregated from the last `1m`. To display a visualization of the\n  check data over time, we want to show a series of the values aggregated for\n  each minute. So to display a plot with say, 300 points, we need to query a\n  time range of the last 300 minutes.\n*/\nexport const getCheckVisTimeRange = (\n  durationStr: string\n): DurationTimeRange => {\n  const durationMultiple = parseDuration(durationStr)\n    .map(({magnitude, unit}) => `${magnitude * POINTS_PER_CHECK_PLOT}${unit}`)\n    .join('')\n\n  const lower = `now() - ${durationMultiple}`\n\n  return {upper: null, lower, type: 'duration'}\n}\n\n/*\n  Obtain the y domain settings for a threshold check plot.\n\n  The y domain for a threshold check plot should be large enough to show every\n  threshold value in addition to every y value in the plot.\n*/\nexport const useCheckYDomain = (\n  data: NumericColumnData,\n  thresholds: Threshold[]\n) => {\n  const dataDomain = useMemo(() => extent(data as number[]), [data])\n\n  const initialDomain: number[] = useMemo(() => {\n    const extrema: number[] = flatMap(thresholds || [], (t: any) => [\n      t.value,\n      t.min,\n      t.max,\n    ])\n      .filter(v => v !== undefined && v !== null)\n      .concat(dataDomain)\n\n    return extent(extrema)\n  }, [dataDomain, thresholds])\n\n  const [domain, setDomain] = useOneWayState(initialDomain)\n  const resetDomain = () => setDomain(initialDomain)\n\n  return [domain, setDomain, resetDomain]\n}\n","import {useRef, useState, useEffect} from 'react'\n\n/*\n  Use local state with a default value. The state will be reset to the default\n  any time the default is updated.\n\n  It's a \"one way\" binding between the default value and state, since updating\n  the default will cause the state to update, but updating the state will not\n  cause the default to update.\n*/\nexport const useOneWayState = (defaultState: any) => {\n  const isFirstRender = useRef(true)\n  const [state, setState] = useState(defaultState)\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false\n\n      return\n    }\n\n    setState(defaultState)\n  }, [defaultState])\n\n  return [state, setState]\n}\n","import {get} from 'lodash'\n\n// Types\nimport {AlertBuilderState} from 'src/alerting/reducers/alertBuilder'\nimport {BuilderConfig} from 'src/types'\n\nexport function createCheckQueryFromAlertBuilder(\n  builderConfig: BuilderConfig,\n  {\n    statusMessageTemplate,\n    tags,\n    id,\n    name,\n    every,\n    offset,\n    type,\n    staleTime,\n    level,\n    timeSince,\n    thresholds,\n  }: AlertBuilderState\n): string {\n  const dataFrom = `data = from(bucket: \"${builderConfig.buckets[0]}\")`\n\n  const filterStatements = builderConfig.tags\n    .filter(tag => !!tag.values[0])\n    .map(tag => `  |> filter(fn: (r) => r.${tag.key} == \"${tag.values[0]}\")`)\n\n  const messageFn = `messageFn = (r) =>(\"${statusMessageTemplate}\")`\n\n  const checkTags = tags\n    ? tags\n        .filter(t => t.key && t.value)\n        .map(t => `${t.key}: \"${t.value}\"`)\n        .join(',')\n    : ''\n\n  const checkStatement = [\n    'check = {',\n    `  _check_id: \"${id || ''}\",`,\n    `  _check_name: \"${name}\",`,\n    `  _type: \"custom\",`,\n    `  tags: {${checkTags}},`,\n    `  every: ${every}`,\n    '}',\n  ]\n\n  const optionTask = [\n    'option task = {',\n    `  name: \"${name}\",`,\n    `  every: ${every}, // expected to match check.every`,\n    `  offset: ${offset}`,\n    '}',\n  ]\n\n  if (type === 'deadman') {\n    const imports = [\n      'package main',\n      'import \"influxdata/influxdb/monitor\"',\n      'import \"experimental\"',\n      'import \"influxdata/influxdb/v1\"',\n    ]\n\n    const dataRange = `  |> range(start: -${staleTime})`\n\n    const dataDefinition = [dataFrom, dataRange, ...filterStatements]\n\n    const levelFunction = `${level.toLowerCase()} = (r) => (r.dead)`\n\n    const checkLevel = `${level.toLowerCase()}:${level.toLowerCase()}`\n\n    const queryStatement = [\n      'data',\n      '  |> v1.fieldsAsCols()',\n      `  |> monitor.deadman(t: experimental.subDuration(from: now(), d: ${timeSince}))`,\n      `  |> monitor.check(data: check, messageFn: messageFn,${checkLevel})`,\n    ]\n\n    const script: string[] = [\n      imports.join('\\n'),\n      checkStatement.join('\\n'),\n      optionTask.join('\\n'),\n      levelFunction,\n      messageFn,\n      dataDefinition.join('\\n'),\n      queryStatement.join('\\n'),\n    ]\n    return script.join('\\n\\n')\n  }\n\n  if (type === 'threshold') {\n    const imports = [\n      'package main',\n      'import \"influxdata/influxdb/monitor\"',\n      'import \"influxdata/influxdb/v1\"',\n    ]\n\n    const dataRange = `  |> range(start: -check.every)`\n\n    const aggregateFunction = `  |> aggregateWindow(every: check.every, fn: ${\n      builderConfig.functions[0].name\n    }, createEmpty: false)`\n\n    const dataDefinition = [\n      dataFrom,\n      dataRange,\n      ...filterStatements,\n      aggregateFunction,\n    ]\n\n    const thresholdExpressions = thresholds.map(t => {\n      const fieldTag = builderConfig.tags.find(t => t.key === '_field')\n      const fieldSelection = get(fieldTag, 'values[0]')\n\n      const beginning = `${t.level.toLowerCase()} = (r) =>(r.${fieldSelection}`\n\n      if (t.type === 'range') {\n        if (t.within) {\n          return `${beginning} > ${t.min}) and r.${fieldSelection} < ${t.max})`\n        }\n        return `${beginning} < ${t.min} and r.${fieldSelection} > ${t.max})`\n      }\n\n      const operator = t.type === 'greater' ? '>' : '<'\n\n      return `${beginning} ${operator} ${t.value})`\n    })\n\n    const thresholdsDefined = thresholds.map(\n      t => ` ${t.level.toLowerCase()}:${t.level.toLowerCase()}`\n    )\n\n    const queryStatement = [\n      'data',\n      '  |> v1.fieldsAsCols()',\n      `  |> monitor.check(data: check, messageFn: messageFn,${thresholdsDefined})`,\n    ]\n\n    const script: string[] = [\n      imports.join('\\n'),\n      checkStatement.join('\\n'),\n      optionTask.join('\\n'),\n      thresholdExpressions.join('\\n'),\n      messageFn,\n      dataDefinition.join('\\n'),\n      queryStatement.join('\\n'),\n    ]\n\n    return script.join('\\n\\n')\n  }\n}\n","// Libraries\nimport {get, isEmpty} from 'lodash'\nimport {Dispatch} from 'react'\n\n// Actions\nimport {loadBuckets} from 'src/timeMachine/actions/queryBuilder'\nimport {saveAndExecuteQueries} from 'src/timeMachine/actions/queries'\nimport {\n  reloadTagSelectors,\n  Action as QueryBuilderAction,\n} from 'src/timeMachine/actions/queryBuilder'\nimport {setValues} from 'src/variables/actions/creators'\nimport {convertCheckToCustom} from 'src/alerting/actions/alertBuilder'\n\n// Selectors\nimport {getTimeRangeByDashboardID} from 'src/dashboards/selectors'\nimport {getActiveQuery} from 'src/timeMachine/selectors'\n\n// Utils\nimport {createView} from 'src/views/helpers'\nimport {createCheckQueryFromAlertBuilder} from 'src/alerting/utils/customCheck'\n\n// Types\nimport {TimeMachineState} from 'src/timeMachine/reducers'\nimport {Action as QueryResultsAction} from 'src/timeMachine/actions/queries'\nimport {Action as AlertBuilderAction} from 'src/alerting/actions/alertBuilder'\nimport {\n  TimeRange,\n  ViewType,\n  Axes,\n  DecimalPlaces,\n  XYGeom,\n  FieldOption,\n  TableOptions,\n  TimeMachineTab,\n  AutoRefresh,\n  TimeMachineID,\n  XYViewProperties,\n  GetState,\n  RemoteDataState,\n} from 'src/types'\nimport {Color} from 'src/types/colors'\nimport {HistogramPosition, LinePosition} from '@influxdata/giraffe'\n\nexport type Action =\n  | QueryBuilderAction\n  | QueryResultsAction\n  | SetActiveTimeMachineAction\n  | SetActiveTabAction\n  | SetNameAction\n  | SetTimeRangeAction\n  | SetAutoRefreshAction\n  | SetTypeAction\n  | SetActiveQueryText\n  | SetIsViewingRawDataAction\n  | SetGeomAction\n  | SetDecimalPlaces\n  | SetBackgroundThresholdColoringAction\n  | SetTextThresholdColoringAction\n  | SetAxes\n  | SetStaticLegend\n  | SetColors\n  | SetYAxisLabel\n  | SetYAxisBounds\n  | SetAxisPrefix\n  | SetAxisSuffix\n  | SetYAxisBase\n  | SetYAxisScale\n  | SetPrefix\n  | SetTickPrefix\n  | SetSuffix\n  | SetTickSuffix\n  | SetActiveQueryIndexAction\n  | AddQueryAction\n  | RemoveQueryAction\n  | ToggleQueryAction\n  | EditActiveQueryAsFluxAction\n  | EditActiveQueryWithBuilderAction\n  | UpdateActiveQueryNameAction\n  | SetFieldOptionsAction\n  | UpdateFieldOptionAction\n  | SetTableOptionsAction\n  | SetTimeFormatAction\n  | SetXColumnAction\n  | SetYColumnAction\n  | SetBinSizeAction\n  | SetColorHexesAction\n  | SetFillColumnsAction\n  | SetSymbolColumnsAction\n  | SetBinCountAction\n  | SetHistogramPositionAction\n  | ReturnType<typeof setLinePosition>\n  | SetXDomainAction\n  | SetYDomainAction\n  | SetXAxisLabelAction\n  | SetShadeBelowAction\n  | ReturnType<typeof toggleVisOptions>\n\ntype ExternalActions =\n  | ReturnType<typeof loadBuckets>\n  | ReturnType<typeof saveAndExecuteQueries>\n  | ReturnType<typeof setValues>\n\ninterface SetActiveTimeMachineAction {\n  type: 'SET_ACTIVE_TIME_MACHINE'\n  payload: {\n    activeTimeMachineID: TimeMachineID\n    initialState: Partial<TimeMachineState>\n  }\n}\n\nexport const setActiveTimeMachine = (\n  activeTimeMachineID: TimeMachineID,\n  initialState: Partial<TimeMachineState> = {}\n): SetActiveTimeMachineAction => ({\n  type: 'SET_ACTIVE_TIME_MACHINE',\n  payload: {activeTimeMachineID, initialState},\n})\n\ninterface SetActiveTabAction {\n  type: 'SET_ACTIVE_TAB'\n  payload: {activeTab: TimeMachineTab}\n}\n\nexport const setActiveTab = (\n  activeTab: TimeMachineTab\n): SetActiveTabAction => ({\n  type: 'SET_ACTIVE_TAB',\n  payload: {activeTab},\n})\n\nexport const toggleVisOptions = () => ({\n  type: 'TOGGLE_VIS_OPTIONS' as 'TOGGLE_VIS_OPTIONS',\n})\n\ninterface SetNameAction {\n  type: 'SET_VIEW_NAME'\n  payload: {name: string}\n}\n\nexport const setName = (name: string): SetNameAction => ({\n  type: 'SET_VIEW_NAME',\n  payload: {name},\n})\n\ninterface SetTimeRangeAction {\n  type: 'SET_TIME_RANGE'\n  payload: {timeRange: TimeRange}\n}\n\nconst setTimeRangeSync = (timeRange: TimeRange): SetTimeRangeAction => ({\n  type: 'SET_TIME_RANGE',\n  payload: {timeRange},\n})\n\nexport const setTimeRange = (timeRange: TimeRange) => dispatch => {\n  dispatch(setTimeRangeSync(timeRange))\n  dispatch(saveAndExecuteQueries())\n  dispatch(reloadTagSelectors())\n}\n\ninterface SetAutoRefreshAction {\n  type: 'SET_AUTO_REFRESH'\n  payload: {autoRefresh: AutoRefresh}\n}\n\nexport const setAutoRefresh = (\n  autoRefresh: AutoRefresh\n): SetAutoRefreshAction => ({\n  type: 'SET_AUTO_REFRESH',\n  payload: {autoRefresh},\n})\n\ninterface SetTypeAction {\n  type: 'SET_VIEW_TYPE'\n  payload: {type: ViewType}\n}\n\nexport const setType = (type: ViewType): SetTypeAction => ({\n  type: 'SET_VIEW_TYPE',\n  payload: {type},\n})\n\ninterface SetActiveQueryText {\n  type: 'SET_ACTIVE_QUERY_TEXT'\n  payload: {text: string}\n}\n\nexport const setActiveQueryText = (text: string): SetActiveQueryText => ({\n  type: 'SET_ACTIVE_QUERY_TEXT',\n  payload: {text},\n})\n\ninterface SetIsViewingRawDataAction {\n  type: 'SET_IS_VIEWING_RAW_DATA'\n  payload: {isViewingRawData: boolean}\n}\n\nexport const setIsViewingRawData = (\n  isViewingRawData: boolean\n): SetIsViewingRawDataAction => ({\n  type: 'SET_IS_VIEWING_RAW_DATA',\n  payload: {isViewingRawData},\n})\n\ninterface SetGeomAction {\n  type: 'SET_GEOM'\n  payload: {geom: XYGeom}\n}\n\nexport const setGeom = (geom: XYGeom): SetGeomAction => ({\n  type: 'SET_GEOM',\n  payload: {geom},\n})\n\ninterface SetAxes {\n  type: 'SET_AXES'\n  payload: {axes: Axes}\n}\n\nexport const setAxes = (axes: Axes): SetAxes => ({\n  type: 'SET_AXES',\n  payload: {axes},\n})\n\ninterface SetYAxisLabel {\n  type: 'SET_Y_AXIS_LABEL'\n  payload: {yAxisLabel: string}\n}\n\nexport const setYAxisLabel = (yAxisLabel: string): SetYAxisLabel => ({\n  type: 'SET_Y_AXIS_LABEL',\n  payload: {yAxisLabel},\n})\n\ninterface SetYAxisBounds {\n  type: 'SET_Y_AXIS_BOUNDS'\n  payload: {bounds: Axes['y']['bounds']}\n}\n\nexport const setYAxisBounds = (\n  bounds: Axes['y']['bounds']\n): SetYAxisBounds => ({\n  type: 'SET_Y_AXIS_BOUNDS',\n  payload: {bounds},\n})\n\ninterface SetAxisPrefix {\n  type: 'SET_AXIS_PREFIX'\n  payload: {prefix: string; axis: 'x' | 'y'}\n}\n\nexport const setAxisPrefix = (\n  prefix: string,\n  axis: 'x' | 'y'\n): SetAxisPrefix => ({\n  type: 'SET_AXIS_PREFIX',\n  payload: {prefix, axis},\n})\n\ninterface SetAxisSuffix {\n  type: 'SET_AXIS_SUFFIX'\n  payload: {suffix: string; axis: 'x' | 'y'}\n}\n\nexport const setAxisSuffix = (\n  suffix: string,\n  axis: 'x' | 'y'\n): SetAxisSuffix => ({\n  type: 'SET_AXIS_SUFFIX',\n  payload: {suffix, axis},\n})\n\ninterface SetYAxisBase {\n  type: 'SET_Y_AXIS_BASE'\n  payload: {base: string}\n}\n\nexport const setYAxisBase = (base: string): SetYAxisBase => ({\n  type: 'SET_Y_AXIS_BASE',\n  payload: {base},\n})\n\ninterface SetYAxisScale {\n  type: 'SET_Y_AXIS_SCALE'\n  payload: {scale: string}\n}\n\nexport const setYAxisScale = (scale: string): SetYAxisScale => ({\n  type: 'SET_Y_AXIS_SCALE',\n  payload: {scale},\n})\n\ninterface SetPrefix {\n  type: 'SET_PREFIX'\n  payload: {prefix: string}\n}\n\nexport const setPrefix = (prefix: string): SetPrefix => ({\n  type: 'SET_PREFIX',\n  payload: {prefix},\n})\n\ninterface SetTickPrefix {\n  type: 'SET_TICK_PREFIX'\n  payload: {tickPrefix: string}\n}\n\nexport const setTickPrefix = (tickPrefix: string): SetTickPrefix => ({\n  type: 'SET_TICK_PREFIX',\n  payload: {tickPrefix},\n})\n\ninterface SetSuffix {\n  type: 'SET_SUFFIX'\n  payload: {suffix: string}\n}\n\nexport const setSuffix = (suffix: string): SetSuffix => ({\n  type: 'SET_SUFFIX',\n  payload: {suffix},\n})\n\ninterface SetTickSuffix {\n  type: 'SET_TICK_SUFFIX'\n  payload: {tickSuffix: string}\n}\n\nexport const setTickSuffix = (tickSuffix: string): SetTickSuffix => ({\n  type: 'SET_TICK_SUFFIX',\n  payload: {tickSuffix},\n})\n\ninterface SetStaticLegend {\n  type: 'SET_STATIC_LEGEND'\n  payload: {staticLegend: boolean}\n}\n\nexport const setStaticLegend = (staticLegend: boolean): SetStaticLegend => ({\n  type: 'SET_STATIC_LEGEND',\n  payload: {staticLegend},\n})\n\ninterface SetColors {\n  type: 'SET_COLORS'\n  payload: {colors: Color[]}\n}\n\nexport const setColors = (colors: Color[]): SetColors => ({\n  type: 'SET_COLORS',\n  payload: {colors},\n})\n\ninterface SetDecimalPlaces {\n  type: 'SET_DECIMAL_PLACES'\n  payload: {decimalPlaces: DecimalPlaces}\n}\n\nexport const setDecimalPlaces = (\n  decimalPlaces: DecimalPlaces\n): SetDecimalPlaces => ({\n  type: 'SET_DECIMAL_PLACES',\n  payload: {decimalPlaces},\n})\n\ninterface SetBackgroundThresholdColoringAction {\n  type: 'SET_BACKGROUND_THRESHOLD_COLORING'\n}\n\nexport const setBackgroundThresholdColoring = (): SetBackgroundThresholdColoringAction => ({\n  type: 'SET_BACKGROUND_THRESHOLD_COLORING',\n})\n\ninterface SetTextThresholdColoringAction {\n  type: 'SET_TEXT_THRESHOLD_COLORING'\n}\n\nexport const setTextThresholdColoring = (): SetTextThresholdColoringAction => ({\n  type: 'SET_TEXT_THRESHOLD_COLORING',\n})\n\ninterface EditActiveQueryWithBuilderAction {\n  type: 'EDIT_ACTIVE_QUERY_WITH_BUILDER'\n}\n\nexport const editActiveQueryWithBuilderSync = (): EditActiveQueryWithBuilderAction => ({\n  type: 'EDIT_ACTIVE_QUERY_WITH_BUILDER',\n})\n\nexport const editActiveQueryWithBuilder = () => dispatch => {\n  dispatch(editActiveQueryWithBuilderSync())\n  dispatch(saveAndExecuteQueries())\n}\n\ninterface EditActiveQueryAsFluxAction {\n  type: 'EDIT_ACTIVE_QUERY_AS_FLUX'\n}\n\nexport const editActiveQueryAsFlux = (): EditActiveQueryAsFluxAction => ({\n  type: 'EDIT_ACTIVE_QUERY_AS_FLUX',\n})\n\ninterface SetActiveQueryIndexAction {\n  type: 'SET_ACTIVE_QUERY_INDEX'\n  payload: {activeQueryIndex: number}\n}\n\nexport const setActiveQueryIndexSync = (\n  activeQueryIndex: number\n): SetActiveQueryIndexAction => ({\n  type: 'SET_ACTIVE_QUERY_INDEX',\n  payload: {activeQueryIndex},\n})\n\nexport const setActiveQueryIndex = (activeQueryIndex: number) => (\n  dispatch: Dispatch<Action | ExternalActions>\n) => {\n  dispatch(setActiveQueryIndexSync(activeQueryIndex))\n  dispatch(loadBuckets())\n}\n\ninterface AddQueryAction {\n  type: 'ADD_QUERY'\n}\n\nexport const addQuerySync = (): AddQueryAction => ({\n  type: 'ADD_QUERY',\n})\n\nexport const addQuery = () => (\n  dispatch: Dispatch<Action | ExternalActions>\n) => {\n  dispatch(addQuerySync())\n  dispatch(loadBuckets())\n}\n\ninterface RemoveQueryAction {\n  type: 'REMOVE_QUERY'\n  payload: {queryIndex: number}\n}\n\nexport const removeQuerySync = (queryIndex: number): RemoveQueryAction => ({\n  type: 'REMOVE_QUERY',\n  payload: {queryIndex},\n})\n\ninterface ToggleQueryAction {\n  type: 'TOGGLE_QUERY'\n  payload: {queryIndex: number}\n}\n\nexport const toggleQuerySync = (queryIndex: number): ToggleQueryAction => ({\n  type: 'TOGGLE_QUERY',\n  payload: {queryIndex},\n})\n\nexport const removeQuery = (queryIndex: number) => (\n  dispatch: Dispatch<Action | ExternalActions>\n) => {\n  dispatch(removeQuerySync(queryIndex))\n  dispatch(loadBuckets())\n  dispatch(saveAndExecuteQueries())\n}\n\nexport const toggleQuery = (queryIndex: number) => (\n  dispatch: Dispatch<Action | ExternalActions>\n) => {\n  dispatch(toggleQuerySync(queryIndex))\n  dispatch(saveAndExecuteQueries())\n}\n\ninterface UpdateActiveQueryNameAction {\n  type: 'UPDATE_ACTIVE_QUERY_NAME'\n  payload: {queryName: string}\n}\n\nexport const updateActiveQueryName = (\n  queryName: string\n): UpdateActiveQueryNameAction => ({\n  type: 'UPDATE_ACTIVE_QUERY_NAME',\n  payload: {queryName},\n})\n\ninterface SetFieldOptionsAction {\n  type: 'SET_FIELD_OPTIONS'\n  payload: {\n    fieldOptions: FieldOption[]\n  }\n}\n\nexport const setFieldOptions = (\n  fieldOptions: FieldOption[]\n): SetFieldOptionsAction => ({\n  type: 'SET_FIELD_OPTIONS',\n  payload: {fieldOptions},\n})\n\ninterface UpdateFieldOptionAction {\n  type: 'UPDATE_FIELD_OPTION'\n  payload: {\n    option: FieldOption\n  }\n}\n\nexport const updateFieldOption = (\n  option: FieldOption\n): UpdateFieldOptionAction => ({\n  type: 'UPDATE_FIELD_OPTION',\n  payload: {option},\n})\n\ninterface SetTableOptionsAction {\n  type: 'SET_TABLE_OPTIONS'\n  payload: {\n    tableOptions: TableOptions\n  }\n}\n\nexport const setTableOptions = (\n  tableOptions: TableOptions\n): SetTableOptionsAction => ({\n  type: 'SET_TABLE_OPTIONS',\n  payload: {tableOptions},\n})\n\ninterface SetTimeFormatAction {\n  type: 'SET_TIME_FORMAT'\n  payload: {\n    timeFormat: string\n  }\n}\n\nexport const setTimeFormat = (timeFormat: string): SetTimeFormatAction => ({\n  type: 'SET_TIME_FORMAT',\n  payload: {timeFormat},\n})\n\ninterface SetXColumnAction {\n  type: 'SET_X_COLUMN'\n  payload: {xColumn: string}\n}\n\nexport const setXColumn = (xColumn: string): SetXColumnAction => ({\n  type: 'SET_X_COLUMN',\n  payload: {xColumn},\n})\n\ninterface SetYColumnAction {\n  type: 'SET_Y_COLUMN'\n  payload: {yColumn: string}\n}\n\nexport const setYColumn = (yColumn: string): SetYColumnAction => ({\n  type: 'SET_Y_COLUMN',\n  payload: {yColumn},\n})\n\ninterface SetShadeBelowAction {\n  type: 'SET_SHADE_BELOW'\n  payload: {shadeBelow}\n}\n\nexport const setShadeBelow = (shadeBelow: boolean): SetShadeBelowAction => ({\n  type: 'SET_SHADE_BELOW',\n  payload: {shadeBelow},\n})\n\ninterface SetBinSizeAction {\n  type: 'SET_BIN_SIZE'\n  payload: {binSize: number}\n}\n\nexport const setBinSize = (binSize: number): SetBinSizeAction => ({\n  type: 'SET_BIN_SIZE',\n  payload: {binSize},\n})\n\ninterface SetColorHexesAction {\n  type: 'SET_COLOR_HEXES'\n  payload: {colors: string[]}\n}\n\nexport const setColorHexes = (colors: string[]): SetColorHexesAction => ({\n  type: 'SET_COLOR_HEXES',\n  payload: {colors},\n})\n\ninterface SetFillColumnsAction {\n  type: 'SET_FILL_COLUMNS'\n  payload: {fillColumns: string[]}\n}\n\nexport const setFillColumns = (\n  fillColumns: string[]\n): SetFillColumnsAction => ({\n  type: 'SET_FILL_COLUMNS',\n  payload: {fillColumns},\n})\n\ninterface SetSymbolColumnsAction {\n  type: 'SET_SYMBOL_COLUMNS'\n  payload: {symbolColumns: string[]}\n}\n\nexport const setSymbolColumns = (\n  symbolColumns: string[]\n): SetSymbolColumnsAction => ({\n  type: 'SET_SYMBOL_COLUMNS',\n  payload: {symbolColumns},\n})\n\ninterface SetBinCountAction {\n  type: 'SET_BIN_COUNT'\n  payload: {binCount: number}\n}\n\nexport const setBinCount = (binCount: number): SetBinCountAction => ({\n  type: 'SET_BIN_COUNT',\n  payload: {binCount},\n})\n\ninterface SetHistogramPositionAction {\n  type: 'SET_HISTOGRAM_POSITION'\n  payload: {position: HistogramPosition}\n}\n\nexport const setHistogramPosition = (\n  position: HistogramPosition\n): SetHistogramPositionAction => ({\n  type: 'SET_HISTOGRAM_POSITION',\n  payload: {position},\n})\n\nexport const setLinePosition = (position: LinePosition) => ({\n  type: 'SET_LINE_POSITION' as 'SET_LINE_POSITION',\n  payload: {position},\n})\n\ninterface SetXDomainAction {\n  type: 'SET_VIEW_X_DOMAIN'\n  payload: {xDomain: [number, number]}\n}\n\nexport const setXDomain = (xDomain: [number, number]): SetXDomainAction => ({\n  type: 'SET_VIEW_X_DOMAIN',\n  payload: {xDomain},\n})\n\ninterface SetYDomainAction {\n  type: 'SET_VIEW_Y_DOMAIN'\n  payload: {yDomain: [number, number]}\n}\n\nexport const setYDomain = (yDomain: [number, number]): SetYDomainAction => ({\n  type: 'SET_VIEW_Y_DOMAIN',\n  payload: {yDomain},\n})\n\ninterface SetXAxisLabelAction {\n  type: 'SET_X_AXIS_LABEL'\n  payload: {xAxisLabel: string}\n}\n\nexport const setXAxisLabel = (xAxisLabel: string): SetXAxisLabelAction => ({\n  type: 'SET_X_AXIS_LABEL',\n  payload: {xAxisLabel},\n})\n\nexport const loadNewVEO = (dashboardID: string) => (\n  dispatch: Dispatch<Action | ExternalActions>,\n  getState: GetState\n): void => {\n  const state = getState()\n  const timeRange = getTimeRangeByDashboardID(state, dashboardID)\n\n  dispatch(\n    setActiveTimeMachine('veo', {\n      view: createView<XYViewProperties>('xy'),\n      timeRange,\n    })\n  )\n\n  const values = get(\n    state,\n    `resources.variables.values.${dashboardID}.values`,\n    {}\n  )\n\n  if (!isEmpty(values)) {\n    dispatch(setValues('veo', RemoteDataState.Done, values))\n  }\n  // no need to refresh variable values since there is no query in a new view\n}\n\nexport const loadCustomCheckQueryState = () => (\n  dispatch: Dispatch<Action | AlertBuilderAction>,\n  getState: GetState\n) => {\n  const state = getState()\n\n  const {alertBuilder} = state\n\n  const {builderConfig} = getActiveQuery(state)\n\n  dispatch(\n    setActiveQueryText(\n      createCheckQueryFromAlertBuilder(builderConfig, alertBuilder)\n    )\n  )\n\n  dispatch(setType('table'))\n\n  dispatch(convertCheckToCustom())\n\n  dispatch(setActiveTab('customCheckQuery'))\n}\n","/*\n  Given Flux query response as a CSV, check if the CSV contains an error table\n  as the first result. If it does, throw the error message contained within\n  that table. \n\n  For example, given the following response:\n\n      #datatype,string,long\n      ,error,reference\n      ,Failed to parse query,897\n\n  we want to throw an error with the message \"Failed to parse query\".\n\n  See https://github.com/influxdata/flux/blob/master/docs/SPEC.md#errors.\n*/\nexport const checkQueryResult = (file: string): void => {\n  // Don't check the whole file, since it could be huge and the error table\n  // will be within the first few lines (if it exists)\n  const fileHead = file.slice(0, findNthIndex(file, '\\n', 6))\n\n  const lines = fileHead.split('\\n').filter(line => !line.startsWith('#'))\n\n  if (!lines.length || !lines[0].includes('error') || !lines[1]) {\n    return\n  }\n\n  const header = lines[0].split(',').map(s => s.trim())\n  const row = lines[1].split(',').map(s => s.trim())\n  const index = header.indexOf('error')\n\n  if (index === -1 || !row[index]) {\n    return\n  }\n\n  // Trim off extra quotes at start and end of message\n  const errorMessage = row[index].replace(/^\"/, '').replace(/\"$/, '')\n\n  throw new Error(errorMessage)\n}\n\nconst findNthIndex = (s: string, c: string, n: number) => {\n  let count = 0\n  let i = 0\n\n  while (i < s.length) {\n    if (s[i] == c) {\n      count += 1\n    }\n\n    if (count === n) {\n      return i\n    }\n\n    i += 1\n  }\n}\n","// Libraries\nimport {normalize} from 'normalizr'\n\n// API\nimport {client} from 'src/utils/api'\n\n// Schemas\nimport {arrayOfScrapers, scraperSchema} from 'src/schemas'\n\n// Types\nimport {RemoteDataState, GetState, Scraper, ScraperEntities} from 'src/types'\nimport {Dispatch} from 'react'\n\n// Actions\nimport {\n  Action as ScraperAction,\n  setScrapers,\n  addScraper,\n  editScraper,\n  removeScraper,\n} from 'src/scrapers/actions/creators'\nimport {notify, Action as NotifyAction} from 'src/shared/actions/notifications'\n\nimport {\n  scraperCreateFailed,\n  scraperCreateSuccess,\n  scraperDeleteFailed,\n  scraperDeleteSuccess,\n  scraperUpdateFailed,\n  scraperUpdateSuccess,\n} from 'src/shared/copy/notifications'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\ntype Action = ScraperAction | NotifyAction\n\nexport const getScrapers = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const org = getOrg(getState())\n\n    dispatch(setScrapers(RemoteDataState.Loading))\n\n    const resp = await client.scrapers.getAll(org.id)\n\n    const normalized = normalize<Scraper, ScraperEntities, string[]>(\n      resp,\n      arrayOfScrapers\n    )\n\n    dispatch(setScrapers(RemoteDataState.Done, normalized))\n  } catch (error) {\n    console.error(error)\n    dispatch(setScrapers(RemoteDataState.Error))\n  }\n}\n\nexport const createScraper = (scraper: Scraper) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    const resp = await client.scrapers.create(scraper)\n\n    const normalized = normalize<Scraper, ScraperEntities, string>(\n      resp,\n      scraperSchema\n    )\n\n    dispatch(addScraper(normalized))\n    dispatch(notify(scraperCreateSuccess()))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(scraperCreateFailed()))\n  }\n}\n\nexport const updateScraper = (scraper: Scraper) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    const resp = await client.scrapers.update(scraper.id, scraper)\n    const normalized = normalize<Scraper, ScraperEntities, string>(\n      resp,\n      scraperSchema\n    )\n\n    dispatch(editScraper(normalized))\n    dispatch(notify(scraperUpdateSuccess(scraper.name)))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(scraperUpdateFailed(scraper.name)))\n  }\n}\n\nexport const deleteScraper = (scraper: Scraper) => async (\n  dispatch: Dispatch<Action>\n) => {\n  try {\n    await client.scrapers.delete(scraper.id)\n\n    dispatch(removeScraper(scraper.id))\n    dispatch(notify(scraperDeleteSuccess(scraper.name)))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(scraperDeleteFailed(scraper.name)))\n  }\n}\n","// Libraries\nimport React, {PureComponent, MouseEvent} from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {connect} from 'react-redux'\n\n// Components\nimport {Button, ComponentColor, ComponentSize} from '@influxdata/clockface'\n\n// Constants\nimport {\n  copyToClipboardSuccess,\n  copyToClipboardFailed,\n} from 'src/shared/copy/notifications'\n\n// Actions\nimport {notify as notifyAction} from 'src/shared/actions/notifications'\nimport {Notification} from 'src/types'\n\ninterface OwnProps {\n  textToCopy: string\n  contentName: string // if copying a script, its \"script\"\n  size: ComponentSize\n  color: ComponentColor\n  onCopyText?: (text: string, status: boolean) => Notification\n}\n\ninterface DispatchProps {\n  notify: typeof notifyAction\n}\n\ntype Props = OwnProps & DispatchProps\n\nclass CopyButton extends PureComponent<Props> {\n  public static defaultProps = {\n    size: ComponentSize.ExtraSmall,\n    color: ComponentColor.Secondary,\n  }\n\n  public render() {\n    const {textToCopy, color, size} = this.props\n\n    return (\n      <CopyToClipboard text={textToCopy} onCopy={this.handleCopyAttempt}>\n        <Button\n          size={size}\n          color={color}\n          titleText=\"Copy to Clipboard\"\n          text=\"Copy to Clipboard\"\n          onClick={this.handleClickCopy}\n          testID=\"button-copy\"\n        />\n      </CopyToClipboard>\n    )\n  }\n  private handleClickCopy = (e: MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation()\n    e.preventDefault()\n  }\n\n  private handleCopyAttempt = (\n    copiedText: string,\n    isSuccessful: boolean\n  ): void => {\n    const {notify, onCopyText} = this.props\n\n    if (onCopyText) {\n      notify(onCopyText(copiedText, isSuccessful))\n      return\n    }\n\n    const {contentName} = this.props\n    const text = copiedText.slice(0, 30).trimRight()\n    const truncatedText = `${text}...`\n\n    if (isSuccessful) {\n      notify(copyToClipboardSuccess(truncatedText, contentName))\n    } else {\n      notify(copyToClipboardFailed(truncatedText, contentName))\n    }\n  }\n}\n\nconst mdtp: DispatchProps = {\n  notify: notifyAction,\n}\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mdtp\n)(CopyButton)\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Dropdown, ComponentStatus} from '@influxdata/clockface'\n\n// Utils\nimport {isSystemBucket} from 'src/buckets/constants/index'\n\n// Types\nimport {Bucket} from 'src/types'\n\ninterface Props {\n  selectedBucketID: string\n  buckets: Bucket[]\n  onSelectBucket: (bucket: Bucket) => void\n}\n\nclass BucketsDropdown extends PureComponent<Props> {\n  public render() {\n    return (\n      <Dropdown\n        testID=\"bucket-dropdown\"\n        button={(active, onClick) => (\n          <Dropdown.Button\n            testID=\"bucket-dropdown--button\"\n            active={active}\n            onClick={onClick}\n            status={this.status}\n          >\n            {this.selectedBucketName}\n          </Dropdown.Button>\n        )}\n        menu={onCollapse => (\n          <Dropdown.Menu onCollapse={onCollapse}>\n            {this.dropdownBuckets}\n          </Dropdown.Menu>\n        )}\n      />\n    )\n  }\n\n  private get selectedBucketName(): string {\n    const {selectedBucketID, buckets} = this.props\n\n    if (this.isBucketsEmpty) {\n      return 'No buckets found'\n    }\n\n    return buckets.find(bucket => bucket.id === selectedBucketID).name\n  }\n\n  private get status(): ComponentStatus {\n    if (this.isBucketsEmpty) {\n      return ComponentStatus.Disabled\n    }\n\n    return ComponentStatus.Default\n  }\n\n  private get isBucketsEmpty(): boolean {\n    const {buckets} = this.props\n    return !buckets || !buckets.length\n  }\n\n  private get dropdownBuckets(): JSX.Element[] {\n    const {buckets, onSelectBucket, selectedBucketID} = this.props\n\n    if (this.isBucketsEmpty) {\n      return []\n    }\n\n    const nonSystemBuckets = buckets.filter(\n      bucket => !isSystemBucket(bucket.name)\n    )\n\n    return nonSystemBuckets.map(b => (\n      <Dropdown.Item\n        key={b.name}\n        value={b}\n        id={b.id}\n        onClick={onSelectBucket}\n        selected={b.id === selectedBucketID}\n      >\n        {b.name}\n      </Dropdown.Item>\n    ))\n  }\n}\n\nexport default BucketsDropdown\n","export const resolveSelectedValue = (\n  values: string[],\n  prevSelection?: string,\n  defaultSelection?: string\n): string => {\n  if (values.includes(prevSelection)) {\n    return prevSelection\n  }\n\n  if (values.includes(defaultSelection)) {\n    return defaultSelection\n  }\n\n  return values[0]\n}\n","// APIs\nimport {runQuery} from 'src/shared/apis/query'\n\n// Utils\nimport {resolveSelectedValue} from 'src/variables/utils/resolveSelectedValue'\nimport {formatVarsOption} from 'src/variables/utils/formatVarsOption'\nimport {parseResponse} from 'src/shared/parsing/flux/response'\nimport {buildVarsOption} from 'src/variables/utils/buildVarsOption'\n\n// Types\nimport {VariableAssignment, VariableValues, FluxColumnType} from 'src/types'\nimport {CancelBox} from 'src/types/promises'\n\nconst cacheKey = (\n  url: string,\n  orgID: string,\n  query: string,\n  variables: VariableAssignment[]\n): string => {\n  return `${query}\\n\\n${formatVarsOption(variables)}\\n\\n${orgID}\\n\\n${url}`\n}\n\n/*\n  Given the CSV response for a Flux query, get the set of values from the first\n  `_value` column in the response, as well as the column type of these values\n  and a choice of selected value.\n\n  The selected value must exist in the returned values for the response. We\n  will first try to use the `prevSelection`, then the `defaultSelection`,\n  before finally falling back to the first value returned in the response.\n*/\nexport const extractValues = (\n  csv: string,\n  prevSelection?: string,\n  defaultSelection?: string\n): VariableValues => {\n  const [table] = parseResponse(csv)\n\n  if (!table || !table.data.length) {\n    throw new Error('empty variable response')\n  }\n\n  const [headerRow] = table.data\n  const valueColIndex = headerRow.indexOf('_value')\n\n  if (valueColIndex === -1) {\n    throw new Error(\"variable response does not contain a '_value' column\")\n  }\n\n  let values = table.data.slice(1).map(row => row[valueColIndex])\n\n  values = [...new Set(values)]\n  values.sort()\n\n  return {\n    values,\n    valueType: table.dataTypes._value as FluxColumnType,\n    selectedValue: resolveSelectedValue(\n      values,\n      prevSelection,\n      defaultSelection\n    ),\n  }\n}\n\nexport interface ValueFetcher {\n  fetch: (\n    url: string,\n    orgID: string,\n    query: string,\n    variables: VariableAssignment[],\n    prevSelection: string,\n    defaultSelection: string\n  ) => CancelBox<VariableValues>\n}\n\nexport class DefaultValueFetcher implements ValueFetcher {\n  private cache: {[cacheKey: string]: VariableValues} = {}\n\n  public fetch(url, orgID, query, variables, prevSelection, defaultSelection) {\n    const key = cacheKey(url, orgID, query, variables)\n    const cachedValues = this.cachedValues(key, prevSelection, defaultSelection)\n\n    if (cachedValues) {\n      return {promise: Promise.resolve(cachedValues), cancel: () => {}}\n    }\n\n    const extern = buildVarsOption(variables)\n    const request = runQuery(orgID, query, extern)\n\n    const promise = request.promise.then<VariableValues>(result => {\n      if (result.type !== 'SUCCESS') {\n        return Promise.reject(result.message)\n      }\n\n      const values = extractValues(result.csv, prevSelection, defaultSelection)\n\n      this.cache[key] = values\n\n      return values\n    })\n\n    return {\n      promise,\n      cancel: request.cancel,\n    }\n  }\n\n  private cachedValues(\n    key: string,\n    prevSelection: string,\n    defaultSelection: string\n  ): VariableValues {\n    const cachedValues = this.cache[key]\n\n    if (!cachedValues) {\n      return null\n    }\n\n    return {\n      ...cachedValues,\n      selectedValue: resolveSelectedValue(\n        cachedValues.values,\n        prevSelection,\n        defaultSelection\n      ),\n    }\n  }\n}\n\nexport const valueFetcher = new DefaultValueFetcher()\n","class Deferred {\n  public promise: Promise<any>\n  public resolve: (...rest: any[]) => void\n  public reject: (error: Error) => void\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve\n      this.reject = reject\n    })\n  }\n}\n\nexport default Deferred\n","// Utils\nimport {valueFetcher, ValueFetcher} from 'src/variables/utils/ValueFetcher'\nimport Deferred from 'src/utils/Deferred'\nimport {getVarAssignment} from 'src/variables/utils/getVarAssignment'\nimport {resolveSelectedValue} from 'src/variables/utils/resolveSelectedValue'\n\n// Constants\nimport {OPTION_NAME, BOUNDARY_GROUP} from 'src/variables/constants/index'\n\n// Types\nimport {\n  RemoteDataState,\n  Variable,\n  VariableValues,\n  VariableValuesByID,\n  ValueSelections,\n} from 'src/types'\nimport {CancelBox, CancellationError} from 'src/types/promises'\n\nexport interface VariableNode {\n  variable: Variable\n  values: VariableValues\n  parents: VariableNode[]\n  children: VariableNode[]\n  status: RemoteDataState\n  cancel: () => void\n}\n\ninterface HydrateVarsOptions {\n  url: string\n  orgID: string\n  selections: ValueSelections\n  fetcher?: ValueFetcher\n}\n\nexport const createVariableGraph = (\n  allVariables: Variable[]\n): VariableNode[] => {\n  const nodesByID: {[variableID: string]: VariableNode} = {}\n\n  // First initialize all the nodes\n  for (const variable of allVariables) {\n    nodesByID[variable.id] = {\n      variable,\n      values: null,\n      parents: [],\n      children: [],\n      status: RemoteDataState.NotStarted,\n      cancel: () => {},\n    }\n  }\n\n  // Then initialize all the edges (the `parents` and `children` references)\n  for (const variable of allVariables) {\n    if (!isQueryVar(variable)) {\n      continue\n    }\n\n    const childIDs = getVarChildren(variable, allVariables).map(\n      child => child.id\n    )\n\n    for (const childID of childIDs) {\n      nodesByID[variable.id].children.push(nodesByID[childID])\n      nodesByID[childID].parents.push(nodesByID[variable.id])\n    }\n  }\n\n  return Object.values(nodesByID)\n}\n\nconst isQueryVar = (v: Variable) => v.arguments.type === 'query'\nexport const isInQuery = (query: string, v: Variable) =>\n  !!query.match(\n    new RegExp(`${BOUNDARY_GROUP}${OPTION_NAME}.${v.name}${BOUNDARY_GROUP}`)\n  )\n\nconst getVarChildren = (\n  {\n    arguments: {\n      values: {query},\n    },\n  }: Variable,\n  allVariables: Variable[]\n) => allVariables.filter(maybeChild => isInQuery(query, maybeChild))\n\n/*\n  Collect all ancestors of a node.\n\n  A node `a` is an ancestor of `b` if there exists a path from `a` to `b`.\n\n  This function is safe to call on a node within a graph with cycles.\n*/\nconst collectAncestors = (\n  node: VariableNode,\n  acc: Set<VariableNode> = new Set()\n): VariableNode[] => {\n  for (const parent of node.parents) {\n    if (!acc.has(parent)) {\n      acc.add(parent)\n      collectAncestors(parent, acc)\n    }\n  }\n\n  return [...acc]\n}\n\n/*\n  Given a variable graph, return the minimal subgraph containing only the nodes\n  needed to hydrate the values for variables in the passed `variables` argument.\n\n  We discard all nodes in the graph unless:\n\n  - It is the node for one of the passed variables\n  - The node for one of the passed variables depends on this node\n\n*/\nconst findSubgraph = (\n  graph: VariableNode[],\n  variables: Variable[]\n): VariableNode[] => {\n  const subgraph: Set<VariableNode> = new Set()\n\n  for (const node of graph) {\n    const shouldKeep =\n      variables.includes(node.variable) ||\n      collectAncestors(node).some(ancestor =>\n        variables.includes(ancestor.variable)\n      )\n\n    if (shouldKeep) {\n      subgraph.add(node)\n    }\n  }\n\n  for (const node of subgraph) {\n    node.parents = node.parents.filter(node => subgraph.has(node))\n    node.children = node.children.filter(node => subgraph.has(node))\n  }\n\n  return [...subgraph]\n}\n\n/*\n  Get the `VariableValues` for a variable that cannot be successfully hydrated.\n*/\nconst errorVariableValues = (\n  message = 'Failed to load values for variable'\n): VariableValues => ({\n  values: null,\n  selectedValue: null,\n  valueType: null,\n  error: message,\n})\n\n/*\n  Get the `VariableValues` for a map variable.\n*/\nconst mapVariableValues = (\n  variable: Variable,\n  prevSelection: string,\n  defaultSelection: string\n): VariableValues => {\n  const values: string[] = Object.keys(variable.arguments.values)\n\n  return {\n    valueType: 'string',\n    values,\n    selectedValue: resolveSelectedValue(\n      values,\n      prevSelection,\n      defaultSelection\n    ),\n  }\n}\n\n/*\n  Get the `VariableValues` for a constant variable.\n*/\nconst constVariableValues = (\n  variable: Variable,\n  prevSelection: string,\n  defaultSelection: string\n): VariableValues => {\n  const {values} = variable.arguments\n\n  return {\n    valueType: 'string',\n    values,\n    selectedValue: resolveSelectedValue(\n      values,\n      prevSelection,\n      defaultSelection\n    ),\n  }\n}\n\n/*\n  Find all the descendants of a node.\n\n  A node `b` is a descendant of `a` if there exists a path from `a` to `b`.\n\n  Checks visited to prevent looping forever\n*/\nexport const collectDescendants = (\n  node: VariableNode,\n  acc: Set<VariableNode> = new Set()\n): VariableNode[] => {\n  for (const child of node.children) {\n    if (!acc.has(child)) {\n      acc.add(child)\n      collectDescendants(child, acc)\n    }\n  }\n\n  return [...acc]\n}\n\n/*\n  Hydrate the values of a single node in the graph.\n\n  This assumes that every descendant of this node has already been hydrated.\n*/\nconst hydrateVarsHelper = async (\n  node: VariableNode,\n  options: HydrateVarsOptions\n): Promise<VariableValues> => {\n  const variableType = node.variable.arguments.type\n  const prevSelection = options.selections[node.variable.id]\n  const defaultSelection = node.variable.selected\n    ? node.variable.selected[0]\n    : null\n\n  if (variableType === 'map') {\n    return mapVariableValues(node.variable, prevSelection, defaultSelection)\n  }\n\n  if (variableType === 'constant') {\n    return constVariableValues(node.variable, prevSelection, defaultSelection)\n  }\n\n  const descendants = collectDescendants(node)\n  const assignments = descendants.map(node =>\n    getVarAssignment(node.variable.name, node.values)\n  )\n\n  const {url, orgID} = options\n  const {query} = node.variable.arguments.values\n  const fetcher = options.fetcher || valueFetcher\n\n  const request = fetcher.fetch(\n    url,\n    orgID,\n    query,\n    assignments,\n    prevSelection,\n    defaultSelection\n  )\n\n  node.cancel = request.cancel\n\n  const values = await request.promise\n\n  return values\n}\n\n/*\n  Check if a node is `NotStarted` and if every child of the node has been\n  resolved (successfully or not).\n*/\nconst readyToResolve = (parent: VariableNode): boolean =>\n  parent.status === RemoteDataState.NotStarted &&\n  parent.children.every(child => child.status === RemoteDataState.Done)\n\n/*\n  Find all `NotStarted` nodes in the graph that have no children.\n*/\nconst findLeaves = (graph: VariableNode[]): VariableNode[] =>\n  graph.filter(\n    node =>\n      node.children.length === 0 && node.status === RemoteDataState.NotStarted\n  )\n\n/*\n  Given a node, attempt to find a cycle that the node is a part of. If no cycle\n  is found, return `null`.\n*/\nconst findCyclicPath = (node: VariableNode): VariableNode[] => {\n  try {\n    findCyclicPathHelper(node, [])\n  } catch (cyclicPath) {\n    return cyclicPath\n  }\n\n  return null\n}\n\nconst findCyclicPathHelper = (\n  node: VariableNode,\n  seen: VariableNode[]\n): void => {\n  if (seen.includes(node)) {\n    throw seen\n  }\n\n  for (const child of node.children) {\n    findCyclicPathHelper(child, [...seen, node])\n  }\n}\n\n/*\n  Find all cycles within the variable graph and mark every node within a cycle\n  as errored (we cannot resolve cycles).\n*/\nconst invalidateCycles = (graph: VariableNode[]): void => {\n  for (const node of graph) {\n    const cyclicPath = findCyclicPath(node)\n\n    if (cyclicPath) {\n      for (const invalidNode of cyclicPath) {\n        invalidNode.status = RemoteDataState.Error\n      }\n    }\n  }\n}\n\n/*\n  Given a node, mark all ancestors of that node as `Error`.\n*/\nconst invalidateAncestors = (node: VariableNode): void => {\n  const ancestors = collectAncestors(node)\n\n  for (const ancestor of ancestors) {\n    ancestor.status = RemoteDataState.Error\n  }\n}\n\nconst extractResult = (graph: VariableNode[]): VariableValuesByID => {\n  const result = {}\n\n  for (const node of graph) {\n    if (node.status === RemoteDataState.Error) {\n      node.values = errorVariableValues()\n    }\n\n    result[node.variable.id] = node.values\n  }\n\n  return result\n}\n\n/*\n  Given a list of `variables`, execute their queries to retrieve the possible\n  values for each variable.\n\n  Since variables can make use of other variables, this process is more\n  complicated then simply executing every query found in a variable. Instead,\n  we:\n\n  1. Construct a graph that represents the dependency structure between\n     variables. A variable `a` depends on variable `b` if the query for `a`\n     uses the variable `b`.\n\n     Each node in the graph has a hydration status: it it either `NotStarted`,\n     `Loading` (values are being fetched), `Error` (values failed to fetch or\n     cannot be fetched), or `Done` (values have been fetched successfully).\n     When the graph is constructed, all nodes a marked as `NotStarted`.\n\n  2. Find all cycles in the graph and mark nodes within a cycle and nodes that\n     lead to a cycle as `Error`. We cannot resolve variables with cyclical\n     dependencies.\n\n  3. Find the leaves of the graph (the nodes with no dependencies) and begin to\n     load their values.\n\n     a. If loading the values succeeds, we mark that node as `Done` and check\n        if every child of the parent of this node is `Done`. If this is the\n        case, we start loading the parent.\n\n     b. If loading the values fails, we mark that node and every one of its\n        ancestors as as `Error`.\n\n     c. If the parent node is `Error`, we stop resolving along this path. Steps\n        2 and 3b guarantee that every ancestor of this `Error` node is also\n        `Error`.\n\n  4. By the time all node resolution has succeeded or failed, every node in the\n     graph has now either been resolved with values or marked with `Error`.\n\n*/\nexport const hydrateVars = (\n  variables: Variable[],\n  allVariables: Variable[],\n  options: HydrateVarsOptions\n): CancelBox<VariableValuesByID> => {\n  const graph = findSubgraph(createVariableGraph(allVariables), variables)\n\n  invalidateCycles(graph)\n\n  let isCancelled = false\n\n  const resolve = async (node: VariableNode) => {\n    if (isCancelled) {\n      return\n    }\n\n    node.status === RemoteDataState.Loading\n\n    try {\n      node.values = await hydrateVarsHelper(node, options)\n      node.status = RemoteDataState.Done\n\n      return Promise.all(node.parents.filter(readyToResolve).map(resolve))\n    } catch (e) {\n      if (e.name === 'CancellationError') {\n        return\n      }\n\n      node.status = RemoteDataState.Error\n\n      invalidateAncestors(node)\n    }\n  }\n\n  const deferred = new Deferred()\n\n  const cancel = () => {\n    isCancelled = true\n    graph.forEach(node => node.cancel())\n    deferred.reject(new CancellationError())\n  }\n\n  Promise.all(findLeaves(graph).map(resolve)).then(() => {\n    deferred.resolve(extractResult(graph))\n  })\n\n  return {promise: deferred.promise, cancel}\n}\n","export * from './alerting'\nexport * from './arguments'\nexport * from './ast'\nexport * from './auth'\nexport * from './autoRefresh'\nexport * from './buckets'\nexport * from './cloud'\nexport * from './codemirror'\nexport * from './colors'\nexport * from './dashboards'\nexport * from './dataExplorer'\nexport * from './dataLoaders'\nexport * from './filterEditor'\nexport * from './flux'\nexport * from './histogram'\nexport * from './hosts'\nexport * from './influxAdmin'\nexport * from './labels'\nexport * from './layouts'\nexport * from './layouts'\nexport * from './links'\nexport * from './localStorage'\nexport * from './logEvent'\nexport * from './members'\nexport * from './monaco'\nexport * from './notifications'\nexport * from './orgs'\nexport * from './overlay'\nexport * from './predicates'\nexport * from './promises'\nexport * from './queries'\nexport * from './redux'\nexport * from './resources'\nexport * from './run'\nexport * from './schemas'\nexport * from './scrapers'\nexport * from './services'\nexport * from './shared'\nexport * from './sources'\nexport * from './stores'\nexport * from './tasks'\nexport * from './telegraf'\nexport * from './templates'\nexport * from './timeMachine'\nexport * from './timeZones'\nexport * from './variables'\nexport * from './views'\n","// Types\nimport {AppState, RemoteDataState, ResourceType} from 'src/types'\n\nexport const getResourcesStatus = (\n  state: AppState,\n  resources: Array<ResourceType>\n): RemoteDataState => {\n  const statuses = resources.map(resource => {\n    if (!state.resources || !state.resources[resource].status) {\n      throw new Error(\n        `RemoteDataState status for resource \"${resource}\" is undefined in getResourcesStatus`\n      )\n    }\n\n    return state.resources[resource].status\n  })\n\n  let status = RemoteDataState.NotStarted\n\n  if (statuses.every(s => s === RemoteDataState.Done)) {\n    status = RemoteDataState.Done\n  } else if (statuses.includes(RemoteDataState.Error)) {\n    status = RemoteDataState.Error\n  } else if (statuses.includes(RemoteDataState.Loading)) {\n    status = RemoteDataState.Loading\n  }\n\n  return status\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport {connect} from 'react-redux'\n\n// Actions\nimport {getAuthorizations} from 'src/authorizations/actions/thunks'\nimport {getBuckets} from 'src/buckets/actions/thunks'\nimport {getChecks} from 'src/checks/actions/thunks'\nimport {getDashboards} from 'src/dashboards/actions/thunks'\nimport {getEndpoints} from 'src/notifications/endpoints/actions/thunks'\nimport {getLabels} from 'src/labels/actions/thunks'\nimport {getMembers} from 'src/members/actions/thunks'\nimport {getNotificationRules} from 'src/notifications/rules/actions/thunks'\nimport {getPlugins} from 'src/dataLoaders/actions/telegrafEditor'\nimport {getScrapers} from 'src/scrapers/actions/thunks'\nimport {getTasks} from 'src/tasks/actions/thunks'\nimport {getTelegrafs} from 'src/telegrafs/actions/thunks'\nimport {getTemplates} from 'src/templates/actions/thunks'\nimport {getVariables} from 'src/variables/actions/thunks'\n\n// Types\nimport {AppState, RemoteDataState, ResourceType} from 'src/types'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\nimport {TechnoSpinner, SpinnerContainer} from '@influxdata/clockface'\n\n// Selectors\nimport {getResourcesStatus} from 'src/resources/selectors/getResourcesStatus'\n\ninterface StateProps {\n  remoteDataState: RemoteDataState\n}\n\ninterface DispatchProps {\n  getLabels: typeof getLabels\n  getBuckets: typeof getBuckets\n  getTelegrafs: typeof getTelegrafs\n  getPlugins: typeof getPlugins\n  getVariables: typeof getVariables\n  getScrapers: typeof getScrapers\n  getAuthorizations: typeof getAuthorizations\n  getDashboards: typeof getDashboards\n  getTasks: typeof getTasks\n  getTemplates: typeof getTemplates\n  getMembers: typeof getMembers\n  getChecks: typeof getChecks\n  getNotificationRules: typeof getNotificationRules\n  getEndpoints: typeof getEndpoints\n}\n\ninterface PassedProps {\n  resources: Array<ResourceType>\n}\n\nexport type Props = StateProps & DispatchProps & PassedProps\n\n@ErrorHandling\nclass GetResources extends PureComponent<Props, StateProps> {\n  public componentDidMount() {\n    const {resources} = this.props\n    const promises = []\n    resources.forEach(resource => {\n      promises.push(this.getResourceDetails(resource))\n    })\n    Promise.all(promises)\n  }\n\n  private getResourceDetails(resource: ResourceType) {\n    switch (resource) {\n      case ResourceType.Dashboards: {\n        return this.props.getDashboards()\n      }\n\n      case ResourceType.Labels: {\n        return this.props.getLabels()\n      }\n\n      case ResourceType.Buckets: {\n        return this.props.getBuckets()\n      }\n\n      case ResourceType.Telegrafs: {\n        return this.props.getTelegrafs()\n      }\n\n      case ResourceType.Plugins: {\n        return this.props.getPlugins()\n      }\n\n      case ResourceType.Scrapers: {\n        return this.props.getScrapers()\n      }\n\n      case ResourceType.Variables: {\n        return this.props.getVariables()\n      }\n\n      case ResourceType.Tasks: {\n        return this.props.getTasks()\n      }\n\n      case ResourceType.Authorizations: {\n        return this.props.getAuthorizations()\n      }\n\n      case ResourceType.Templates: {\n        return this.props.getTemplates()\n      }\n\n      case ResourceType.Members: {\n        return this.props.getMembers()\n      }\n\n      case ResourceType.Checks: {\n        return this.props.getChecks()\n      }\n\n      case ResourceType.NotificationRules: {\n        return this.props.getNotificationRules()\n      }\n\n      case ResourceType.NotificationEndpoints: {\n        return this.props.getEndpoints()\n      }\n\n      default: {\n        throw new Error('incorrect resource type provided')\n      }\n    }\n  }\n\n  public render() {\n    const {children, remoteDataState} = this.props\n\n    return (\n      <SpinnerContainer\n        loading={remoteDataState}\n        spinnerComponent={<TechnoSpinner />}\n      >\n        {children}\n      </SpinnerContainer>\n    )\n  }\n}\n\nconst mstp = (state: AppState, {resources}: Props): StateProps => {\n  const remoteDataState = getResourcesStatus(state, resources)\n\n  return {\n    remoteDataState,\n  }\n}\n\nconst mdtp = {\n  getLabels: getLabels,\n  getBuckets: getBuckets,\n  getTelegrafs: getTelegrafs,\n  getPlugins: getPlugins,\n  getVariables: getVariables,\n  getScrapers: getScrapers,\n  getAuthorizations: getAuthorizations,\n  getDashboards: getDashboards,\n  getTasks: getTasks,\n  getTemplates: getTemplates,\n  getMembers: getMembers,\n  getChecks: getChecks,\n  getNotificationRules: getNotificationRules,\n  getEndpoints: getEndpoints,\n}\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mstp,\n  mdtp\n)(GetResources)\n","// Libraries\nimport React, {Component, KeyboardEvent, ChangeEvent} from 'react'\nimport classnames from 'classnames'\n\n// Components\nimport {Input, Icon} from '@influxdata/clockface'\nimport {ClickOutside} from 'src/shared/components/ClickOutside'\n\n// Types\nimport {ComponentSize, IconFont} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  onUpdate: (name: string) => void\n  description: string\n  placeholder?: string\n}\n\ninterface State {\n  isEditing: boolean\n  workingDescription: string\n}\n\n@ErrorHandling\nclass EditableDescription extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      isEditing: false,\n      workingDescription: props.description,\n    }\n  }\n\n  public render() {\n    const {description} = this.props\n    const {isEditing} = this.state\n\n    if (isEditing) {\n      return (\n        <div className=\"editable-description\">\n          <ClickOutside onClickOutside={this.handleStopEditing}>\n            {this.input}\n          </ClickOutside>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"editable-description\">\n        <div\n          className={this.previewClassName}\n          onClick={this.handleStartEditing}\n        >\n          {description || 'No description'}\n          <Icon glyph={IconFont.Pencil} />\n        </div>\n      </div>\n    )\n  }\n\n  private get input(): JSX.Element {\n    const {placeholder} = this.props\n    const {workingDescription} = this.state\n\n    return (\n      <Input\n        size={ComponentSize.ExtraSmall}\n        maxLength={90}\n        autoFocus={true}\n        spellCheck={false}\n        placeholder={placeholder}\n        onFocus={this.handleInputFocus}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        className=\"editable-description--input\"\n        value={workingDescription}\n      />\n    )\n  }\n\n  private handleStartEditing = (): void => {\n    this.setState({isEditing: true})\n  }\n\n  private handleStopEditing = () => {\n    const {workingDescription} = this.state\n    const {onUpdate} = this.props\n\n    onUpdate(workingDescription)\n    this.setState({isEditing: false})\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    this.setState({workingDescription: e.target.value})\n  }\n\n  private handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    const {onUpdate, description} = this.props\n    const {workingDescription} = this.state\n\n    if (e.key === 'Enter') {\n      onUpdate(workingDescription)\n      this.setState({isEditing: false})\n    }\n\n    if (e.key === 'Escape') {\n      this.setState({isEditing: false, workingDescription: description})\n    }\n  }\n\n  private handleInputFocus = (e: ChangeEvent<HTMLInputElement>): void => {\n    e.currentTarget.select()\n  }\n\n  private get previewClassName(): string {\n    const {description} = this.props\n\n    return classnames('editable-description--preview', {\n      untitled: !description,\n    })\n  }\n}\n\nexport default EditableDescription\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport uuid from 'uuid'\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Components\nimport {\n  IndexList,\n  ComponentSize,\n  Alignment,\n  ConfirmationButton,\n  ComponentColor,\n  Appearance,\n} from '@influxdata/clockface'\nimport EditableDescription from 'src/shared/components/editable_description/EditableDescription'\n\ninterface Item {\n  text?: string\n  name?: string\n}\n\ninterface RowProps {\n  confirmText?: string\n  item: Item\n  onDelete: (item: Item) => void\n  fieldName: string\n  index: number\n  onChange: (index: number, value: string) => void\n}\n\n@ErrorHandling\nclass Row extends PureComponent<RowProps> {\n  public static defaultProps: Partial<RowProps> = {\n    confirmText: 'Delete',\n  }\n\n  public render() {\n    const {item, fieldName} = this.props\n    return (\n      <IndexList>\n        <IndexList.Body emptyState={<div />} columnCount={2}>\n          <IndexList.Row key={uuid.v4()} disabled={false}>\n            <IndexList.Cell>\n              <EditableDescription\n                description={item.text}\n                placeholder={`Edit ${fieldName}`}\n                onUpdate={this.handleKeyDown}\n              />\n            </IndexList.Cell>\n            <IndexList.Cell alignment={Alignment.Right}>\n              <ConfirmationButton\n                onConfirm={this.handleClickDelete}\n                returnValue={item}\n                text=\"Delete\"\n                popoverColor={ComponentColor.Danger}\n                popoverAppearance={Appearance.Outline}\n                color={ComponentColor.Danger}\n                confirmationLabel=\"\"\n                confirmationButtonColor={ComponentColor.Danger}\n                confirmationButtonText=\"Confirm\"\n                size={ComponentSize.ExtraSmall}\n              />\n            </IndexList.Cell>\n          </IndexList.Row>\n        </IndexList.Body>\n      </IndexList>\n    )\n  }\n\n  private handleClickDelete = (item: Item) => {\n    this.props.onDelete(item)\n  }\n\n  private handleKeyDown = (value: string) => {\n    const {onChange, index} = this.props\n\n    onChange(index, value)\n  }\n}\n\nexport default Row\n","// Libraries\nimport React, {SFC} from 'react'\nimport uuid from 'uuid'\n\n// Components\nimport Row from 'src/clockface/components/inputs/multipleInput/Row'\n\ninterface Item {\n  text?: string\n  name?: string\n}\n\ninterface RowsProps {\n  tags: Item[]\n  confirmText?: string\n  onDeleteTag?: (item: Item) => void\n  onChange?: (index: number, value: string) => void\n}\n\nconst Rows: SFC<RowsProps> = ({tags, onDeleteTag, onChange}) => {\n  return (\n    <div className=\"input-tag-list\">\n      {tags.map(item => {\n        return (\n          <Row\n            index={tags.indexOf(item)}\n            key={uuid.v4()}\n            item={item}\n            onDelete={onDeleteTag}\n            onChange={onChange}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Rows\n","// Libraries\nimport React, {PureComponent, ChangeEvent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {Button, Form, Input, Grid} from '@influxdata/clockface'\nimport Rows from 'src/clockface/components/inputs/multipleInput/MultipleRows'\n\n// Utils\nimport {validateURI} from 'src/shared/utils/validateURI'\n\n// Types\nimport {\n  AutoComplete,\n  Columns,\n  ComponentColor,\n  ComponentSize,\n  ComponentStatus,\n  InputType,\n} from '@influxdata/clockface'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\nconst VALIDATE_DEBOUNCE_MS = 350\n\nexport interface Item {\n  text?: string\n  name?: string\n}\n\nexport enum MultiInputType {\n  String = 'string',\n  URI = 'uri',\n}\n\ninterface Props {\n  onAddRow: (item: string) => void\n  onDeleteRow: (item: string) => void\n  onEditRow: (index: number, item: string) => void\n  tags: Item[]\n  title: string\n  helpText: string\n  inputID?: string\n  inputType?: MultiInputType\n  autoFocus?: boolean\n}\n\ninterface State {\n  editingText: string\n  status: ComponentStatus\n}\n\n@ErrorHandling\nclass MultipleInput extends PureComponent<Props, State> {\n  private debouncedValidate: (value: string) => void\n  private inputRef\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {editingText: '', status: ComponentStatus.Default}\n\n    this.inputRef = React.createRef()\n\n    this.debouncedValidate = _.debounce(\n      this.handleValidateURI,\n      VALIDATE_DEBOUNCE_MS\n    )\n  }\n\n  public render() {\n    const {title, helpText, tags, autoFocus, onEditRow} = this.props\n    const {editingText} = this.state\n\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column widthXS={Columns.Eight} offsetXS={Columns.One}>\n            <Form.Element label={title} key={title} helpText={helpText}>\n              <Input\n                placeholder={`Type and hit 'Enter' to add to list of ${title}`}\n                autocomplete={AutoComplete.Off}\n                type={InputType.Text}\n                onKeyDown={this.handleKeyDown}\n                autoFocus={autoFocus || false}\n                value={editingText}\n                status={this.state.status}\n                onChange={this.handleInputChange}\n                size={ComponentSize.Medium}\n                titleText={title}\n                ref={this.inputRef}\n              />\n            </Form.Element>\n          </Grid.Column>\n          <Grid.Column widthXS={Columns.Two}>\n            <Form.Element\n              key=\"submit\"\n              label=\"&nbsp;\"\n              style={{minHeight: '15px'}}\n            >\n              <Button\n                color={ComponentColor.Secondary}\n                onClick={this.handleSubmit}\n                size={ComponentSize.Medium}\n                text=\"Add\"\n                titleText={`Add to list of ${title}`}\n              />\n            </Form.Element>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column widthXS={Columns.Ten} offsetXS={Columns.One}>\n            <Rows\n              tags={tags}\n              onDeleteTag={this.handleDeleteRow}\n              onChange={onEditRow}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n\n  private handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {inputType} = this.props\n    const {value} = e.target\n\n    this.setState({editingText: value})\n    if (inputType === MultiInputType.URI) {\n      this.debouncedValidate(value)\n    }\n  }\n\n  private handleSubmit = e => {\n    e.preventDefault()\n    const newItem = this.inputRef.current.value.trim()\n    const {tags, onAddRow} = this.props\n    if (!this.shouldAddToList(newItem, tags)) {\n      return\n    }\n    this.setState({editingText: ''})\n    onAddRow(this.inputRef.current.value)\n  }\n\n  private handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault()\n      const newItem = e.target.value.trim()\n      const {tags, onAddRow} = this.props\n      if (!this.shouldAddToList(newItem, tags)) {\n        return\n      }\n      this.setState({editingText: ''})\n      onAddRow(e.target.value)\n    }\n  }\n\n  private handleDeleteRow = (item: Item) => {\n    this.props.onDeleteRow(item.name || item.text)\n  }\n\n  private shouldAddToList(item: Item, tags: Item[]): boolean {\n    return !_.isEmpty(item) && !tags.find(l => l === item)\n  }\n\n  private handleValidateURI = (value: string): void => {\n    if (validateURI(value)) {\n      this.setState({status: ComponentStatus.Valid})\n    } else {\n      this.setState({status: ComponentStatus.Error})\n    }\n  }\n}\n\nexport default MultipleInput\n","// Libraries\nimport React, {SFC} from 'react'\n\ninterface Props {\n  children: any\n}\n\nconst WizardFullScreen: SFC<Props> = (props: Props) => {\n  return (\n    <>\n      <div className=\"wizard--full-screen\">\n        {props.children}\n        <div className=\"wizard--credits\" data-testid=\"credits\">\n          Powered by <span className=\"icon cubo-uniform\" />{' '}\n          <a href=\"https://www.influxdata.com/\" target=\"_blank\">\n            InfluxData\n          </a>\n        </div>\n      </div>\n      <div className=\"auth-image\" />\n    </>\n  )\n}\n\nexport default WizardFullScreen\n","// Libraries\nimport React, {PureComponent} from 'react'\n\n// Components\nimport {Overlay} from '@influxdata/clockface'\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  children: string | React.ReactNode\n  footer?: string | React.ReactNode\n  title: string\n  maxWidth: number\n  onDismiss: () => void\n}\n\n@ErrorHandling\nclass WizardOverlay extends PureComponent<Props> {\n  public static defaultProps = {\n    maxWidth: 1200,\n  }\n\n  public render() {\n    const {title, maxWidth, children, footer, onDismiss} = this.props\n\n    return (\n      <Overlay visible={true}>\n        <Overlay.Container maxWidth={maxWidth}>\n          <Overlay.Header title={title} onDismiss={onDismiss} />\n          <Overlay.Body>\n            <div className=\"data-loading--overlay\">{children}</div>\n          </Overlay.Body>\n          {footer && <Overlay.Footer>{footer}</Overlay.Footer>}\n        </Overlay.Container>\n      </Overlay>\n    )\n  }\n}\n\nexport default WizardOverlay\n","// Libraries\nimport React, {SFC} from 'react'\n\ninterface Props {\n  children: any\n}\n\nconst WizardProgressHeader: SFC<Props> = (props: Props) => {\n  const {children} = props\n  return <div className=\"wizard--progress-header\">{children}</div>\n}\n\nexport default WizardProgressHeader\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Components\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// constants\nimport {StepStatus, ConnectorState} from 'src/clockface/constants/wizard'\n\ninterface Props {\n  currentStepIndex: number\n  handleSetCurrentStep: (stepNumber: number) => void\n  stepStatuses: StepStatus[]\n  stepTitles: string[]\n  stepTestIds: string[]\n  stepSkippable: boolean[]\n  hideFirstStep?: boolean\n}\n\n@ErrorHandling\nclass ProgressBar extends PureComponent<Props, null> {\n  public render() {\n    return <div className=\"wizard--progress-bar\">{this.WizardProgress}</div>\n  }\n\n  private handleSetCurrentStep = (i: number) => () => {\n    const {handleSetCurrentStep, currentStepIndex} = this.props\n\n    const isAfterCurrentUnskippableStep =\n      !this.isStepSkippable && i > currentStepIndex\n    const isAfterNextUnskippableStep =\n      this.nextNonSkippableStep !== -1 && i > this.nextNonSkippableStep\n\n    const preventSkip =\n      isAfterCurrentUnskippableStep || isAfterNextUnskippableStep\n\n    if (preventSkip) {\n      return\n    }\n\n    handleSetCurrentStep(i)\n  }\n\n  private get nextNonSkippableStep(): number {\n    const {currentStepIndex, stepSkippable, stepStatuses} = this.props\n    return _.findIndex(stepSkippable, (isSkippable, i) => {\n      return (\n        !isSkippable &&\n        i > currentStepIndex &&\n        stepStatuses[i] !== StepStatus.Complete\n      )\n    })\n  }\n\n  private get isStepSkippable(): boolean {\n    const {stepSkippable, stepStatuses, currentStepIndex} = this.props\n\n    return (\n      stepSkippable[currentStepIndex] ||\n      stepStatuses[currentStepIndex] === StepStatus.Complete\n    )\n  }\n\n  private getStepClass(i: number): string {\n    if (!this.isStepSkippable && i > this.props.currentStepIndex) {\n      return 'wizard--progress-button unclickable'\n    }\n    return 'wizard--progress-button'\n  }\n\n  private get WizardProgress(): JSX.Element[] {\n    const {\n      hideFirstStep,\n      stepStatuses,\n      stepTitles,\n      stepTestIds,\n      currentStepIndex,\n    } = this.props\n\n    const lastIndex = stepStatuses.length - 1\n\n    const progressBar: JSX.Element[] = stepStatuses.reduce(\n      (acc, stepStatus, i) => {\n        if (hideFirstStep && i === 0) {\n          return [...acc]\n        }\n\n        let currentStep = ''\n\n        // STEP STATUS\n        if (i === currentStepIndex && stepStatus !== StepStatus.Error) {\n          currentStep = 'current'\n        }\n\n        const stepEle = (\n          <div\n            key={`stepEle${i}`}\n            className={this.getStepClass(i)}\n            onClick={this.handleSetCurrentStep(i)}\n          >\n            <span\n              className={`wizard--progress-icon ${currentStep || stepStatus}`}\n            >\n              <span className={`icon ${stepStatus}`} />\n            </span>\n            <div\n              className={`wizard--progress-title ${currentStep || stepStatus}`}\n              data-testid={stepTestIds[i]}\n            >\n              {stepTitles[i]}\n            </div>\n          </div>\n        )\n\n        if (i === lastIndex) {\n          return [...acc, stepEle]\n        }\n\n        // PROGRESS BAR CONNECTOR\n        let connectorStatus = ConnectorState.None\n\n        if (i === currentStepIndex && stepStatus !== StepStatus.Error) {\n          connectorStatus = ConnectorState.Some\n        }\n        if (i === lastIndex || stepStatus === StepStatus.Complete) {\n          connectorStatus = ConnectorState.Full\n        }\n        const connectorEle = (\n          <span\n            key={i}\n            className={`wizard--progress-connector wizard--progress-connector--${connectorStatus ||\n              ConnectorState.None}`}\n          />\n        )\n        return [...acc, stepEle, connectorEle]\n      },\n      []\n    )\n    return progressBar\n  }\n}\n\nexport default ProgressBar\n","// Libraries\nimport React, {Component} from 'react'\nimport classnames from 'classnames'\n\ninterface Props {\n  label: string\n  action: (value?: any) => void\n  description: string\n  testID: string\n  value?: any\n  disabled?: boolean\n  onCollapseMenu?: () => void\n}\n\nclass ContextMenuItem extends Component<Props> {\n  public static defaultProps = {\n    description: '',\n    testID: 'context-menu-item',\n  }\n\n  public render() {\n    const {label, disabled, testID} = this.props\n\n    return (\n      <button\n        className={this.className}\n        onClick={this.handleClick}\n        disabled={disabled}\n        data-testid={testID}\n      >\n        {label}\n        {this.description}\n      </button>\n    )\n  }\n\n  private get className(): string {\n    const {disabled} = this.props\n\n    return classnames('context-menu--item', {\n      'context-menu--item__disabled': disabled,\n    })\n  }\n\n  private get description(): JSX.Element {\n    const {description} = this.props\n    if (description) {\n      return <div className=\"contex-menu--item-description\">{description}</div>\n    }\n  }\n\n  private handleClick = (): void => {\n    const {action, onCollapseMenu, value} = this.props\n\n    action(value)\n\n    if (onCollapseMenu) {\n      onCollapseMenu()\n    }\n  }\n}\n\nexport default ContextMenuItem\n","// Libraries\nimport React, {Component} from 'react'\nimport classnames from 'classnames'\n\n// Components\nimport ContextMenuItem from 'src/clockface/components/context_menu/ContextMenuItem'\nimport {ClickOutside} from 'src/shared/components/ClickOutside'\nimport {Button} from '@influxdata/clockface'\n\n// Types\nimport {\n  ComponentColor,\n  IconFont,\n  ComponentSize,\n  ButtonShape,\n} from '@influxdata/clockface'\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  children: JSX.Element | JSX.Element[]\n  icon: IconFont\n  onBoostZIndex?: (boostZIndex: boolean) => void\n  text: string\n  color: ComponentColor\n  shape: ButtonShape\n  testID: string\n}\n\ninterface State {\n  isExpanded: boolean\n}\n\n@ErrorHandling\nclass ContextMenu extends Component<Props, State> {\n  public static defaultProps = {\n    color: ComponentColor.Primary,\n    shape: ButtonShape.Square,\n    text: '',\n    testID: 'context-menu',\n  }\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      isExpanded: false,\n    }\n  }\n\n  public render() {\n    const {icon, text, shape, color, testID} = this.props\n\n    return (\n      <ClickOutside onClickOutside={this.handleCollapseMenu}>\n        <div className=\"context-menu--container\">\n          <Button\n            className={this.toggleClassName}\n            onClick={this.handleExpandMenu}\n            text={text}\n            shape={shape}\n            icon={icon}\n            size={ComponentSize.ExtraSmall}\n            color={color}\n            testID={testID}\n          />\n          {this.menu}\n        </div>\n      </ClickOutside>\n    )\n  }\n\n  private handleExpandMenu = (): void => {\n    const {onBoostZIndex} = this.props\n\n    if (onBoostZIndex) {\n      onBoostZIndex(true)\n    }\n\n    this.setState({isExpanded: true})\n  }\n\n  private handleCollapseMenu = (): void => {\n    const {onBoostZIndex} = this.props\n\n    if (onBoostZIndex) {\n      onBoostZIndex(false)\n    }\n\n    this.setState({isExpanded: false})\n  }\n\n  private get menu(): JSX.Element {\n    const {children} = this.props\n\n    return (\n      <div className={this.menuClassName}>\n        <div className={this.listClassName}>\n          {React.Children.map(children, (child: JSX.Element) => {\n            if (child.type === ContextMenuItem) {\n              return (\n                <ContextMenuItem\n                  {...child.props}\n                  onCollapseMenu={this.handleCollapseMenu}\n                />\n              )\n            } else {\n              return child\n            }\n          })}\n        </div>\n      </div>\n    )\n  }\n\n  private get listClassName(): string {\n    const {color} = this.props\n\n    return classnames('context-menu--list', {\n      [`context-menu--${color}`]: color,\n    })\n  }\n\n  private get menuClassName(): string {\n    const {isExpanded} = this.state\n\n    return classnames('context-menu--list-container', {open: isExpanded})\n  }\n\n  private get toggleClassName(): string {\n    const {color} = this.props\n    const {isExpanded} = this.state\n\n    return classnames('context-menu--toggle', {\n      [`context-menu--${color}`]: color,\n      active: isExpanded,\n    })\n  }\n}\n\nexport default ContextMenu\n","export enum ComponentColor {\n  Default = 'default',\n  Primary = 'primary',\n  Secondary = 'secondary',\n  Success = 'success',\n  Warning = 'warning',\n  Danger = 'danger',\n  Alert = 'alert',\n}\n\nexport enum ComponentSize {\n  ExtraSmall = 'xs',\n  Small = 'sm',\n  Medium = 'md',\n  Large = 'lg',\n}\n\nexport enum ComponentStatus {\n  Default = 'default',\n  Loading = 'loading',\n  Error = 'error',\n  Valid = 'valid',\n  Disabled = 'disabled',\n}\n\nexport enum DropdownMenuColors {\n  Amethyst = 'amethyst',\n  Malachite = 'malachite',\n  Sapphire = 'sapphire',\n  Onyx = 'onyx',\n}\n\nexport enum DropdownMenuPosition {\n  Above = 'above',\n  Below = 'below',\n}\n\nexport type DropdownChild =\n  | Array<string | JSX.Element | Element>\n  | string\n  | JSX.Element\n  | Element\n\nexport enum ButtonShape {\n  Default = 'none',\n  Square = 'square',\n  StretchToFit = 'stretch',\n}\n\nexport enum ButtonType {\n  Button = 'button',\n  Submit = 'submit',\n}\n\nexport enum Greys {\n  Obsidian = '#0f0e15',\n  Raven = '#181820',\n  Kevlar = '#202028',\n  Castle = '#292933',\n  Onyx = '#31313d',\n  Pepper = '#383846',\n  Smoke = '#434453',\n  Graphite = '#545667',\n  Storm = '#676978',\n  Mountain = '#757888',\n  Wolf = '#8e91a1',\n  Sidewalk = '#999dab',\n  Forge = '#a4a8b6',\n  Mist = '#bec2cc',\n  Chromium = '#c6cad3',\n  Platinum = '#d4d7dd',\n  Pearl = '#e7e8eb',\n  Whisper = '#eeeff2',\n  Cloud = '#f6f6f8',\n  Ghost = '#fafafc',\n  White = '#ffffff',\n}\n\nexport enum IconFont {\n  AddCell = 'add-cell',\n  AlertTriangle = 'alert-triangle',\n  Alerts = 'alerts',\n  Annotate = 'annotate',\n  AnnotatePlus = 'annotate-plus',\n  AuthZero = 'authzero',\n  BarChart = 'bar-chart',\n  Bell = 'bell',\n  BellRinging = 'bell-ringing',\n  BellSolid = 'bell-solid',\n  Calendar = 'calendar',\n  Capacitor = 'capacitor2',\n  CaretDown = 'caret-down',\n  CaretLeft = 'caret-left',\n  CaretRight = 'caret-right',\n  CaretUp = 'caret-up',\n  Chat = 'chat',\n  Checkmark = 'checkmark',\n  Circle = 'circle',\n  CircleThick = 'circle-thick',\n  Clock = 'clock',\n  CogOutline = 'cog-outline',\n  CogThick = 'cog-thick',\n  Collapse = 'collapse',\n  CrownOutline = 'crown-outline',\n  CrownSolid = 'crown2',\n  Cube = 'cube',\n  Cubouniform = 'cubo-uniform',\n  CuboNav = 'cubo-nav',\n  Dashboards = 'dashboards',\n  DashF = 'dash-f',\n  DashH = 'dash-h',\n  DashJ = 'dash-j',\n  Disks = 'disks',\n  Download = 'download',\n  Duplicate = 'duplicate',\n  ExpandA = 'expand-a',\n  ExpandB = 'expand-b',\n  Export = 'export',\n  Eye = 'eye',\n  EyeClosed = 'eye-closed',\n  EyeOpen = 'eye-open',\n  GitHub = 'github',\n  Google = 'google',\n  GraphLine = 'graphline-2',\n  Group = 'group',\n  Heroku = 'heroku',\n  HerokuSimple = '',\n  Import = 'import',\n  Link = 'link',\n  OAuth = 'oauth',\n  Octagon = 'octagon',\n  Okta = 'okta',\n  Pause = 'pause',\n  Pencil = 'pencil',\n  Play = 'play',\n  Plus = 'plus',\n  PlusSkinny = 'plus-skinny',\n  Pulse = 'pulse-c',\n  Refresh = 'refresh',\n  Remove = 'remove',\n  Search = 'search',\n  Server = 'server2',\n  Shuffle = 'shuffle',\n  Square = 'square',\n  TextBlock = 'text-block',\n  Trash = 'trash',\n  Triangle = 'triangle',\n  User = 'user',\n  UserAdd = 'user-add',\n  UserOutline = 'user-outline',\n  UserRemove = 'user-remove',\n  UsersDuo = 'users-duo',\n  UsersTrio = 'users-trio',\n  Wood = 'wood',\n  Wrench = 'wrench',\n  Star = 'star',\n  Stop = 'stop',\n  Zap = 'zap',\n}\n\nexport enum Columns {\n  One = 1,\n  Two = 2,\n  Three = 3,\n  Four = 4,\n  Five = 5,\n  Six = 6,\n  Seven = 7,\n  Eight = 8,\n  Nine = 9,\n  Ten = 10,\n  Eleven = 11,\n  Twelve = 12,\n}\n\nexport enum Alignment {\n  Left = 'left',\n  Center = 'center',\n  Right = 'right',\n}\n\nexport enum Sort {\n  Descending = 'desc',\n  Ascending = 'asc',\n  None = 'none',\n}\n\nexport enum Stack {\n  Rows = 'rows',\n  Columns = 'columns',\n}\n\nexport enum NavMenuType {\n  RouterLink = 'router',\n  HTTPLink = 'http',\n  ShowDropdown = 'showDropdown',\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport classnames from 'classnames'\n\n// Components\nimport ContextMenu from 'src/clockface/components/context_menu/ContextMenu'\nimport ContextMenuItem from 'src/clockface/components/context_menu/ContextMenuItem'\n\n// Types\nimport {Alignment} from 'src/clockface/types'\n\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  children: JSX.Element | JSX.Element[]\n  align: Alignment\n  className?: string\n}\n\ninterface State {\n  boostZIndex: boolean\n}\n\n@ErrorHandling\nclass Context extends PureComponent<Props, State> {\n  public static defaultProps = {\n    align: Alignment.Right,\n  }\n\n  public static Menu = ContextMenu\n  public static Item = ContextMenuItem\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      boostZIndex: false,\n    }\n  }\n\n  public render() {\n    const {children} = this.props\n\n    return (\n      <div className={this.className}>\n        {React.Children.map(children, (child: JSX.Element) => {\n          if (child.type === ContextMenu) {\n            return (\n              <ContextMenu\n                {...child.props}\n                onBoostZIndex={this.handleBoostZIndex}\n              />\n            )\n          } else {\n            return child\n          }\n        })}\n      </div>\n    )\n  }\n\n  private handleBoostZIndex = (boostZIndex: boolean): void => {\n    this.setState({boostZIndex})\n  }\n\n  private get className(): string {\n    const {align, className} = this.props\n    const {boostZIndex} = this.state\n\n    return classnames('context-menu', {\n      [`${className}`]: className,\n      'context-menu--boost-z': boostZIndex,\n      'context-menu--align-left': align === Alignment.Left,\n      'context-menu--align-right': align === Alignment.Right,\n    })\n  }\n}\n\nexport default Context\n","import React, {SFC} from 'react'\n\ninterface WrapperProps<T> {\n  type: JSX.Element['type']\n  children: T[] | T\n}\n\ninterface Options {\n  count?: number\n  strict?: boolean\n}\n\ntype WrapSelection<T> = SFC<WrapperProps<T> & Options>\n\nconst Select: WrapSelection<JSX.Element> = ({\n  type,\n  children,\n  strict = false,\n  count = Infinity,\n}): JSX.Element => (\n  <>\n    {React.Children.map(children, (child: JSX.Element) => {\n      if (child.type === type && count-- > 0) {\n        return child\n      } else if (strict && child.type !== type) {\n        throw new Error(`Expected ${type} but received ${child.type}`)\n      }\n    })}\n  </>\n)\n\nexport default Select\n","// Import Components\nimport MultipleInput, {\n  MultiInputType,\n} from './components/inputs/multipleInput/MultipleInput'\nimport WizardFullScreen from './components/wizard/WizardFullScreen'\nimport WizardOverlay from './components/wizard/WizardOverlay'\nimport WizardProgressHeader from './components/wizard/WizardProgressHeader'\nimport ProgressBar from './components/wizard/ProgressBar'\nimport Context from './components/context_menu/Context'\nimport Select from 'src/clockface/components/Select'\n\n// Import Types\nimport {\n  ComponentColor,\n  ComponentSize,\n  ComponentStatus,\n  DropdownMenuColors,\n  DropdownMenuPosition,\n  DropdownChild,\n  ButtonShape,\n  Greys,\n  IconFont,\n  Columns,\n  Alignment,\n  Stack,\n  ButtonType,\n  Sort,\n  NavMenuType,\n} from './types'\n\n// Fire de lazer\nexport {\n  Alignment,\n  ButtonType,\n  ButtonShape,\n  Columns,\n  ComponentColor,\n  ComponentSize,\n  ComponentStatus,\n  Context,\n  DropdownChild,\n  DropdownMenuColors,\n  DropdownMenuPosition,\n  Greys,\n  IconFont,\n  MultiInputType,\n  MultipleInput,\n  NavMenuType,\n  ProgressBar,\n  Select,\n  Sort,\n  Stack,\n  WizardFullScreen,\n  WizardProgressHeader,\n  WizardOverlay,\n}\n","import {\n  StatusRule,\n  NotificationRuleBase,\n  TagRule,\n  SlackNotificationEndpoint,\n  PagerDutyNotificationEndpoint,\n  HTTPNotificationEndpoint,\n  SlackNotificationRuleBase,\n  SMTPNotificationRuleBase,\n  PagerDutyNotificationRuleBase,\n  HTTPNotificationRuleBase,\n  Check as GenCheck,\n  ThresholdCheck as GenThresholdCheck,\n  DeadmanCheck as GenDeadmanCheck,\n  CustomCheck as GenCustomCheck,\n  NotificationRule as GenRule,\n  NotificationEndpoint as GenEndpoint,\n  TaskStatusType,\n  Threshold,\n  CheckBase as GenCheckBase,\n  NotificationEndpointBase as GenEndpointBase,\n} from 'src/client'\nimport {RemoteDataState} from 'src/types'\n\ntype Omit<T, U> = Pick<T, Exclude<keyof T, U>>\ntype Overwrite<T, U> = Omit<T, keyof U> & U\n\ninterface WithClientID<T> {\n  cid: string\n  value: T\n}\n\n/* Endpoints */\ntype EndpointOverrides = {\n  status: RemoteDataState\n  activeStatus: TaskStatusType\n  labels: string[]\n}\n// GenEndpoint is the shape of a NotificationEndpoint from the server -- before any UI specific fields are or modified\nexport type GenEndpoint = GenEndpoint\nexport type NotificationEndpoint =\n  | (Omit<SlackNotificationEndpoint, 'status' | 'labels'> & EndpointOverrides)\n  | (Omit<PagerDutyNotificationEndpoint, 'status' | 'labels'> &\n      EndpointOverrides)\n  | (Omit<HTTPNotificationEndpoint, 'status' | 'labels'> & EndpointOverrides)\nexport type NotificationEndpointBase = Omit<GenEndpointBase, 'labels'> &\n  EndpointOverrides\n\n/* Rule */\ntype RuleOverrides = {status: RemoteDataState; activeStatus: TaskStatusType}\n\n// GenRule is the shape of a NotificationRule from the server -- before any UI specific fields are added or modified\nexport type GenRule = GenRule\nexport type NotificationRule = GenRule & RuleOverrides\n\nexport type StatusRuleDraft = WithClientID<StatusRule>\n\nexport type TagRuleDraft = WithClientID<TagRule>\n\nexport type NotificationRuleBaseDraft = Overwrite<\n  NotificationRuleBase,\n  {\n    id?: string\n    status: RemoteDataState\n    activeStatus: TaskStatusType\n    statusRules: StatusRuleDraft[]\n    tagRules: TagRuleDraft[]\n    labels?: string[]\n  }\n>\n\ntype RuleDraft = SlackRule | SMTPRule | PagerDutyRule | HTTPRule\n\nexport type NotificationRuleDraft = RuleDraft\n\ntype SlackRule = NotificationRuleBaseDraft &\n  SlackNotificationRuleBase &\n  RuleOverrides\n\ntype SMTPRule = NotificationRuleBaseDraft &\n  SMTPNotificationRuleBase &\n  RuleOverrides\n\ntype PagerDutyRule = NotificationRuleBaseDraft &\n  PagerDutyNotificationRuleBase &\n  RuleOverrides\n\ntype HTTPRule = NotificationRuleBaseDraft &\n  HTTPNotificationRuleBase &\n  RuleOverrides\n\nexport type LowercaseCheckStatusLevel =\n  | 'crit'\n  | 'warn'\n  | 'info'\n  | 'ok'\n  | 'unknown'\n\n// The data for a row in the status history table\nexport interface StatusRow {\n  time: number\n  level: LowercaseCheckStatusLevel\n  checkID: string\n  checkName: string\n  message: string\n}\n\n// The data for a row in the notification history table\nexport interface NotificationRow {\n  time: number\n  level: LowercaseCheckStatusLevel\n  checkID: string\n  checkName: string\n  notificationRuleID: string\n  notificationRuleName: string\n  notificationEndpointID: string\n  notificationEndpointName: string\n  sent: 'true' | 'false' // See https://github.com/influxdata/idpe/issues/4645\n}\n\n/* Checks */\ntype CheckOverrides = {\n  status: RemoteDataState\n  activeStatus: TaskStatusType\n  labels: string[]\n}\nexport type CheckBase = Omit<GenCheckBase, 'status'> & CheckOverrides\n\n// GenCheck is the shape of a Check from the server -- before UI specific properties are added\nexport type GenCheck = GenCheck\nexport type GenThresholdCheck = GenThresholdCheck\nexport type GenDeadmanCheck = GenDeadmanCheck\n\nexport type ThresholdCheck = Omit<GenThresholdCheck, 'status' | 'labels'> &\n  CheckOverrides\n\nexport type DeadmanCheck = Omit<GenDeadmanCheck, 'status' | 'labels'> &\n  CheckOverrides\n\nexport type CustomCheck = Omit<GenCustomCheck, 'status' | 'labels'> &\n  CheckOverrides\n\nexport type Check = ThresholdCheck | DeadmanCheck | CustomCheck\n\nexport type CheckType = Check['type']\n\nexport type ThresholdType = Threshold['type']\n\nexport type CheckTagSet = ThresholdCheck['tags'][0]\n\nexport type AlertHistoryType = 'statuses' | 'notifications'\n\nexport type HTTPMethodType = HTTPNotificationEndpoint['method']\nexport type HTTPAuthMethodType = HTTPNotificationEndpoint['authMethod']\n\nexport {\n  Threshold,\n  StatusRule,\n  TagRule,\n  PostCheck,\n  CheckStatusLevel,\n  RuleStatusLevel,\n  GreaterThreshold,\n  LesserThreshold,\n  RangeThreshold,\n  PostNotificationEndpoint,\n  NotificationRuleBase,\n  NotificationRuleUpdate,\n  NotificationEndpointType,\n  SMTPNotificationRuleBase,\n  SlackNotificationRuleBase,\n  PagerDutyNotificationRuleBase,\n  HTTPNotificationRuleBase,\n  SMTPNotificationRule,\n  SlackNotificationRule,\n  PagerDutyNotificationRule,\n  HTTPNotificationRule,\n  PagerDutyNotificationEndpoint,\n  SlackNotificationEndpoint,\n  HTTPNotificationEndpoint,\n  NotificationEndpointUpdate,\n  PostNotificationRule,\n  CheckPatch,\n  TaskStatusType,\n} from '../client'\n","export const getRootNode = () => document.getElementById('react-root')\n","export {Authorization, Permission} from 'src/client'\n","export enum AutoRefreshStatus {\n  Active = 'active',\n  Disabled = 'disabled',\n  Paused = 'paused',\n}\n\nexport interface AutoRefresh {\n  status: AutoRefreshStatus\n  interval: number\n}\n","import {Bucket as IBucket} from 'src/client'\n\nexport type GenBucket = IBucket\n\nexport interface Bucket extends Omit<IBucket, 'labels'> {\n  labels?: string[]\n}\n\nexport type BucketRetentionRules = IBucket['retentionRules']\n\nexport enum RetentionRuleTypes {\n  Expire = 'expire',\n  Forever = 'forever',\n}\n\nexport interface RetentionRule {\n  type: RetentionRuleTypes\n  everySeconds: number\n}\n\nexport interface BucketLinks {\n  org: string\n  self: string\n}\n","// Write Data Modes\nexport enum WriteDataMode {\n  Manual = 'Manual Entry',\n  File = 'File Upload',\n}\n","// function definitions\nimport {Source} from 'src/types'\nexport type OnDeleteFuncNode = (ids: DeleteFuncNodeArgs) => void\nexport type OnChangeArg = (inputArg: InputArg) => void\nexport type OnAddNode = (\n  bodyID: string,\n  funcName: string,\n  declarationID: string\n) => void\nexport type OnToggleYield = (\n  bodyID: string,\n  declarationID: string,\n  funcNodeIndex: number\n) => void\nexport type OnGenerateScript = () => void\nexport type OnChangeScript = (script: string) => void\nexport type ScriptUpToYield = (\n  bodyID: string,\n  declarationID: string,\n  yieldNodeIndex: number,\n  isYieldable: boolean\n) => string\nexport type OnDeleteBody = (bodyID: string) => void\n\nexport interface ScriptStatus {\n  type: string\n  text: string\n}\n\nexport interface Context {\n  source: Source\n  onAddNode: OnAddNode\n  onChangeArg: OnChangeArg\n  onChangeScript: OnChangeScript\n  onDeleteFuncNode: OnDeleteFuncNode\n  onGenerateScript: OnGenerateScript\n  onToggleYield: OnToggleYield\n  data: FluxTable[]\n  scriptUpToYield: ScriptUpToYield\n}\n\nexport interface DeleteFuncNodeArgs {\n  funcID: string\n  bodyID: string\n  declarationID?: string\n  yieldNodeID?: string\n}\n\nexport interface InputArg {\n  funcID: string\n  bodyID: string\n  declarationID?: string\n  key: string\n  value: string | boolean | {[x: string]: string}\n  generate?: boolean\n}\n\n// Flattened AST\nexport interface BinaryExpressionNode {\n  source: string\n  type: string\n}\n\ninterface ObjectNode {\n  name: string\n  type: string\n}\n\ninterface PropertyNode {\n  name?: string\n  value?: string\n  type: string\n}\n\nexport interface MemberExpressionNode {\n  type: string\n  source: string\n  object: ObjectNode\n  property: PropertyNode\n}\n\nexport type FilterNode = BinaryExpressionNode | MemberExpressionNode\n\nexport interface FilterTagCondition {\n  key: string\n  operator: string\n  value: string\n}\n\nexport interface FilterClause {\n  [tagKey: string]: FilterTagCondition[]\n}\n\nexport type SetFilterTagValue = (\n  key: string,\n  value: string,\n  selected: boolean\n) => void\n\nexport type SetEquality = (tagKey: string, equal: boolean) => void\n\nexport interface FlatBody {\n  type: string\n  source: string\n  funcs?: Func[]\n  declarations?: FlatDeclaration[]\n}\nexport interface Body extends FlatBody {\n  id: string\n}\n\nexport interface Func {\n  type: string\n  name: string\n  args: Arg[]\n  source: string\n  id: string\n}\n\nexport type Arg = ArgString\n\nexport interface ArgString {\n  key: string\n  value: string\n  type: string\n}\n\ninterface FlatExpression {\n  id: string\n  funcs?: Func[]\n}\n\ninterface FlatDeclaration extends FlatExpression {\n  name: string\n  value: string\n  type: string\n}\n\n// Semantic Graph list of available functions for flux queries\nexport interface Suggestion {\n  name: string\n  params: {\n    [key: string]: string\n  }\n}\n\nexport interface FluxLinks {\n  self: string\n  suggestions: string\n  ast: string\n}\n\n// FluxTable is the result of a request to Flux\n// https://github.com/influxdata/influxdb/blob/master/query/docs/SPEC.md#response-format\nexport interface FluxTable {\n  id: string\n  name: string\n  data: string[][]\n  result: string\n  groupKey: {\n    [columnName: string]: string\n  }\n  dataTypes: {\n    [columnName: string]: string\n  }\n}\n\nexport interface SchemaFilter {\n  key: string\n  value: string\n}\n\nexport enum RemoteDataState {\n  NotStarted = 'NotStarted',\n  Loading = 'Loading',\n  Done = 'Done',\n  Error = 'Error',\n}\n","export {LogEvent} from 'src/client'\n","export {Organization} from 'src/client'\n","export {Query, Dialect} from 'src/client'\n\nexport type SelectableTimeRangeLower =\n  | 'now() - 5m'\n  | 'now() - 15m'\n  | 'now() - 1h'\n  | 'now() - 6h'\n  | 'now() - 12h'\n  | 'now() - 24h'\n  | 'now() - 2d'\n  | 'now() - 7d'\n  | 'now() - 30d'\n\nexport type TimeRange =\n  | SelectableDurationTimeRange\n  | DurationTimeRange\n  | CustomTimeRange\n\nexport interface SelectableDurationTimeRange {\n  lower: SelectableTimeRangeLower\n  upper: null\n  seconds: number\n  format?: string\n  label: string\n  duration: string\n  type: 'selectable-duration'\n  windowPeriod: number\n}\n\nexport interface DurationTimeRange {\n  lower: string\n  upper: null\n  type: 'duration'\n}\n\nexport interface CustomTimeRange {\n  lower: string\n  upper: string\n  type: 'custom'\n}\n","import {\n  Authorization,\n  Bucket,\n  Cell,\n  Check,\n  Dashboard,\n  Member,\n  NotificationEndpoint,\n  NotificationRule,\n  Organization,\n  RemoteDataState,\n  Scraper,\n  TasksState,\n  Telegraf,\n  TemplatesState,\n  VariablesState,\n  View,\n  Label,\n} from 'src/types'\n\nexport enum ResourceType {\n  Authorizations = 'tokens',\n  Buckets = 'buckets',\n  Cells = 'cells',\n  Checks = 'checks',\n  Dashboards = 'dashboards',\n  Labels = 'labels',\n  Orgs = 'orgs',\n  Members = 'members',\n  NotificationRules = 'rules',\n  NotificationEndpoints = 'endpoints',\n  Plugins = 'plugins',\n  Scrapers = 'scrapers',\n  Tasks = 'tasks',\n  Templates = 'templates',\n  Telegrafs = 'telegrafs',\n  Variables = 'variables',\n  Views = 'views',\n}\n\nexport interface NormalizedState<R> {\n  byID: {\n    [uuid: string]: R\n  }\n  allIDs: string[]\n  status: RemoteDataState\n}\n\nexport interface OrgsState extends NormalizedState<Organization> {\n  org: Organization\n}\n\nexport interface TelegrafsState extends NormalizedState<Telegraf> {\n  currentConfig: {status: RemoteDataState; item: string}\n}\n\nexport interface RulesState extends NormalizedState<NotificationRule> {\n  current: {status: RemoteDataState; rule: NotificationRule}\n}\n\n// Cells \"allIDs\" are Dashboard.cells\ntype CellsState = Omit<NormalizedState<Cell>, 'allIDs'>\n\n// ResourceState defines the types for normalized resources\nexport interface ResourceState {\n  [ResourceType.Authorizations]: NormalizedState<Authorization>\n  [ResourceType.Buckets]: NormalizedState<Bucket>\n  [ResourceType.Cells]: CellsState\n  [ResourceType.Checks]: NormalizedState<Check>\n  [ResourceType.Dashboards]: NormalizedState<Dashboard>\n  [ResourceType.Labels]: NormalizedState<Label>\n  [ResourceType.Members]: NormalizedState<Member>\n  [ResourceType.Orgs]: OrgsState\n  [ResourceType.Scrapers]: NormalizedState<Scraper>\n  [ResourceType.Tasks]: TasksState\n  [ResourceType.Telegrafs]: TelegrafsState\n  [ResourceType.Templates]: TemplatesState\n  [ResourceType.Variables]: VariablesState\n  [ResourceType.Views]: NormalizedState<View>\n  [ResourceType.NotificationEndpoints]: NormalizedState<NotificationEndpoint>\n  [ResourceType.NotificationRules]: RulesState\n}\n","import {Service} from './'\n\nexport type NewSource = Pick<Source, Exclude<keyof Source, 'id'>>\n\nexport enum SourceAuthenticationMethod {\n  LDAP = 'ldap',\n  Basic = 'basic',\n  Shared = 'shared',\n  Unknown = 'unknown',\n}\n\nexport interface Source {\n  id: string\n  name: string\n  type: string\n  username?: string\n  password?: string\n  sharedSecret?: string\n  url: string\n  metaUrl?: string\n  insecureSkipVerify: boolean\n  default: boolean\n  telegraf: string\n  links: SourceLinks\n  defaultRP?: string\n  text?: string // added client-side for dropdowns\n  services?: Service[]\n  authentication?: SourceAuthenticationMethod\n}\n\nexport interface SourceLinks {\n  query: string\n  self: string\n  kapacitors: string\n  proxy: string\n  queries: string\n  write: string\n  permissions: string\n  users: string\n  roles?: string\n  databases: string\n  annotations: string\n  health: string\n  services: string\n}\n\nexport interface SourceOption extends Source {\n  text: string\n}\n","import {Task as ITask} from 'src/client'\nimport {NormalizedState, Run, RemoteDataState, LogEvent} from 'src/types'\n\nexport interface Task extends Omit<ITask, 'labels'> {\n  labels?: string[]\n}\nexport interface TaskOptions {\n  name: string\n  interval: string\n  cron: string\n  offset: string\n  taskScheduleType: TaskSchedule\n  orgID: string\n  toOrgName: string\n  toBucketName: string\n}\n\nexport interface TasksState extends NormalizedState<Task> {\n  newScript: string\n  currentScript: string\n  currentTask: Task\n  searchTerm: string\n  showInactive: boolean\n  taskOptions: TaskOptions\n  runs: Run[]\n  runStatus: RemoteDataState\n  logs: LogEvent[]\n}\n\nexport enum TaskSchedule {\n  interval = 'interval',\n  cron = 'cron',\n  unselected = '',\n}\n\nexport type TaskOptionKeys = keyof TaskOptions\n","import {\n  Document,\n  DocumentCreate,\n  DocumentMeta,\n  TemplateSummary as GenTemplateSummary,\n  TemplateType,\n} from '@influxdata/influx'\nimport {\n  Cell,\n  Dashboard,\n  NormalizedState,\n  RemoteDataState,\n  Variable,\n  View,\n  GenLabel,\n  PostVariable,\n  Label,\n} from 'src/types'\n\nexport interface TemplateSummary extends Omit<GenTemplateSummary, 'labels'> {\n  labels: string[]\n  status: RemoteDataState\n}\n\nexport interface TemplatesState extends NormalizedState<TemplateSummary> {\n  exportTemplate: {status: RemoteDataState; item: DocumentCreate}\n}\n\ninterface KeyValuePairs {\n  [key: string]: any\n}\n\ninterface DocumentMetaWithTemplateID extends DocumentMeta {\n  templateID?: string\n}\n\n// Templates\nexport interface GenTemplateBase extends Document {\n  meta: DocumentMetaWithTemplateID\n  content: {data: TemplateData; included: TemplateIncluded[]}\n  labels: Label[]\n}\n\nexport interface TemplateBase extends Omit<Document, 'labels'> {\n  meta: DocumentMetaWithTemplateID\n  content: {data: TemplateData; included: TemplateIncluded[]}\n  labels: string[]\n}\n\n// TODO: be more specific about what attributes can be\ninterface TemplateData {\n  type: TemplateType\n  attributes: KeyValuePairs\n  relationships: Relationships\n}\n\ninterface TemplateIncluded {\n  type: TemplateType\n  id: string\n  attributes: KeyValuePairs\n  relationships?: Relationships\n}\n\n// enforces key association with relationship type\nexport type Relationships = {\n  [key in keyof RelationshipMap]?: {\n    data: OneOrMany<RelationshipMap[key]>\n  }\n}\n\ntype OneOrMany<T> = T | T[]\n\ninterface RelationshipMap {\n  [TemplateType.Cell]: CellRelationship\n  [TemplateType.Label]: LabelRelationship\n  [TemplateType.View]: ViewRelationship\n  [TemplateType.Variable]: VariableRelationship\n}\n\nexport interface CellRelationship {\n  type: TemplateType.Cell\n  id: string\n}\n\nexport interface LabelRelationship {\n  type: TemplateType.Label\n  id: string\n}\n\nexport interface VariableRelationship {\n  type: TemplateType.Variable\n  id: string\n}\n\ninterface ViewRelationship {\n  type: TemplateType.View\n  id: string\n}\n\n// Template Includeds\nexport interface ViewIncluded extends TemplateIncluded {\n  type: TemplateType.View\n  attributes: View\n}\n\nexport interface CellIncluded extends TemplateIncluded {\n  type: TemplateType.Cell\n  attributes: Cell\n  relationships: {\n    [TemplateType.View]: {data: ViewRelationship}\n  }\n}\n\nexport interface LabelIncluded extends TemplateIncluded {\n  type: TemplateType.Label\n  attributes: GenLabel\n}\n\nexport interface VariableIncluded extends TemplateIncluded {\n  type: TemplateType.Variable\n  attributes: Variable\n  relationships: {\n    [TemplateType.Label]: {data: LabelRelationship[]}\n  }\n}\n\nexport type TaskTemplateIncluded = LabelIncluded\n\nexport type DashboardTemplateIncluded =\n  | CellIncluded\n  | ViewIncluded\n  | LabelIncluded\n  | VariableIncluded\n\nexport type VariableTemplateIncluded = LabelIncluded | VariableIncluded\n\n// Template Data\ninterface TaskTemplateData extends TemplateData {\n  type: TemplateType.Task\n  attributes: {name: string; flux: string}\n  relationships: {\n    [TemplateType.Label]: {data: LabelRelationship[]}\n  }\n}\n\ninterface DashboardTemplateData extends TemplateData {\n  type: TemplateType.Dashboard\n  attributes: Dashboard\n  relationships: {\n    [TemplateType.Label]: {data: LabelRelationship[]}\n    [TemplateType.Cell]: {data: CellRelationship[]}\n    [TemplateType.Variable]: {data: VariableRelationship[]}\n  }\n}\n\ninterface VariableTemplateData extends TemplateData {\n  type: TemplateType.Variable\n  attributes: PostVariable\n  relationships: {\n    [TemplateType.Label]: {data: LabelRelationship[]}\n    [TemplateType.Variable]: {data: VariableRelationship[]}\n  }\n}\n\n// Templates\nexport interface TaskTemplate extends TemplateBase {\n  content: {\n    data: TaskTemplateData\n    included: TaskTemplateIncluded[]\n  }\n}\n\nexport interface DashboardTemplate extends TemplateBase {\n  content: {\n    data: DashboardTemplateData\n    included: DashboardTemplateIncluded[]\n  }\n}\n\nexport interface VariableTemplate extends TemplateBase {\n  content: {\n    data: VariableTemplateData\n    included: VariableTemplateIncluded[]\n  }\n}\n\nexport type Template = TaskTemplate | DashboardTemplate | VariableTemplate\n\nexport {TemplateType} from '@influxdata/influx'\n","import {Variable as GenVariable, Label} from 'src/client'\nexport {VariableProperties} from 'src/client'\n\nimport {\n  VariableArgumentType,\n  QueryArguments,\n  MapArguments,\n  CSVArguments,\n  RemoteDataState,\n  NormalizedState,\n} from 'src/types'\n\n// GenVariable is the shape of a variable from the server\nexport type GenVariable = GenVariable\nexport interface Variable extends Omit<GenVariable, 'labels'> {\n  status: RemoteDataState // Loading status of an individual variable\n  labels: string[]\n}\n\nexport interface PostVariable extends GenVariable {\n  labels: Label[]\n}\n\nexport type FluxColumnType =\n  | 'boolean'\n  | 'unsignedLong'\n  | 'long'\n  | 'double'\n  | 'string'\n  | 'base64Binary'\n  | 'dateTime'\n  | 'duration'\n\nexport interface VariableValues {\n  values: string[]\n  valueType: FluxColumnType\n  selectedValue: string\n  error?: string\n}\n\nexport interface VariableValuesByID {\n  [variableID: string]: VariableValues\n}\n\nexport interface ValueSelections {\n  [variableID: string]: string\n}\n\nexport interface VariablesState extends NormalizedState<Variable> {\n  values: {\n    // Different variable values can be selected in different\n    // \"contexts\"---different parts of the app like a particular dashboard, or\n    // the Data Explorer\n    [contextID: string]: {\n      status: RemoteDataState\n      order: string[] // IDs of variables\n      values: VariableValuesByID\n    }\n  }\n}\n\nexport interface VariableEditorState {\n  name: string\n  selected: VariableArgumentType\n  argsQuery: QueryArguments\n  argsMap: MapArguments\n  argsConstant: CSVArguments\n}\n","import {CustomTimeRange, TimeRange, DurationTimeRange} from 'src/types/queries'\n\nimport {SELECTABLE_TIME_RANGES} from 'src/shared/constants/timeRanges'\nimport {isDateParseable} from 'src/variables/utils/getTimeRangeVars'\nimport {isDurationWithNowParseable} from 'src/shared/utils/duration'\n\ninterface InputTimeRange {\n  seconds?: number\n  lower?: string\n  upper?: string\n}\n\ninterface OutputTimeRange {\n  since: number\n  until: number | null\n}\n\nexport const millisecondTimeRange = ({\n  seconds,\n  lower,\n  upper,\n}: InputTimeRange): OutputTimeRange => {\n  // Is this a relative time range?\n  if (seconds) {\n    return {since: Date.now() - seconds * 1000, until: null}\n  }\n\n  const since = Date.parse(lower)\n  let until\n  if (upper === 'now()') {\n    until = Date.now()\n  } else {\n    until = Date.parse(upper)\n  }\n  return {since, until}\n}\n\nexport const validateAndTypeRange = (timeRange: {\n  lower: string\n  upper: string\n}): TimeRange => {\n  const {lower, upper} = timeRange\n  if (isDateParseable(lower) && isDateParseable(upper)) {\n    return {\n      ...timeRange,\n      type: 'custom',\n    } as CustomTimeRange\n  }\n\n  if (isDurationWithNowParseable(lower)) {\n    const selectableTimeRange = SELECTABLE_TIME_RANGES.find(\n      r => r.lower === lower\n    )\n\n    if (selectableTimeRange) {\n      return selectableTimeRange\n    }\n\n    return {\n      lower,\n      upper: null,\n      type: 'duration',\n    } as DurationTimeRange\n  }\n  return null\n}\n","// Libraries\nimport React, {Component} from 'react'\nimport _ from 'lodash'\nimport classnames from 'classnames'\nimport {Scrollbars} from '@influxdata/react-custom-scrollbars'\n\n// Decorators\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\ninterface Props {\n  className: string\n  maxHeight: number\n  autoHide: boolean\n  autoHeight: boolean\n  style: React.CSSProperties\n  hideTracksWhenNotNeeded: boolean\n  setScrollTop: (value: React.MouseEvent<HTMLElement>) => void\n  scrollTop?: number\n  scrollLeft?: number\n  thumbStartColor?: string\n  thumbStopColor?: string\n}\n\n@ErrorHandling\nclass FancyScrollbar extends Component<Props> {\n  public static defaultProps = {\n    className: '',\n    autoHide: true,\n    autoHeight: false,\n    hideTracksWhenNotNeeded: true,\n    maxHeight: null,\n    style: {},\n    setScrollTop: () => {},\n  }\n\n  private ref: React.RefObject<Scrollbars>\n\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef<Scrollbars>()\n  }\n\n  public updateScroll() {\n    const ref = this.ref.current\n    if (ref && !_.isNil(this.props.scrollTop)) {\n      ref.scrollTop(this.props.scrollTop)\n    }\n\n    if (ref && !_.isNil(this.props.scrollLeft)) {\n      ref.scrollLeft(this.props.scrollLeft)\n    }\n  }\n\n  public componentDidMount() {\n    this.updateScroll()\n  }\n\n  public componentDidUpdate() {\n    this.updateScroll()\n  }\n\n  public render() {\n    const {\n      autoHide,\n      autoHeight,\n      children,\n      className,\n      maxHeight,\n      setScrollTop,\n      style,\n      thumbStartColor,\n      thumbStopColor,\n      hideTracksWhenNotNeeded,\n    } = this.props\n\n    return (\n      <Scrollbars\n        className={classnames('fancy-scroll--container', {\n          [className]: className,\n        })}\n        ref={this.ref}\n        style={style}\n        onScroll={setScrollTop}\n        autoHide={autoHide}\n        autoHideTimeout={1000}\n        autoHideDuration={250}\n        autoHeight={autoHeight}\n        autoHeightMax={maxHeight}\n        thumbStartColor={thumbStartColor}\n        thumbStopColor={thumbStopColor}\n        hideTracksWhenNotNeeded={hideTracksWhenNotNeeded}\n      >\n        {children}\n      </Scrollbars>\n    )\n  }\n}\n\nexport default FancyScrollbar\n","import {\n  DEFAULT_VERTICAL_TIME_AXIS,\n  DEFAULT_FIX_FIRST_COLUMN,\n} from 'src/shared/constants/tableGraph'\nimport {Cell, Dashboard, RemoteDataState} from 'src/types'\nimport {DecimalPlaces} from 'src/types'\nimport {DEFAULT_TIME_FORMAT} from 'src/shared/constants'\n\nexport const UNTITLED_GRAPH: string = 'Untitled Graph'\n\nexport const DEFAULT_DECIMAL_PLACES: DecimalPlaces = {\n  isEnforced: true,\n  digits: 2,\n}\n\nexport interface TimeField {\n  internalName: string\n  displayName: string\n  visible: boolean\n}\nexport const DEFAULT_TIME_FIELD: TimeField = {\n  internalName: '_time',\n  displayName: 'time',\n  visible: true,\n}\n\nexport const DEFAULT_TABLE_OPTIONS = {\n  verticalTimeAxis: DEFAULT_VERTICAL_TIME_AXIS,\n  sortBy: DEFAULT_TIME_FIELD,\n  wrapping: 'truncate',\n  fixFirstColumn: DEFAULT_FIX_FIRST_COLUMN,\n}\n\nexport const FORMAT_OPTIONS: Array<{text: string}> = [\n  {text: DEFAULT_TIME_FORMAT},\n  {text: 'DD/MM/YYYY HH:mm:ss.sss'},\n  {text: 'MM/DD/YYYY HH:mm:ss.sss'},\n  {text: 'YYYY/MM/DD HH:mm:ss'},\n  {text: 'hh:mm a'},\n  {text: 'HH:mm'},\n  {text: 'HH:mm:ss'},\n  {text: 'HH:mm:ss ZZ'},\n  {text: 'HH:mm:ss.sss'},\n  {text: 'MMMM D, YYYY HH:mm:ss'},\n  {text: 'dddd, MMMM D, YYYY HH:mm:ss'},\n]\n\nexport type NewDefaultCell = Pick<\n  Cell,\n  Exclude<keyof Cell, 'id' | 'links' | 'dashboardID' | 'name'>\n>\n\nexport const NEW_DEFAULT_DASHBOARD_CELL: NewDefaultCell = {\n  x: 0,\n  y: 0,\n  w: 4,\n  h: 4,\n  status: RemoteDataState.Done,\n}\n\nexport type EmptyDefaultDashboard = Pick<\n  Dashboard,\n  Exclude<\n    keyof Dashboard,\n    'templates' | 'links' | 'organization' | 'cells' | 'labels' | 'orgID'\n  >\n> & {\n  cells: NewDefaultCell[]\n}\n\nexport const EMPTY_DASHBOARD: EmptyDefaultDashboard = {\n  id: '0',\n  name: '',\n  cells: [NEW_DEFAULT_DASHBOARD_CELL],\n  status: RemoteDataState.Done,\n}\n\nexport const DashboardTemplate: EmptyDefaultDashboard = {\n  id: '0',\n  name: 'Create a New Dashboard',\n  cells: [],\n  status: RemoteDataState.Done,\n}\n\ntype NewDefaultDashboard = Pick<\n  Dashboard,\n  Exclude<keyof Dashboard, 'id' | 'templates' | 'organization' | 'cells'> & {\n    cells: NewDefaultCell[]\n  }\n>\nexport const DEFAULT_CELL_NAME = 'Name this Cell'\nexport const DEFAULT_DASHBOARD_NAME = 'Name this Dashboard'\nexport const DEFAULT_BUCKET_NAME = 'Name this Bucket'\nexport const DEFAULT_COLLECTOR_NAME = 'Name this Collector'\nexport const DEFAULT_TASK_NAME = 'Name this Task'\nexport const DEFAULT_SCRAPER_NAME = 'Name this Scraper'\nexport const DEFAULT_TOKEN_DESCRIPTION = 'Describe this Token'\n\nexport const NEW_DASHBOARD: NewDefaultDashboard = {\n  name: DEFAULT_DASHBOARD_NAME,\n  cells: [NEW_DEFAULT_DASHBOARD_CELL],\n}\n\nexport const TYPE_QUERY_CONFIG: string = 'queryConfig'\nexport const TYPE_SHIFTED: string = 'shifted queryConfig'\nexport const TYPE_FLUX: string = 'flux'\nexport const DASHBOARD_NAME_MAX_LENGTH: number = 50\nexport const CELL_NAME_MAX_LENGTH: number = 68\n\nexport enum CEOTabs {\n  Queries = 'Queries',\n  Vis = 'Visualization',\n}\n\nexport const MIN_DECIMAL_PLACES = 0\nexport const MAX_DECIMAL_PLACES = 10\n\n// used in importing dashboards and mapping sources\nexport const DYNAMIC_SOURCE = 'dynamic'\nexport const DYNAMIC_SOURCE_INFO = {\n  name: 'Dynamic Source',\n  id: DYNAMIC_SOURCE,\n  link: '',\n}\n\nexport const UPDATED_AT_TIME_FORMAT = 'YYYY-MM-DD HH:MM:ss'\n","// Libraries\nimport {get} from 'lodash'\nimport {\n  binaryPrefixFormatter,\n  timeFormatter,\n  siPrefixFormatter,\n  Table,\n  ColumnType,\n  LineInterpolation,\n  FromFluxResult,\n} from '@influxdata/giraffe'\n\nimport {VIS_SIG_DIGITS, DEFAULT_TIME_FORMAT} from 'src/shared/constants'\n\n// Types\nimport {XYGeom, Axis, Base, TimeZone} from 'src/types'\nimport {resolveTimeFormat} from 'src/dashboards/utils/tableGraph'\n\n/*\n  A geom may be stored as \"line\", \"step\", \"monotoneX\", \"bar\", or \"stacked\", but\n  we currently only support the \"line\", \"step\", and \"monotoneX\" geoms.\n*/\nexport const resolveGeom = (geom: XYGeom) => {\n  if (geom === 'step' || geom === 'monotoneX') {\n    return geom\n  }\n\n  return 'line'\n}\n\nexport const geomToInterpolation = (geom: XYGeom): LineInterpolation => {\n  const resolvedGeom = resolveGeom(geom)\n\n  switch (resolvedGeom) {\n    case 'step':\n      return 'step'\n    case 'monotoneX':\n      return 'monotoneX'\n    default:\n      return 'linear'\n  }\n}\n\ninterface GetFormatterOptions {\n  prefix?: string\n  suffix?: string\n  base?: Base\n  timeZone?: TimeZone\n  trimZeros?: boolean\n  timeFormat?: string\n}\n\nexport const getFormatter = (\n  columnType: ColumnType,\n  {\n    prefix,\n    suffix,\n    base,\n    timeZone,\n    trimZeros = true,\n    timeFormat = DEFAULT_TIME_FORMAT,\n  }: GetFormatterOptions = {}\n): null | ((x: any) => string) => {\n  if (columnType === 'number' && base === '2') {\n    return binaryPrefixFormatter({\n      prefix,\n      suffix,\n      significantDigits: VIS_SIG_DIGITS,\n    })\n  }\n\n  if (columnType === 'number') {\n    return siPrefixFormatter({\n      prefix,\n      suffix,\n      significantDigits: VIS_SIG_DIGITS,\n      trimZeros,\n    })\n  }\n\n  if (columnType === 'time') {\n    return timeFormatter({\n      timeZone: timeZone === 'Local' ? undefined : timeZone,\n      format: resolveTimeFormat(timeFormat),\n    })\n  }\n\n  return null\n}\n\nconst NOISY_LEGEND_COLUMNS = new Set(['_start', '_stop', 'result'])\n\n/*\n  Some columns (e.g. `_start` and `_stop`) appear frequently in Flux group\n  keys, but rarely affect the actual grouping of data since every value in the\n  response for these columns is equal. When this is the case, we hide these\n  columns in the hover legend.\n*/\nexport const filterNoisyColumns = (columns: string[], table: Table): string[] =>\n  columns.filter(key => {\n    if (!NOISY_LEGEND_COLUMNS.has(key)) {\n      return true\n    }\n\n    const keyData = table.getColumn(key)\n\n    for (const d of keyData) {\n      if (d !== keyData[0]) {\n        return true\n      }\n    }\n\n    return false\n  })\n\nexport const parseBounds = (\n  bounds: Axis['bounds']\n): [number, number] | null => {\n  if (\n    !bounds ||\n    !bounds[0] ||\n    !bounds[1] ||\n    isNaN(+bounds[0]) ||\n    isNaN(+bounds[1])\n  ) {\n    return null\n  }\n\n  return [+bounds[0], +bounds[1]]\n}\n\nexport const extent = (xs: number[]): [number, number] | null => {\n  if (!xs || !xs.length) {\n    return null\n  }\n\n  let low = Infinity\n  let high = -Infinity\n\n  for (const x of xs) {\n    if (x < low) {\n      low = x\n    }\n\n    if (x > high) {\n      high = x\n    }\n  }\n\n  if (low === Infinity || high === -Infinity) {\n    return null\n  }\n\n  return [low, high]\n}\n\nexport const checkResultsLength = (giraffeResult: FromFluxResult): boolean => {\n  return get(giraffeResult, 'table.length', 0) > 0\n}\n\nexport const getNumericColumns = (table: Table): string[] => {\n  const numericColumnKeys = table.columnKeys.filter(k => {\n    if (k === 'result' || k === 'table') {\n      return false\n    }\n\n    const columnType = table.getColumnType(k)\n\n    return columnType === 'time' || columnType === 'number'\n  })\n\n  return numericColumnKeys\n}\n\nexport const getGroupableColumns = (table: Table): string[] => {\n  const invalidGroupColumns = new Set(['_value', '_time', 'table'])\n  const groupableColumns = table.columnKeys.filter(\n    name => !invalidGroupColumns.has(name)\n  )\n\n  return groupableColumns\n}\n\n/*\n  Previously we would automatically select an x and y column setting for an\n  `XYView` based on the current Flux response.  We then added support for an\n  explicit x and y column setting by adding `xColumn` and `yColumn` fields to\n  the `XYView`.\n\n  We did not migrate existing views when adding the fields, so the fields are\n  considered optional. Thus to resolve the correct x and y column selections\n  for an `XYView`, we need to:\n\n  1. Use the `xColumn` and `yColumn` fields if they exist\n  2. Fall back to automatically selecting and x and y column if not\n\n  A `null` result from this function indicates that no valid selection could be\n  made.\n*/\nexport const defaultXColumn = (\n  table: Table,\n  preferredColumnKey?: string\n): string | null => {\n  const validColumnKeys = getNumericColumns(table)\n\n  if (validColumnKeys.includes(preferredColumnKey)) {\n    return preferredColumnKey\n  }\n\n  for (const key of ['_time', '_stop', '_start']) {\n    if (validColumnKeys.includes(key)) {\n      return key\n    }\n  }\n\n  if (validColumnKeys.length) {\n    return validColumnKeys[0]\n  }\n\n  return null\n}\n\n/*\n  See `defaultXColumn`.\n*/\nexport const defaultYColumn = (\n  table: Table,\n  preferredColumnKey?: string\n): string | null => {\n  const validColumnKeys = getNumericColumns(table)\n\n  if (validColumnKeys.includes(preferredColumnKey)) {\n    return preferredColumnKey\n  }\n\n  for (const key of validColumnKeys) {\n    if (key.startsWith('_value')) {\n      return key\n    }\n  }\n\n  if (validColumnKeys.length) {\n    return validColumnKeys[0]\n  }\n\n  return null\n}\n\nexport const isInDomain = (value: number, domain: number[]) =>\n  value >= domain[0] && value <= domain[1]\n\nexport const clamp = (value: number, domain: number[]) => {\n  if (value < domain[0]) {\n    return domain[0]\n  }\n\n  if (value > domain[1]) {\n    return domain[1]\n  }\n\n  return value\n}\n","import AJAX from 'src/utils/ajax'\nimport {Limits, LimitsStatus} from 'src/types'\n\nexport const getReadWriteCardinalityLimits = async (\n  orgID: string\n): Promise<LimitsStatus> => {\n  try {\n    const {data} = await AJAX({\n      method: 'GET',\n      url: `/api/v2private/orgs/${orgID}/limits/status`,\n    })\n\n    return data\n  } catch (error) {\n    console.error(error)\n    throw error\n  }\n}\n\nexport const getLimits = async (orgID: string): Promise<Limits> => {\n  try {\n    const {data} = await AJAX({\n      method: 'GET',\n      url: `/api/v2private/orgs/${orgID}/limits`,\n    })\n\n    return data\n  } catch (error) {\n    console.error(error)\n    throw error\n  }\n}\n","// API\nimport {\n  getReadWriteCardinalityLimits as getReadWriteCardinalityLimitsAJAX,\n  getLimits as getLimitsAJAX,\n} from 'src/cloud/apis/limits'\n\n// Actions\nimport {notify} from 'src/shared/actions/notifications'\n\n// Constants\nimport {readLimitReached} from 'src/shared/copy/notifications'\n\n// Types\nimport {\n  Bucket,\n  GetState,\n  Limits,\n  RemoteDataState,\n  ResourceType,\n} from 'src/types'\n\n// Selectors\nimport {\n  extractDashboardMax,\n  extractBucketMax,\n  extractTaskMax,\n  extractChecksMax,\n  extractRulesMax,\n  extractEndpointsMax,\n} from 'src/cloud/utils/limits'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll} from 'src/resources/selectors'\n\nexport enum LimitStatus {\n  OK = 'ok',\n  EXCEEDED = 'exceeded',\n}\n\nexport enum ActionTypes {\n  SetLimits = 'SET_LIMITS',\n  SetLimitsStatus = 'SET_LIMITS_STATUS',\n  SetDashboardLimitStatus = 'SET_DASHBOARD_LIMIT_STATUS',\n  SetBucketLimitStatus = 'SET_BUCKET_LIMIT_STATUS',\n  SetTaskLimitStatus = 'SET_TASK_LIMIT_STATUS',\n  SetChecksLimitStatus = 'SET_CHECKS_LIMIT_STATUS',\n  SetRulesLimitStatus = 'SET_RULES_LIMIT_STATUS',\n  SetEndpointsLimitStatus = 'SET_ENDPOINTS_LIMIT_STATUS',\n  SetReadRateLimitStatus = 'SET_READ_RATE_LIMIT_STATUS',\n  SetWriteRateLimitStatus = 'SET_WRITE_RATE_LIMIT_STATUS',\n  SetCardinalityLimitStatus = 'SET_CARDINALITY_LIMIT_STATUS',\n}\n\nexport type Actions =\n  | SetLimits\n  | SetLimitsStatus\n  | SetDashboardLimitStatus\n  | SetBucketLimitStatus\n  | SetTaskLimitStatus\n  | SetChecksLimitStatus\n  | SetRulesLimitStatus\n  | SetEndpointsLimitStatus\n  | SetReadRateLimitStatus\n  | SetWriteRateLimitStatus\n  | SetCardinalityLimitStatus\n\nexport interface SetLimits {\n  type: ActionTypes.SetLimits\n  payload: {limits: Limits}\n}\n\nexport const setLimits = (limits: Limits): SetLimits => {\n  return {\n    type: ActionTypes.SetLimits,\n    payload: {limits},\n  }\n}\n\nexport interface SetDashboardLimitStatus {\n  type: ActionTypes.SetDashboardLimitStatus\n  payload: {limitStatus: LimitStatus}\n}\n\nexport const setDashboardLimitStatus = (\n  limitStatus: LimitStatus\n): SetDashboardLimitStatus => {\n  return {\n    type: ActionTypes.SetDashboardLimitStatus,\n    payload: {limitStatus},\n  }\n}\n\nexport interface SetBucketLimitStatus {\n  type: ActionTypes.SetBucketLimitStatus\n  payload: {limitStatus: LimitStatus}\n}\n\nexport const setBucketLimitStatus = (\n  limitStatus: LimitStatus\n): SetBucketLimitStatus => {\n  return {\n    type: ActionTypes.SetBucketLimitStatus,\n    payload: {limitStatus},\n  }\n}\n\nexport interface SetTaskLimitStatus {\n  type: ActionTypes.SetTaskLimitStatus\n  payload: {limitStatus: LimitStatus}\n}\n\nexport const setTaskLimitStatus = (\n  limitStatus: LimitStatus\n): SetTaskLimitStatus => {\n  return {\n    type: ActionTypes.SetTaskLimitStatus,\n    payload: {limitStatus},\n  }\n}\n\nexport interface SetChecksLimitStatus {\n  type: ActionTypes.SetChecksLimitStatus\n  payload: {limitStatus: LimitStatus}\n}\n\nexport const setChecksLimitStatus = (\n  limitStatus: LimitStatus\n): SetChecksLimitStatus => {\n  return {\n    type: ActionTypes.SetChecksLimitStatus,\n    payload: {limitStatus},\n  }\n}\n\nexport interface SetRulesLimitStatus {\n  type: ActionTypes.SetRulesLimitStatus\n  payload: {limitStatus: LimitStatus}\n}\n\nexport const setRulesLimitStatus = (\n  limitStatus: LimitStatus\n): SetRulesLimitStatus => {\n  return {\n    type: ActionTypes.SetRulesLimitStatus,\n    payload: {limitStatus},\n  }\n}\n\nexport interface SetEndpointsLimitStatus {\n  type: ActionTypes.SetEndpointsLimitStatus\n  payload: {limitStatus: LimitStatus}\n}\n\nexport const setEndpointsLimitStatus = (\n  limitStatus: LimitStatus\n): SetEndpointsLimitStatus => {\n  return {\n    type: ActionTypes.SetEndpointsLimitStatus,\n    payload: {limitStatus},\n  }\n}\n\nexport interface SetReadRateLimitStatus {\n  type: ActionTypes.SetReadRateLimitStatus\n  payload: {limitStatus: LimitStatus}\n}\n\nexport const setReadRateLimitStatus = (\n  limitStatus: LimitStatus\n): SetReadRateLimitStatus => {\n  return {\n    type: ActionTypes.SetReadRateLimitStatus,\n    payload: {limitStatus},\n  }\n}\n\nexport interface SetWriteRateLimitStatus {\n  type: ActionTypes.SetWriteRateLimitStatus\n  payload: {limitStatus: LimitStatus}\n}\n\nexport const setWriteRateLimitStatus = (\n  limitStatus: LimitStatus\n): SetWriteRateLimitStatus => {\n  return {\n    type: ActionTypes.SetWriteRateLimitStatus,\n    payload: {limitStatus},\n  }\n}\n\nexport interface SetCardinalityLimitStatus {\n  type: ActionTypes.SetCardinalityLimitStatus\n  payload: {limitStatus: LimitStatus}\n}\n\nexport const setCardinalityLimitStatus = (\n  limitStatus: LimitStatus\n): SetCardinalityLimitStatus => {\n  return {\n    type: ActionTypes.SetCardinalityLimitStatus,\n    payload: {limitStatus},\n  }\n}\n\nexport interface SetLimitsStatus {\n  type: ActionTypes.SetLimitsStatus\n  payload: {\n    status: RemoteDataState\n  }\n}\n\nexport const setLimitsStatus = (status: RemoteDataState): SetLimitsStatus => {\n  return {\n    type: ActionTypes.SetLimitsStatus,\n    payload: {status},\n  }\n}\n\nexport const getReadWriteCardinalityLimits = () => async (\n  dispatch,\n  getState: GetState\n) => {\n  try {\n    const org = getOrg(getState())\n\n    const limits = await getReadWriteCardinalityLimitsAJAX(org.id)\n\n    if (limits.read.status === LimitStatus.EXCEEDED) {\n      dispatch(notify(readLimitReached()))\n      dispatch(setReadRateLimitStatus(LimitStatus.EXCEEDED))\n    } else {\n      dispatch(setReadRateLimitStatus(LimitStatus.OK))\n    }\n\n    if (limits.write.status === LimitStatus.EXCEEDED) {\n      dispatch(setWriteRateLimitStatus(LimitStatus.EXCEEDED))\n    } else {\n      dispatch(setWriteRateLimitStatus(LimitStatus.OK))\n    }\n\n    if (limits.cardinality.status === LimitStatus.EXCEEDED) {\n      dispatch(setCardinalityLimitStatus(LimitStatus.EXCEEDED))\n    } else {\n      dispatch(setCardinalityLimitStatus(LimitStatus.OK))\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const getAssetLimits = () => async (dispatch, getState: GetState) => {\n  dispatch(setLimitsStatus(RemoteDataState.Loading))\n  try {\n    const org = getOrg(getState())\n\n    const limits = await getLimitsAJAX(org.id)\n    dispatch(setLimits(limits))\n    dispatch(setLimitsStatus(RemoteDataState.Done))\n  } catch (error) {\n    console.error(error)\n    dispatch(setLimitsStatus(RemoteDataState.Error))\n  }\n}\n\nexport const checkDashboardLimits = () => (dispatch, getState: GetState) => {\n  try {\n    const state = getState()\n    const {\n      cloud: {limits},\n      resources,\n    } = state\n\n    const dashboardsMax = extractDashboardMax(limits)\n    const dashboardsCount = resources.dashboards.allIDs.length\n\n    if (dashboardsCount >= dashboardsMax) {\n      dispatch(setDashboardLimitStatus(LimitStatus.EXCEEDED))\n    } else {\n      dispatch(setDashboardLimitStatus(LimitStatus.OK))\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const checkBucketLimits = () => (dispatch, getState: GetState) => {\n  try {\n    const state = getState()\n    const {\n      cloud: {limits},\n    } = state\n    const allBuckets = getAll<Bucket>(state, ResourceType.Buckets)\n    const bucketsMax = extractBucketMax(limits)\n    const buckets = allBuckets.filter(bucket => {\n      return bucket.type == 'user'\n    })\n    const bucketsCount = buckets.length\n\n    if (bucketsCount >= bucketsMax) {\n      dispatch(setBucketLimitStatus(LimitStatus.EXCEEDED))\n    } else {\n      dispatch(setBucketLimitStatus(LimitStatus.OK))\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const checkTaskLimits = () => (dispatch, getState: GetState) => {\n  try {\n    const {\n      cloud: {limits},\n      resources,\n    } = getState()\n    const tasksMax = extractTaskMax(limits)\n    const tasksCount = resources.tasks.allIDs.length\n\n    if (tasksCount >= tasksMax) {\n      dispatch(setTaskLimitStatus(LimitStatus.EXCEEDED))\n    } else {\n      dispatch(setTaskLimitStatus(LimitStatus.OK))\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const checkChecksLimits = () => (dispatch, getState: GetState) => {\n  try {\n    const {\n      resources,\n      cloud: {limits},\n    } = getState()\n\n    const checksMax = extractChecksMax(limits)\n    const checksCount = resources.checks.allIDs.length\n    if (checksCount >= checksMax) {\n      dispatch(setChecksLimitStatus(LimitStatus.EXCEEDED))\n    } else {\n      dispatch(setChecksLimitStatus(LimitStatus.OK))\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const checkRulesLimits = () => (dispatch, getState: GetState) => {\n  try {\n    const {\n      resources,\n      cloud: {limits},\n    } = getState()\n\n    const rulesMax = extractRulesMax(limits)\n    const rulesCount = resources.rules.allIDs.length\n\n    if (rulesCount >= rulesMax) {\n      dispatch(setRulesLimitStatus(LimitStatus.EXCEEDED))\n    } else {\n      dispatch(setRulesLimitStatus(LimitStatus.OK))\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const checkEndpointsLimits = () => (dispatch, getState: GetState) => {\n  try {\n    const state = getState()\n    const endpointsCount = state.resources.endpoints.allIDs.length\n    const endpointsMax = extractEndpointsMax(state.cloud.limits)\n\n    if (endpointsCount >= endpointsMax) {\n      dispatch(setEndpointsLimitStatus(LimitStatus.EXCEEDED))\n    } else {\n      dispatch(setEndpointsLimitStatus(LimitStatus.OK))\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n","// Types\nimport {RemoteDataState, BucketEntities} from 'src/types'\nimport {NormalizedSchema} from 'normalizr'\n\nexport const SET_BUCKETS = 'SET_BUCKETS'\nexport const ADD_BUCKET = 'ADD_BUCKET'\nexport const EDIT_BUCKET = 'EDIT_BUCKET'\nexport const REMOVE_BUCKET = 'REMOVE_BUCKET'\n\nexport type Action =\n  | ReturnType<typeof setBuckets>\n  | ReturnType<typeof addBucket>\n  | ReturnType<typeof editBucket>\n  | ReturnType<typeof removeBucket>\n\nexport const setBuckets = (\n  status: RemoteDataState,\n  schema?: NormalizedSchema<BucketEntities, string[]>\n) =>\n  ({\n    type: SET_BUCKETS,\n    status,\n    schema,\n  } as const)\n\nexport const addBucket = (schema: NormalizedSchema<BucketEntities, string>) =>\n  ({\n    type: ADD_BUCKET,\n    schema,\n  } as const)\n\nexport const editBucket = (schema: NormalizedSchema<BucketEntities, string>) =>\n  ({\n    type: EDIT_BUCKET,\n    schema,\n  } as const)\n\nexport const removeBucket = (id: string) =>\n  ({\n    type: REMOVE_BUCKET,\n    id,\n  } as const)\n","// Types\nimport {RemoteDataState, ScraperEntities} from 'src/types'\nimport {NormalizedSchema} from 'normalizr'\n\nexport type Action =\n  | ReturnType<typeof setScrapers>\n  | ReturnType<typeof addScraper>\n  | ReturnType<typeof editScraper>\n  | ReturnType<typeof removeScraper>\n\nexport const SET_SCRAPERS = 'SET_SCRAPERS'\nexport const ADD_SCRAPER = 'ADD_SCRAPERS'\nexport const EDIT_SCRAPER = 'EDIT_SCRAPERS'\nexport const REMOVE_SCRAPER = 'REMOVE_SCRAPERS'\n\nexport const setScrapers = (\n  status: RemoteDataState,\n  schema?: NormalizedSchema<ScraperEntities, string[]>\n) =>\n  ({\n    type: SET_SCRAPERS,\n    status,\n    schema,\n  } as const)\n\nexport const addScraper = (schema: NormalizedSchema<ScraperEntities, string>) =>\n  ({\n    type: ADD_SCRAPER,\n    schema,\n  } as const)\n\nexport const editScraper = (\n  schema: NormalizedSchema<ScraperEntities, string>\n) =>\n  ({\n    type: EDIT_SCRAPER,\n    schema,\n  } as const)\n\nexport const removeScraper = (id: string) =>\n  ({\n    type: REMOVE_SCRAPER,\n    id,\n  } as const)\n","// Actions\nimport {Action as NotifyAction} from 'src/shared/actions/notifications'\n\n// Types\nimport {NormalizedSchema} from 'normalizr'\nimport {MemberEntities, RemoteDataState} from 'src/types'\n\nexport type Action =\n  | ReturnType<typeof setMembers>\n  | ReturnType<typeof addMember>\n  | ReturnType<typeof removeMember>\n  | NotifyAction\n\nexport const SET_MEMBERS = 'SET_MEMBERS'\nexport const ADD_MEMBER = 'ADD_MEMBER'\nexport const REMOVE_MEMBER = 'REMOVE_MEMBER'\n\nexport const setMembers = (\n  status: RemoteDataState,\n  schema?: NormalizedSchema<MemberEntities, string[]>\n) =>\n  ({\n    type: SET_MEMBERS,\n    status,\n    schema,\n  } as const)\n\nexport const addMember = (schema: NormalizedSchema<MemberEntities, string>) =>\n  ({\n    type: ADD_MEMBER,\n    schema,\n  } as const)\n\nexport const removeMember = (id: string) =>\n  ({\n    type: REMOVE_MEMBER,\n    id,\n  } as const)\n","export const RATE_LIMIT_ERROR_STATUS = 429\n\nexport const RATE_LIMIT_ERROR_TEXT =\n  'Oops. It looks like you have exceeded the query limits allowed as part of your plan. If you would like to increase your query limits, reach out to support@influxdata.com.'\n\nexport const ASSET_LIMIT_ERROR_STATUS = 403\n\nexport const ASSET_LIMIT_ERROR_TEXT =\n  'Oops. It looks like you have exceeded the asset limits allowed as part of your plan. If you would like to increase your limits, reach out to support@influxdata.com.'\n","// Types\nimport {RemoteDataState, CheckEntities} from 'src/types'\nimport {NormalizedSchema} from 'normalizr'\nimport {setLabelOnResource} from 'src/labels/actions/creators'\n\nexport type Action =\n  | ReturnType<typeof setChecks>\n  | ReturnType<typeof setCheck>\n  | ReturnType<typeof removeCheck>\n  | ReturnType<typeof removeLabelFromCheck>\n  | ReturnType<typeof setLabelOnResource>\n\nexport const SET_CHECKS = 'SET_CHECKS'\nexport const SET_CHECK = 'SET_CHECK'\nexport const REMOVE_CHECK = 'REMOVE_CHECK'\nexport const ADD_LABEL_TO_CHECK = 'ADD_LABEL_TO_CHECK'\nexport const REMOVE_LABEL_FROM_CHECK = 'REMOVE_LABEL_FROM_CHECK'\n\ntype ChecksSchema<R extends string | string[]> = NormalizedSchema<\n  CheckEntities,\n  R\n>\n\nexport const setChecks = (\n  status: RemoteDataState,\n  schema?: ChecksSchema<string[]>\n) =>\n  ({\n    type: SET_CHECKS,\n    status,\n    schema,\n  } as const)\n\nexport const setCheck = (\n  id: string,\n  status: RemoteDataState,\n  schema?: ChecksSchema<string>\n) =>\n  ({\n    type: SET_CHECK,\n    id,\n    status,\n    schema,\n  } as const)\n\nexport const removeCheck = (id: string) =>\n  ({\n    type: REMOVE_CHECK,\n    id,\n  } as const)\n\nexport const removeLabelFromCheck = (checkID: string, labelID: string) =>\n  ({\n    type: REMOVE_LABEL_FROM_CHECK,\n    checkID,\n    labelID,\n  } as const)\n","// Types\nimport {RemoteDataState, RuleEntities} from 'src/types'\nimport {NormalizedSchema} from 'normalizr'\nimport {setLabelOnResource} from 'src/labels/actions/creators'\n\nexport type Action =\n  | ReturnType<typeof setRules>\n  | ReturnType<typeof setRule>\n  | ReturnType<typeof setCurrentRule>\n  | ReturnType<typeof removeRule>\n  | ReturnType<typeof removeLabelFromRule>\n  | ReturnType<typeof setLabelOnResource>\n\nexport const SET_RULES = 'SET_RULES'\nexport const SET_RULE = 'SET_RULE'\nexport const SET_CURRENT_RULE = 'SET_CURRENT_RULE'\nexport const REMOVE_RULE = 'REMOVE_RULE'\nexport const REMOVE_LABEL_FROM_RULE = 'REMOVE_LABEL_FROM_RULE'\n\ntype RulesSchema<R extends string | string[]> = NormalizedSchema<\n  RuleEntities,\n  R\n>\nexport const setRules = (\n  status: RemoteDataState,\n  schema?: RulesSchema<string[]>\n) =>\n  ({\n    type: SET_RULES,\n    status,\n    schema,\n  } as const)\n\nexport const setRule = (\n  id: string,\n  status: RemoteDataState,\n  schema?: RulesSchema<string>\n) =>\n  ({\n    type: SET_RULE,\n    id,\n    status,\n    schema,\n  } as const)\n\nexport const setCurrentRule = (\n  status: RemoteDataState,\n  schema?: RulesSchema<string>\n) =>\n  ({\n    type: SET_CURRENT_RULE,\n    status,\n    schema,\n  } as const)\n\nexport const removeRule = (id: string) =>\n  ({\n    type: REMOVE_RULE,\n    id,\n  } as const)\n\nexport const removeLabelFromRule = (ruleID: string, labelID: string) =>\n  ({\n    type: REMOVE_LABEL_FROM_RULE,\n    ruleID,\n    labelID,\n  } as const)\n","// Libraries\nimport {NormalizedSchema} from 'normalizr'\n\n// Types\nimport {RemoteDataState, EndpointEntities} from 'src/types'\nimport {setLabelOnResource} from 'src/labels/actions/creators'\n\nexport const SET_ENDPOINT = 'SET_ENDPOINT'\nexport const REMOVE_ENDPOINT = 'REMOVE_ENDPOINT'\nexport const SET_ENDPOINTS = 'SET_ENDPOINTS'\nexport const ADD_LABEL_TO_ENDPOINT = 'ADD_LABEL_TO_ENDPOINT'\nexport const REMOVE_LABEL_FROM_ENDPOINT = 'REMOVE_LABEL_FROM_ENDPOINT'\n\nexport type Action =\n  | ReturnType<typeof setEndpoint>\n  | ReturnType<typeof removeEndpoint>\n  | ReturnType<typeof setEndpoints>\n  | ReturnType<typeof setLabelOnResource>\n  | ReturnType<typeof removeLabelFromEndpoint>\n\ntype EndpointsSchema<R extends string | string[]> = NormalizedSchema<\n  EndpointEntities,\n  R\n>\n\nexport const removeEndpoint = (id: string) =>\n  ({type: REMOVE_ENDPOINT, id} as const)\n\nexport const setEndpoint = (\n  id: string,\n  status: RemoteDataState,\n  schema?: EndpointsSchema<string>\n) =>\n  ({\n    type: SET_ENDPOINT,\n    id,\n    status,\n    schema,\n  } as const)\n\nexport const setEndpoints = (\n  status: RemoteDataState,\n  schema?: EndpointsSchema<string[]>\n) =>\n  ({\n    type: SET_ENDPOINTS,\n    status,\n    schema,\n  } as const)\n\nexport const removeLabelFromEndpoint = (endpointID: string, labelID: string) =>\n  ({\n    type: REMOVE_LABEL_FROM_ENDPOINT,\n    endpointID,\n    labelID,\n  } as const)\n","// Libraries\nimport React from 'react'\n\n// Types\nimport {ErrorMessageComponent} from 'src/types'\n\nconst DefaultErrorMessage: ErrorMessageComponent = () => {\n  return (\n    <p\n      className=\"default-error-message\"\n      style={{display: 'flex', placeContent: 'center'}}\n    >\n      An InfluxDB error has occurred. Please report the issue&nbsp;\n      <a href=\"https://github.com/influxdata/influxdb/issues\">here</a>.\n    </p>\n  )\n}\n\nexport default DefaultErrorMessage\n","import {OPTION_NAME} from 'src/variables/constants/index'\nimport {formatExpression} from 'src/variables/utils/formatExpression'\nimport {VariableAssignment} from 'src/types/ast'\n\nexport const formatVarsOption = (variables: VariableAssignment[]): string => {\n  if (!variables.length) {\n    return ''\n  }\n\n  const lines = variables.map(v => `${v.id.name}: ${formatExpression(v.init)}`)\n\n  const option = `option ${OPTION_NAME} = {\n  ${lines.join(',\\n  ')}\n}`\n\n  return option\n}\n","import {Expression} from 'src/types/ast'\n\nexport const formatExpression = (expr: Expression): string => {\n  switch (expr.type) {\n    case 'DateTimeLiteral':\n    case 'BooleanLiteral':\n    case 'UnsignedIntegerLiteral':\n    case 'IntegerLiteral':\n      return String(expr.value)\n    case 'StringLiteral':\n      return `\"${expr.value}\"`\n    case 'DurationLiteral':\n      return expr.values.reduce(\n        (acc, {magnitude, unit}) => `${acc}${magnitude}${unit}`,\n        ''\n      )\n    case 'FloatLiteral':\n      return String(expr.value).includes('.')\n        ? String(expr.value)\n        : expr.value.toFixed(1)\n    case 'UnaryExpression':\n      return `${expr.operator}${formatExpression(expr.argument)}`\n    case 'BinaryExpression':\n      return `${formatExpression(expr.left)} ${\n        expr.operator\n      } ${formatExpression(expr.right)}`\n    case 'CallExpression':\n      // This doesn't handle formatting a call expression with arguments, or\n      // with any other sort of callee except an `Identifier`\n      return `${formatExpression(expr.callee)}()`\n    case 'Identifier':\n      return expr.name\n    default:\n      throw new Error(`cant format expression of type ${expr.type}`)\n  }\n}\n","// Utils\nimport {parseDuration} from 'src/shared/utils/duration'\n\n// Types\nimport {VariableValues, VariableAssignment} from 'src/types'\n\nexport const getVarAssignment = (\n  name: string,\n  {selectedValue, valueType}: VariableValues\n): VariableAssignment => {\n  const assignment = {\n    type: 'VariableAssignment' as 'VariableAssignment',\n    id: {type: 'Identifier' as 'Identifier', name},\n  }\n\n  switch (valueType) {\n    case 'boolean':\n      return {\n        ...assignment,\n        init: {\n          type: 'BooleanLiteral',\n          value: selectedValue === 'true' ? true : false,\n        },\n      }\n    case 'unsignedLong':\n      return {\n        ...assignment,\n        init: {\n          type: 'UnsignedIntegerLiteral',\n          value: Number(selectedValue),\n        },\n      }\n    case 'long':\n      return {\n        ...assignment,\n        init: {\n          type: 'IntegerLiteral',\n          value: Number(selectedValue),\n        },\n      }\n    case 'double':\n      return {\n        ...assignment,\n        init: {\n          type: 'FloatLiteral',\n          value: Number(selectedValue),\n        },\n      }\n    case 'string':\n      return {\n        ...assignment,\n        init: {\n          type: 'StringLiteral',\n          value: selectedValue,\n        },\n      }\n    case 'dateTime':\n      return {\n        ...assignment,\n        init: {\n          type: 'DateTimeLiteral',\n          value: selectedValue,\n        },\n      }\n    case 'duration':\n      return {\n        ...assignment,\n        init: {\n          type: 'DurationLiteral',\n          values: parseDuration(selectedValue),\n        },\n      }\n    default:\n      throw new Error(\n        `cannot form VariableAssignment from value of type \"${valueType}\"`\n      )\n  }\n}\n","// Utils\nimport {\n  collectDescendants,\n  createVariableGraph,\n  VariableNode,\n} from 'src/variables/utils/hydrateVars'\n\n// Types\nimport {Variable} from 'src/types'\n\nconst getDescendantsFromGraph = (\n  variable: Variable,\n  varGraph: VariableNode[]\n): Variable[] => {\n  const node = varGraph.find(n => n.variable.id === variable.id)\n  return collectDescendants(node).map(n => n.variable)\n}\n\nexport const findDependentVariables = (\n  variable: Variable,\n  allVariables: Variable[]\n) => {\n  const varGraph = createVariableGraph(allVariables)\n  return getDescendantsFromGraph(variable, varGraph)\n}\n\nexport const exportVariables = (\n  variables: Variable[],\n  allVariables: Variable[]\n): Variable[] => {\n  const varSet = new Set<Variable>()\n  const varGraph = createVariableGraph(allVariables)\n\n  for (const v of variables) {\n    if (varSet.has(v)) {\n      continue\n    }\n\n    varSet.add(v)\n    for (const d of getDescendantsFromGraph(v, varGraph)) {\n      varSet.add(d)\n    }\n  }\n\n  return [...varSet]\n}\n","// APIs\nimport {\n  findBuckets,\n  findKeys,\n  findValues,\n  FindBucketsOptions,\n  FindKeysOptions,\n  FindValuesOptions,\n} from 'src/timeMachine/apis/queryBuilder'\n\n// Types\nimport {CancelBox} from 'src/types'\n\ntype CancelableQuery = CancelBox<string[]>\n\nclass QueryBuilderFetcher {\n  private findBucketsQuery: CancelableQuery\n  private findKeysQueries: CancelableQuery[] = []\n  private findValuesQueries: CancelableQuery[] = []\n  private findKeysCache: {[key: string]: string[]} = {}\n  private findValuesCache: {[key: string]: string[]} = {}\n  private findBucketsCache: {[key: string]: string[]} = {}\n\n  public async findBuckets(options: FindBucketsOptions): Promise<string[]> {\n    this.cancelFindBuckets()\n\n    const cacheKey = JSON.stringify(options)\n    const cachedResult = this.findBucketsCache[cacheKey]\n\n    if (cachedResult) {\n      return Promise.resolve(cachedResult)\n    }\n\n    const pendingResult = findBuckets(options)\n\n    pendingResult.promise\n      .then(result => {\n        this.findBucketsCache[cacheKey] = result\n      })\n      .catch(() => {})\n\n    return pendingResult.promise\n  }\n\n  public cancelFindBuckets(): void {\n    if (this.findBucketsQuery) {\n      this.findBucketsQuery.cancel()\n    }\n  }\n\n  public async findKeys(\n    index: number,\n    options: FindKeysOptions\n  ): Promise<string[]> {\n    this.cancelFindKeys(index)\n\n    const cacheKey = JSON.stringify(options)\n    const cachedResult = this.findKeysCache[cacheKey]\n\n    if (cachedResult) {\n      return Promise.resolve(cachedResult)\n    }\n\n    const pendingResult = findKeys(options)\n\n    this.findKeysQueries[index] = pendingResult\n\n    pendingResult.promise\n      .then(result => {\n        this.findKeysCache[cacheKey] = result\n      })\n      .catch(() => {})\n\n    return pendingResult.promise\n  }\n\n  public cancelFindKeys(index: number): void {\n    if (this.findKeysQueries[index]) {\n      this.findKeysQueries[index].cancel()\n    }\n  }\n\n  public async findValues(\n    index: number,\n    options: FindValuesOptions\n  ): Promise<string[]> {\n    this.cancelFindValues(index)\n\n    const cacheKey = JSON.stringify(options)\n    const cachedResult = this.findValuesCache[cacheKey]\n\n    if (cachedResult) {\n      return Promise.resolve(cachedResult)\n    }\n\n    const pendingResult = findValues(options)\n\n    this.findValuesQueries[index] = pendingResult\n\n    pendingResult.promise\n      .then(result => {\n        this.findValuesCache[cacheKey] = result\n      })\n      .catch(() => {})\n\n    return pendingResult.promise\n  }\n\n  public cancelFindValues(index: number): void {\n    if (this.findValuesQueries[index]) {\n      this.findValuesQueries[index].cancel()\n    }\n  }\n\n  public clearCache(): void {\n    this.findBucketsCache = {}\n    this.findKeysCache = {}\n    this.findValuesCache = {}\n  }\n}\n\nexport const queryBuilderFetcher = new QueryBuilderFetcher()\n","export function fastReduce<T = any, R = any>(\n  subject: T[],\n  iterator: (r: R, t: T, i: number, s: T[]) => R,\n  initialValue: R\n): R {\n  const length = subject.length\n  let i: number\n  let result: any\n\n  if (initialValue === undefined) {\n    i = 1\n    result = subject[0]\n  } else {\n    i = 0\n    result = initialValue\n  }\n\n  for (; i < length; i++) {\n    result = iterator(result, subject[i], i, subject)\n  }\n\n  return result\n}\n\nexport function fastMap<T = any, R = any>(\n  subject: T[],\n  iterator: (t: T, i: number, s: T[]) => R\n): R[] {\n  const length = subject.length\n  const result: R[] = new Array(length)\n  for (let i = 0; i < length; i++) {\n    result[i] = iterator(subject[i], i, subject)\n  }\n  return result\n}\n\nexport function fastFilter<T = any>(\n  subject: T[],\n  iterator: (t: T, i: number, s: T[]) => boolean\n): T[] {\n  const length = subject.length\n  const result: T[] = []\n  for (let i = 0; i < length; i++) {\n    if (iterator(subject[i], i, subject)) {\n      result.push(subject[i])\n    }\n  }\n  return result\n}\n\nexport function fastForEach<T = any>(\n  subject: T[],\n  iterator: (t: T, i: number, s: T[]) => void\n): void {\n  const length = subject.length\n  for (let i = 0; i < length; i++) {\n    iterator(subject[i], i, subject)\n  }\n}\n\nexport function fastConcat<T = any>(...args: T[][]): T[] {\n  const length = args.length\n  const arr: T[] = []\n  let item: T[] = []\n  let childLength = 0\n\n  for (let i = 0; i < length; i++) {\n    item = args[i]\n    if (Array.isArray(item)) {\n      childLength = item.length\n      for (let j = 0; j < childLength; j++) {\n        arr.push(item[j])\n      }\n    } else {\n      arr.push(item)\n    }\n  }\n  return arr\n}\n\nexport function fastCloneArray<T = any>(input: T[]): T[] {\n  const length = input.length\n  const cloned: T[] = new Array(length)\n  for (let i = 0; i < length; i++) {\n    cloned[i] = input[i]\n  }\n  return cloned\n}\n","// Libraries\nimport {isObject, isArray} from 'lodash'\n\n/*\n  Find all nodes in a tree matching the `predicate` function. Each node in the\n  tree is an object, which may contain objects or arrays of objects as children\n  under any key.\n*/\nexport const findNodes = (\n  node: any,\n  predicate: (node: any) => boolean,\n  acc: any[] = []\n) => {\n  if (predicate(node)) {\n    acc.push(node)\n  }\n\n  for (const value of Object.values(node)) {\n    if (isObject(value)) {\n      findNodes(value, predicate, acc)\n    } else if (isArray(value)) {\n      for (const innerValue of value) {\n        findNodes(innerValue, predicate, acc)\n      }\n    }\n  }\n\n  return acc\n}\n","// Utils\nimport {runQuery} from 'src/shared/apis/query'\nimport {fromFlux} from '@influxdata/giraffe'\n\n// Constants\nimport {MONITORING_BUCKET} from 'src/alerting/constants'\n\n// Types\nimport {CancelBox, StatusRow, File} from 'src/types'\nimport {RunQueryResult} from 'src/shared/apis/query'\nimport {Row} from 'src/eventViewer/types'\n\nexport const runStatusesQuery = (\n  orgID: string,\n  checkID: string,\n  extern: File\n): CancelBox<StatusRow[][]> => {\n  const query = `\nfrom(bucket: \"${MONITORING_BUCKET}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"statuses\" and r._field == \"_message\")\n  |> filter(fn: (r) => exists r._check_id)\n  |> filter(fn: (r) => exists r._check_name)\n  |> filter(fn: (r) => exists r._level)\n  |> keep(columns: [\"_time\", \"_value\", \"_check_id\", \"_check_name\", \"_level\"])\n  |> window(every: 1s, timeColumn: \"_time\", startColumn: \"_start\", stopColumn: \"_stop\")\n  |> group(columns: [\"_start\", \"_stop\"])\n  |> filter(fn: (r) => r[\"_check_id\"] == \"${checkID}\")\n  |> rename(columns: {\"_time\": \"time\",\n                      \"_value\": \"message\",\n                      \"_check_id\": \"checkID\",\n                      \"_check_name\": \"checkName\",\n                      \"_level\": \"level\"})\n`\n  return processStatusesResponse(runQuery(orgID, query, extern)) as CancelBox<\n    StatusRow[][]\n  >\n}\n\n/*\n  Convert a Flux CSV response that is grouped into tables into a list of objects.\n*/\nexport const processStatusesResponse = ({\n  promise: queryPromise,\n  cancel,\n}: CancelBox<RunQueryResult>): CancelBox<Row[][]> => {\n  const promise = queryPromise.then<Row[][]>(resp => {\n    if (resp.type !== 'SUCCESS') {\n      return Promise.reject(new Error(resp.message))\n    }\n\n    const {table} = fromFlux(resp.csv)\n    const rows: Row[][] = [[]]\n\n    for (let i = 0; i < table.length; i++) {\n      const row = {}\n\n      for (const key of table.columnKeys) {\n        row[key] = table.getColumn(key)[i]\n      }\n\n      const tableIndex = row['table']\n\n      if (!rows[tableIndex]) {\n        rows[tableIndex] = [row]\n      } else {\n        rows[tableIndex].push(row)\n      }\n    }\n\n    return rows\n  })\n\n  return {\n    promise,\n    cancel,\n  }\n}\n","// Utils\nimport {isInQuery} from 'src/variables/utils/hydrateVars'\n\n// Types\nimport {QueryViewProperties, View, ViewProperties, Variable} from 'src/types'\n\nfunction isQueryViewProperties(vp: ViewProperties): vp is QueryViewProperties {\n  return (vp as QueryViewProperties).queries !== undefined\n}\n\n/*\n  Given a collection variables and a collection of views, return only the\n  variables that are used in at least one of the view queries.\n*/\nexport const filterUnusedVars = (variables: Variable[], views: View[]) => {\n  const viewProperties = views.map(v => v.properties).filter(vp => !!vp)\n  const queryViewProperties = viewProperties.filter(isQueryViewProperties)\n\n  const queryTexts = queryViewProperties.reduce(\n    (acc, vp) => [...acc, ...vp.queries.map(query => query.text)],\n    [] as Array<string>\n  )\n\n  const varsInUse = variables.filter(variable =>\n    queryTexts.some(text => isInQuery(text, variable))\n  )\n\n  return varsInUse\n}\n","// Types\nimport {AppState, View, ResourceType, Dashboard} from 'src/types'\n\n// Selectors\nimport {getByID} from 'src/resources/selectors'\n\nexport const getViewsForDashboard = (\n  state: AppState,\n  dashboardID: string\n): View[] => {\n  const dashboard = getByID<Dashboard>(\n    state,\n    ResourceType.Dashboards,\n    dashboardID\n  )\n\n  const cellIDs = new Set(dashboard.cells.map(cellID => cellID))\n\n  const views = Object.values(state.resources.views.byID).filter(\n    view => view && cellIDs.has(view.cellID)\n  )\n\n  return views\n}\n","import AJAX from 'src/utils/ajax'\nimport {Authorization} from 'src/types'\n\nexport const createAuthorization = async (\n  authorization\n): Promise<Authorization> => {\n  try {\n    const {data} = await AJAX({\n      method: 'POST',\n      url: '/api/v2/authorizations',\n      data: authorization,\n    })\n\n    return data\n  } catch (error) {\n    console.error(error)\n    throw error\n  }\n}\n","// Libraries\nimport {get} from 'lodash'\nimport {normalize} from 'normalizr'\n\n// API\nimport * as api from 'src/client'\nimport {memberSchema, arrayOfMembers} from 'src/schemas'\n\n// Types\nimport {RemoteDataState, GetState} from 'src/types'\nimport {AddResourceMemberRequestBody} from '@influxdata/influx'\nimport {Dispatch} from 'react'\nimport {Member, MemberEntities} from 'src/types'\n\n// Actions\nimport {\n  setMembers,\n  Action,\n  addMember,\n  removeMember,\n} from 'src/members/actions/creators'\nimport {notify} from 'src/shared/actions/notifications'\nimport {\n  memberAddSuccess,\n  memberAddFailed,\n  memberRemoveSuccess,\n  memberRemoveFailed,\n} from 'src/shared/copy/notifications'\n\n// Selectors\nimport {getOrg} from 'src/organizations/selectors'\n\nexport const getMembers = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const {id} = getOrg(getState())\n    dispatch(setMembers(RemoteDataState.Loading))\n\n    const [ownersResp, membersResp] = await Promise.all([\n      api.getOrgsOwners({orgID: id}),\n      api.getOrgsMembers({orgID: id}),\n    ])\n\n    if (ownersResp.status !== 200) {\n      throw new Error(ownersResp.data.message)\n    }\n\n    if (membersResp.status !== 200) {\n      throw new Error(membersResp.data.message)\n    }\n\n    const owners = ownersResp.data.users\n\n    const members = membersResp.data.users\n\n    const allMembers = [...owners, ...members]\n\n    const normalized = normalize<Member, MemberEntities, string[]>(\n      allMembers,\n      arrayOfMembers\n    )\n\n    dispatch(setMembers(RemoteDataState.Done, normalized))\n  } catch (e) {\n    console.error(e)\n    dispatch(setMembers(RemoteDataState.Error))\n  }\n}\n\nexport const addNewMember = (data: AddResourceMemberRequestBody) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const {id} = getOrg(getState())\n    const resp = await api.postOrgsMember({orgID: id, data})\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const newMember = resp.data\n    const member = normalize<Member, MemberEntities, string>(\n      newMember,\n      memberSchema\n    )\n\n    dispatch(addMember(member))\n    dispatch(notify(memberAddSuccess(newMember.name)))\n  } catch (e) {\n    console.error(e)\n    const message = get(e, 'response.data.message', 'Unknown error')\n    dispatch(notify(memberAddFailed(message)))\n    throw e\n  }\n}\n\nexport const deleteMember = (member: Member) => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n) => {\n  try {\n    const {id} = getOrg(getState())\n    const resp = await api.deleteOrgsMember({orgID: id, userID: member.id})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(removeMember(member.id))\n\n    dispatch(notify(memberRemoveSuccess(member.name)))\n  } catch (e) {\n    console.error(e)\n    dispatch(notify(memberRemoveFailed(member.name)))\n  }\n}\n","import {ThresholdCheck, TagRuleDraft, NotificationEndpoint} from 'src/types'\nimport {CheckStatusLevel} from 'src/client'\nimport {\n  ComponentColor,\n  InfluxColors,\n  RemoteDataState,\n} from '@influxdata/clockface'\n\nexport const DEFAULT_CHECK_NAME = 'Name this Check'\nexport const DEFAULT_NOTIFICATION_RULE_NAME = 'Name this Notification Rule'\n\nexport const CHECK_NAME_MAX_LENGTH = 68\nexport const DEFAULT_CHECK_EVERY = '1m'\nexport const DEFAULT_CHECK_OFFSET = '0s'\nexport const DEFAULT_CHECK_TAGS = []\nexport const DEFAULT_CHECK_REPORT_ZERO = false\nexport const DEFAULT_DEADMAN_LEVEL: CheckStatusLevel = 'CRIT'\nexport const DEFAULT_STATUS_MESSAGE =\n  'Check: ${ r._check_name } is: ${ r._level }'\n\nexport const CHECK_OFFSET_OPTIONS = [\n  '0s',\n  '5s',\n  '15s',\n  '1m',\n  '5m',\n  '15m',\n  '1h',\n  '6h',\n  '12h',\n  '24h',\n  '2d',\n  '7d',\n  '30d',\n]\n\nexport const MONITORING_BUCKET = '_monitoring'\n\nexport const LEVEL_COLORS = {\n  OK: InfluxColors.Viridian,\n  INFO: InfluxColors.Ocean,\n  WARN: InfluxColors.Thunder,\n  CRIT: InfluxColors.Fire,\n  UNKNOWN: InfluxColors.Amethyst,\n}\n\nexport const LEVEL_COMPONENT_COLORS = {\n  OK: ComponentColor.Success,\n  INFO: ComponentColor.Primary,\n  WARN: ComponentColor.Warning,\n  CRIT: ComponentColor.Danger,\n}\n\nexport const DEFAULT_THRESHOLD_CHECK: Partial<ThresholdCheck> = {\n  name: DEFAULT_CHECK_NAME,\n  type: 'threshold',\n  activeStatus: 'active',\n  thresholds: [],\n  every: DEFAULT_CHECK_EVERY,\n  offset: DEFAULT_CHECK_OFFSET,\n  statusMessageTemplate: DEFAULT_STATUS_MESSAGE,\n}\n\nexport const NEW_TAG_RULE_DRAFT: TagRuleDraft = {\n  cid: '',\n  value: {\n    key: '',\n    value: '',\n    operator: 'equal',\n  },\n}\n\nexport const DEFAULT_ENDPOINT_URLS = {\n  slack: 'https://hooks.slack.com/services/X/X/X',\n  pagerduty: 'https://events.pagerduty.com/v2/enqueue',\n  http: 'https://www.example.com/endpoint',\n}\n\nexport const NEW_ENDPOINT_DRAFT: NotificationEndpoint = {\n  name: 'Name this Endpoint',\n  description: '',\n  activeStatus: 'active',\n  type: 'slack',\n  token: '',\n  url: DEFAULT_ENDPOINT_URLS['slack'],\n  status: RemoteDataState.Done,\n  labels: [],\n}\n\nexport const NEW_ENDPOINT_FIXTURES: NotificationEndpoint[] = [\n  {\n    id: '1',\n    orgID: '1',\n    userID: '1',\n    description: 'interrupt everyone at work',\n    name: 'Slack',\n    activeStatus: 'active',\n    type: 'slack',\n    url: 'insert.slack.url.here',\n    token: 'plerps',\n    status: RemoteDataState.Done,\n    labels: [],\n  },\n  {\n    id: '3',\n    orgID: '1',\n    userID: '1',\n    description: 'interrupt someone by all means known to man',\n    name: 'PagerDuty',\n    activeStatus: 'active',\n    type: 'pagerduty',\n    clientURL: 'insert.pagerduty.client.url.here',\n    routingKey: 'plerps',\n    status: RemoteDataState.Done,\n    labels: [],\n  },\n]\n","// Libraries\nimport {schema} from 'normalizr'\n\n// Types\nimport {ResourceType, GenLabel} from 'src/types'\n\n// Utils\nimport {addLabelDefaults} from 'src/labels/utils'\n\n/* Labels */\nexport const labelSchema = new schema.Entity(\n  ResourceType.Labels,\n  {},\n  {\n    processStrategy: (label: GenLabel) => addLabelDefaults(label),\n  }\n)\n\nexport const arrayOfLabels = [labelSchema]\n","// Libraries\nimport {normalize} from 'normalizr'\nimport {Dispatch} from 'react'\nimport {push} from 'react-router-redux'\n\n// APIs\nimport * as dashAPI from 'src/dashboards/apis'\nimport * as api from 'src/client'\nimport * as tempAPI from 'src/templates/api'\nimport {createCellWithView} from 'src/cells/actions/thunks'\n\n// Schemas\nimport {\n  dashboardSchema,\n  arrayOfDashboards,\n  labelSchema,\n  arrayOfViews,\n} from 'src/schemas'\nimport {viewsFromCells} from 'src/schemas/dashboards'\n\n// Actions\nimport {\n  notify,\n  PublishNotificationAction,\n} from 'src/shared/actions/notifications'\nimport {\n  deleteTimeRange,\n  updateTimeRangeFromQueryParams,\n} from 'src/dashboards/actions/ranges'\nimport {setViews} from 'src/views/actions/creators'\nimport {selectValue} from 'src/variables/actions/creators'\nimport {getVariables, refreshVariableValues} from 'src/variables/actions/thunks'\nimport {setExportTemplate} from 'src/templates/actions/creators'\nimport {checkDashboardLimits} from 'src/cloud/actions/limits'\nimport {updateViewAndVariables} from 'src/views/actions/thunks'\nimport {setLabelOnResource} from 'src/labels/actions/creators'\nimport * as creators from 'src/dashboards/actions/creators'\n\n// Utils\nimport {filterUnusedVars} from 'src/shared/utils/filterUnusedVars'\nimport {\n  extractVariablesList,\n  getHydratedVariables,\n} from 'src/variables/selectors'\nimport {dashboardToTemplate} from 'src/shared/utils/resourceToTemplate'\nimport {exportVariables} from 'src/variables/utils/exportVariables'\nimport {getSaveableView} from 'src/timeMachine/selectors'\nimport {incrementCloneName} from 'src/utils/naming'\nimport {isLimitError} from 'src/cloud/utils/limits'\nimport {getOrg} from 'src/organizations/selectors'\nimport {getAll, getByID} from 'src/resources/selectors'\n\n// Constants\nimport * as copy from 'src/shared/copy/notifications'\nimport {DEFAULT_DASHBOARD_NAME} from 'src/dashboards/constants/index'\n\n// Types\nimport {\n  Dashboard,\n  GetState,\n  View,\n  Cell,\n  DashboardTemplate,\n  Label,\n  RemoteDataState,\n  DashboardEntities,\n  ViewEntities,\n  ResourceType,\n  VariableEntities,\n  Variable,\n  LabelEntities,\n} from 'src/types'\nimport {CellsWithViewProperties} from 'src/client'\nimport {arrayOfVariables} from 'src/schemas/variables'\n\ntype Action = creators.Action\n\n// Thunks\nexport const createDashboard = () => async (\n  dispatch,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const org = getOrg(getState())\n\n    const newDashboard = {\n      name: DEFAULT_DASHBOARD_NAME,\n      cells: [],\n      orgID: org.id,\n    }\n\n    const resp = await api.postDashboard({data: newDashboard})\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(push(`/orgs/${org.id}/dashboards/${resp.data.id}`))\n    dispatch(checkDashboardLimits())\n  } catch (error) {\n    console.error(error)\n\n    if (isLimitError(error)) {\n      dispatch(notify(copy.resourceLimitReached('dashboards')))\n    } else {\n      dispatch(notify(copy.dashboardCreateFailed()))\n    }\n  }\n}\n\nexport const cloneDashboard = (\n  dashboardID: string,\n  dashboardName: string\n) => async (dispatch, getState: GetState): Promise<void> => {\n  try {\n    const state = getState()\n\n    const org = getOrg(state)\n    const dashboards = getAll<Dashboard>(state, ResourceType.Dashboards)\n    const allDashboardNames = dashboards.map(d => d.name)\n    const clonedName = incrementCloneName(allDashboardNames, dashboardName)\n\n    const getResp = await api.getDashboard({\n      dashboardID,\n      query: {include: 'properties'},\n    })\n\n    if (getResp.status !== 200) {\n      throw new Error(getResp.data.message)\n    }\n\n    const {entities, result} = normalize<Dashboard, DashboardEntities, string>(\n      getResp.data,\n      dashboardSchema\n    )\n\n    const dash: Dashboard = entities.dashboards[result]\n    const cells = Object.values<Cell>(entities.cells || {})\n\n    const postResp = await api.postDashboard({\n      data: {\n        orgID: org.id,\n        name: clonedName,\n        description: dash.description || '',\n      },\n    })\n\n    if (postResp.status !== 201) {\n      throw new Error(postResp.data.message)\n    }\n\n    const pendingLabels = getResp.data.labels.map(l =>\n      api.postDashboardsLabel({\n        dashboardID: postResp.data.id,\n        data: {labelID: l.id},\n      })\n    )\n\n    const mappedLabels = await Promise.all(pendingLabels)\n\n    if (mappedLabels.length > 0 && mappedLabels.some(l => l.status !== 201)) {\n      throw new Error('An error occurred cloning the labels for this dashboard')\n    }\n\n    const clonedDashboardID = postResp.data.id\n\n    const clonedViews = await dashAPI.cloneUtilFunc(\n      cells,\n      dashboardID,\n      clonedDashboardID\n    )\n\n    const newViews = await Promise.all(clonedViews)\n\n    if (newViews.length > 0 && newViews.some(v => v.status !== 200)) {\n      throw new Error('An error occurred cloning the dashboard')\n    }\n\n    dispatch(checkDashboardLimits())\n    dispatch(push(`/orgs/${org.id}/dashboards/${postResp.data.id}`))\n  } catch (error) {\n    console.error(error)\n    if (isLimitError(error)) {\n      dispatch(notify(copy.resourceLimitReached('dashboards')))\n    } else {\n      dispatch(notify(copy.dashboardCreateFailed()))\n    }\n  }\n}\n\nexport const getDashboards = () => async (\n  dispatch: Dispatch<Action>,\n  getState: GetState\n): Promise<void> => {\n  try {\n    const org = getOrg(getState())\n    const {setDashboards} = creators\n\n    dispatch(setDashboards(RemoteDataState.Loading))\n    const resp = await api.getDashboards({query: {orgID: org.id}})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const dashboards = normalize<Dashboard, DashboardEntities, string[]>(\n      resp.data.dashboards,\n      arrayOfDashboards\n    )\n\n    dispatch(setDashboards(RemoteDataState.Done, dashboards))\n  } catch (error) {\n    dispatch(creators.setDashboards(RemoteDataState.Error))\n    console.error(error)\n    throw error\n  }\n}\n\nexport const createDashboardFromTemplate = (\n  template: DashboardTemplate\n) => async (dispatch, getState: GetState) => {\n  try {\n    const org = getOrg(getState())\n\n    await tempAPI.createDashboardFromTemplate(template, org.id)\n\n    const resp = await api.getDashboards({query: {orgID: org.id}})\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const dashboards = normalize<Dashboard, DashboardEntities, string[]>(\n      resp.data.dashboards,\n      arrayOfDashboards\n    )\n\n    dispatch(creators.setDashboards(RemoteDataState.Done, dashboards))\n    dispatch(notify(copy.importDashboardSucceeded()))\n    dispatch(checkDashboardLimits())\n  } catch (error) {\n    if (isLimitError(error)) {\n      dispatch(notify(copy.resourceLimitReached('dashboards')))\n    } else {\n      dispatch(notify(copy.importDashboardFailed(error)))\n    }\n  }\n}\n\nexport const deleteDashboard = (dashboardID: string, name: string) => async (\n  dispatch\n): Promise<void> => {\n  dispatch(creators.removeDashboard(dashboardID))\n  dispatch(deleteTimeRange(dashboardID))\n\n  try {\n    const resp = await api.deleteDashboard({dashboardID})\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(notify(copy.dashboardDeleted(name)))\n    dispatch(checkDashboardLimits())\n  } catch (error) {\n    dispatch(notify(copy.dashboardDeleteFailed(name, error.data.message)))\n  }\n}\n\nexport const refreshDashboardVariableValues = (\n  dashboardID: string,\n  nextViews: View[]\n) => (dispatch, getState: GetState) => {\n  const variables = extractVariablesList(getState())\n  const variablesInUse = filterUnusedVars(variables, nextViews)\n\n  return dispatch(refreshVariableValues(dashboardID, variablesInUse))\n}\n\nexport const getDashboard = (dashboardID: string) => async (\n  dispatch,\n  getState: GetState\n): Promise<void> => {\n  try {\n    dispatch(creators.setDashboard(dashboardID, RemoteDataState.Loading))\n\n    // Fetch the dashboard, views, and all variables a user has access to\n    const [resp] = await Promise.all([\n      api.getDashboard({dashboardID, query: {include: 'properties'}}),\n      dispatch(getVariables()),\n    ])\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const normDash = normalize<Dashboard, DashboardEntities, string>(\n      resp.data,\n      dashboardSchema\n    )\n\n    const cellViews: CellsWithViewProperties = resp.data.cells || []\n    const viewsData = viewsFromCells(cellViews, dashboardID)\n\n    const normViews = normalize<View, ViewEntities, string[]>(\n      viewsData,\n      arrayOfViews\n    )\n\n    dispatch(setViews(RemoteDataState.Done, normViews))\n\n    // Ensure the values for the variables in use on the dashboard are populated\n    await dispatch(refreshDashboardVariableValues(dashboardID, viewsData))\n\n    // Now that all the necessary state has been loaded, set the dashboard\n    dispatch(creators.setDashboard(dashboardID, RemoteDataState.Done, normDash))\n    dispatch(updateTimeRangeFromQueryParams(dashboardID))\n  } catch (error) {\n    const org = getOrg(getState())\n    dispatch(push(`/orgs/${org.id}/dashboards`))\n    dispatch(notify(copy.dashboardGetFailed(dashboardID, error.message)))\n    return\n  }\n}\n\nexport const updateDashboard = (\n  id: string,\n  updates: Partial<Dashboard>\n) => async (\n  dispatch: Dispatch<creators.Action | PublishNotificationAction>,\n  getState: GetState\n): Promise<void> => {\n  const state = getState()\n\n  const currentDashboard = getByID<Dashboard>(\n    state,\n    ResourceType.Dashboards,\n    id\n  )\n\n  const dashboard = {...currentDashboard, ...updates}\n\n  try {\n    const resp = await api.patchDashboard({\n      dashboardID: dashboard.id,\n      data: dashboard,\n    })\n\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    const updatedDashboard = normalize<Dashboard, DashboardEntities, string>(\n      resp.data,\n      dashboardSchema\n    )\n\n    dispatch(creators.editDashboard(updatedDashboard))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.dashboardUpdateFailed()))\n  }\n}\n\nexport const addDashboardLabel = (dashboardID: string, label: Label) => async (\n  dispatch: Dispatch<Action | PublishNotificationAction>\n) => {\n  try {\n    const resp = await api.postDashboardsLabel({\n      dashboardID,\n      data: {labelID: label.id},\n    })\n\n    if (resp.status !== 201) {\n      throw new Error(resp.data.message)\n    }\n\n    const normLabel = normalize<Label, LabelEntities, string>(\n      resp.data.label,\n      labelSchema\n    )\n\n    dispatch(setLabelOnResource(dashboardID, normLabel))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.addDashboardLabelFailed()))\n  }\n}\n\nexport const removeDashboardLabel = (\n  dashboardID: string,\n  label: Label\n) => async (dispatch: Dispatch<Action | PublishNotificationAction>) => {\n  try {\n    const resp = await api.deleteDashboardsLabel({\n      dashboardID,\n      labelID: label.id,\n    })\n\n    if (resp.status !== 204) {\n      throw new Error(resp.data.message)\n    }\n\n    dispatch(creators.removeDashboardLabel(dashboardID, label.id))\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.removedDashboardLabelFailed()))\n  }\n}\n\nexport const selectVariableValue = (\n  dashboardID: string,\n  variableID: string,\n  value: string\n) => async (dispatch, getState: GetState): Promise<void> => {\n  const state = getState()\n  const variables = getHydratedVariables(state, dashboardID)\n  const dashboard = getByID<Dashboard>(\n    state,\n    ResourceType.Dashboards,\n    dashboardID\n  )\n\n  dispatch(selectValue(dashboardID, variableID, value))\n\n  await dispatch(refreshVariableValues(dashboard.id, variables))\n}\n\nexport const convertToTemplate = (dashboardID: string) => async (\n  dispatch,\n  getState: GetState\n): Promise<void> => {\n  try {\n    dispatch(setExportTemplate(RemoteDataState.Loading))\n    const state = getState()\n    const org = getOrg(state)\n\n    const dashResp = await api.getDashboard({dashboardID})\n\n    if (dashResp.status !== 200) {\n      throw new Error(dashResp.data.message)\n    }\n\n    const {entities, result} = normalize<Dashboard, DashboardEntities, string>(\n      dashResp.data,\n      dashboardSchema\n    )\n\n    const dashboard = entities.dashboards[result]\n    const cells = dashboard.cells.map(cellID => entities.cells[cellID])\n\n    const pendingViews = dashboard.cells.map(cellID =>\n      dashAPI.getView(dashboardID, cellID)\n    )\n\n    const views = await Promise.all(pendingViews)\n    const resp = await api.getVariables({query: {orgID: org.id}})\n    if (resp.status !== 200) {\n      throw new Error(resp.data.message)\n    }\n\n    let vars = []\n\n    // dumb bug\n    // https://github.com/paularmstrong/normalizr/issues/290\n    if (resp.data.variables.length) {\n      const normVars = normalize<Variable, VariableEntities, string>(\n        resp.data.variables,\n        arrayOfVariables\n      )\n\n      vars = Object.values(normVars.entities.variables)\n    }\n\n    const variables = filterUnusedVars(vars, views)\n    const exportedVariables = exportVariables(variables, vars)\n    const dashboardTemplate = dashboardToTemplate(\n      state,\n      dashboard,\n      cells,\n      views,\n      exportedVariables\n    )\n\n    dispatch(setExportTemplate(RemoteDataState.Done, dashboardTemplate))\n  } catch (error) {\n    console.error(error)\n    dispatch(setExportTemplate(RemoteDataState.Error))\n    dispatch(notify(copy.createTemplateFailed(error)))\n  }\n}\n\nexport const saveVEOView = (dashboardID: string) => async (\n  dispatch,\n  getState: GetState\n): Promise<void> => {\n  const view = getSaveableView(getState())\n\n  try {\n    if (view.id) {\n      await dispatch(updateViewAndVariables(dashboardID, view))\n    } else {\n      await dispatch(createCellWithView(dashboardID, view))\n    }\n  } catch (error) {\n    console.error(error)\n    dispatch(notify(copy.cellAddFailed()))\n    throw error\n  }\n}\n","import {loadWASM} from 'onigasm' // peer dependency of 'monaco-textmate'\n\nlet wasm: boolean = false\nlet loading: boolean = false\nconst queue: Array<() => void> = []\n\nexport default function loader() {\n  return new Promise(resolve => {\n    if (wasm) {\n      resolve()\n      return\n    }\n\n    queue.push(resolve)\n\n    if (loading) {\n      return\n    }\n\n    loading = true\n\n    loadWASM(require(`onigasm/lib/onigasm.wasm`)).then(() => {\n      wasm = true\n      queue.forEach(c => c())\n    })\n  })\n}\n","// extracted by mini-css-extract-plugin","import {AppState} from 'src/types'\n\nexport const getDataLoaders = (state: AppState) => {\n  return state.dataLoading.dataLoaders\n}\n\nexport const getSteps = (state: AppState) => {\n  return state.dataLoading.steps\n}\n","// Libraries\nimport React, {PureComponent} from 'react'\nimport _ from 'lodash'\n\n// Decorator\nimport {ErrorHandling} from 'src/shared/decorators/errors'\n\n// Components\nimport CodeSnippet from 'src/shared/components/CodeSnippet'\n\nexport interface Props {\n  token: string\n  configID: string\n}\n\n@ErrorHandling\nclass TelegrafInstructions extends PureComponent<Props> {\n  public render() {\n    const {token, configID} = this.props\n    const exportToken = `export INFLUX_TOKEN=${token || ''}`\n    const configScript = `telegraf --config ${\n      this.origin\n    }/api/v2/telegrafs/${configID || ''}`\n    return (\n      <div data-testid=\"setup-instructions\" className=\"telegraf-instructions\">\n        <h6>1. Install the Latest Telegraf</h6>\n        <p>\n          You can install the latest Telegraf by visiting the{' '}\n          <a\n            href=\"https://portal.influxdata.com/downloads/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            InfluxData Downloads&nbsp;\n          </a>\n          page. If you already have Telegraf installed on your system, make sure\n          it's up to date. You will need version 1.9.2 or higher.\n        </p>\n        <h6>2. Configure your API Token</h6>\n        <p>\n          Your API token is required for pushing data into InfluxDB. You can\n          copy the following command to your terminal window to set an\n          environment variable with your token.\n        </p>\n        <CodeSnippet copyText={exportToken} label=\"CLI\" />\n        <h6>3. Start Telegraf</h6>\n        <p>\n          Finally, you can run the following command to start the Telegraf agent\n          running on your machine.\n        </p>\n        <CodeSnippet copyText={configScript} label=\"CLI\" />\n      </div>\n    )\n  }\n\n  private get origin(): string {\n    return window.location.origin\n  }\n}\n\nexport default TelegrafInstructions\n","export const THEME_NAME = 'tomlTheme'\nexport default function(monaco) {\n  monaco.editor.defineTheme(THEME_NAME, {\n    base: 'vs-dark',\n    inherit: false,\n    rules: [\n      {\n        token: 'punctuation.definition.comment.toml',\n        foreground: '#676978',\n      },\n      {\n        token: 'comment.line.number-sign.toml',\n        foreground: '#676978',\n      },\n      {\n        token: 'constant.numeric.integer.toml',\n        foreground: '#7CE490',\n      },\n      {\n        token: 'constant.numeric.float.toml',\n        foreground: '#7CE490',\n      },\n      {\n        token: 'string.quoted.double.toml',\n        foreground: '#7CE490',\n      },\n      {\n        token: 'constant.language.boolean.toml',\n        foreground: '#32B08C',\n      },\n      {\n        token: 'entity.name.section.toml',\n        foreground: '#ff4d96',\n      },\n      {\n        token: '',\n        foreground: '#f8f8f8',\n        background: '#202028',\n      },\n    ],\n    colors: {\n      'editor.foreground': '#F8F8F8',\n      'editor.background': '#202028',\n      'editorGutter.background': '#25252e',\n      'editor.selectionBackground': '#353640',\n      'editorLineNumber.foreground': '#666978',\n      'editor.lineHighlightBackground': '#353640',\n      'editorCursor.foreground': '#ffffff',\n      'editorActiveLineNumber.foreground': '#bec2cc',\n    },\n  })\n}\n","import loader from 'src/external/monaco.onigasm'\nimport {Registry} from 'monaco-textmate' // peer dependency\nimport {wireTmGrammars} from 'monaco-editor-textmate'\n\nexport async function addSyntax(monaco) {\n  await loader()\n\n  monaco.languages.register({id: 'toml'})\n\n  const registry = new Registry({\n    getGrammarDefinition: async () => ({\n      format: 'json',\n      content: await import(/* webpackPrefetch: 0 */ 'src/external/toml.tmLanguage.json').then(\n        data => {\n          return JSON.stringify(data)\n        }\n      ),\n    }),\n  })\n\n  // map of monaco \"language id's\" to TextMate scopeNames\n  const grammars = new Map()\n  grammars.set('toml', 'toml')\n\n  await wireTmGrammars(monaco, registry, grammars)\n}\n","// Libraries\nimport React, {FC} from 'react'\n\n// Components\nimport MonacoEditor from 'react-monaco-editor'\nimport addTomlTheme, {THEME_NAME} from 'src/external/monaco.tomlTheme'\nimport {addSyntax} from 'src/external/monaco.tomlSyntax'\nimport {OnChangeScript} from 'src/types/flux'\nimport * as monacoEditor from 'monaco-editor/esm/vs/editor/editor.api'\n\nimport './FluxMonacoEditor.scss'\n\ninterface Position {\n  line: number\n  ch: number\n}\n\ninterface Props {\n  script: string\n  className?: string\n  willMount?: (monaco: monacoEditor.editor.IStandaloneCodeEditor) => void\n  readOnly?: boolean\n  testID?: string\n  onChangeScript?: OnChangeScript\n  onSubmitScript?: () => void\n  onCursorChange?: (position: Position) => void\n}\n\nconst TomlEditorMonaco: FC<Props> = props => {\n  const editorWillMount = (monaco: typeof monacoEditor) => {\n    addTomlTheme(monaco)\n    addSyntax(monaco)\n  }\n  const editorDidMount = (\n    editor: monacoEditor.editor.IStandaloneCodeEditor\n  ) => {\n    editor.onDidChangeCursorPosition(\n      (evt: monacoEditor.editor.ICursorPositionChangedEvent) => {\n        const {position} = evt\n        const {onCursorChange} = props\n        const pos = {\n          line: position.lineNumber,\n          ch: position.column,\n        }\n\n        if (onCursorChange) {\n          onCursorChange(pos)\n        }\n      }\n    )\n\n    editor.onKeyUp((evt: monacoEditor.IKeyboardEvent) => {\n      const {ctrlKey, code} = evt\n      const {onSubmitScript} = props\n      if (ctrlKey && code === 'Enter') {\n        if (onSubmitScript) {\n          onSubmitScript()\n        }\n      }\n    })\n\n    if (props.willMount) {\n      props.willMount(editor)\n    }\n  }\n  const {script, onChangeScript, readOnly} = props\n  const testID = props.testID || 'toml-editor'\n  const className = props.className || 'time-machine-editor--embedded'\n\n  return (\n    <div className={className} data-testid={testID}>\n      <MonacoEditor\n        language=\"toml\"\n        theme={THEME_NAME}\n        value={script}\n        onChange={onChangeScript}\n        options={{\n          fontSize: 13,\n          fontFamily: '\"RobotoMono\", monospace',\n          cursorWidth: 2,\n          lineNumbersMinChars: 4,\n          lineDecorationsWidth: 0,\n          minimap: {\n            renderCharacters: false,\n          },\n          overviewRulerBorder: false,\n          automaticLayout: true,\n          readOnly: readOnly || false,\n        }}\n        editorWillMount={editorWillMount}\n        editorDidMount={editorDidMount}\n      />\n    </div>\n  )\n}\n\nexport default TomlEditorMonaco\n","import moment from 'moment'\n\nimport {TimeRange, CustomTimeRange} from 'src/types'\nimport {Duration, DurationUnit} from 'src/types/ast'\nimport {TIME_RANGE_FORMAT} from 'src/shared/constants/timeRanges'\n\nexport const removeSpacesAndNow = (input: string): string =>\n  input.replace(/\\s/g, '').replace(/now\\(\\)-/, '')\n\nexport const isDurationWithNowParseable = (lower: string): boolean => {\n  const durationRegExp = /([0-9]+)(y|mo|w|d|h|ms|s|m|us|µs|ns)/g\n  if (!lower || !lower.includes('now()')) {\n    return false\n  }\n  // warning! Using string.match(regex) here instead of regex.test(string) because regex.test() modifies the regex object, and can lead to unexpected behavior\n  const removedLower = removeSpacesAndNow(lower)\n\n  return !!removedLower.match(durationRegExp)\n}\n\nexport const isDurationParseable = (duration: string): boolean => {\n  if (typeof duration !== 'string') {\n    return false\n  }\n\n  const durationRegExp = /^(([0-9]+)(y|mo|w|d|h|ms|s|m|us|µs|ns))+$/g\n\n  // warning! Using string.match(regex) here instead of regex.test(string) because regex.test() modifies the regex object, and can lead to unexpected behavior\n\n  return !!duration.match(durationRegExp)\n}\n\nexport const parseDuration = (input: string): Duration[] => {\n  const result = []\n  const durationRegExp = /([0-9]+)(y|mo|w|d|h|ms|s|m|us|µs|ns)/g\n\n  // warning! regex.exec(string) modifies the regex it is operating on so that subsequent calls on the same string behave differently\n  let match = durationRegExp.exec(input)\n\n  if (!match) {\n    throw new Error(`could not parse \"${input}\" as duration`)\n  }\n\n  while (match) {\n    result.push({\n      magnitude: +match[1],\n      unit: match[2],\n    })\n\n    match = durationRegExp.exec(input)\n  }\n\n  return result\n}\n\nconst UNIT_TO_APPROX_MS = {\n  ns: 1 / 1000000,\n  µs: 1 / 1000,\n  us: 1 / 1000,\n  ms: 1,\n  s: 1000,\n  m: 1000 * 60,\n  h: 1000 * 60 * 60,\n  d: 1000 * 60 * 60 * 24,\n  w: 1000 * 60 * 60 * 24 * 7,\n  mo: 1000 * 60 * 60 * 24 * 30,\n  y: 1000 * 60 * 60 * 24 * 365,\n}\n\nexport const durationToMilliseconds = (duration: Duration[]): number =>\n  duration.reduce(\n    (sum, {magnitude, unit}) => sum + magnitude * UNIT_TO_APPROX_MS[unit],\n    0\n  )\n\n/*\n  Convert an amount of milliseconds to a duration string.\n\n  The returned duration string will use the largest units possible, e.g.\n\n      millisecondsToDuration(9_000_000)\n\n  Will return `2h30m` rather than `9000000ms`.\n*/\nexport const millisecondsToDuration = (value: number): string => {\n  const unitsAndMs = Object.entries(UNIT_TO_APPROX_MS).sort(\n    (a, b) => b[1] - a[1]\n  ) as [DurationUnit, number][]\n\n  const durations: Duration[] = []\n\n  let unitIndex = 0\n  let remainder = value\n\n  while (unitIndex < unitsAndMs.length) {\n    const [unit, unitAsMs] = unitsAndMs[unitIndex]\n    const valueInUnit = remainder / unitAsMs\n\n    durations.push({unit, magnitude: Math.floor(valueInUnit)})\n    remainder = remainder - Math.floor(valueInUnit) * unitAsMs\n    unitIndex += 1\n  }\n\n  return durations\n    .filter(({magnitude}) => magnitude > 0)\n    .reduce((s, {unit, magnitude}) => `${s}${magnitude}${unit}`, '')\n}\n\nexport const areDurationsEqual = (a: string, b: string): boolean => {\n  try {\n    return (\n      durationToMilliseconds(parseDuration(a)) ===\n      durationToMilliseconds(parseDuration(b))\n    )\n  } catch {\n    return false\n  }\n}\n\nexport const timeRangeToDuration = (timeRange: TimeRange): string => {\n  if (timeRange.upper || !timeRange.lower || !timeRange.lower.includes('now')) {\n    throw new Error('cannot convert time range to duration')\n  }\n\n  return removeSpacesAndNow(timeRange.lower)\n}\n\nexport const convertTimeRangeToCustom = (\n  timeRange: TimeRange\n): CustomTimeRange => {\n  if (timeRange.type === 'custom') {\n    return timeRange\n  }\n\n  const upper = new Date().toISOString()\n  let lower = ''\n\n  if (timeRange.type === 'selectable-duration') {\n    lower = moment()\n      .subtract(timeRange.seconds, 's')\n      .toISOString()\n  } else if (timeRange.type === 'duration') {\n    const millisecondDuration = durationToMilliseconds(\n      parseDuration(timeRangeToDuration(timeRange))\n    )\n    lower = moment()\n      .subtract(millisecondDuration, 'milliseconds')\n      .toISOString()\n  }\n\n  return {\n    lower,\n    upper,\n    type: 'custom',\n  }\n}\n\nexport const getTimeRangeLabel = (timeRange: TimeRange): string => {\n  if (timeRange.type === 'selectable-duration') {\n    return timeRange.label\n  }\n  if (timeRange.type === 'duration') {\n    return timeRange.lower\n  }\n  if (timeRange.type === 'custom') {\n    return `${moment(timeRange.lower).format(TIME_RANGE_FORMAT)} - ${moment(\n      timeRange.upper\n    ).format(TIME_RANGE_FORMAT)}`\n  }\n}\n","// Libraries\nimport {Client} from '@influxdata/influx'\nimport {get} from 'lodash'\nimport {getAPIBasepath} from 'src/utils/basepath'\n\nconst basePath = `${getAPIBasepath()}/api/v2`\n\nexport const getErrorMessage = (e: any) => {\n  let message = get(e, 'response.data.error.message')\n\n  if (!message) {\n    message = get(e, 'response.data.error')\n  }\n\n  if (!message) {\n    message = get(e, 'response.headers.x-influx-error')\n  }\n\n  if (!message) {\n    message = get(e, 'response.data.message')\n  }\n\n  if (!message) {\n    message = get(e, 'message')\n  }\n\n  if (!message) {\n    message = 'unknown error'\n  }\n\n  return message\n}\n\nexport const client = new Client(basePath)\n","// Libraries\nimport memoizeOne from 'memoize-one'\nimport {get} from 'lodash'\n\n// Utils\nimport {getVarAssignment} from 'src/variables/utils/getVarAssignment'\n\n// Types\nimport {\n  RemoteDataState,\n  MapArguments,\n  QueryArguments,\n  CSVArguments,\n} from 'src/types'\nimport {VariableAssignment} from 'src/types/ast'\nimport {\n  AppState,\n  ResourceState,\n  VariableArguments,\n  VariableArgumentType,\n  Variable,\n  VariableValues,\n  VariableValuesByID,\n  ValueSelections,\n} from 'src/types'\n\ntype VariablesState = ResourceState['variables']['byID']\ntype ValuesState = ResourceState['variables']['values']['contextID']\n\nconst extractVariablesListMemoized = memoizeOne(\n  (variablesState: VariablesState): Variable[] => {\n    return Object.values(variablesState).filter(\n      v => v.status === RemoteDataState.Done\n    )\n  }\n)\n\nexport const extractVariablesList = (state: AppState): Variable[] => {\n  return extractVariablesListMemoized(state.resources.variables.byID)\n}\n\nexport const extractVariableEditorName = (state: AppState): string => {\n  return state.variableEditor.name\n}\n\nexport const extractVariableEditorType = (\n  state: AppState\n): VariableArgumentType => {\n  return state.variableEditor.selected\n}\n\nexport const extractVariableEditorQuery = (state: AppState): QueryArguments => {\n  return (\n    state.variableEditor.argsQuery || {\n      type: 'query',\n      values: {\n        query: '',\n        language: 'flux',\n      },\n    }\n  )\n}\n\nexport const extractVariableEditorMap = (state: AppState): MapArguments => {\n  return (\n    state.variableEditor.argsMap || {\n      type: 'map',\n      values: {},\n    }\n  )\n}\n\nexport const extractVariableEditorConstant = (\n  state: AppState\n): CSVArguments => {\n  return (\n    state.variableEditor.argsConstant || {\n      type: 'constant',\n      values: [],\n    }\n  )\n}\n\nconst getVariablesForDashboardMemoized = memoizeOne(\n  (variables: VariablesState, variableIDs: string[]): Variable[] => {\n    const variablesForDash = []\n\n    variableIDs.forEach(variableID => {\n      const variable = get(variables, `${variableID}`)\n\n      if (variable) {\n        variablesForDash.push(variable)\n      }\n    })\n\n    return variablesForDash\n  }\n)\n\nexport const getVariablesForDashboard = (\n  state: AppState,\n  dashboardID: string\n): Variable[] => {\n  const variableIDs = get(\n    state,\n    `resources.variables.values.${dashboardID}.order`,\n    []\n  )\n\n  return getVariablesForDashboardMemoized(\n    state.resources.variables.byID,\n    variableIDs\n  )\n}\n\nexport const getValuesForVariable = (\n  state: AppState,\n  variableID: string,\n  contextID: string\n): VariableValues => {\n  return get(\n    state,\n    `resources.variables.values.${contextID}.values.${variableID}`\n  )\n}\n\nexport const getTypeForVariable = (\n  state: AppState,\n  variableID: string\n): VariableArguments['type'] => {\n  return get(state, `resources.variables.byID.${variableID}.arguments.type`, '')\n}\n\ntype ArgumentValues = {[key: string]: string} | string[]\n\nexport const getArgumentValuesForVariable = (\n  state: AppState,\n  variableID: string\n): ArgumentValues => {\n  return get(\n    state,\n    `resources.variables.byID.${variableID}.arguments.values`,\n    {}\n  )\n}\n\nexport const getValueSelections = (\n  state: AppState,\n  contextID: string\n): ValueSelections => {\n  const contextValues: VariableValuesByID =\n    get(state, `resources.variables.values.${contextID}.values`) || {}\n\n  const selections: ValueSelections = Object.keys(contextValues).reduce(\n    (acc, k) => {\n      const selectedValue = get(contextValues, `${k}.selectedValue`)\n\n      if (!selectedValue) {\n        return acc\n      }\n\n      return {...acc, [k]: selectedValue}\n    },\n    {}\n  )\n\n  return selections\n}\n\nconst getVariableAssignmentsMemoized = memoizeOne(\n  (\n    valuesState: ValuesState,\n    variablesState: VariablesState\n  ): VariableAssignment[] => {\n    if (!valuesState || !valuesState.values) {\n      return []\n    }\n\n    const result: VariableAssignment[] = Object.entries(\n      valuesState.values\n    ).reduce((acc, [variableID, values]) => {\n      const variableName = get(variablesState, [variableID, 'name'])\n\n      if (!variableName || !values || !values.selectedValue) {\n        return acc\n      }\n\n      return [...acc, getVarAssignment(variableName, values)]\n    }, [])\n\n    return result\n  }\n)\n\nexport const getVariableAssignments = (\n  state: AppState,\n  contextID: string\n): VariableAssignment[] =>\n  getVariableAssignmentsMemoized(\n    state.resources.variables.values[contextID],\n    state.resources.variables.byID\n  )\n\nexport const getTimeMachineValues = (\n  state: AppState,\n  variableID: string\n): VariableValues => {\n  const activeTimeMachineID = state.timeMachines.activeTimeMachineID\n  const values = get(\n    state,\n    `resources.variables.values.${activeTimeMachineID}.values.${variableID}`\n  )\n\n  return values\n}\n\nexport const getTimeMachineValuesStatus = (\n  state: AppState\n): RemoteDataState => {\n  const activeTimeMachineID = state.timeMachines.activeTimeMachineID\n  const valuesStatus = get(\n    state,\n    `resources.variables.values.${activeTimeMachineID}.status`\n  )\n\n  return valuesStatus\n}\n\nexport const getDashboardVariablesStatus = (\n  state: AppState\n): RemoteDataState => {\n  return get(state, 'resources.variables.status')\n}\n\nexport const getDashboardValuesStatus = (\n  state: AppState,\n  dashboardID: string\n): RemoteDataState => {\n  return get(state, `resources.variables.values.${dashboardID}.status`)\n}\n\nexport const getVariable = (state: AppState, variableID: string): Variable => {\n  return get(state, `resources.variables.byID.${variableID}`)\n}\n\nexport const getHydratedVariables = (\n  state: AppState,\n  contextID: string\n): Variable[] => {\n  const hydratedVariableIDs: string[] = Object.keys(\n    get(state, `resources.variables.values.${contextID}.values`, {})\n  )\n\n  const hydratedVariables = Object.values(\n    state.resources.variables.byID\n  ).filter(v => hydratedVariableIDs.includes(v.id))\n\n  return hydratedVariables\n}\n"],"sourceRoot":""}